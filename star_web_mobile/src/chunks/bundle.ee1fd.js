System.register([], function(_export, _context) { return { execute: function () {
System.register("chunks:///_virtual/a-callable.js", ['./cjs-loader.mjs', './is-callable.js', './try-to-string.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var isCallable = require('../internals/is-callable');
        var tryToString = require('../internals/try-to-string');
        var $TypeError = TypeError;

        // `Assert: IsCallable(argument) is true`
        module.exports = function (argument) {
          if (isCallable(argument)) return argument;
          throw $TypeError(tryToString(argument) + ' is not a function');
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/is-callable': __cjsMetaURL$1,
          '../internals/try-to-string': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/a-constructor.js", ['./cjs-loader.mjs', './is-constructor.js', './try-to-string.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var isConstructor = require('../internals/is-constructor');
        var tryToString = require('../internals/try-to-string');
        var $TypeError = TypeError;

        // `Assert: IsConstructor(argument) is true`
        module.exports = function (argument) {
          if (isConstructor(argument)) return argument;
          throw $TypeError(tryToString(argument) + ' is not a constructor');
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/is-constructor': __cjsMetaURL$1,
          '../internals/try-to-string': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/a-possible-prototype.js", ['./cjs-loader.mjs', './is-callable.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var isCallable = require('../internals/is-callable');
        var $String = String;
        var $TypeError = TypeError;
        module.exports = function (argument) {
          if (typeof argument == 'object' || isCallable(argument)) return argument;
          throw $TypeError("Can't set " + $String(argument) + ' as a prototype');
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/is-callable': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/add-to-unscopables.js", ['./cjs-loader.mjs', './well-known-symbol.js', './object-create.js', './object-define-property.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var create = require('../internals/object-create');
        var defineProperty = require('../internals/object-define-property').f;
        var UNSCOPABLES = wellKnownSymbol('unscopables');
        var ArrayPrototype = Array.prototype;

        // Array.prototype[@@unscopables]
        // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
        if (ArrayPrototype[UNSCOPABLES] === undefined) {
          defineProperty(ArrayPrototype, UNSCOPABLES, {
            configurable: true,
            value: create(null)
          });
        }

        // add a key to Array.prototype[@@unscopables]
        module.exports = function (key) {
          ArrayPrototype[UNSCOPABLES][key] = true;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/well-known-symbol': __cjsMetaURL$1,
          '../internals/object-create': __cjsMetaURL$2,
          '../internals/object-define-property': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/advance-string-index.js", ['./cjs-loader.mjs', './string-multibyte.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var charAt = require('../internals/string-multibyte').charAt;

        // `AdvanceStringIndex` abstract operation
        // https://tc39.es/ecma262/#sec-advancestringindex
        module.exports = function (S, index, unicode) {
          return index + (unicode ? charAt(S, index).length : 1);
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/string-multibyte': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/aes.js", ['./rollupPluginModLoBabelHelpers.js', './cipher-core.js'], function (exports) {
  var _inheritsLoose, BlockCipher;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      BlockCipher = module.BlockCipher;
    }],
    execute: function () {
      // Lookup tables
      var _SBOX = [];
      var INV_SBOX = [];
      var _SUB_MIX_0 = [];
      var _SUB_MIX_1 = [];
      var _SUB_MIX_2 = [];
      var _SUB_MIX_3 = [];
      var INV_SUB_MIX_0 = [];
      var INV_SUB_MIX_1 = [];
      var INV_SUB_MIX_2 = [];
      var INV_SUB_MIX_3 = [];

      // Compute lookup tables

      // Compute double table
      var d = [];
      for (var i = 0; i < 256; i += 1) {
        if (i < 128) {
          d[i] = i << 1;
        } else {
          d[i] = i << 1 ^ 0x11b;
        }
      }

      // Walk GF(2^8)
      var x = 0;
      var xi = 0;
      for (var _i = 0; _i < 256; _i += 1) {
        // Compute sbox
        var sx = xi ^ xi << 1 ^ xi << 2 ^ xi << 3 ^ xi << 4;
        sx = sx >>> 8 ^ sx & 0xff ^ 0x63;
        _SBOX[x] = sx;
        INV_SBOX[sx] = x;

        // Compute multiplication
        var x2 = d[x];
        var x4 = d[x2];
        var x8 = d[x4];

        // Compute sub bytes, mix columns tables
        var t = d[sx] * 0x101 ^ sx * 0x1010100;
        _SUB_MIX_0[x] = t << 24 | t >>> 8;
        _SUB_MIX_1[x] = t << 16 | t >>> 16;
        _SUB_MIX_2[x] = t << 8 | t >>> 24;
        _SUB_MIX_3[x] = t;

        // Compute inv sub bytes, inv mix columns tables
        t = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;
        INV_SUB_MIX_0[sx] = t << 24 | t >>> 8;
        INV_SUB_MIX_1[sx] = t << 16 | t >>> 16;
        INV_SUB_MIX_2[sx] = t << 8 | t >>> 24;
        INV_SUB_MIX_3[sx] = t;

        // Compute next counter
        if (!x) {
          xi = 1;
          x = xi;
        } else {
          x = x2 ^ d[d[d[x8 ^ x2]]];
          xi ^= d[d[xi]];
        }
      }

      // Precomputed Rcon lookup
      var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];

      /**
       * AES block cipher algorithm.
       */
      var AESAlgo = exports('AESAlgo', /*#__PURE__*/function (_BlockCipher) {
        _inheritsLoose(AESAlgo, _BlockCipher);
        function AESAlgo() {
          return _BlockCipher.apply(this, arguments) || this;
        }
        var _proto = AESAlgo.prototype;
        _proto._doReset = function _doReset() {
          var t;

          // Skip reset of nRounds has been set before and key did not change
          if (this._nRounds && this._keyPriorReset === this._key) {
            return;
          }

          // Shortcuts
          this._keyPriorReset = this._key;
          var key = this._keyPriorReset;
          var keyWords = key.words;
          var keySize = key.sigBytes / 4;

          // Compute number of rounds
          this._nRounds = keySize + 6;
          var nRounds = this._nRounds;

          // Compute number of key schedule rows
          var ksRows = (nRounds + 1) * 4;

          // Compute key schedule
          this._keySchedule = [];
          var keySchedule = this._keySchedule;
          for (var ksRow = 0; ksRow < ksRows; ksRow += 1) {
            if (ksRow < keySize) {
              keySchedule[ksRow] = keyWords[ksRow];
            } else {
              t = keySchedule[ksRow - 1];
              if (!(ksRow % keySize)) {
                // Rot word
                t = t << 8 | t >>> 24;

                // Sub word
                t = _SBOX[t >>> 24] << 24 | _SBOX[t >>> 16 & 0xff] << 16 | _SBOX[t >>> 8 & 0xff] << 8 | _SBOX[t & 0xff];

                // Mix Rcon
                t ^= RCON[ksRow / keySize | 0] << 24;
              } else if (keySize > 6 && ksRow % keySize === 4) {
                // Sub word
                t = _SBOX[t >>> 24] << 24 | _SBOX[t >>> 16 & 0xff] << 16 | _SBOX[t >>> 8 & 0xff] << 8 | _SBOX[t & 0xff];
              }
              keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;
            }
          }

          // Compute inv key schedule
          this._invKeySchedule = [];
          var invKeySchedule = this._invKeySchedule;
          for (var invKsRow = 0; invKsRow < ksRows; invKsRow += 1) {
            var _ksRow = ksRows - invKsRow;
            if (invKsRow % 4) {
              t = keySchedule[_ksRow];
            } else {
              t = keySchedule[_ksRow - 4];
            }
            if (invKsRow < 4 || _ksRow <= 4) {
              invKeySchedule[invKsRow] = t;
            } else {
              invKeySchedule[invKsRow] = INV_SUB_MIX_0[_SBOX[t >>> 24]] ^ INV_SUB_MIX_1[_SBOX[t >>> 16 & 0xff]] ^ INV_SUB_MIX_2[_SBOX[t >>> 8 & 0xff]] ^ INV_SUB_MIX_3[_SBOX[t & 0xff]];
            }
          }
        };
        _proto.encryptBlock = function encryptBlock(M, offset) {
          this._doCryptBlock(M, offset, this._keySchedule, _SUB_MIX_0, _SUB_MIX_1, _SUB_MIX_2, _SUB_MIX_3, _SBOX);
        };
        _proto.decryptBlock = function decryptBlock(M, offset) {
          var _M = M;

          // Swap 2nd and 4th rows
          var t = _M[offset + 1];
          _M[offset + 1] = _M[offset + 3];
          _M[offset + 3] = t;
          this._doCryptBlock(_M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);

          // Inv swap 2nd and 4th rows
          t = _M[offset + 1];
          _M[offset + 1] = _M[offset + 3];
          _M[offset + 3] = t;
        };
        _proto._doCryptBlock = function _doCryptBlock(M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {
          var _M = M;

          // Shortcut
          var nRounds = this._nRounds;

          // Get input, add round key
          var s0 = _M[offset] ^ keySchedule[0];
          var s1 = _M[offset + 1] ^ keySchedule[1];
          var s2 = _M[offset + 2] ^ keySchedule[2];
          var s3 = _M[offset + 3] ^ keySchedule[3];

          // Key schedule row counter
          var ksRow = 4;

          // Rounds
          for (var round = 1; round < nRounds; round += 1) {
            // Shift rows, sub bytes, mix columns, add round key
            var _t = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[s1 >>> 16 & 0xff] ^ SUB_MIX_2[s2 >>> 8 & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow];
            ksRow += 1;
            var _t2 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[s2 >>> 16 & 0xff] ^ SUB_MIX_2[s3 >>> 8 & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow];
            ksRow += 1;
            var _t3 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[s3 >>> 16 & 0xff] ^ SUB_MIX_2[s0 >>> 8 & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow];
            ksRow += 1;
            var _t4 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[s0 >>> 16 & 0xff] ^ SUB_MIX_2[s1 >>> 8 & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow];
            ksRow += 1;

            // Update state
            s0 = _t;
            s1 = _t2;
            s2 = _t3;
            s3 = _t4;
          }

          // Shift rows, sub bytes, add round key
          var t0 = (SBOX[s0 >>> 24] << 24 | SBOX[s1 >>> 16 & 0xff] << 16 | SBOX[s2 >>> 8 & 0xff] << 8 | SBOX[s3 & 0xff]) ^ keySchedule[ksRow];
          ksRow += 1;
          var t1 = (SBOX[s1 >>> 24] << 24 | SBOX[s2 >>> 16 & 0xff] << 16 | SBOX[s3 >>> 8 & 0xff] << 8 | SBOX[s0 & 0xff]) ^ keySchedule[ksRow];
          ksRow += 1;
          var t2 = (SBOX[s2 >>> 24] << 24 | SBOX[s3 >>> 16 & 0xff] << 16 | SBOX[s0 >>> 8 & 0xff] << 8 | SBOX[s1 & 0xff]) ^ keySchedule[ksRow];
          ksRow += 1;
          var t3 = (SBOX[s3 >>> 24] << 24 | SBOX[s0 >>> 16 & 0xff] << 16 | SBOX[s1 >>> 8 & 0xff] << 8 | SBOX[s2 & 0xff]) ^ keySchedule[ksRow];
          ksRow += 1;

          // Set output
          _M[offset] = t0;
          _M[offset + 1] = t1;
          _M[offset + 2] = t2;
          _M[offset + 3] = t3;
        };
        return AESAlgo;
      }(BlockCipher));
      AESAlgo.keySize = 256 / 32;

      /**
       * Shortcut functions to the cipher's object interface.
       *
       * @example
       *
       *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);
       *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);
       */
      var AES = exports('AES', BlockCipher._createHelper(AESAlgo));
    }
  };
});

System.register("chunks:///_virtual/an-instance.js", ['./cjs-loader.mjs', './object-is-prototype-of.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var isPrototypeOf = require('../internals/object-is-prototype-of');
        var $TypeError = TypeError;
        module.exports = function (it, Prototype) {
          if (isPrototypeOf(Prototype, it)) return it;
          throw $TypeError('Incorrect invocation');
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/object-is-prototype-of': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/an-object.js", ['./cjs-loader.mjs', './is-object.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var isObject = require('../internals/is-object');
        var $String = String;
        var $TypeError = TypeError;

        // `Assert: Type(argument) is Object`
        module.exports = function (argument) {
          if (isObject(argument)) return argument;
          throw $TypeError($String(argument) + ' is not an object');
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/is-object': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/array-buffer-basic-detection.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        // eslint-disable-next-line es/no-typed-arrays -- safe
        module.exports = typeof ArrayBuffer != 'undefined' && typeof DataView != 'undefined';

        // #endregion ORIGINAL CODE

        module.exports;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/array-buffer-view-core.js", ['./cjs-loader.mjs', './array-buffer-basic-detection.js', './descriptors.js', './global.js', './is-callable.js', './is-object.js', './has-own-property.js', './classof.js', './try-to-string.js', './create-non-enumerable-property.js', './define-built-in.js', './define-built-in-accessor.js', './object-is-prototype-of.js', './object-get-prototype-of.js', './object-set-prototype-of.js', './well-known-symbol.js', './uid.js', './internal-state.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8, __cjsMetaURL$9, __cjsMetaURL$a, __cjsMetaURL$b, __cjsMetaURL$c, __cjsMetaURL$d, __cjsMetaURL$e, __cjsMetaURL$f, __cjsMetaURL$g, __cjsMetaURL$h;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$9 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$a = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$b = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$c = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$d = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$e = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$f = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$g = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$h = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var NATIVE_ARRAY_BUFFER = require('../internals/array-buffer-basic-detection');
        var DESCRIPTORS = require('../internals/descriptors');
        var global = require('../internals/global');
        var isCallable = require('../internals/is-callable');
        var isObject = require('../internals/is-object');
        var hasOwn = require('../internals/has-own-property');
        var classof = require('../internals/classof');
        var tryToString = require('../internals/try-to-string');
        var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');
        var defineBuiltIn = require('../internals/define-built-in');
        var defineBuiltInAccessor = require('../internals/define-built-in-accessor');
        var isPrototypeOf = require('../internals/object-is-prototype-of');
        var getPrototypeOf = require('../internals/object-get-prototype-of');
        var setPrototypeOf = require('../internals/object-set-prototype-of');
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var uid = require('../internals/uid');
        var InternalStateModule = require('../internals/internal-state');
        var enforceInternalState = InternalStateModule.enforce;
        var getInternalState = InternalStateModule.get;
        var Int8Array = global.Int8Array;
        var Int8ArrayPrototype = Int8Array && Int8Array.prototype;
        var Uint8ClampedArray = global.Uint8ClampedArray;
        var Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;
        var TypedArray = Int8Array && getPrototypeOf(Int8Array);
        var TypedArrayPrototype = Int8ArrayPrototype && getPrototypeOf(Int8ArrayPrototype);
        var ObjectPrototype = Object.prototype;
        var TypeError = global.TypeError;
        var TO_STRING_TAG = wellKnownSymbol('toStringTag');
        var TYPED_ARRAY_TAG = uid('TYPED_ARRAY_TAG');
        var TYPED_ARRAY_CONSTRUCTOR = 'TypedArrayConstructor';
        // Fixing native typed arrays in Opera Presto crashes the browser, see #595
        var NATIVE_ARRAY_BUFFER_VIEWS = NATIVE_ARRAY_BUFFER && !!setPrototypeOf && classof(global.opera) !== 'Opera';
        var TYPED_ARRAY_TAG_REQUIRED = false;
        var NAME, Constructor, Prototype;
        var TypedArrayConstructorsList = {
          Int8Array: 1,
          Uint8Array: 1,
          Uint8ClampedArray: 1,
          Int16Array: 2,
          Uint16Array: 2,
          Int32Array: 4,
          Uint32Array: 4,
          Float32Array: 4,
          Float64Array: 8
        };
        var BigIntArrayConstructorsList = {
          BigInt64Array: 8,
          BigUint64Array: 8
        };
        var isView = function isView(it) {
          if (!isObject(it)) return false;
          var klass = classof(it);
          return klass === 'DataView' || hasOwn(TypedArrayConstructorsList, klass) || hasOwn(BigIntArrayConstructorsList, klass);
        };
        var getTypedArrayConstructor = function getTypedArrayConstructor(it) {
          var proto = getPrototypeOf(it);
          if (!isObject(proto)) return;
          var state = getInternalState(proto);
          return state && hasOwn(state, TYPED_ARRAY_CONSTRUCTOR) ? state[TYPED_ARRAY_CONSTRUCTOR] : getTypedArrayConstructor(proto);
        };
        var isTypedArray = function isTypedArray(it) {
          if (!isObject(it)) return false;
          var klass = classof(it);
          return hasOwn(TypedArrayConstructorsList, klass) || hasOwn(BigIntArrayConstructorsList, klass);
        };
        var aTypedArray = function aTypedArray(it) {
          if (isTypedArray(it)) return it;
          throw TypeError('Target is not a typed array');
        };
        var aTypedArrayConstructor = function aTypedArrayConstructor(C) {
          if (isCallable(C) && (!setPrototypeOf || isPrototypeOf(TypedArray, C))) return C;
          throw TypeError(tryToString(C) + ' is not a typed array constructor');
        };
        var exportTypedArrayMethod = function exportTypedArrayMethod(KEY, property, forced, options) {
          if (!DESCRIPTORS) return;
          if (forced) for (var ARRAY in TypedArrayConstructorsList) {
            var TypedArrayConstructor = global[ARRAY];
            if (TypedArrayConstructor && hasOwn(TypedArrayConstructor.prototype, KEY)) try {
              delete TypedArrayConstructor.prototype[KEY];
            } catch (error) {
              // old WebKit bug - some methods are non-configurable
              try {
                TypedArrayConstructor.prototype[KEY] = property;
              } catch (error2) {/* empty */}
            }
          }
          if (!TypedArrayPrototype[KEY] || forced) {
            defineBuiltIn(TypedArrayPrototype, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property, options);
          }
        };
        var exportTypedArrayStaticMethod = function exportTypedArrayStaticMethod(KEY, property, forced) {
          var ARRAY, TypedArrayConstructor;
          if (!DESCRIPTORS) return;
          if (setPrototypeOf) {
            if (forced) for (ARRAY in TypedArrayConstructorsList) {
              TypedArrayConstructor = global[ARRAY];
              if (TypedArrayConstructor && hasOwn(TypedArrayConstructor, KEY)) try {
                delete TypedArrayConstructor[KEY];
              } catch (error) {/* empty */}
            }
            if (!TypedArray[KEY] || forced) {
              // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable
              try {
                return defineBuiltIn(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && TypedArray[KEY] || property);
              } catch (error) {/* empty */}
            } else return;
          }
          for (ARRAY in TypedArrayConstructorsList) {
            TypedArrayConstructor = global[ARRAY];
            if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {
              defineBuiltIn(TypedArrayConstructor, KEY, property);
            }
          }
        };
        for (NAME in TypedArrayConstructorsList) {
          Constructor = global[NAME];
          Prototype = Constructor && Constructor.prototype;
          if (Prototype) enforceInternalState(Prototype)[TYPED_ARRAY_CONSTRUCTOR] = Constructor;else NATIVE_ARRAY_BUFFER_VIEWS = false;
        }
        for (NAME in BigIntArrayConstructorsList) {
          Constructor = global[NAME];
          Prototype = Constructor && Constructor.prototype;
          if (Prototype) enforceInternalState(Prototype)[TYPED_ARRAY_CONSTRUCTOR] = Constructor;
        }

        // WebKit bug - typed arrays constructors prototype is Object.prototype
        if (!NATIVE_ARRAY_BUFFER_VIEWS || !isCallable(TypedArray) || TypedArray === Function.prototype) {
          // eslint-disable-next-line no-shadow -- safe
          TypedArray = function TypedArray() {
            throw TypeError('Incorrect invocation');
          };
          if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {
            if (global[NAME]) setPrototypeOf(global[NAME], TypedArray);
          }
        }
        if (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype) {
          TypedArrayPrototype = TypedArray.prototype;
          if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {
            if (global[NAME]) setPrototypeOf(global[NAME].prototype, TypedArrayPrototype);
          }
        }

        // WebKit bug - one more object in Uint8ClampedArray prototype chain
        if (NATIVE_ARRAY_BUFFER_VIEWS && getPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {
          setPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);
        }
        if (DESCRIPTORS && !hasOwn(TypedArrayPrototype, TO_STRING_TAG)) {
          TYPED_ARRAY_TAG_REQUIRED = true;
          defineBuiltInAccessor(TypedArrayPrototype, TO_STRING_TAG, {
            configurable: true,
            get: function get() {
              return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;
            }
          });
          for (NAME in TypedArrayConstructorsList) if (global[NAME]) {
            createNonEnumerableProperty(global[NAME], TYPED_ARRAY_TAG, NAME);
          }
        }
        module.exports = {
          NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,
          TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQUIRED && TYPED_ARRAY_TAG,
          aTypedArray: aTypedArray,
          aTypedArrayConstructor: aTypedArrayConstructor,
          exportTypedArrayMethod: exportTypedArrayMethod,
          exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,
          getTypedArrayConstructor: getTypedArrayConstructor,
          isView: isView,
          isTypedArray: isTypedArray,
          TypedArray: TypedArray,
          TypedArrayPrototype: TypedArrayPrototype
        };

        // #endregion ORIGINAL CODE

        module.exports;
        module.exports.NATIVE_ARRAY_BUFFER_VIEWS;
        module.exports.TYPED_ARRAY_TAG;
      }, function () {
        return {
          '../internals/array-buffer-basic-detection': __cjsMetaURL$1,
          '../internals/descriptors': __cjsMetaURL$2,
          '../internals/global': __cjsMetaURL$3,
          '../internals/is-callable': __cjsMetaURL$4,
          '../internals/is-object': __cjsMetaURL$5,
          '../internals/has-own-property': __cjsMetaURL$6,
          '../internals/classof': __cjsMetaURL$7,
          '../internals/try-to-string': __cjsMetaURL$8,
          '../internals/create-non-enumerable-property': __cjsMetaURL$9,
          '../internals/define-built-in': __cjsMetaURL$a,
          '../internals/define-built-in-accessor': __cjsMetaURL$b,
          '../internals/object-is-prototype-of': __cjsMetaURL$c,
          '../internals/object-get-prototype-of': __cjsMetaURL$d,
          '../internals/object-set-prototype-of': __cjsMetaURL$e,
          '../internals/well-known-symbol': __cjsMetaURL$f,
          '../internals/uid': __cjsMetaURL$g,
          '../internals/internal-state': __cjsMetaURL$h
        };
      });
    }
  };
});

System.register("chunks:///_virtual/array-buffer.js", ['./cjs-loader.mjs', './global.js', './function-uncurry-this.js', './descriptors.js', './array-buffer-basic-detection.js', './function-name.js', './create-non-enumerable-property.js', './define-built-in-accessor.js', './define-built-ins.js', './fails.js', './an-instance.js', './to-integer-or-infinity.js', './to-length.js', './to-index.js', './ieee754.js', './object-get-prototype-of.js', './object-set-prototype-of.js', './object-get-own-property-names.js', './array-fill.js', './array-slice-simple.js', './set-to-string-tag.js', './internal-state.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8, __cjsMetaURL$9, __cjsMetaURL$a, __cjsMetaURL$b, __cjsMetaURL$c, __cjsMetaURL$d, __cjsMetaURL$e, __cjsMetaURL$f, __cjsMetaURL$g, __cjsMetaURL$h, __cjsMetaURL$i, __cjsMetaURL$j, __cjsMetaURL$k, __cjsMetaURL$l;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$9 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$a = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$b = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$c = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$d = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$e = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$f = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$g = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$h = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$i = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$j = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$k = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$l = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var global = require('../internals/global');
        var uncurryThis = require('../internals/function-uncurry-this');
        var DESCRIPTORS = require('../internals/descriptors');
        var NATIVE_ARRAY_BUFFER = require('../internals/array-buffer-basic-detection');
        var FunctionName = require('../internals/function-name');
        var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');
        var defineBuiltInAccessor = require('../internals/define-built-in-accessor');
        var defineBuiltIns = require('../internals/define-built-ins');
        var fails = require('../internals/fails');
        var anInstance = require('../internals/an-instance');
        var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');
        var toLength = require('../internals/to-length');
        var toIndex = require('../internals/to-index');
        var IEEE754 = require('../internals/ieee754');
        var getPrototypeOf = require('../internals/object-get-prototype-of');
        var setPrototypeOf = require('../internals/object-set-prototype-of');
        var getOwnPropertyNames = require('../internals/object-get-own-property-names').f;
        var arrayFill = require('../internals/array-fill');
        var arraySlice = require('../internals/array-slice-simple');
        var setToStringTag = require('../internals/set-to-string-tag');
        var InternalStateModule = require('../internals/internal-state');
        var PROPER_FUNCTION_NAME = FunctionName.PROPER;
        var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
        var ARRAY_BUFFER = 'ArrayBuffer';
        var DATA_VIEW = 'DataView';
        var PROTOTYPE = 'prototype';
        var WRONG_LENGTH = 'Wrong length';
        var WRONG_INDEX = 'Wrong index';
        var getInternalArrayBufferState = InternalStateModule.getterFor(ARRAY_BUFFER);
        var getInternalDataViewState = InternalStateModule.getterFor(DATA_VIEW);
        var setInternalState = InternalStateModule.set;
        var NativeArrayBuffer = global[ARRAY_BUFFER];
        var $ArrayBuffer = NativeArrayBuffer;
        var ArrayBufferPrototype = $ArrayBuffer && $ArrayBuffer[PROTOTYPE];
        var $DataView = global[DATA_VIEW];
        var DataViewPrototype = $DataView && $DataView[PROTOTYPE];
        var ObjectPrototype = Object.prototype;
        var Array = global.Array;
        var RangeError = global.RangeError;
        var fill = uncurryThis(arrayFill);
        var reverse = uncurryThis([].reverse);
        var packIEEE754 = IEEE754.pack;
        var unpackIEEE754 = IEEE754.unpack;
        var packInt8 = function packInt8(number) {
          return [number & 0xFF];
        };
        var packInt16 = function packInt16(number) {
          return [number & 0xFF, number >> 8 & 0xFF];
        };
        var packInt32 = function packInt32(number) {
          return [number & 0xFF, number >> 8 & 0xFF, number >> 16 & 0xFF, number >> 24 & 0xFF];
        };
        var unpackInt32 = function unpackInt32(buffer) {
          return buffer[3] << 24 | buffer[2] << 16 | buffer[1] << 8 | buffer[0];
        };
        var packFloat32 = function packFloat32(number) {
          return packIEEE754(number, 23, 4);
        };
        var packFloat64 = function packFloat64(number) {
          return packIEEE754(number, 52, 8);
        };
        var addGetter = function addGetter(Constructor, key, getInternalState) {
          defineBuiltInAccessor(Constructor[PROTOTYPE], key, {
            configurable: true,
            get: function get() {
              return getInternalState(this)[key];
            }
          });
        };
        var get = function get(view, count, index, isLittleEndian) {
          var store = getInternalDataViewState(view);
          var intIndex = toIndex(index);
          var boolIsLittleEndian = !!isLittleEndian;
          if (intIndex + count > store.byteLength) throw RangeError(WRONG_INDEX);
          var bytes = store.bytes;
          var start = intIndex + store.byteOffset;
          var pack = arraySlice(bytes, start, start + count);
          return boolIsLittleEndian ? pack : reverse(pack);
        };
        var set = function set(view, count, index, conversion, value, isLittleEndian) {
          var store = getInternalDataViewState(view);
          var intIndex = toIndex(index);
          var pack = conversion(+value);
          var boolIsLittleEndian = !!isLittleEndian;
          if (intIndex + count > store.byteLength) throw RangeError(WRONG_INDEX);
          var bytes = store.bytes;
          var start = intIndex + store.byteOffset;
          for (var i = 0; i < count; i++) bytes[start + i] = pack[boolIsLittleEndian ? i : count - i - 1];
        };
        if (!NATIVE_ARRAY_BUFFER) {
          $ArrayBuffer = function ArrayBuffer(length) {
            anInstance(this, ArrayBufferPrototype);
            var byteLength = toIndex(length);
            setInternalState(this, {
              type: ARRAY_BUFFER,
              bytes: fill(Array(byteLength), 0),
              byteLength: byteLength
            });
            if (!DESCRIPTORS) {
              this.byteLength = byteLength;
              this.detached = false;
            }
          };
          ArrayBufferPrototype = $ArrayBuffer[PROTOTYPE];
          $DataView = function DataView(buffer, byteOffset, byteLength) {
            anInstance(this, DataViewPrototype);
            anInstance(buffer, ArrayBufferPrototype);
            var bufferState = getInternalArrayBufferState(buffer);
            var bufferLength = bufferState.byteLength;
            var offset = toIntegerOrInfinity(byteOffset);
            if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset');
            byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
            if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
            setInternalState(this, {
              type: DATA_VIEW,
              buffer: buffer,
              byteLength: byteLength,
              byteOffset: offset,
              bytes: bufferState.bytes
            });
            if (!DESCRIPTORS) {
              this.buffer = buffer;
              this.byteLength = byteLength;
              this.byteOffset = offset;
            }
          };
          DataViewPrototype = $DataView[PROTOTYPE];
          if (DESCRIPTORS) {
            addGetter($ArrayBuffer, 'byteLength', getInternalArrayBufferState);
            addGetter($DataView, 'buffer', getInternalDataViewState);
            addGetter($DataView, 'byteLength', getInternalDataViewState);
            addGetter($DataView, 'byteOffset', getInternalDataViewState);
          }
          defineBuiltIns(DataViewPrototype, {
            getInt8: function getInt8(byteOffset) {
              return get(this, 1, byteOffset)[0] << 24 >> 24;
            },
            getUint8: function getUint8(byteOffset) {
              return get(this, 1, byteOffset)[0];
            },
            getInt16: function getInt16(byteOffset /* , littleEndian */) {
              var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : false);
              return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
            },
            getUint16: function getUint16(byteOffset /* , littleEndian */) {
              var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : false);
              return bytes[1] << 8 | bytes[0];
            },
            getInt32: function getInt32(byteOffset /* , littleEndian */) {
              return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : false));
            },
            getUint32: function getUint32(byteOffset /* , littleEndian */) {
              return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : false)) >>> 0;
            },
            getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
              return unpackIEEE754(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : false), 23);
            },
            getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
              return unpackIEEE754(get(this, 8, byteOffset, arguments.length > 1 ? arguments[1] : false), 52);
            },
            setInt8: function setInt8(byteOffset, value) {
              set(this, 1, byteOffset, packInt8, value);
            },
            setUint8: function setUint8(byteOffset, value) {
              set(this, 1, byteOffset, packInt8, value);
            },
            setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
              set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : false);
            },
            setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
              set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : false);
            },
            setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
              set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : false);
            },
            setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
              set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : false);
            },
            setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
              set(this, 4, byteOffset, packFloat32, value, arguments.length > 2 ? arguments[2] : false);
            },
            setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
              set(this, 8, byteOffset, packFloat64, value, arguments.length > 2 ? arguments[2] : false);
            }
          });
        } else {
          var INCORRECT_ARRAY_BUFFER_NAME = PROPER_FUNCTION_NAME && NativeArrayBuffer.name !== ARRAY_BUFFER;
          /* eslint-disable no-new -- required for testing */
          if (!fails(function () {
            NativeArrayBuffer(1);
          }) || !fails(function () {
            new NativeArrayBuffer(-1);
          }) || fails(function () {
            new NativeArrayBuffer();
            new NativeArrayBuffer(1.5);
            new NativeArrayBuffer(NaN);
            return NativeArrayBuffer.length !== 1 || INCORRECT_ARRAY_BUFFER_NAME && !CONFIGURABLE_FUNCTION_NAME;
          })) {
            /* eslint-enable no-new -- required for testing */
            $ArrayBuffer = function ArrayBuffer(length) {
              anInstance(this, ArrayBufferPrototype);
              return new NativeArrayBuffer(toIndex(length));
            };
            $ArrayBuffer[PROTOTYPE] = ArrayBufferPrototype;
            for (var keys = getOwnPropertyNames(NativeArrayBuffer), j = 0, key; keys.length > j;) {
              if (!((key = keys[j++]) in $ArrayBuffer)) {
                createNonEnumerableProperty($ArrayBuffer, key, NativeArrayBuffer[key]);
              }
            }
            ArrayBufferPrototype.constructor = $ArrayBuffer;
          } else if (INCORRECT_ARRAY_BUFFER_NAME && CONFIGURABLE_FUNCTION_NAME) {
            createNonEnumerableProperty(NativeArrayBuffer, 'name', ARRAY_BUFFER);
          }

          // WebKit bug - the same parent prototype for typed arrays and data view
          if (setPrototypeOf && getPrototypeOf(DataViewPrototype) !== ObjectPrototype) {
            setPrototypeOf(DataViewPrototype, ObjectPrototype);
          }

          // iOS Safari 7.x bug
          var testView = new $DataView(new $ArrayBuffer(2));
          var $setInt8 = uncurryThis(DataViewPrototype.setInt8);
          testView.setInt8(0, 2147483648);
          testView.setInt8(1, 2147483649);
          if (testView.getInt8(0) || !testView.getInt8(1)) defineBuiltIns(DataViewPrototype, {
            setInt8: function setInt8(byteOffset, value) {
              $setInt8(this, byteOffset, value << 24 >> 24);
            },
            setUint8: function setUint8(byteOffset, value) {
              $setInt8(this, byteOffset, value << 24 >> 24);
            }
          }, {
            unsafe: true
          });
        }
        setToStringTag($ArrayBuffer, ARRAY_BUFFER);
        setToStringTag($DataView, DATA_VIEW);
        module.exports = {
          ArrayBuffer: $ArrayBuffer,
          DataView: $DataView
        };

        // #endregion ORIGINAL CODE

        module.exports;
        module.exports.ArrayBuffer;
        module.exports.DataView;
      }, function () {
        return {
          '../internals/global': __cjsMetaURL$1,
          '../internals/function-uncurry-this': __cjsMetaURL$2,
          '../internals/descriptors': __cjsMetaURL$3,
          '../internals/array-buffer-basic-detection': __cjsMetaURL$4,
          '../internals/function-name': __cjsMetaURL$5,
          '../internals/create-non-enumerable-property': __cjsMetaURL$6,
          '../internals/define-built-in-accessor': __cjsMetaURL$7,
          '../internals/define-built-ins': __cjsMetaURL$8,
          '../internals/fails': __cjsMetaURL$9,
          '../internals/an-instance': __cjsMetaURL$a,
          '../internals/to-integer-or-infinity': __cjsMetaURL$b,
          '../internals/to-length': __cjsMetaURL$c,
          '../internals/to-index': __cjsMetaURL$d,
          '../internals/ieee754': __cjsMetaURL$e,
          '../internals/object-get-prototype-of': __cjsMetaURL$f,
          '../internals/object-set-prototype-of': __cjsMetaURL$g,
          '../internals/object-get-own-property-names': __cjsMetaURL$h,
          '../internals/array-fill': __cjsMetaURL$i,
          '../internals/array-slice-simple': __cjsMetaURL$j,
          '../internals/set-to-string-tag': __cjsMetaURL$k,
          '../internals/internal-state': __cjsMetaURL$l
        };
      });
    }
  };
});

System.register("chunks:///_virtual/array-copy-within.js", ['./cjs-loader.mjs', './to-object.js', './to-absolute-index.js', './length-of-array-like.js', './delete-property-or-throw.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var toObject = require('../internals/to-object');
        var toAbsoluteIndex = require('../internals/to-absolute-index');
        var lengthOfArrayLike = require('../internals/length-of-array-like');
        var deletePropertyOrThrow = require('../internals/delete-property-or-throw');
        var min = Math.min;

        // `Array.prototype.copyWithin` method implementation
        // https://tc39.es/ecma262/#sec-array.prototype.copywithin
        // eslint-disable-next-line es/no-array-prototype-copywithin -- safe
        module.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
          var O = toObject(this);
          var len = lengthOfArrayLike(O);
          var to = toAbsoluteIndex(target, len);
          var from = toAbsoluteIndex(start, len);
          var end = arguments.length > 2 ? arguments[2] : undefined;
          var count = min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);
          var inc = 1;
          if (from < to && to < from + count) {
            inc = -1;
            from += count - 1;
            to += count - 1;
          }
          while (count-- > 0) {
            if (from in O) O[to] = O[from];else deletePropertyOrThrow(O, to);
            to += inc;
            from += inc;
          }
          return O;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/to-object': __cjsMetaURL$1,
          '../internals/to-absolute-index': __cjsMetaURL$2,
          '../internals/length-of-array-like': __cjsMetaURL$3,
          '../internals/delete-property-or-throw': __cjsMetaURL$4
        };
      });
    }
  };
});

System.register("chunks:///_virtual/array-fill.js", ['./cjs-loader.mjs', './to-object.js', './to-absolute-index.js', './length-of-array-like.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var toObject = require('../internals/to-object');
        var toAbsoluteIndex = require('../internals/to-absolute-index');
        var lengthOfArrayLike = require('../internals/length-of-array-like');

        // `Array.prototype.fill` method implementation
        // https://tc39.es/ecma262/#sec-array.prototype.fill
        module.exports = function fill(value /* , start = 0, end = @length */) {
          var O = toObject(this);
          var length = lengthOfArrayLike(O);
          var argumentsLength = arguments.length;
          var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);
          var end = argumentsLength > 2 ? arguments[2] : undefined;
          var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
          while (endPos > index) O[index++] = value;
          return O;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/to-object': __cjsMetaURL$1,
          '../internals/to-absolute-index': __cjsMetaURL$2,
          '../internals/length-of-array-like': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/array-for-each.js", ['./cjs-loader.mjs', './array-iteration.js', './array-method-is-strict.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $forEach = require('../internals/array-iteration').forEach;
        var arrayMethodIsStrict = require('../internals/array-method-is-strict');
        var STRICT_METHOD = arrayMethodIsStrict('forEach');

        // `Array.prototype.forEach` method implementation
        // https://tc39.es/ecma262/#sec-array.prototype.foreach
        module.exports = !STRICT_METHOD ? function forEach(callbackfn /* , thisArg */) {
          return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
          // eslint-disable-next-line es/no-array-prototype-foreach -- safe
        } : [].forEach;

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/array-iteration': __cjsMetaURL$1,
          '../internals/array-method-is-strict': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/array-from-constructor-and-list.js", ['./cjs-loader.mjs', './length-of-array-like.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var lengthOfArrayLike = require('../internals/length-of-array-like');
        module.exports = function (Constructor, list) {
          var index = 0;
          var length = lengthOfArrayLike(list);
          var result = new Constructor(length);
          while (length > index) result[index] = list[index++];
          return result;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/length-of-array-like': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/array-from.js", ['./cjs-loader.mjs', './function-bind-context.js', './function-call.js', './to-object.js', './call-with-safe-iteration-closing.js', './is-array-iterator-method.js', './is-constructor.js', './length-of-array-like.js', './create-property.js', './get-iterator.js', './get-iterator-method.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8, __cjsMetaURL$9, __cjsMetaURL$a;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$9 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$a = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var bind = require('../internals/function-bind-context');
        var call = require('../internals/function-call');
        var toObject = require('../internals/to-object');
        var callWithSafeIterationClosing = require('../internals/call-with-safe-iteration-closing');
        var isArrayIteratorMethod = require('../internals/is-array-iterator-method');
        var isConstructor = require('../internals/is-constructor');
        var lengthOfArrayLike = require('../internals/length-of-array-like');
        var createProperty = require('../internals/create-property');
        var getIterator = require('../internals/get-iterator');
        var getIteratorMethod = require('../internals/get-iterator-method');
        var $Array = Array;

        // `Array.from` method implementation
        // https://tc39.es/ecma262/#sec-array.from
        module.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
          var O = toObject(arrayLike);
          var IS_CONSTRUCTOR = isConstructor(this);
          var argumentsLength = arguments.length;
          var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
          var mapping = mapfn !== undefined;
          if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined);
          var iteratorMethod = getIteratorMethod(O);
          var index = 0;
          var length, result, step, iterator, next, value;
          // if the target is not iterable or it's an array with the default iterator - use a simple case
          if (iteratorMethod && !(this === $Array && isArrayIteratorMethod(iteratorMethod))) {
            iterator = getIterator(O, iteratorMethod);
            next = iterator.next;
            result = IS_CONSTRUCTOR ? new this() : [];
            for (; !(step = call(next, iterator)).done; index++) {
              value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;
              createProperty(result, index, value);
            }
          } else {
            length = lengthOfArrayLike(O);
            result = IS_CONSTRUCTOR ? new this(length) : $Array(length);
            for (; length > index; index++) {
              value = mapping ? mapfn(O[index], index) : O[index];
              createProperty(result, index, value);
            }
          }
          result.length = index;
          return result;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-bind-context': __cjsMetaURL$1,
          '../internals/function-call': __cjsMetaURL$2,
          '../internals/to-object': __cjsMetaURL$3,
          '../internals/call-with-safe-iteration-closing': __cjsMetaURL$4,
          '../internals/is-array-iterator-method': __cjsMetaURL$5,
          '../internals/is-constructor': __cjsMetaURL$6,
          '../internals/length-of-array-like': __cjsMetaURL$7,
          '../internals/create-property': __cjsMetaURL$8,
          '../internals/get-iterator': __cjsMetaURL$9,
          '../internals/get-iterator-method': __cjsMetaURL$a
        };
      });
    }
  };
});

System.register("chunks:///_virtual/array-includes.js", ['./cjs-loader.mjs', './to-indexed-object.js', './to-absolute-index.js', './length-of-array-like.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var toIndexedObject = require('../internals/to-indexed-object');
        var toAbsoluteIndex = require('../internals/to-absolute-index');
        var lengthOfArrayLike = require('../internals/length-of-array-like');

        // `Array.prototype.{ indexOf, includes }` methods implementation
        var createMethod = function createMethod(IS_INCLUDES) {
          return function ($this, el, fromIndex) {
            var O = toIndexedObject($this);
            var length = lengthOfArrayLike(O);
            var index = toAbsoluteIndex(fromIndex, length);
            var value;
            // Array#includes uses SameValueZero equality algorithm
            // eslint-disable-next-line no-self-compare -- NaN check
            if (IS_INCLUDES && el !== el) while (length > index) {
              value = O[index++];
              // eslint-disable-next-line no-self-compare -- NaN check
              if (value !== value) return true;
              // Array#indexOf ignores holes, Array#includes - not
            } else for (; length > index; index++) {
              if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
            }
            return !IS_INCLUDES && -1;
          };
        };
        module.exports = {
          // `Array.prototype.includes` method
          // https://tc39.es/ecma262/#sec-array.prototype.includes
          includes: createMethod(true),
          // `Array.prototype.indexOf` method
          // https://tc39.es/ecma262/#sec-array.prototype.indexof
          indexOf: createMethod(false)
        };

        // #endregion ORIGINAL CODE

        module.exports;
        module.exports.includes;
      }, function () {
        return {
          '../internals/to-indexed-object': __cjsMetaURL$1,
          '../internals/to-absolute-index': __cjsMetaURL$2,
          '../internals/length-of-array-like': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/array-iteration.js", ['./cjs-loader.mjs', './function-bind-context.js', './function-uncurry-this.js', './indexed-object.js', './to-object.js', './length-of-array-like.js', './array-species-create.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var bind = require('../internals/function-bind-context');
        var uncurryThis = require('../internals/function-uncurry-this');
        var IndexedObject = require('../internals/indexed-object');
        var toObject = require('../internals/to-object');
        var lengthOfArrayLike = require('../internals/length-of-array-like');
        var arraySpeciesCreate = require('../internals/array-species-create');
        var push = uncurryThis([].push);

        // `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation
        var createMethod = function createMethod(TYPE) {
          var IS_MAP = TYPE === 1;
          var IS_FILTER = TYPE === 2;
          var IS_SOME = TYPE === 3;
          var IS_EVERY = TYPE === 4;
          var IS_FIND_INDEX = TYPE === 6;
          var IS_FILTER_REJECT = TYPE === 7;
          var NO_HOLES = TYPE === 5 || IS_FIND_INDEX;
          return function ($this, callbackfn, that, specificCreate) {
            var O = toObject($this);
            var self = IndexedObject(O);
            var boundFunction = bind(callbackfn, that);
            var length = lengthOfArrayLike(self);
            var index = 0;
            var create = specificCreate || arraySpeciesCreate;
            var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;
            var value, result;
            for (; length > index; index++) if (NO_HOLES || index in self) {
              value = self[index];
              result = boundFunction(value, index, O);
              if (TYPE) {
                if (IS_MAP) target[index] = result; // map
                else if (result) switch (TYPE) {
                  case 3:
                    return true;
                  // some
                  case 5:
                    return value;
                  // find
                  case 6:
                    return index;
                  // findIndex
                  case 2:
                    push(target, value);
                  // filter
                } else switch (TYPE) {
                  case 4:
                    return false;
                  // every
                  case 7:
                    push(target, value);
                  // filterReject
                }
              }
            }

            return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
          };
        };
        module.exports = {
          // `Array.prototype.forEach` method
          // https://tc39.es/ecma262/#sec-array.prototype.foreach
          forEach: createMethod(0),
          // `Array.prototype.map` method
          // https://tc39.es/ecma262/#sec-array.prototype.map
          map: createMethod(1),
          // `Array.prototype.filter` method
          // https://tc39.es/ecma262/#sec-array.prototype.filter
          filter: createMethod(2),
          // `Array.prototype.some` method
          // https://tc39.es/ecma262/#sec-array.prototype.some
          some: createMethod(3),
          // `Array.prototype.every` method
          // https://tc39.es/ecma262/#sec-array.prototype.every
          every: createMethod(4),
          // `Array.prototype.find` method
          // https://tc39.es/ecma262/#sec-array.prototype.find
          find: createMethod(5),
          // `Array.prototype.findIndex` method
          // https://tc39.es/ecma262/#sec-array.prototype.findIndex
          findIndex: createMethod(6),
          // `Array.prototype.filterReject` method
          // https://github.com/tc39/proposal-array-filtering
          filterReject: createMethod(7)
        };

        // #endregion ORIGINAL CODE

        module.exports;
        module.exports.forEach;
      }, function () {
        return {
          '../internals/function-bind-context': __cjsMetaURL$1,
          '../internals/function-uncurry-this': __cjsMetaURL$2,
          '../internals/indexed-object': __cjsMetaURL$3,
          '../internals/to-object': __cjsMetaURL$4,
          '../internals/length-of-array-like': __cjsMetaURL$5,
          '../internals/array-species-create': __cjsMetaURL$6
        };
      });
    }
  };
});

System.register("chunks:///_virtual/array-last-index-of.js", ['./cjs-loader.mjs', './function-apply.js', './to-indexed-object.js', './to-integer-or-infinity.js', './length-of-array-like.js', './array-method-is-strict.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        /* eslint-disable es/no-array-prototype-lastindexof -- safe */
        var apply = require('../internals/function-apply');
        var toIndexedObject = require('../internals/to-indexed-object');
        var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');
        var lengthOfArrayLike = require('../internals/length-of-array-like');
        var arrayMethodIsStrict = require('../internals/array-method-is-strict');
        var min = Math.min;
        var $lastIndexOf = [].lastIndexOf;
        var NEGATIVE_ZERO = !!$lastIndexOf && 1 / [1].lastIndexOf(1, -0) < 0;
        var STRICT_METHOD = arrayMethodIsStrict('lastIndexOf');
        var FORCED = NEGATIVE_ZERO || !STRICT_METHOD;

        // `Array.prototype.lastIndexOf` method implementation
        // https://tc39.es/ecma262/#sec-array.prototype.lastindexof
        module.exports = FORCED ? function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {
          // convert -0 to +0
          if (NEGATIVE_ZERO) return apply($lastIndexOf, this, arguments) || 0;
          var O = toIndexedObject(this);
          var length = lengthOfArrayLike(O);
          var index = length - 1;
          if (arguments.length > 1) index = min(index, toIntegerOrInfinity(arguments[1]));
          if (index < 0) index = length + index;
          for (; index >= 0; index--) if (index in O && O[index] === searchElement) return index || 0;
          return -1;
        } : $lastIndexOf;

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-apply': __cjsMetaURL$1,
          '../internals/to-indexed-object': __cjsMetaURL$2,
          '../internals/to-integer-or-infinity': __cjsMetaURL$3,
          '../internals/length-of-array-like': __cjsMetaURL$4,
          '../internals/array-method-is-strict': __cjsMetaURL$5
        };
      });
    }
  };
});

System.register("chunks:///_virtual/array-method-has-species-support.js", ['./cjs-loader.mjs', './fails.js', './well-known-symbol.js', './engine-v8-version.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var fails = require('../internals/fails');
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var V8_VERSION = require('../internals/engine-v8-version');
        var SPECIES = wellKnownSymbol('species');
        module.exports = function (METHOD_NAME) {
          // We can't use this feature detection in V8 since it causes
          // deoptimization and serious performance degradation
          // https://github.com/zloirock/core-js/issues/677
          return V8_VERSION >= 51 || !fails(function () {
            var array = [];
            var constructor = array.constructor = {};
            constructor[SPECIES] = function () {
              return {
                foo: 1
              };
            };
            return array[METHOD_NAME](Boolean).foo !== 1;
          });
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/fails': __cjsMetaURL$1,
          '../internals/well-known-symbol': __cjsMetaURL$2,
          '../internals/engine-v8-version': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/array-method-is-strict.js", ['./cjs-loader.mjs', './fails.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var fails = require('../internals/fails');
        module.exports = function (METHOD_NAME, argument) {
          var method = [][METHOD_NAME];
          return !!method && fails(function () {
            // eslint-disable-next-line no-useless-call -- required for testing
            method.call(null, argument || function () {
              return 1;
            }, 1);
          });
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/fails': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/array-reduce.js", ['./cjs-loader.mjs', './a-callable.js', './to-object.js', './indexed-object.js', './length-of-array-like.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var aCallable = require('../internals/a-callable');
        var toObject = require('../internals/to-object');
        var IndexedObject = require('../internals/indexed-object');
        var lengthOfArrayLike = require('../internals/length-of-array-like');
        var $TypeError = TypeError;

        // `Array.prototype.{ reduce, reduceRight }` methods implementation
        var createMethod = function createMethod(IS_RIGHT) {
          return function (that, callbackfn, argumentsLength, memo) {
            aCallable(callbackfn);
            var O = toObject(that);
            var self = IndexedObject(O);
            var length = lengthOfArrayLike(O);
            var index = IS_RIGHT ? length - 1 : 0;
            var i = IS_RIGHT ? -1 : 1;
            if (argumentsLength < 2) while (true) {
              if (index in self) {
                memo = self[index];
                index += i;
                break;
              }
              index += i;
              if (IS_RIGHT ? index < 0 : length <= index) {
                throw $TypeError('Reduce of empty array with no initial value');
              }
            }
            for (; IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {
              memo = callbackfn(memo, self[index], index, O);
            }
            return memo;
          };
        };
        module.exports = {
          // `Array.prototype.reduce` method
          // https://tc39.es/ecma262/#sec-array.prototype.reduce
          left: createMethod(false),
          // `Array.prototype.reduceRight` method
          // https://tc39.es/ecma262/#sec-array.prototype.reduceright
          right: createMethod(true)
        };

        // #endregion ORIGINAL CODE

        module.exports;
        module.exports.left;
      }, function () {
        return {
          '../internals/a-callable': __cjsMetaURL$1,
          '../internals/to-object': __cjsMetaURL$2,
          '../internals/indexed-object': __cjsMetaURL$3,
          '../internals/length-of-array-like': __cjsMetaURL$4
        };
      });
    }
  };
});

System.register("chunks:///_virtual/array-set-length.js", ['./cjs-loader.mjs', './descriptors.js', './is-array.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var DESCRIPTORS = require('../internals/descriptors');
        var isArray = require('../internals/is-array');
        var $TypeError = TypeError;
        // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
        var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

        // Safari < 13 does not throw an error in this case
        var SILENT_ON_NON_WRITABLE_LENGTH_SET = DESCRIPTORS && !function () {
          // makes no sense without proper strict mode support
          if (this !== undefined) return true;
          try {
            // eslint-disable-next-line es/no-object-defineproperty -- safe
            Object.defineProperty([], 'length', {
              writable: false
            }).length = 1;
          } catch (error) {
            return error instanceof TypeError;
          }
        }();
        module.exports = SILENT_ON_NON_WRITABLE_LENGTH_SET ? function (O, length) {
          if (isArray(O) && !getOwnPropertyDescriptor(O, 'length').writable) {
            throw $TypeError('Cannot set read only .length');
          }
          return O.length = length;
        } : function (O, length) {
          return O.length = length;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/descriptors': __cjsMetaURL$1,
          '../internals/is-array': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/array-slice-simple.js", ['./cjs-loader.mjs', './to-absolute-index.js', './length-of-array-like.js', './create-property.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var toAbsoluteIndex = require('../internals/to-absolute-index');
        var lengthOfArrayLike = require('../internals/length-of-array-like');
        var createProperty = require('../internals/create-property');
        var $Array = Array;
        var max = Math.max;
        module.exports = function (O, start, end) {
          var length = lengthOfArrayLike(O);
          var k = toAbsoluteIndex(start, length);
          var fin = toAbsoluteIndex(end === undefined ? length : end, length);
          var result = $Array(max(fin - k, 0));
          var n = 0;
          for (; k < fin; k++, n++) createProperty(result, n, O[k]);
          result.length = n;
          return result;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/to-absolute-index': __cjsMetaURL$1,
          '../internals/length-of-array-like': __cjsMetaURL$2,
          '../internals/create-property': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/array-slice.js", ['./cjs-loader.mjs', './function-uncurry-this.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var uncurryThis = require('../internals/function-uncurry-this');
        module.exports = uncurryThis([].slice);

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-uncurry-this': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/array-sort.js", ['./cjs-loader.mjs', './array-slice-simple.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var arraySlice = require('../internals/array-slice-simple');
        var floor = Math.floor;
        var mergeSort = function mergeSort(array, comparefn) {
          var length = array.length;
          var middle = floor(length / 2);
          return length < 8 ? insertionSort(array, comparefn) : merge(array, mergeSort(arraySlice(array, 0, middle), comparefn), mergeSort(arraySlice(array, middle), comparefn), comparefn);
        };
        var insertionSort = function insertionSort(array, comparefn) {
          var length = array.length;
          var i = 1;
          var element, j;
          while (i < length) {
            j = i;
            element = array[i];
            while (j && comparefn(array[j - 1], element) > 0) {
              array[j] = array[--j];
            }
            if (j !== i++) array[j] = element;
          }
          return array;
        };
        var merge = function merge(array, left, right, comparefn) {
          var llength = left.length;
          var rlength = right.length;
          var lindex = 0;
          var rindex = 0;
          while (lindex < llength || rindex < rlength) {
            array[lindex + rindex] = lindex < llength && rindex < rlength ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++] : lindex < llength ? left[lindex++] : right[rindex++];
          }
          return array;
        };
        module.exports = mergeSort;

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/array-slice-simple': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/array-species-constructor.js", ['./cjs-loader.mjs', './is-array.js', './is-constructor.js', './is-object.js', './well-known-symbol.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var isArray = require('../internals/is-array');
        var isConstructor = require('../internals/is-constructor');
        var isObject = require('../internals/is-object');
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var SPECIES = wellKnownSymbol('species');
        var $Array = Array;

        // a part of `ArraySpeciesCreate` abstract operation
        // https://tc39.es/ecma262/#sec-arrayspeciescreate
        module.exports = function (originalArray) {
          var C;
          if (isArray(originalArray)) {
            C = originalArray.constructor;
            // cross-realm fallback
            if (isConstructor(C) && (C === $Array || isArray(C.prototype))) C = undefined;else if (isObject(C)) {
              C = C[SPECIES];
              if (C === null) C = undefined;
            }
          }
          return C === undefined ? $Array : C;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/is-array': __cjsMetaURL$1,
          '../internals/is-constructor': __cjsMetaURL$2,
          '../internals/is-object': __cjsMetaURL$3,
          '../internals/well-known-symbol': __cjsMetaURL$4
        };
      });
    }
  };
});

System.register("chunks:///_virtual/array-species-create.js", ['./cjs-loader.mjs', './array-species-constructor.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var arraySpeciesConstructor = require('../internals/array-species-constructor');

        // `ArraySpeciesCreate` abstract operation
        // https://tc39.es/ecma262/#sec-arrayspeciescreate
        module.exports = function (originalArray, length) {
          return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/array-species-constructor': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/blowfish.js", ['./rollupPluginModLoBabelHelpers.js', './cipher-core.js'], function (exports) {
  var _inheritsLoose, BlockCipher;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      BlockCipher = module.BlockCipher;
    }],
    execute: function () {
      var N = 16;

      //Origin pbox and sbox, derived from PI
      var ORIG_P = [0x243F6A88, 0x85A308D3, 0x13198A2E, 0x03707344, 0xA4093822, 0x299F31D0, 0x082EFA98, 0xEC4E6C89, 0x452821E6, 0x38D01377, 0xBE5466CF, 0x34E90C6C, 0xC0AC29B7, 0xC97C50DD, 0x3F84D5B5, 0xB5470917, 0x9216D5D9, 0x8979FB1B];
      var ORIG_S = [[0xD1310BA6, 0x98DFB5AC, 0x2FFD72DB, 0xD01ADFB7, 0xB8E1AFED, 0x6A267E96, 0xBA7C9045, 0xF12C7F99, 0x24A19947, 0xB3916CF7, 0x0801F2E2, 0x858EFC16, 0x636920D8, 0x71574E69, 0xA458FEA3, 0xF4933D7E, 0x0D95748F, 0x728EB658, 0x718BCD58, 0x82154AEE, 0x7B54A41D, 0xC25A59B5, 0x9C30D539, 0x2AF26013, 0xC5D1B023, 0x286085F0, 0xCA417918, 0xB8DB38EF, 0x8E79DCB0, 0x603A180E, 0x6C9E0E8B, 0xB01E8A3E, 0xD71577C1, 0xBD314B27, 0x78AF2FDA, 0x55605C60, 0xE65525F3, 0xAA55AB94, 0x57489862, 0x63E81440, 0x55CA396A, 0x2AAB10B6, 0xB4CC5C34, 0x1141E8CE, 0xA15486AF, 0x7C72E993, 0xB3EE1411, 0x636FBC2A, 0x2BA9C55D, 0x741831F6, 0xCE5C3E16, 0x9B87931E, 0xAFD6BA33, 0x6C24CF5C, 0x7A325381, 0x28958677, 0x3B8F4898, 0x6B4BB9AF, 0xC4BFE81B, 0x66282193, 0x61D809CC, 0xFB21A991, 0x487CAC60, 0x5DEC8032, 0xEF845D5D, 0xE98575B1, 0xDC262302, 0xEB651B88, 0x23893E81, 0xD396ACC5, 0x0F6D6FF3, 0x83F44239, 0x2E0B4482, 0xA4842004, 0x69C8F04A, 0x9E1F9B5E, 0x21C66842, 0xF6E96C9A, 0x670C9C61, 0xABD388F0, 0x6A51A0D2, 0xD8542F68, 0x960FA728, 0xAB5133A3, 0x6EEF0B6C, 0x137A3BE4, 0xBA3BF050, 0x7EFB2A98, 0xA1F1651D, 0x39AF0176, 0x66CA593E, 0x82430E88, 0x8CEE8619, 0x456F9FB4, 0x7D84A5C3, 0x3B8B5EBE, 0xE06F75D8, 0x85C12073, 0x401A449F, 0x56C16AA6, 0x4ED3AA62, 0x363F7706, 0x1BFEDF72, 0x429B023D, 0x37D0D724, 0xD00A1248, 0xDB0FEAD3, 0x49F1C09B, 0x075372C9, 0x80991B7B, 0x25D479D8, 0xF6E8DEF7, 0xE3FE501A, 0xB6794C3B, 0x976CE0BD, 0x04C006BA, 0xC1A94FB6, 0x409F60C4, 0x5E5C9EC2, 0x196A2463, 0x68FB6FAF, 0x3E6C53B5, 0x1339B2EB, 0x3B52EC6F, 0x6DFC511F, 0x9B30952C, 0xCC814544, 0xAF5EBD09, 0xBEE3D004, 0xDE334AFD, 0x660F2807, 0x192E4BB3, 0xC0CBA857, 0x45C8740F, 0xD20B5F39, 0xB9D3FBDB, 0x5579C0BD, 0x1A60320A, 0xD6A100C6, 0x402C7279, 0x679F25FE, 0xFB1FA3CC, 0x8EA5E9F8, 0xDB3222F8, 0x3C7516DF, 0xFD616B15, 0x2F501EC8, 0xAD0552AB, 0x323DB5FA, 0xFD238760, 0x53317B48, 0x3E00DF82, 0x9E5C57BB, 0xCA6F8CA0, 0x1A87562E, 0xDF1769DB, 0xD542A8F6, 0x287EFFC3, 0xAC6732C6, 0x8C4F5573, 0x695B27B0, 0xBBCA58C8, 0xE1FFA35D, 0xB8F011A0, 0x10FA3D98, 0xFD2183B8, 0x4AFCB56C, 0x2DD1D35B, 0x9A53E479, 0xB6F84565, 0xD28E49BC, 0x4BFB9790, 0xE1DDF2DA, 0xA4CB7E33, 0x62FB1341, 0xCEE4C6E8, 0xEF20CADA, 0x36774C01, 0xD07E9EFE, 0x2BF11FB4, 0x95DBDA4D, 0xAE909198, 0xEAAD8E71, 0x6B93D5A0, 0xD08ED1D0, 0xAFC725E0, 0x8E3C5B2F, 0x8E7594B7, 0x8FF6E2FB, 0xF2122B64, 0x8888B812, 0x900DF01C, 0x4FAD5EA0, 0x688FC31C, 0xD1CFF191, 0xB3A8C1AD, 0x2F2F2218, 0xBE0E1777, 0xEA752DFE, 0x8B021FA1, 0xE5A0CC0F, 0xB56F74E8, 0x18ACF3D6, 0xCE89E299, 0xB4A84FE0, 0xFD13E0B7, 0x7CC43B81, 0xD2ADA8D9, 0x165FA266, 0x80957705, 0x93CC7314, 0x211A1477, 0xE6AD2065, 0x77B5FA86, 0xC75442F5, 0xFB9D35CF, 0xEBCDAF0C, 0x7B3E89A0, 0xD6411BD3, 0xAE1E7E49, 0x00250E2D, 0x2071B35E, 0x226800BB, 0x57B8E0AF, 0x2464369B, 0xF009B91E, 0x5563911D, 0x59DFA6AA, 0x78C14389, 0xD95A537F, 0x207D5BA2, 0x02E5B9C5, 0x83260376, 0x6295CFA9, 0x11C81968, 0x4E734A41, 0xB3472DCA, 0x7B14A94A, 0x1B510052, 0x9A532915, 0xD60F573F, 0xBC9BC6E4, 0x2B60A476, 0x81E67400, 0x08BA6FB5, 0x571BE91F, 0xF296EC6B, 0x2A0DD915, 0xB6636521, 0xE7B9F9B6, 0xFF34052E, 0xC5855664, 0x53B02D5D, 0xA99F8FA1, 0x08BA4799, 0x6E85076A], [0x4B7A70E9, 0xB5B32944, 0xDB75092E, 0xC4192623, 0xAD6EA6B0, 0x49A7DF7D, 0x9CEE60B8, 0x8FEDB266, 0xECAA8C71, 0x699A17FF, 0x5664526C, 0xC2B19EE1, 0x193602A5, 0x75094C29, 0xA0591340, 0xE4183A3E, 0x3F54989A, 0x5B429D65, 0x6B8FE4D6, 0x99F73FD6, 0xA1D29C07, 0xEFE830F5, 0x4D2D38E6, 0xF0255DC1, 0x4CDD2086, 0x8470EB26, 0x6382E9C6, 0x021ECC5E, 0x09686B3F, 0x3EBAEFC9, 0x3C971814, 0x6B6A70A1, 0x687F3584, 0x52A0E286, 0xB79C5305, 0xAA500737, 0x3E07841C, 0x7FDEAE5C, 0x8E7D44EC, 0x5716F2B8, 0xB03ADA37, 0xF0500C0D, 0xF01C1F04, 0x0200B3FF, 0xAE0CF51A, 0x3CB574B2, 0x25837A58, 0xDC0921BD, 0xD19113F9, 0x7CA92FF6, 0x94324773, 0x22F54701, 0x3AE5E581, 0x37C2DADC, 0xC8B57634, 0x9AF3DDA7, 0xA9446146, 0x0FD0030E, 0xECC8C73E, 0xA4751E41, 0xE238CD99, 0x3BEA0E2F, 0x3280BBA1, 0x183EB331, 0x4E548B38, 0x4F6DB908, 0x6F420D03, 0xF60A04BF, 0x2CB81290, 0x24977C79, 0x5679B072, 0xBCAF89AF, 0xDE9A771F, 0xD9930810, 0xB38BAE12, 0xDCCF3F2E, 0x5512721F, 0x2E6B7124, 0x501ADDE6, 0x9F84CD87, 0x7A584718, 0x7408DA17, 0xBC9F9ABC, 0xE94B7D8C, 0xEC7AEC3A, 0xDB851DFA, 0x63094366, 0xC464C3D2, 0xEF1C1847, 0x3215D908, 0xDD433B37, 0x24C2BA16, 0x12A14D43, 0x2A65C451, 0x50940002, 0x133AE4DD, 0x71DFF89E, 0x10314E55, 0x81AC77D6, 0x5F11199B, 0x043556F1, 0xD7A3C76B, 0x3C11183B, 0x5924A509, 0xF28FE6ED, 0x97F1FBFA, 0x9EBABF2C, 0x1E153C6E, 0x86E34570, 0xEAE96FB1, 0x860E5E0A, 0x5A3E2AB3, 0x771FE71C, 0x4E3D06FA, 0x2965DCB9, 0x99E71D0F, 0x803E89D6, 0x5266C825, 0x2E4CC978, 0x9C10B36A, 0xC6150EBA, 0x94E2EA78, 0xA5FC3C53, 0x1E0A2DF4, 0xF2F74EA7, 0x361D2B3D, 0x1939260F, 0x19C27960, 0x5223A708, 0xF71312B6, 0xEBADFE6E, 0xEAC31F66, 0xE3BC4595, 0xA67BC883, 0xB17F37D1, 0x018CFF28, 0xC332DDEF, 0xBE6C5AA5, 0x65582185, 0x68AB9802, 0xEECEA50F, 0xDB2F953B, 0x2AEF7DAD, 0x5B6E2F84, 0x1521B628, 0x29076170, 0xECDD4775, 0x619F1510, 0x13CCA830, 0xEB61BD96, 0x0334FE1E, 0xAA0363CF, 0xB5735C90, 0x4C70A239, 0xD59E9E0B, 0xCBAADE14, 0xEECC86BC, 0x60622CA7, 0x9CAB5CAB, 0xB2F3846E, 0x648B1EAF, 0x19BDF0CA, 0xA02369B9, 0x655ABB50, 0x40685A32, 0x3C2AB4B3, 0x319EE9D5, 0xC021B8F7, 0x9B540B19, 0x875FA099, 0x95F7997E, 0x623D7DA8, 0xF837889A, 0x97E32D77, 0x11ED935F, 0x16681281, 0x0E358829, 0xC7E61FD6, 0x96DEDFA1, 0x7858BA99, 0x57F584A5, 0x1B227263, 0x9B83C3FF, 0x1AC24696, 0xCDB30AEB, 0x532E3054, 0x8FD948E4, 0x6DBC3128, 0x58EBF2EF, 0x34C6FFEA, 0xFE28ED61, 0xEE7C3C73, 0x5D4A14D9, 0xE864B7E3, 0x42105D14, 0x203E13E0, 0x45EEE2B6, 0xA3AAABEA, 0xDB6C4F15, 0xFACB4FD0, 0xC742F442, 0xEF6ABBB5, 0x654F3B1D, 0x41CD2105, 0xD81E799E, 0x86854DC7, 0xE44B476A, 0x3D816250, 0xCF62A1F2, 0x5B8D2646, 0xFC8883A0, 0xC1C7B6A3, 0x7F1524C3, 0x69CB7492, 0x47848A0B, 0x5692B285, 0x095BBF00, 0xAD19489D, 0x1462B174, 0x23820E00, 0x58428D2A, 0x0C55F5EA, 0x1DADF43E, 0x233F7061, 0x3372F092, 0x8D937E41, 0xD65FECF1, 0x6C223BDB, 0x7CDE3759, 0xCBEE7460, 0x4085F2A7, 0xCE77326E, 0xA6078084, 0x19F8509E, 0xE8EFD855, 0x61D99735, 0xA969A7AA, 0xC50C06C2, 0x5A04ABFC, 0x800BCADC, 0x9E447A2E, 0xC3453484, 0xFDD56705, 0x0E1E9EC9, 0xDB73DBD3, 0x105588CD, 0x675FDA79, 0xE3674340, 0xC5C43465, 0x713E38D8, 0x3D28F89E, 0xF16DFF20, 0x153E21E7, 0x8FB03D4A, 0xE6E39F2B, 0xDB83ADF7], [0xE93D5A68, 0x948140F7, 0xF64C261C, 0x94692934, 0x411520F7, 0x7602D4F7, 0xBCF46B2E, 0xD4A20068, 0xD4082471, 0x3320F46A, 0x43B7D4B7, 0x500061AF, 0x1E39F62E, 0x97244546, 0x14214F74, 0xBF8B8840, 0x4D95FC1D, 0x96B591AF, 0x70F4DDD3, 0x66A02F45, 0xBFBC09EC, 0x03BD9785, 0x7FAC6DD0, 0x31CB8504, 0x96EB27B3, 0x55FD3941, 0xDA2547E6, 0xABCA0A9A, 0x28507825, 0x530429F4, 0x0A2C86DA, 0xE9B66DFB, 0x68DC1462, 0xD7486900, 0x680EC0A4, 0x27A18DEE, 0x4F3FFEA2, 0xE887AD8C, 0xB58CE006, 0x7AF4D6B6, 0xAACE1E7C, 0xD3375FEC, 0xCE78A399, 0x406B2A42, 0x20FE9E35, 0xD9F385B9, 0xEE39D7AB, 0x3B124E8B, 0x1DC9FAF7, 0x4B6D1856, 0x26A36631, 0xEAE397B2, 0x3A6EFA74, 0xDD5B4332, 0x6841E7F7, 0xCA7820FB, 0xFB0AF54E, 0xD8FEB397, 0x454056AC, 0xBA489527, 0x55533A3A, 0x20838D87, 0xFE6BA9B7, 0xD096954B, 0x55A867BC, 0xA1159A58, 0xCCA92963, 0x99E1DB33, 0xA62A4A56, 0x3F3125F9, 0x5EF47E1C, 0x9029317C, 0xFDF8E802, 0x04272F70, 0x80BB155C, 0x05282CE3, 0x95C11548, 0xE4C66D22, 0x48C1133F, 0xC70F86DC, 0x07F9C9EE, 0x41041F0F, 0x404779A4, 0x5D886E17, 0x325F51EB, 0xD59BC0D1, 0xF2BCC18F, 0x41113564, 0x257B7834, 0x602A9C60, 0xDFF8E8A3, 0x1F636C1B, 0x0E12B4C2, 0x02E1329E, 0xAF664FD1, 0xCAD18115, 0x6B2395E0, 0x333E92E1, 0x3B240B62, 0xEEBEB922, 0x85B2A20E, 0xE6BA0D99, 0xDE720C8C, 0x2DA2F728, 0xD0127845, 0x95B794FD, 0x647D0862, 0xE7CCF5F0, 0x5449A36F, 0x877D48FA, 0xC39DFD27, 0xF33E8D1E, 0x0A476341, 0x992EFF74, 0x3A6F6EAB, 0xF4F8FD37, 0xA812DC60, 0xA1EBDDF8, 0x991BE14C, 0xDB6E6B0D, 0xC67B5510, 0x6D672C37, 0x2765D43B, 0xDCD0E804, 0xF1290DC7, 0xCC00FFA3, 0xB5390F92, 0x690FED0B, 0x667B9FFB, 0xCEDB7D9C, 0xA091CF0B, 0xD9155EA3, 0xBB132F88, 0x515BAD24, 0x7B9479BF, 0x763BD6EB, 0x37392EB3, 0xCC115979, 0x8026E297, 0xF42E312D, 0x6842ADA7, 0xC66A2B3B, 0x12754CCC, 0x782EF11C, 0x6A124237, 0xB79251E7, 0x06A1BBE6, 0x4BFB6350, 0x1A6B1018, 0x11CAEDFA, 0x3D25BDD8, 0xE2E1C3C9, 0x44421659, 0x0A121386, 0xD90CEC6E, 0xD5ABEA2A, 0x64AF674E, 0xDA86A85F, 0xBEBFE988, 0x64E4C3FE, 0x9DBC8057, 0xF0F7C086, 0x60787BF8, 0x6003604D, 0xD1FD8346, 0xF6381FB0, 0x7745AE04, 0xD736FCCC, 0x83426B33, 0xF01EAB71, 0xB0804187, 0x3C005E5F, 0x77A057BE, 0xBDE8AE24, 0x55464299, 0xBF582E61, 0x4E58F48F, 0xF2DDFDA2, 0xF474EF38, 0x8789BDC2, 0x5366F9C3, 0xC8B38E74, 0xB475F255, 0x46FCD9B9, 0x7AEB2661, 0x8B1DDF84, 0x846A0E79, 0x915F95E2, 0x466E598E, 0x20B45770, 0x8CD55591, 0xC902DE4C, 0xB90BACE1, 0xBB8205D0, 0x11A86248, 0x7574A99E, 0xB77F19B6, 0xE0A9DC09, 0x662D09A1, 0xC4324633, 0xE85A1F02, 0x09F0BE8C, 0x4A99A025, 0x1D6EFE10, 0x1AB93D1D, 0x0BA5A4DF, 0xA186F20F, 0x2868F169, 0xDCB7DA83, 0x573906FE, 0xA1E2CE9B, 0x4FCD7F52, 0x50115E01, 0xA70683FA, 0xA002B5C4, 0x0DE6D027, 0x9AF88C27, 0x773F8641, 0xC3604C06, 0x61A806B5, 0xF0177A28, 0xC0F586E0, 0x006058AA, 0x30DC7D62, 0x11E69ED7, 0x2338EA63, 0x53C2DD94, 0xC2C21634, 0xBBCBEE56, 0x90BCB6DE, 0xEBFC7DA1, 0xCE591D76, 0x6F05E409, 0x4B7C0188, 0x39720A3D, 0x7C927C24, 0x86E3725F, 0x724D9DB9, 0x1AC15BB4, 0xD39EB8FC, 0xED545578, 0x08FCA5B5, 0xD83D7CD3, 0x4DAD0FC4, 0x1E50EF5E, 0xB161E6F8, 0xA28514D9, 0x6C51133C, 0x6FD5C7E7, 0x56E14EC4, 0x362ABFCE, 0xDDC6C837, 0xD79A3234, 0x92638212, 0x670EFA8E, 0x406000E0], [0x3A39CE37, 0xD3FAF5CF, 0xABC27737, 0x5AC52D1B, 0x5CB0679E, 0x4FA33742, 0xD3822740, 0x99BC9BBE, 0xD5118E9D, 0xBF0F7315, 0xD62D1C7E, 0xC700C47B, 0xB78C1B6B, 0x21A19045, 0xB26EB1BE, 0x6A366EB4, 0x5748AB2F, 0xBC946E79, 0xC6A376D2, 0x6549C2C8, 0x530FF8EE, 0x468DDE7D, 0xD5730A1D, 0x4CD04DC6, 0x2939BBDB, 0xA9BA4650, 0xAC9526E8, 0xBE5EE304, 0xA1FAD5F0, 0x6A2D519A, 0x63EF8CE2, 0x9A86EE22, 0xC089C2B8, 0x43242EF6, 0xA51E03AA, 0x9CF2D0A4, 0x83C061BA, 0x9BE96A4D, 0x8FE51550, 0xBA645BD6, 0x2826A2F9, 0xA73A3AE1, 0x4BA99586, 0xEF5562E9, 0xC72FEFD3, 0xF752F7DA, 0x3F046F69, 0x77FA0A59, 0x80E4A915, 0x87B08601, 0x9B09E6AD, 0x3B3EE593, 0xE990FD5A, 0x9E34D797, 0x2CF0B7D9, 0x022B8B51, 0x96D5AC3A, 0x017DA67D, 0xD1CF3ED6, 0x7C7D2D28, 0x1F9F25CF, 0xADF2B89B, 0x5AD6B472, 0x5A88F54C, 0xE029AC71, 0xE019A5E6, 0x47B0ACFD, 0xED93FA9B, 0xE8D3C48D, 0x283B57CC, 0xF8D56629, 0x79132E28, 0x785F0191, 0xED756055, 0xF7960E44, 0xE3D35E8C, 0x15056DD4, 0x88F46DBA, 0x03A16125, 0x0564F0BD, 0xC3EB9E15, 0x3C9057A2, 0x97271AEC, 0xA93A072A, 0x1B3F6D9B, 0x1E6321F5, 0xF59C66FB, 0x26DCF319, 0x7533D928, 0xB155FDF5, 0x03563482, 0x8ABA3CBB, 0x28517711, 0xC20AD9F8, 0xABCC5167, 0xCCAD925F, 0x4DE81751, 0x3830DC8E, 0x379D5862, 0x9320F991, 0xEA7A90C2, 0xFB3E7BCE, 0x5121CE64, 0x774FBE32, 0xA8B6E37E, 0xC3293D46, 0x48DE5369, 0x6413E680, 0xA2AE0810, 0xDD6DB224, 0x69852DFD, 0x09072166, 0xB39A460A, 0x6445C0DD, 0x586CDECF, 0x1C20C8AE, 0x5BBEF7DD, 0x1B588D40, 0xCCD2017F, 0x6BB4E3BB, 0xDDA26A7E, 0x3A59FF45, 0x3E350A44, 0xBCB4CDD5, 0x72EACEA8, 0xFA6484BB, 0x8D6612AE, 0xBF3C6F47, 0xD29BE463, 0x542F5D9E, 0xAEC2771B, 0xF64E6370, 0x740E0D8D, 0xE75B1357, 0xF8721671, 0xAF537D5D, 0x4040CB08, 0x4EB4E2CC, 0x34D2466A, 0x0115AF84, 0xE1B00428, 0x95983A1D, 0x06B89FB4, 0xCE6EA048, 0x6F3F3B82, 0x3520AB82, 0x011A1D4B, 0x277227F8, 0x611560B1, 0xE7933FDC, 0xBB3A792B, 0x344525BD, 0xA08839E1, 0x51CE794B, 0x2F32C9B7, 0xA01FBAC9, 0xE01CC87E, 0xBCC7D1F6, 0xCF0111C3, 0xA1E8AAC7, 0x1A908749, 0xD44FBD9A, 0xD0DADECB, 0xD50ADA38, 0x0339C32A, 0xC6913667, 0x8DF9317C, 0xE0B12B4F, 0xF79E59B7, 0x43F5BB3A, 0xF2D519FF, 0x27D9459C, 0xBF97222C, 0x15E6FC2A, 0x0F91FC71, 0x9B941525, 0xFAE59361, 0xCEB69CEB, 0xC2A86459, 0x12BAA8D1, 0xB6C1075E, 0xE3056A0C, 0x10D25065, 0xCB03A442, 0xE0EC6E0E, 0x1698DB3B, 0x4C98A0BE, 0x3278E964, 0x9F1F9532, 0xE0D392DF, 0xD3A0342B, 0x8971F21E, 0x1B0A7441, 0x4BA3348C, 0xC5BE7120, 0xC37632D8, 0xDF359F8D, 0x9B992F2E, 0xE60B6F47, 0x0FE3F11D, 0xE54CDA54, 0x1EDAD891, 0xCE6279CF, 0xCD3E7E6F, 0x1618B166, 0xFD2C1D05, 0x848FD2C5, 0xF6FB2299, 0xF523F357, 0xA6327623, 0x93A83531, 0x56CCCD02, 0xACF08162, 0x5A75EBB5, 0x6E163697, 0x88D273CC, 0xDE966292, 0x81B949D0, 0x4C50901B, 0x71C65614, 0xE6C6C7BD, 0x327A140A, 0x45E1D006, 0xC3F27B9A, 0xC9AA53FD, 0x62A80F00, 0xBB25BFE2, 0x35BDD2F6, 0x71126905, 0xB2040222, 0xB6CBCF7C, 0xCD769C2B, 0x53113EC0, 0x1640E3D3, 0x38ABBD60, 0x2547ADF0, 0xBA38209C, 0xF746CE76, 0x77AFA1C5, 0x20756060, 0x85CBFE4E, 0x8AE88DD8, 0x7AAAF9B0, 0x4CF9AA7E, 0x1948C25C, 0x02FB8A8C, 0x01C36AE4, 0xD6EBE1F9, 0x90D4F869, 0xA65CDEA0, 0x3F09252D, 0xC208E69F, 0xB74E6132, 0xCE77E25B, 0x578FDFE3, 0x3AC372E6]];
      var blowfishCtx = {
        pbox: [],
        sbox: []
      };
      function f(ctx, x) {
        var a = x >> 24 & 0xFF;
        var b = x >> 16 & 0xFF;
        var c = x >> 8 & 0xFF;
        var d = x & 0xFF;
        var y = ctx.sbox[0][a] + ctx.sbox[1][b];
        y = y ^ ctx.sbox[2][c];
        y = y + ctx.sbox[3][d];
        return y;
      }
      function blowfishEncrypt(ctx, left, right) {
        var Xl = left;
        var Xr = right;
        var temp;
        for (var i = 0; i < N; ++i) {
          Xl = Xl ^ ctx.pbox[i];
          Xr = f(ctx, Xl) ^ Xr;
          temp = Xl;
          Xl = Xr;
          Xr = temp;
        }
        temp = Xl;
        Xl = Xr;
        Xr = temp;
        Xr = Xr ^ ctx.pbox[N];
        Xl = Xl ^ ctx.pbox[N + 1];
        return {
          left: Xl,
          right: Xr
        };
      }
      function blowfishDecrypt(ctx, left, right) {
        var Xl = left;
        var Xr = right;
        var temp;
        for (var i = N + 1; i > 1; --i) {
          Xl = Xl ^ ctx.pbox[i];
          Xr = f(ctx, Xl) ^ Xr;
          temp = Xl;
          Xl = Xr;
          Xr = temp;
        }
        temp = Xl;
        Xl = Xr;
        Xr = temp;
        Xr = Xr ^ ctx.pbox[1];
        Xl = Xl ^ ctx.pbox[0];
        return {
          left: Xl,
          right: Xr
        };
      }

      /**
      * Initialization ctx's pbox and sbox.
      *
      * @param {Object} ctx The object has pbox and sbox.
      * @param {Array} key An array of 32-bit words.
      * @param {int} keysize The length of the key.
      *
      * @example
      *
      *     blowfishInit(BLOWFISH_CTX, key, 128/32);
      */
      function blowfishInit(ctx, key, keysize) {
        for (var Row = 0; Row < 4; Row++) {
          ctx.sbox[Row] = [];
          for (var Col = 0; Col < 256; Col++) {
            ctx.sbox[Row][Col] = ORIG_S[Row][Col];
          }
        }
        var keyIndex = 0;
        for (var index = 0; index < N + 2; index++) {
          ctx.pbox[index] = ORIG_P[index] ^ key[keyIndex];
          keyIndex++;
          if (keyIndex >= keysize) {
            keyIndex = 0;
          }
        }
        var data1 = 0;
        var data2 = 0;
        var res = 0;
        for (var i = 0; i < N + 2; i += 2) {
          res = blowfishEncrypt(ctx, data1, data2);
          data1 = res.left;
          data2 = res.right;
          ctx.pbox[i] = data1;
          ctx.pbox[i + 1] = data2;
        }
        for (var _i = 0; _i < 4; _i++) {
          for (var j = 0; j < 256; j += 2) {
            res = blowfishEncrypt(ctx, data1, data2);
            data1 = res.left;
            data2 = res.right;
            ctx.sbox[_i][j] = data1;
            ctx.sbox[_i][j + 1] = data2;
          }
        }
        return true;
      }

      /**
       * Blowfish block cipher algorithm.
       */
      var BlowfishAlgo = exports('BlowfishAlgo', /*#__PURE__*/function (_BlockCipher) {
        _inheritsLoose(BlowfishAlgo, _BlockCipher);
        function BlowfishAlgo(xformMode, key, cfg) {
          var _this;
          _this = _BlockCipher.call(this, xformMode, key, cfg) || this;

          // blickSize is an instance field and should set in constructor.
          _this.blockSize = 64 / 32;
          return _this;
        }
        var _proto = BlowfishAlgo.prototype;
        _proto._doReset = function _doReset() {
          // Skip reset of nRounds has been set before and key did not change
          if (this._keyPriorReset === this._key) {
            return;
          }

          // Shortcuts
          var key = this._keyPriorReset = this._key;
          var keyWords = key.words;
          var keySize = key.sigBytes / 4;

          //Initialization pbox and sbox
          blowfishInit(blowfishCtx, keyWords, keySize);
        };
        _proto.encryptBlock = function encryptBlock(M, offset) {
          var res = blowfishEncrypt(blowfishCtx, M[offset], M[offset + 1]);
          M[offset] = res.left;
          M[offset + 1] = res.right;
        };
        _proto.decryptBlock = function decryptBlock(M, offset) {
          var res = blowfishDecrypt(blowfishCtx, M[offset], M[offset + 1]);
          M[offset] = res.left;
          M[offset + 1] = res.right;
        };
        return BlowfishAlgo;
      }(BlockCipher));
      BlowfishAlgo.keySize = 128 / 32;
      BlowfishAlgo.ivSize = 64 / 32;
      // blickSize is an instance field and should set in constructor.

      /**
       * Shortcut functions to the cipher's object interface.
       *
       * @example
       *
       *     var ciphertext = CryptoJS.Blowfish.encrypt(message, key, cfg);
       *     var plaintext  = CryptoJS.Blowfish.decrypt(ciphertext, key, cfg);
       */
      var Blowfish = exports('Blowfish', BlockCipher._createHelper(BlowfishAlgo));
    }
  };
});

System.register("chunks:///_virtual/call-with-safe-iteration-closing.js", ['./cjs-loader.mjs', './an-object.js', './iterator-close.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var anObject = require('../internals/an-object');
        var iteratorClose = require('../internals/iterator-close');

        // call something on iterator step with safe closing on error
        module.exports = function (iterator, fn, value, ENTRIES) {
          try {
            return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
          } catch (error) {
            iteratorClose(iterator, 'throw', error);
          }
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/an-object': __cjsMetaURL$1,
          '../internals/iterator-close': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/check-correctness-of-iteration.js", ['./cjs-loader.mjs', './well-known-symbol.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var ITERATOR = wellKnownSymbol('iterator');
        var SAFE_CLOSING = false;
        try {
          var called = 0;
          var iteratorWithReturn = {
            next: function next() {
              return {
                done: !!called++
              };
            },
            'return': function _return() {
              SAFE_CLOSING = true;
            }
          };
          iteratorWithReturn[ITERATOR] = function () {
            return this;
          };
          // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing
          Array.from(iteratorWithReturn, function () {
            throw 2;
          });
        } catch (error) {/* empty */}
        module.exports = function (exec, SKIP_CLOSING) {
          try {
            if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
          } catch (error) {
            return false;
          } // workaround of old WebKit + `eval` bug
          var ITERATION_SUPPORT = false;
          try {
            var object = {};
            object[ITERATOR] = function () {
              return {
                next: function next() {
                  return {
                    done: ITERATION_SUPPORT = true
                  };
                }
              };
            };
            exec(object);
          } catch (error) {/* empty */}
          return ITERATION_SUPPORT;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/well-known-symbol': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/cipher-core.js", ['./rollupPluginModLoBabelHelpers.js', './core.js', './enc-base64.js', './evpkdf.js'], function (exports) {
  var _inheritsLoose, Base, BufferedBlockAlgorithm, WordArray, Base64, EvpKDFAlgo;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      Base = module.Base;
      BufferedBlockAlgorithm = module.BufferedBlockAlgorithm;
      WordArray = module.WordArray;
    }, function (module) {
      Base64 = module.Base64;
    }, function (module) {
      EvpKDFAlgo = module.EvpKDFAlgo;
    }],
    execute: function () {
      /**
       * Abstract base cipher template.
       *
       * @property {number} keySize This cipher's key size. Default: 4 (128 bits)
       * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)
       * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.
       * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.
       */
      var Cipher = exports('Cipher', /*#__PURE__*/function (_BufferedBlockAlgorit) {
        _inheritsLoose(Cipher, _BufferedBlockAlgorit);
        /**
         * Initializes a newly created cipher.
         *
         * @param {number} xformMode Either the encryption or decryption transormation mode constant.
         * @param {WordArray} key The key.
         * @param {Object} cfg (Optional) The configuration options to use for this operation.
         *
         * @example
         *
         *     const cipher = CryptoJS.algo.AES.create(
         *       CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray }
         *     );
         */
        function Cipher(xformMode, key, cfg) {
          var _this;
          _this = _BufferedBlockAlgorit.call(this) || this;

          /**
           * Configuration options.
           *
           * @property {WordArray} iv The IV to use for this operation.
           */
          _this.cfg = Object.assign(new Base(), cfg);

          // Store transform mode and key
          _this._xformMode = xformMode;
          _this._key = key;

          // Set initial values
          _this.reset();
          return _this;
        }

        /**
         * Creates this cipher in encryption mode.
         *
         * @param {WordArray} key The key.
         * @param {Object} cfg (Optional) The configuration options to use for this operation.
         *
         * @return {Cipher} A cipher instance.
         *
         * @static
         *
         * @example
         *
         *     const cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });
         */
        Cipher.createEncryptor = function createEncryptor(key, cfg) {
          return this.create(this._ENC_XFORM_MODE, key, cfg);
        }

        /**
         * Creates this cipher in decryption mode.
         *
         * @param {WordArray} key The key.
         * @param {Object} cfg (Optional) The configuration options to use for this operation.
         *
         * @return {Cipher} A cipher instance.
         *
         * @static
         *
         * @example
         *
         *     const cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });
         */;
        Cipher.createDecryptor = function createDecryptor(key, cfg) {
          return this.create(this._DEC_XFORM_MODE, key, cfg);
        }

        /**
         * Creates shortcut functions to a cipher's object interface.
         *
         * @param {Cipher} cipher The cipher to create a helper for.
         *
         * @return {Object} An object with encrypt and decrypt shortcut functions.
         *
         * @static
         *
         * @example
         *
         *     const AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);
         */;
        Cipher._createHelper = function _createHelper(SubCipher) {
          var selectCipherStrategy = function selectCipherStrategy(key) {
            if (typeof key === 'string') {
              return PasswordBasedCipher;
            }
            return SerializableCipher;
          };
          return {
            encrypt: function encrypt(message, key, cfg) {
              return selectCipherStrategy(key).encrypt(SubCipher, message, key, cfg);
            },
            decrypt: function decrypt(ciphertext, key, cfg) {
              return selectCipherStrategy(key).decrypt(SubCipher, ciphertext, key, cfg);
            }
          };
        }

        /**
         * Resets this cipher to its initial state.
         *
         * @example
         *
         *     cipher.reset();
         */;
        var _proto = Cipher.prototype;
        _proto.reset = function reset() {
          // Reset data buffer
          _BufferedBlockAlgorit.prototype.reset.call(this);

          // Perform concrete-cipher logic
          this._doReset();
        }

        /**
         * Adds data to be encrypted or decrypted.
         *
         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.
         *
         * @return {WordArray} The data after processing.
         *
         * @example
         *
         *     const encrypted = cipher.process('data');
         *     const encrypted = cipher.process(wordArray);
         */;
        _proto.process = function process(dataUpdate) {
          // Append
          this._append(dataUpdate);

          // Process available blocks
          return this._process();
        }

        /**
         * Finalizes the encryption or decryption process.
         * Note that the finalize operation is effectively a destructive, read-once operation.
         *
         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.
         *
         * @return {WordArray} The data after final processing.
         *
         * @example
         *
         *     const encrypted = cipher.finalize();
         *     const encrypted = cipher.finalize('data');
         *     const encrypted = cipher.finalize(wordArray);
         */;
        _proto.finalize = function finalize(dataUpdate) {
          // Final data update
          if (dataUpdate) {
            this._append(dataUpdate);
          }

          // Perform concrete-cipher logic
          var finalProcessedData = this._doFinalize();
          return finalProcessedData;
        };
        return Cipher;
      }(BufferedBlockAlgorithm));
      Cipher._ENC_XFORM_MODE = 1;
      Cipher._DEC_XFORM_MODE = 2;
      Cipher.keySize = 128 / 32;
      Cipher.ivSize = 128 / 32;

      /**
       * Abstract base stream cipher template.
       *
       * @property {number} blockSize
       *
       *     The number of 32-bit words this cipher operates on. Default: 1 (32 bits)
       */
      var StreamCipher = exports('StreamCipher', /*#__PURE__*/function (_Cipher) {
        _inheritsLoose(StreamCipher, _Cipher);
        function StreamCipher() {
          var _this2;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this2 = _Cipher.call.apply(_Cipher, [this].concat(args)) || this;
          _this2.blockSize = 1;
          return _this2;
        }
        var _proto2 = StreamCipher.prototype;
        _proto2._doFinalize = function _doFinalize() {
          // Process partial blocks
          var finalProcessedBlocks = this._process(!!'flush');
          return finalProcessedBlocks;
        };
        return StreamCipher;
      }(Cipher));

      /**
       * Abstract base block cipher mode template.
       */
      var BlockCipherMode = exports('BlockCipherMode', /*#__PURE__*/function (_Base) {
        _inheritsLoose(BlockCipherMode, _Base);
        /**
         * Initializes a newly created mode.
         *
         * @param {Cipher} cipher A block cipher instance.
         * @param {Array} iv The IV words.
         *
         * @example
         *
         *     const mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);
         */
        function BlockCipherMode(cipher, iv) {
          var _this3;
          _this3 = _Base.call(this) || this;
          _this3._cipher = cipher;
          _this3._iv = iv;
          return _this3;
        }

        /**
         * Creates this mode for encryption.
         *
         * @param {Cipher} cipher A block cipher instance.
         * @param {Array} iv The IV words.
         *
         * @static
         *
         * @example
         *
         *     const mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);
         */
        BlockCipherMode.createEncryptor = function createEncryptor(cipher, iv) {
          return this.Encryptor.create(cipher, iv);
        }

        /**
         * Creates this mode for decryption.
         *
         * @param {Cipher} cipher A block cipher instance.
         * @param {Array} iv The IV words.
         *
         * @static
         *
         * @example
         *
         *     const mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);
         */;
        BlockCipherMode.createDecryptor = function createDecryptor(cipher, iv) {
          return this.Decryptor.create(cipher, iv);
        };
        return BlockCipherMode;
      }(Base));
      function xorBlock(words, offset, blockSize) {
        var _words = words;
        var block;

        // Shortcut
        var iv = this._iv;

        // Choose mixing block
        if (iv) {
          block = iv;

          // Remove IV for subsequent blocks
          this._iv = undefined;
        } else {
          block = this._prevBlock;
        }

        // XOR blocks
        for (var i = 0; i < blockSize; i += 1) {
          _words[offset + i] ^= block[i];
        }
      }

      /**
       * Cipher Block Chaining mode.
       */

      /**
       * Abstract base CBC mode.
       */
      var CBC = exports('CBC', /*#__PURE__*/function (_BlockCipherMode) {
        _inheritsLoose(CBC, _BlockCipherMode);
        function CBC() {
          return _BlockCipherMode.apply(this, arguments) || this;
        }
        return CBC;
      }(BlockCipherMode));
      /**
       * CBC encryptor.
       */
      CBC.Encryptor = /*#__PURE__*/function (_CBC) {
        _inheritsLoose(_class, _CBC);
        function _class() {
          return _CBC.apply(this, arguments) || this;
        }
        var _proto3 = _class.prototype;
        /**
         * Processes the data block at offset.
         *
         * @param {Array} words The data words to operate on.
         * @param {number} offset The offset where the block starts.
         *
         * @example
         *
         *     mode.processBlock(data.words, offset);
         */
        _proto3.processBlock = function processBlock(words, offset) {
          // Shortcuts
          var cipher = this._cipher;
          var blockSize = cipher.blockSize;

          // XOR and encrypt
          xorBlock.call(this, words, offset, blockSize);
          cipher.encryptBlock(words, offset);

          // Remember this block to use with next block
          this._prevBlock = words.slice(offset, offset + blockSize);
        };
        return _class;
      }(CBC);
      /**
       * CBC decryptor.
       */
      CBC.Decryptor = /*#__PURE__*/function (_CBC2) {
        _inheritsLoose(_class2, _CBC2);
        function _class2() {
          return _CBC2.apply(this, arguments) || this;
        }
        var _proto4 = _class2.prototype;
        /**
         * Processes the data block at offset.
         *
         * @param {Array} words The data words to operate on.
         * @param {number} offset The offset where the block starts.
         *
         * @example
         *
         *     mode.processBlock(data.words, offset);
         */
        _proto4.processBlock = function processBlock(words, offset) {
          // Shortcuts
          var cipher = this._cipher;
          var blockSize = cipher.blockSize;

          // Remember this block to use with next block
          var thisBlock = words.slice(offset, offset + blockSize);

          // Decrypt and XOR
          cipher.decryptBlock(words, offset);
          xorBlock.call(this, words, offset, blockSize);

          // This block becomes the previous block
          this._prevBlock = thisBlock;
        };
        return _class2;
      }(CBC);

      /**
       * PKCS #5/7 padding strategy.
       */
      var Pkcs7 = exports('Pkcs7', {
        /**
         * Pads data using the algorithm defined in PKCS #5/7.
         *
         * @param {WordArray} data The data to pad.
         * @param {number} blockSize The multiple that the data should be padded to.
         *
         * @static
         *
         * @example
         *
         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);
         */
        pad: function pad(data, blockSize) {
          // Shortcut
          var blockSizeBytes = blockSize * 4;

          // Count padding bytes
          var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;

          // Create padding word
          var paddingWord = nPaddingBytes << 24 | nPaddingBytes << 16 | nPaddingBytes << 8 | nPaddingBytes;

          // Create padding
          var paddingWords = [];
          for (var i = 0; i < nPaddingBytes; i += 4) {
            paddingWords.push(paddingWord);
          }
          var padding = WordArray.create(paddingWords, nPaddingBytes);

          // Add padding
          data.concat(padding);
        },
        /**
         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.
         *
         * @param {WordArray} data The data to unpad.
         *
         * @static
         *
         * @example
         *
         *     CryptoJS.pad.Pkcs7.unpad(wordArray);
         */
        unpad: function unpad(data) {
          var _data = data;

          // Get number of padding bytes from last byte
          var nPaddingBytes = _data.words[_data.sigBytes - 1 >>> 2] & 0xff;

          // Remove padding
          _data.sigBytes -= nPaddingBytes;
        }
      });

      /**
       * Abstract base block cipher template.
       *
       * @property {number} blockSize
       *
       *    The number of 32-bit words this cipher operates on. Default: 4 (128 bits)
       */
      var BlockCipher = exports('BlockCipher', /*#__PURE__*/function (_Cipher2) {
        _inheritsLoose(BlockCipher, _Cipher2);
        function BlockCipher(xformMode, key, cfg) {
          var _this4;
          /**
           * Configuration options.
           *
           * @property {Mode} mode The block mode to use. Default: CBC
           * @property {Padding} padding The padding strategy to use. Default: Pkcs7
           */
          _this4 = _Cipher2.call(this, xformMode, key, Object.assign({
            mode: CBC,
            padding: Pkcs7
          }, cfg)) || this;
          _this4.blockSize = 128 / 32;
          return _this4;
        }
        var _proto5 = BlockCipher.prototype;
        _proto5.reset = function reset() {
          var modeCreator;

          // Reset cipher
          _Cipher2.prototype.reset.call(this);

          // Shortcuts
          var cfg = this.cfg;
          var iv = cfg.iv,
            mode = cfg.mode;

          // Reset block mode
          if (this._xformMode === this.constructor._ENC_XFORM_MODE) {
            modeCreator = mode.createEncryptor;
          } else /* if (this._xformMode == this._DEC_XFORM_MODE) */{
              modeCreator = mode.createDecryptor;
              // Keep at least one block in the buffer for unpadding
              this._minBufferSize = 1;
            }
          this._mode = modeCreator.call(mode, this, iv && iv.words);
          this._mode.__creator = modeCreator;
        };
        _proto5._doProcessBlock = function _doProcessBlock(words, offset) {
          this._mode.processBlock(words, offset);
        };
        _proto5._doFinalize = function _doFinalize() {
          var finalProcessedBlocks;

          // Shortcut
          var padding = this.cfg.padding;

          // Finalize
          if (this._xformMode === this.constructor._ENC_XFORM_MODE) {
            // Pad data
            padding.pad(this._data, this.blockSize);

            // Process final blocks
            finalProcessedBlocks = this._process(!!'flush');
          } else /* if (this._xformMode == this._DEC_XFORM_MODE) */{
              // Process final blocks
              finalProcessedBlocks = this._process(!!'flush');

              // Unpad data
              padding.unpad(finalProcessedBlocks);
            }
          return finalProcessedBlocks;
        };
        return BlockCipher;
      }(Cipher));

      /**
       * A collection of cipher parameters.
       *
       * @property {WordArray} ciphertext The raw ciphertext.
       * @property {WordArray} key The key to this ciphertext.
       * @property {WordArray} iv The IV used in the ciphering operation.
       * @property {WordArray} salt The salt used with a key derivation function.
       * @property {Cipher} algorithm The cipher algorithm.
       * @property {Mode} mode The block mode used in the ciphering operation.
       * @property {Padding} padding The padding scheme used in the ciphering operation.
       * @property {number} blockSize The block size of the cipher.
       * @property {Format} formatter
       *    The default formatting strategy to convert this cipher params object to a string.
       */
      var CipherParams = exports('CipherParams', /*#__PURE__*/function (_Base2) {
        _inheritsLoose(CipherParams, _Base2);
        /**
         * Initializes a newly created cipher params object.
         *
         * @param {Object} cipherParams An object with any of the possible cipher parameters.
         *
         * @example
         *
         *     var cipherParams = CryptoJS.lib.CipherParams.create({
         *         ciphertext: ciphertextWordArray,
         *         key: keyWordArray,
         *         iv: ivWordArray,
         *         salt: saltWordArray,
         *         algorithm: CryptoJS.algo.AES,
         *         mode: CryptoJS.mode.CBC,
         *         padding: CryptoJS.pad.PKCS7,
         *         blockSize: 4,
         *         formatter: CryptoJS.format.OpenSSL
         *     });
         */
        function CipherParams(cipherParams) {
          var _this5;
          _this5 = _Base2.call(this) || this;
          _this5.mixIn(cipherParams);
          return _this5;
        }

        /**
         * Converts this cipher params object to a string.
         *
         * @param {Format} formatter (Optional) The formatting strategy to use.
         *
         * @return {string} The stringified cipher params.
         *
         * @throws Error If neither the formatter nor the default formatter is set.
         *
         * @example
         *
         *     var string = cipherParams + '';
         *     var string = cipherParams.toString();
         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);
         */
        var _proto6 = CipherParams.prototype;
        _proto6.toString = function toString(formatter) {
          return (formatter || this.formatter).stringify(this);
        };
        return CipherParams;
      }(Base));

      /**
       * OpenSSL formatting strategy.
       */
      var OpenSSLFormatter = exports('OpenSSLFormatter', {
        /**
         * Converts a cipher params object to an OpenSSL-compatible string.
         *
         * @param {CipherParams} cipherParams The cipher params object.
         *
         * @return {string} The OpenSSL-compatible string.
         *
         * @static
         *
         * @example
         *
         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);
         */
        stringify: function stringify(cipherParams) {
          var wordArray;

          // Shortcuts
          var ciphertext = cipherParams.ciphertext,
            salt = cipherParams.salt;

          // Format
          if (salt) {
            wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);
          } else {
            wordArray = ciphertext;
          }
          return wordArray.toString(Base64);
        },
        /**
         * Converts an OpenSSL-compatible string to a cipher params object.
         *
         * @param {string} openSSLStr The OpenSSL-compatible string.
         *
         * @return {CipherParams} The cipher params object.
         *
         * @static
         *
         * @example
         *
         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);
         */
        parse: function parse(openSSLStr) {
          var salt;

          // Parse base64
          var ciphertext = Base64.parse(openSSLStr);

          // Shortcut
          var ciphertextWords = ciphertext.words;

          // Test for salt
          if (ciphertextWords[0] === 0x53616c74 && ciphertextWords[1] === 0x65645f5f) {
            // Extract salt
            salt = WordArray.create(ciphertextWords.slice(2, 4));

            // Remove salt from ciphertext
            ciphertextWords.splice(0, 4);
            ciphertext.sigBytes -= 16;
          }
          return CipherParams.create({
            ciphertext: ciphertext,
            salt: salt
          });
        }
      });

      /**
       * A cipher wrapper that returns ciphertext as a serializable cipher params object.
       */
      var SerializableCipher = exports('SerializableCipher', /*#__PURE__*/function (_Base3) {
        _inheritsLoose(SerializableCipher, _Base3);
        function SerializableCipher() {
          return _Base3.apply(this, arguments) || this;
        }
        /**
         * Encrypts a message.
         *
         * @param {Cipher} cipher The cipher algorithm to use.
         * @param {WordArray|string} message The message to encrypt.
         * @param {WordArray} key The key.
         * @param {Object} cfg (Optional) The configuration options to use for this operation.
         *
         * @return {CipherParams} A cipher params object.
         *
         * @static
         *
         * @example
         *
         *     var ciphertextParams = CryptoJS.lib.SerializableCipher
         *       .encrypt(CryptoJS.algo.AES, message, key);
         *     var ciphertextParams = CryptoJS.lib.SerializableCipher
         *       .encrypt(CryptoJS.algo.AES, message, key, { iv: iv });
         *     var ciphertextParams = CryptoJS.lib.SerializableCipher
         *       .encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });
         */
        SerializableCipher.encrypt = function encrypt(cipher, message, key, cfg) {
          // Apply config defaults
          var _cfg = Object.assign(new Base(), this.cfg, cfg);

          // Encrypt
          var encryptor = cipher.createEncryptor(key, _cfg);
          var ciphertext = encryptor.finalize(message);

          // Shortcut
          var cipherCfg = encryptor.cfg;

          // Create and return serializable cipher params
          return CipherParams.create({
            ciphertext: ciphertext,
            key: key,
            iv: cipherCfg.iv,
            algorithm: cipher,
            mode: cipherCfg.mode,
            padding: cipherCfg.padding,
            blockSize: encryptor.blockSize,
            formatter: _cfg.format
          });
        }

        /**
         * Decrypts serialized ciphertext.
         *
         * @param {Cipher} cipher The cipher algorithm to use.
         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
         * @param {WordArray} key The key.
         * @param {Object} cfg (Optional) The configuration options to use for this operation.
         *
         * @return {WordArray} The plaintext.
         *
         * @static
         *
         * @example
         *
         *     var plaintext = CryptoJS.lib.SerializableCipher
         *       .decrypt(CryptoJS.algo.AES, formattedCiphertext, key,
         *         { iv: iv, format: CryptoJS.format.OpenSSL });
         *     var plaintext = CryptoJS.lib.SerializableCipher
         *       .decrypt(CryptoJS.algo.AES, ciphertextParams, key,
         *         { iv: iv, format: CryptoJS.format.OpenSSL });
         */;
        SerializableCipher.decrypt = function decrypt(cipher, ciphertext, key, cfg) {
          var _ciphertext = ciphertext;

          // Apply config defaults
          var _cfg = Object.assign(new Base(), this.cfg, cfg);

          // Convert string to CipherParams
          _ciphertext = this._parse(_ciphertext, _cfg.format);

          // Decrypt
          var plaintext = cipher.createDecryptor(key, _cfg).finalize(_ciphertext.ciphertext);
          return plaintext;
        }

        /**
         * Converts serialized ciphertext to CipherParams,
         * else assumed CipherParams already and returns ciphertext unchanged.
         *
         * @param {CipherParams|string} ciphertext The ciphertext.
         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.
         *
         * @return {CipherParams} The unserialized ciphertext.
         *
         * @static
         *
         * @example
         *
         *     var ciphertextParams = CryptoJS.lib.SerializableCipher
         *       ._parse(ciphertextStringOrParams, format);
         */;
        SerializableCipher._parse = function _parse(ciphertext, format) {
          if (typeof ciphertext === 'string') {
            return format.parse(ciphertext, this);
          }
          return ciphertext;
        };
        return SerializableCipher;
      }(Base));
      /**
       * Configuration options.
       *
       * @property {Formatter} format
       *
       *    The formatting strategy to convert cipher param objects to and from a string.
       *    Default: OpenSSL
       */
      SerializableCipher.cfg = Object.assign(new Base(), {
        format: OpenSSLFormatter
      });

      /**
       * OpenSSL key derivation function.
       */
      var OpenSSLKdf = exports('OpenSSLKdf', {
        /**
         * Derives a key and IV from a password.
         *
         * @param {string} password The password to derive from.
         * @param {number} keySize The size in words of the key to generate.
         * @param {number} ivSize The size in words of the IV to generate.
         * @param {WordArray|string} salt
         *     (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.
         *
         * @return {CipherParams} A cipher params object with the key, IV, and salt.
         *
         * @static
         *
         * @example
         *
         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);
         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');
         */
        execute: function execute(password, keySize, ivSize, salt, hasher) {
          var _salt = salt;

          // Generate random salt
          if (!_salt) {
            _salt = WordArray.random(64 / 8);
          }

          // Derive key and IV
          var key;
          if (!hasher) {
            key = EvpKDFAlgo.create({
              keySize: keySize + ivSize
            }).compute(password, _salt);
          } else {
            key = EvpKDFAlgo.create({
              keySize: keySize + ivSize,
              hasher: hasher
            }).compute(password, _salt);
          }

          // Separate key and IV
          var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);
          key.sigBytes = keySize * 4;

          // Return params
          return CipherParams.create({
            key: key,
            iv: iv,
            salt: _salt
          });
        }
      });

      /**
       * A serializable cipher wrapper that derives the key from a password,
       * and returns ciphertext as a serializable cipher params object.
       */
      var PasswordBasedCipher = exports('PasswordBasedCipher', /*#__PURE__*/function (_SerializableCipher) {
        _inheritsLoose(PasswordBasedCipher, _SerializableCipher);
        function PasswordBasedCipher() {
          return _SerializableCipher.apply(this, arguments) || this;
        }
        /**
         * Encrypts a message using a password.
         *
         * @param {Cipher} cipher The cipher algorithm to use.
         * @param {WordArray|string} message The message to encrypt.
         * @param {string} password The password.
         * @param {Object} cfg (Optional) The configuration options to use for this operation.
         *
         * @return {CipherParams} A cipher params object.
         *
         * @static
         *
         * @example
         *
         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher
         *       .encrypt(CryptoJS.algo.AES, message, 'password');
         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher
         *       .encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });
         */
        PasswordBasedCipher.encrypt = function encrypt(cipher, message, password, cfg) {
          // Apply config defaults
          var _cfg = Object.assign(new Base(), this.cfg, cfg);

          // Derive key and other params
          var derivedParams = _cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, _cfg.salt, _cfg.hasher);

          // Add IV to config
          _cfg.iv = derivedParams.iv;

          // Encrypt
          var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, _cfg);

          // Mix in derived params
          ciphertext.mixIn(derivedParams);
          return ciphertext;
        }

        /**
         * Decrypts serialized ciphertext using a password.
         *
         * @param {Cipher} cipher The cipher algorithm to use.
         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
         * @param {string} password The password.
         * @param {Object} cfg (Optional) The configuration options to use for this operation.
         *
         * @return {WordArray} The plaintext.
         *
         * @static
         *
         * @example
         *
         *     var plaintext = CryptoJS.lib.PasswordBasedCipher
         *       .decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password',
         *         { format: CryptoJS.format.OpenSSL });
         *     var plaintext = CryptoJS.lib.PasswordBasedCipher
         *       .decrypt(CryptoJS.algo.AES, ciphertextParams, 'password',
         *         { format: CryptoJS.format.OpenSSL });
         */;
        PasswordBasedCipher.decrypt = function decrypt(cipher, ciphertext, password, cfg) {
          var _ciphertext = ciphertext;

          // Apply config defaults
          var _cfg = Object.assign(new Base(), this.cfg, cfg);

          // Convert string to CipherParams
          _ciphertext = this._parse(_ciphertext, _cfg.format);

          // Derive key and other params
          var derivedParams = _cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, _ciphertext.salt, _cfg.hasher);

          // Add IV to config
          _cfg.iv = derivedParams.iv;

          // Decrypt
          var plaintext = SerializableCipher.decrypt.call(this, cipher, _ciphertext, derivedParams.key, _cfg);
          return plaintext;
        };
        return PasswordBasedCipher;
      }(SerializableCipher));
      /**
       * Configuration options.
       *
       * @property {KDF} kdf
       *     The key derivation function to use to generate a key and IV from a password.
       *     Default: OpenSSL
       */
      PasswordBasedCipher.cfg = Object.assign(SerializableCipher.cfg, {
        kdf: OpenSSLKdf
      });
    }
  };
});

System.register("chunks:///_virtual/cjs-loader.mjs", [], function (exports) {
  return {
    execute: function () {
      var CjsLoader = /*#__PURE__*/function () {
        function CjsLoader() {
          this._registry = {};
          this._moduleCache = {};
        }

        /**
         * Defines a CommonJS module.
         * @param id Module ID.
         * @param factory The factory.
         * @param resolveMap An object or a function returning object which records the module specifier resolve result.
         * The later is called as "deferred resolve map" and would be invocated right before CommonJS code execution.
         */
        var _proto = CjsLoader.prototype;
        _proto.define = function define(id, factory, resolveMap) {
          this._registry[id] = {
            factory: factory,
            resolveMap: resolveMap
          };
        }

        /**
         * Requires a CommonJS module.
         * @param id Module ID.
         * @returns The module's `module.exports`.
         */;
        _proto.require = function require(id) {
          return this._require(id);
        };
        _proto.throwInvalidWrapper = function throwInvalidWrapper(requestTarget, from) {
          throw new Error("Module '" + requestTarget + "' imported from '" + from + "' is expected be an ESM-wrapped CommonJS module but it doesn't.");
        };
        _proto._require = function _require(id, parent) {
          var cachedModule = this._moduleCache[id];
          if (cachedModule) {
            return cachedModule.exports;
          }
          var module = {
            id: id,
            exports: {}
          };
          this._moduleCache[id] = module;
          this._tryModuleLoad(module, id);
          return module.exports;
        };
        _proto._resolve = function _resolve(specifier, parent) {
          return this._resolveFromInfos(specifier, parent) || this._throwUnresolved(specifier, parent);
        };
        _proto._resolveFromInfos = function _resolveFromInfos(specifier, parent) {
          var _cjsInfos$parent$reso, _cjsInfos$parent;
          if (specifier in cjsInfos) {
            return specifier;
          }
          if (!parent) {
            return;
          }
          return (_cjsInfos$parent$reso = (_cjsInfos$parent = cjsInfos[parent]) == null ? void 0 : _cjsInfos$parent.resolveCache[specifier]) != null ? _cjsInfos$parent$reso : undefined;
        };
        _proto._tryModuleLoad = function _tryModuleLoad(module, id) {
          var threw = true;
          try {
            this._load(module, id);
            threw = false;
          } finally {
            if (threw) {
              delete this._moduleCache[id];
            }
          }
        };
        _proto._load = function _load(module, id) {
          var _this$_loadWrapper = this._loadWrapper(id),
            factory = _this$_loadWrapper.factory,
            resolveMap = _this$_loadWrapper.resolveMap;
          var vendorRequire = this._createRequire(module);
          var require = resolveMap ? this._createRequireWithResolveMap(typeof resolveMap === 'function' ? resolveMap() : resolveMap, vendorRequire) : vendorRequire;
          factory(module.exports, require, module);
        };
        _proto._loadWrapper = function _loadWrapper(id) {
          if (id in this._registry) {
            return this._registry[id];
          } else {
            return this._loadHostProvidedModules(id);
          }
        };
        _proto._loadHostProvidedModules = function _loadHostProvidedModules(id) {
          return {
            factory: function factory(_exports, _require, module) {
              if (typeof require === 'undefined') {
                throw new Error("Current environment does not provide a require() for requiring '" + id + "'.");
              }
              try {
                module.exports = require(id);
              } catch (err) {
                throw new Error("Exception thrown when calling host defined require('" + id + "').", {
                  cause: err
                });
              }
            }
          };
        };
        _proto._createRequire = function _createRequire(module) {
          var _this = this;
          return function (specifier) {
            return _this._require(specifier, module);
          };
        };
        _proto._createRequireWithResolveMap = function _createRequireWithResolveMap(requireMap, originalRequire) {
          return function (specifier) {
            var resolved = requireMap[specifier];
            if (resolved) {
              return originalRequire(resolved);
            } else {
              throw new Error('Unresolved specifier ' + specifier);
            }
          };
        };
        _proto._throwUnresolved = function _throwUnresolved(specifier, parentUrl) {
          throw new Error("Unable to resolve " + specifier + " from " + parent + ".");
        };
        return CjsLoader;
      }();
      var loader = exports('default', new CjsLoader());
    }
  };
});

System.register("chunks:///_virtual/classof-raw.js", ['./cjs-loader.mjs', './function-uncurry-this.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var uncurryThis = require('../internals/function-uncurry-this');
        var toString = uncurryThis({}.toString);
        var stringSlice = uncurryThis(''.slice);
        module.exports = function (it) {
          return stringSlice(toString(it), 8, -1);
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-uncurry-this': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/classof.js", ['./cjs-loader.mjs', './to-string-tag-support.js', './is-callable.js', './classof-raw.js', './well-known-symbol.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');
        var isCallable = require('../internals/is-callable');
        var classofRaw = require('../internals/classof-raw');
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var TO_STRING_TAG = wellKnownSymbol('toStringTag');
        var $Object = Object;

        // ES3 wrong here
        var CORRECT_ARGUMENTS = classofRaw(function () {
          return arguments;
        }()) === 'Arguments';

        // fallback for IE11 Script Access Denied error
        var tryGet = function tryGet(it, key) {
          try {
            return it[key];
          } catch (error) {/* empty */}
        };

        // getting tag from ES6+ `Object.prototype.toString`
        module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
          var O, tag, result;
          return it === undefined ? 'Undefined' : it === null ? 'Null'
          // @@toStringTag case
          : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag
          // builtinTag case
          : CORRECT_ARGUMENTS ? classofRaw(O)
          // ES3 arguments fallback
          : (result = classofRaw(O)) === 'Object' && isCallable(O.callee) ? 'Arguments' : result;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/to-string-tag-support': __cjsMetaURL$1,
          '../internals/is-callable': __cjsMetaURL$2,
          '../internals/classof-raw': __cjsMetaURL$3,
          '../internals/well-known-symbol': __cjsMetaURL$4
        };
      });
    }
  };
});

System.register("chunks:///_virtual/copy-constructor-properties.js", ['./cjs-loader.mjs', './has-own-property.js', './own-keys.js', './object-get-own-property-descriptor.js', './object-define-property.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var hasOwn = require('../internals/has-own-property');
        var ownKeys = require('../internals/own-keys');
        var getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');
        var definePropertyModule = require('../internals/object-define-property');
        module.exports = function (target, source, exceptions) {
          var keys = ownKeys(source);
          var defineProperty = definePropertyModule.f;
          var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
          for (var i = 0; i < keys.length; i++) {
            var key = keys[i];
            if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {
              defineProperty(target, key, getOwnPropertyDescriptor(source, key));
            }
          }
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/has-own-property': __cjsMetaURL$1,
          '../internals/own-keys': __cjsMetaURL$2,
          '../internals/object-get-own-property-descriptor': __cjsMetaURL$3,
          '../internals/object-define-property': __cjsMetaURL$4
        };
      });
    }
  };
});

System.register("chunks:///_virtual/core.js", ['./rollupPluginModLoBabelHelpers.js'], function (exports) {
  var _inheritsLoose, _construct;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
      _construct = module.construct;
    }],
    execute: function () {
      var _ref, _ref2, _ref3, _ref4, _ref5;
      /* eslint-disable no-use-before-define */

      var crypto = ((_ref = typeof globalThis != 'undefined' ? globalThis : void 0) == null ? void 0 : _ref.crypto) || ((_ref2 = typeof global != 'undefined' ? global : void 0) == null ? void 0 : _ref2.crypto) || ((_ref3 = typeof window != 'undefined' ? window : void 0) == null ? void 0 : _ref3.crypto) || ((_ref4 = typeof self != 'undefined' ? self : void 0) == null ? void 0 : _ref4.crypto) || ((_ref5 = typeof frames != 'undefined' ? frames : void 0) == null || (_ref5 = _ref5[0]) == null ? void 0 : _ref5.crypto);
      var randomWordArray;
      if (crypto) {
        randomWordArray = function randomWordArray(nBytes) {
          var words = [];
          for (var i = 0; i < nBytes; i += 4) {
            words.push(crypto.getRandomValues(new Uint32Array(1))[0]);
          }
          return new WordArray(words, nBytes);
        };
      } else {
        // Because there is no global crypto property in this context, cryptographically unsafe Math.random() is used.

        randomWordArray = function randomWordArray(nBytes) {
          var words = [];
          var r = function r(m_w) {
            var _m_w = m_w;
            var _m_z = 0x3ade68b1;
            var mask = 0xffffffff;
            return function () {
              _m_z = 0x9069 * (_m_z & 0xFFFF) + (_m_z >> 0x10) & mask;
              _m_w = 0x4650 * (_m_w & 0xFFFF) + (_m_w >> 0x10) & mask;
              var result = (_m_z << 0x10) + _m_w & mask;
              result /= 0x100000000;
              result += 0.5;
              return result * (Math.random() > 0.5 ? 1 : -1);
            };
          };
          for (var i = 0, rcache; i < nBytes; i += 4) {
            var _r = r((rcache || Math.random()) * 0x100000000);
            rcache = _r() * 0x3ade67b7;
            words.push(_r() * 0x100000000 | 0);
          }
          return new WordArray(words, nBytes);
        };
      }

      /**
       * Base class for inheritance.
       */
      var Base = exports('Base', /*#__PURE__*/function () {
        function Base() {}
        /**
         * Extends this object and runs the init method.
         * Arguments to create() will be passed to init().
         *
         * @return {Object} The new object.
         *
         * @static
         *
         * @example
         *
         *     var instance = MyType.create();
         */
        Base.create = function create() {
          for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {
            args[_key2] = arguments[_key2];
          }
          return _construct(this, args);
        }

        /**
         * Copies properties into this object.
         *
         * @param {Object} properties The properties to mix in.
         *
         * @example
         *
         *     MyType.mixIn({
         *         field: 'value'
         *     });
         */;
        var _proto = Base.prototype;
        _proto.mixIn = function mixIn(properties) {
          return Object.assign(this, properties);
        }

        /**
         * Creates a copy of this object.
         *
         * @return {Object} The clone.
         *
         * @example
         *
         *     var clone = instance.clone();
         */;
        _proto.clone = function clone() {
          var clone = new this.constructor();
          Object.assign(clone, this);
          return clone;
        };
        return Base;
      }());

      /**
       * An array of 32-bit words.
       *
       * @property {Array} words The array of 32-bit words.
       * @property {number} sigBytes The number of significant bytes in this word array.
       */
      var WordArray = exports('WordArray', /*#__PURE__*/function (_Base) {
        _inheritsLoose(WordArray, _Base);
        /**
         * Initializes a newly created word array.
         *
         * @param {Array} words (Optional) An array of 32-bit words.
         * @param {number} sigBytes (Optional) The number of significant bytes in the words.
         *
         * @example
         *
         *     var wordArray = CryptoJS.lib.WordArray.create();
         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);
         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);
         */
        function WordArray(words, sigBytes) {
          var _this;
          if (words === void 0) {
            words = [];
          }
          if (sigBytes === void 0) {
            sigBytes = words.length * 4;
          }
          _this = _Base.call(this) || this;
          var typedArray = words;
          // Convert buffers to uint8
          if (typedArray instanceof ArrayBuffer) {
            typedArray = new Uint8Array(typedArray);
          }

          // Convert other array views to uint8
          if (typedArray instanceof Int8Array || typedArray instanceof Uint8ClampedArray || typedArray instanceof Int16Array || typedArray instanceof Uint16Array || typedArray instanceof Int32Array || typedArray instanceof Uint32Array || typedArray instanceof Float32Array || typedArray instanceof Float64Array) {
            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);
          }

          // Handle Uint8Array
          if (typedArray instanceof Uint8Array) {
            // Shortcut
            var typedArrayByteLength = typedArray.byteLength;

            // Extract bytes
            var _words = [];
            for (var i = 0; i < typedArrayByteLength; i += 1) {
              _words[i >>> 2] |= typedArray[i] << 24 - i % 4 * 8;
            }

            // Initialize this word array
            _this.words = _words;
            _this.sigBytes = typedArrayByteLength;
          } else {
            // Else call normal init
            _this.words = words;
            _this.sigBytes = sigBytes;
          }
          return _this;
        }

        /**
         * Creates a word array filled with random bytes.
         *
         * @param {number} nBytes The number of random bytes to generate.
         *
         * @return {WordArray} The random word array.
         *
         * @static
         *
         * @example
         *
         *     var wordArray = CryptoJS.lib.WordArray.random(16);
         */
        var _proto2 = WordArray.prototype;
        /**
         * Converts this word array to a string.
         *
         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex
         *
         * @return {string} The stringified word array.
         *
         * @example
         *
         *     var string = wordArray + '';
         *     var string = wordArray.toString();
         *     var string = wordArray.toString(CryptoJS.enc.Utf8);
         */
        _proto2.toString = function toString(encoder) {
          if (encoder === void 0) {
            encoder = Hex;
          }
          return encoder.stringify(this);
        }

        /**
         * Concatenates a word array to this word array.
         *
         * @param {WordArray} wordArray The word array to append.
         *
         * @return {WordArray} This word array.
         *
         * @example
         *
         *     wordArray1.concat(wordArray2);
         */;
        _proto2.concat = function concat(wordArray) {
          // Shortcuts
          var thisWords = this.words;
          var thatWords = wordArray.words;
          var thisSigBytes = this.sigBytes;
          var thatSigBytes = wordArray.sigBytes;

          // Clamp excess bits
          this.clamp();

          // Concat
          if (thisSigBytes % 4) {
            // Copy one byte at a time
            for (var i = 0; i < thatSigBytes; i += 1) {
              var thatByte = thatWords[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
              thisWords[thisSigBytes + i >>> 2] |= thatByte << 24 - (thisSigBytes + i) % 4 * 8;
            }
          } else {
            // Copy one word at a time
            for (var _i = 0; _i < thatSigBytes; _i += 4) {
              thisWords[thisSigBytes + _i >>> 2] = thatWords[_i >>> 2];
            }
          }
          this.sigBytes += thatSigBytes;

          // Chainable
          return this;
        }

        /**
         * Removes insignificant bits.
         *
         * @example
         *
         *     wordArray.clamp();
         */;
        _proto2.clamp = function clamp() {
          // Shortcuts
          var words = this.words,
            sigBytes = this.sigBytes;

          // Clamp
          words[sigBytes >>> 2] &= 0xffffffff << 32 - sigBytes % 4 * 8;
          words.length = Math.ceil(sigBytes / 4);
        }

        /**
         * Creates a copy of this word array.
         *
         * @return {WordArray} The clone.
         *
         * @example
         *
         *     var clone = wordArray.clone();
         */;
        _proto2.clone = function clone() {
          var clone = _Base.prototype.clone.call(this);
          clone.words = this.words.slice(0);
          return clone;
        };
        return WordArray;
      }(Base));

      /**
       * Hex encoding strategy.
       */
      WordArray.random = randomWordArray;
      var Hex = exports('Hex', {
        /**
         * Converts a word array to a hex string.
         *
         * @param {WordArray} wordArray The word array.
         *
         * @return {string} The hex string.
         *
         * @static
         *
         * @example
         *
         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);
         */
        stringify: function stringify(wordArray) {
          // Shortcuts
          var words = wordArray.words,
            sigBytes = wordArray.sigBytes;

          // Convert
          var hexChars = [];
          for (var i = 0; i < sigBytes; i += 1) {
            var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
            hexChars.push((bite >>> 4).toString(16));
            hexChars.push((bite & 0x0f).toString(16));
          }
          return hexChars.join('');
        },
        /**
         * Converts a hex string to a word array.
         *
         * @param {string} hexStr The hex string.
         *
         * @return {WordArray} The word array.
         *
         * @static
         *
         * @example
         *
         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);
         */
        parse: function parse(hexStr) {
          // Shortcut
          var hexStrLength = hexStr.length;

          // Convert
          var words = [];
          for (var i = 0; i < hexStrLength; i += 2) {
            words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << 24 - i % 8 * 4;
          }
          return new WordArray(words, hexStrLength / 2);
        }
      });

      /**
       * Latin1 encoding strategy.
       */
      var Latin1 = exports('Latin1', {
        /**
         * Converts a word array to a Latin1 string.
         *
         * @param {WordArray} wordArray The word array.
         *
         * @return {string} The Latin1 string.
         *
         * @static
         *
         * @example
         *
         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);
         */
        stringify: function stringify(wordArray) {
          // Shortcuts
          var words = wordArray.words,
            sigBytes = wordArray.sigBytes;

          // Convert
          var latin1Chars = [];
          for (var i = 0; i < sigBytes; i += 1) {
            var bite = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
            latin1Chars.push(String.fromCharCode(bite));
          }
          return latin1Chars.join('');
        },
        /**
         * Converts a Latin1 string to a word array.
         *
         * @param {string} latin1Str The Latin1 string.
         *
         * @return {WordArray} The word array.
         *
         * @static
         *
         * @example
         *
         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);
         */
        parse: function parse(latin1Str) {
          // Shortcut
          var latin1StrLength = latin1Str.length;

          // Convert
          var words = [];
          for (var i = 0; i < latin1StrLength; i += 1) {
            words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << 24 - i % 4 * 8;
          }
          return new WordArray(words, latin1StrLength);
        }
      });

      /**
       * UTF-8 encoding strategy.
       */
      var Utf8 = exports('Utf8', {
        /**
         * Converts a word array to a UTF-8 string.
         *
         * @param {WordArray} wordArray The word array.
         *
         * @return {string} The UTF-8 string.
         *
         * @static
         *
         * @example
         *
         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);
         */
        stringify: function stringify(wordArray) {
          try {
            return decodeURIComponent(escape(Latin1.stringify(wordArray)));
          } catch (e) {
            throw new Error('Malformed UTF-8 data');
          }
        },
        /**
         * Converts a UTF-8 string to a word array.
         *
         * @param {string} utf8Str The UTF-8 string.
         *
         * @return {WordArray} The word array.
         *
         * @static
         *
         * @example
         *
         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);
         */
        parse: function parse(utf8Str) {
          return Latin1.parse(unescape(encodeURIComponent(utf8Str)));
        }
      });

      /**
       * Abstract buffered block algorithm template.
       *
       * The property blockSize must be implemented in a concrete subtype.
       *
       * @property {number} _minBufferSize
       *
       *     The number of blocks that should be kept unprocessed in the buffer. Default: 0
       */
      var BufferedBlockAlgorithm = exports('BufferedBlockAlgorithm', /*#__PURE__*/function (_Base2) {
        _inheritsLoose(BufferedBlockAlgorithm, _Base2);
        function BufferedBlockAlgorithm() {
          var _this2;
          _this2 = _Base2.call(this) || this;
          _this2._minBufferSize = 0;
          return _this2;
        }

        /**
         * Resets this block algorithm's data buffer to its initial state.
         *
         * @example
         *
         *     bufferedBlockAlgorithm.reset();
         */
        var _proto3 = BufferedBlockAlgorithm.prototype;
        _proto3.reset = function reset() {
          // Initial values
          this._data = new WordArray();
          this._nDataBytes = 0;
        }

        /**
         * Adds new data to this block algorithm's buffer.
         *
         * @param {WordArray|string} data
         *
         *     The data to append. Strings are converted to a WordArray using UTF-8.
         *
         * @example
         *
         *     bufferedBlockAlgorithm._append('data');
         *     bufferedBlockAlgorithm._append(wordArray);
         */;
        _proto3._append = function _append(data) {
          var m_data = data;

          // Convert string to WordArray, else assume WordArray already
          if (typeof m_data === 'string') {
            m_data = Utf8.parse(m_data);
          }

          // Append
          this._data.concat(m_data);
          this._nDataBytes += m_data.sigBytes;
        }

        /**
         * Processes available data blocks.
         *
         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.
         *
         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.
         *
         * @return {WordArray} The processed data.
         *
         * @example
         *
         *     var processedData = bufferedBlockAlgorithm._process();
         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');
         */;
        _proto3._process = function _process(doFlush) {
          var processedWords;

          // Shortcuts
          var data = this._data,
            blockSize = this.blockSize;
          var dataWords = data.words;
          var dataSigBytes = data.sigBytes;
          var blockSizeBytes = blockSize * 4;

          // Count blocks ready
          var nBlocksReady = dataSigBytes / blockSizeBytes;
          if (doFlush) {
            // Round up to include partial blocks
            nBlocksReady = Math.ceil(nBlocksReady);
          } else {
            // Round down to include only full blocks,
            // less the number of blocks that must remain in the buffer
            nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);
          }

          // Count words ready
          var nWordsReady = nBlocksReady * blockSize;

          // Count bytes ready
          var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);

          // Process blocks
          if (nWordsReady) {
            for (var offset = 0; offset < nWordsReady; offset += blockSize) {
              // Perform concrete-algorithm logic
              this._doProcessBlock(dataWords, offset);
            }

            // Remove processed words
            processedWords = dataWords.splice(0, nWordsReady);
            data.sigBytes -= nBytesReady;
          }

          // Return processed words
          return new WordArray(processedWords, nBytesReady);
        }

        /**
         * Creates a copy of this object.
         *
         * @return {Object} The clone.
         *
         * @example
         *
         *     var clone = bufferedBlockAlgorithm.clone();
         */;
        _proto3.clone = function clone() {
          var clone = _Base2.prototype.clone.call(this);
          clone._data = this._data.clone();
          return clone;
        };
        return BufferedBlockAlgorithm;
      }(Base));

      /**
       * Abstract hasher template.
       *
       * @property {number} blockSize
       *
       *     The number of 32-bit words this hasher operates on. Default: 16 (512 bits)
       */
      var Hasher = exports('Hasher', /*#__PURE__*/function (_BufferedBlockAlgorit) {
        _inheritsLoose(Hasher, _BufferedBlockAlgorit);
        function Hasher(cfg) {
          var _this3;
          _this3 = _BufferedBlockAlgorit.call(this) || this;
          _this3.blockSize = 512 / 32;

          /**
           * Configuration options.
           */
          _this3.cfg = Object.assign(new Base(), cfg);

          // Set initial values
          _this3.reset();
          return _this3;
        }

        /**
         * Creates a shortcut function to a hasher's object interface.
         *
         * @param {Hasher} SubHasher The hasher to create a helper for.
         *
         * @return {Function} The shortcut function.
         *
         * @static
         *
         * @example
         *
         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);
         */
        Hasher._createHelper = function _createHelper(SubHasher) {
          return function (message, cfg) {
            return new SubHasher(cfg).finalize(message);
          };
        }

        /**
         * Creates a shortcut function to the HMAC's object interface.
         *
         * @param {Hasher} SubHasher The hasher to use in this HMAC helper.
         *
         * @return {Function} The shortcut function.
         *
         * @static
         *
         * @example
         *
         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);
         */;
        Hasher._createHmacHelper = function _createHmacHelper(SubHasher) {
          return function (message, key) {
            return new HMAC(SubHasher, key).finalize(message);
          };
        }

        /**
         * Resets this hasher to its initial state.
         *
         * @example
         *
         *     hasher.reset();
         */;
        var _proto4 = Hasher.prototype;
        _proto4.reset = function reset() {
          // Reset data buffer
          _BufferedBlockAlgorit.prototype.reset.call(this);

          // Perform concrete-hasher logic
          this._doReset();
        }

        /**
         * Updates this hasher with a message.
         *
         * @param {WordArray|string} messageUpdate The message to append.
         *
         * @return {Hasher} This hasher.
         *
         * @example
         *
         *     hasher.update('message');
         *     hasher.update(wordArray);
         */;
        _proto4.update = function update(messageUpdate) {
          // Append
          this._append(messageUpdate);

          // Update the hash
          this._process();

          // Chainable
          return this;
        }

        /**
         * Finalizes the hash computation.
         * Note that the finalize operation is effectively a destructive, read-once operation.
         *
         * @param {WordArray|string} messageUpdate (Optional) A final message update.
         *
         * @return {WordArray} The hash.
         *
         * @example
         *
         *     var hash = hasher.finalize();
         *     var hash = hasher.finalize('message');
         *     var hash = hasher.finalize(wordArray);
         */;
        _proto4.finalize = function finalize(messageUpdate) {
          // Final message update
          if (messageUpdate) {
            this._append(messageUpdate);
          }

          // Perform concrete-hasher logic
          var hash = this._doFinalize();
          return hash;
        };
        return Hasher;
      }(BufferedBlockAlgorithm));

      /**
       * HMAC algorithm.
       */
      var HMAC = exports('HMAC', /*#__PURE__*/function (_Base3) {
        _inheritsLoose(HMAC, _Base3);
        /**
         * Initializes a newly created HMAC.
         *
         * @param {Hasher} SubHasher The hash algorithm to use.
         * @param {WordArray|string} key The secret key.
         *
         * @example
         *
         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);
         */
        function HMAC(SubHasher, key) {
          var _this4;
          _this4 = _Base3.call(this) || this;
          var hasher = new SubHasher();
          _this4._hasher = hasher;

          // Convert string to WordArray, else assume WordArray already
          var _key = key;
          if (typeof _key === 'string') {
            _key = Utf8.parse(_key);
          }

          // Shortcuts
          var hasherBlockSize = hasher.blockSize;
          var hasherBlockSizeBytes = hasherBlockSize * 4;

          // Allow arbitrary length keys
          if (_key.sigBytes > hasherBlockSizeBytes) {
            _key = hasher.finalize(key);
          }

          // Clamp excess bits
          _key.clamp();

          // Clone key for inner and outer pads
          var oKey = _key.clone();
          _this4._oKey = oKey;
          var iKey = _key.clone();
          _this4._iKey = iKey;

          // Shortcuts
          var oKeyWords = oKey.words;
          var iKeyWords = iKey.words;

          // XOR keys with pad constants
          for (var i = 0; i < hasherBlockSize; i += 1) {
            oKeyWords[i] ^= 0x5c5c5c5c;
            iKeyWords[i] ^= 0x36363636;
          }
          oKey.sigBytes = hasherBlockSizeBytes;
          iKey.sigBytes = hasherBlockSizeBytes;

          // Set initial values
          _this4.reset();
          return _this4;
        }

        /**
         * Resets this HMAC to its initial state.
         *
         * @example
         *
         *     hmacHasher.reset();
         */
        var _proto5 = HMAC.prototype;
        _proto5.reset = function reset() {
          // Shortcut
          var hasher = this._hasher;

          // Reset
          hasher.reset();
          hasher.update(this._iKey);
        }

        /**
         * Updates this HMAC with a message.
         *
         * @param {WordArray|string} messageUpdate The message to append.
         *
         * @return {HMAC} This HMAC instance.
         *
         * @example
         *
         *     hmacHasher.update('message');
         *     hmacHasher.update(wordArray);
         */;
        _proto5.update = function update(messageUpdate) {
          this._hasher.update(messageUpdate);

          // Chainable
          return this;
        }

        /**
         * Finalizes the HMAC computation.
         * Note that the finalize operation is effectively a destructive, read-once operation.
         *
         * @param {WordArray|string} messageUpdate (Optional) A final message update.
         *
         * @return {WordArray} The HMAC.
         *
         * @example
         *
         *     var hmac = hmacHasher.finalize();
         *     var hmac = hmacHasher.finalize('message');
         *     var hmac = hmacHasher.finalize(wordArray);
         */;
        _proto5.finalize = function finalize(messageUpdate) {
          // Shortcut
          var hasher = this._hasher;

          // Compute HMAC
          var innerHash = hasher.finalize(messageUpdate);
          hasher.reset();
          var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));
          return hmac;
        };
        return HMAC;
      }(Base));
    }
  };
});

System.register("chunks:///_virtual/correct-is-regexp-logic.js", ['./cjs-loader.mjs', './well-known-symbol.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var MATCH = wellKnownSymbol('match');
        module.exports = function (METHOD_NAME) {
          var regexp = /./;
          try {
            '/./'[METHOD_NAME](regexp);
          } catch (error1) {
            try {
              regexp[MATCH] = false;
              return '/./'[METHOD_NAME](regexp);
            } catch (error2) {/* empty */}
          }
          return false;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/well-known-symbol': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/correct-prototype-getter.js", ['./cjs-loader.mjs', './fails.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var fails = require('../internals/fails');
        module.exports = !fails(function () {
          function F() {/* empty */}
          F.prototype.constructor = null;
          // eslint-disable-next-line es/no-object-getprototypeof -- required for testing
          return Object.getPrototypeOf(new F()) !== F.prototype;
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/fails': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/create-iter-result-object.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        // `CreateIterResultObject` abstract operation
        // https://tc39.es/ecma262/#sec-createiterresultobject
        module.exports = function (value, done) {
          return {
            value: value,
            done: done
          };
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/create-non-enumerable-property.js", ['./cjs-loader.mjs', './descriptors.js', './object-define-property.js', './create-property-descriptor.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var DESCRIPTORS = require('../internals/descriptors');
        var definePropertyModule = require('../internals/object-define-property');
        var createPropertyDescriptor = require('../internals/create-property-descriptor');
        module.exports = DESCRIPTORS ? function (object, key, value) {
          return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
        } : function (object, key, value) {
          object[key] = value;
          return object;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/descriptors': __cjsMetaURL$1,
          '../internals/object-define-property': __cjsMetaURL$2,
          '../internals/create-property-descriptor': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/create-property-descriptor.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        module.exports = function (bitmap, value) {
          return {
            enumerable: !(bitmap & 1),
            configurable: !(bitmap & 2),
            writable: !(bitmap & 4),
            value: value
          };
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/create-property.js", ['./cjs-loader.mjs', './to-property-key.js', './object-define-property.js', './create-property-descriptor.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var toPropertyKey = require('../internals/to-property-key');
        var definePropertyModule = require('../internals/object-define-property');
        var createPropertyDescriptor = require('../internals/create-property-descriptor');
        module.exports = function (object, key, value) {
          var propertyKey = toPropertyKey(key);
          if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));else object[propertyKey] = value;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/to-property-key': __cjsMetaURL$1,
          '../internals/object-define-property': __cjsMetaURL$2,
          '../internals/create-property-descriptor': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/define-built-in-accessor.js", ['./cjs-loader.mjs', './make-built-in.js', './object-define-property.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var makeBuiltIn = require('../internals/make-built-in');
        var defineProperty = require('../internals/object-define-property');
        module.exports = function (target, name, descriptor) {
          if (descriptor.get) makeBuiltIn(descriptor.get, name, {
            getter: true
          });
          if (descriptor.set) makeBuiltIn(descriptor.set, name, {
            setter: true
          });
          return defineProperty.f(target, name, descriptor);
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/make-built-in': __cjsMetaURL$1,
          '../internals/object-define-property': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/define-built-in.js", ['./cjs-loader.mjs', './is-callable.js', './object-define-property.js', './make-built-in.js', './define-global-property.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var isCallable = require('../internals/is-callable');
        var definePropertyModule = require('../internals/object-define-property');
        var makeBuiltIn = require('../internals/make-built-in');
        var defineGlobalProperty = require('../internals/define-global-property');
        module.exports = function (O, key, value, options) {
          if (!options) options = {};
          var simple = options.enumerable;
          var name = options.name !== undefined ? options.name : key;
          if (isCallable(value)) makeBuiltIn(value, name, options);
          if (options.global) {
            if (simple) O[key] = value;else defineGlobalProperty(key, value);
          } else {
            try {
              if (!options.unsafe) delete O[key];else if (O[key]) simple = true;
            } catch (error) {/* empty */}
            if (simple) O[key] = value;else definePropertyModule.f(O, key, {
              value: value,
              enumerable: false,
              configurable: !options.nonConfigurable,
              writable: !options.nonWritable
            });
          }
          return O;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/is-callable': __cjsMetaURL$1,
          '../internals/object-define-property': __cjsMetaURL$2,
          '../internals/make-built-in': __cjsMetaURL$3,
          '../internals/define-global-property': __cjsMetaURL$4
        };
      });
    }
  };
});

System.register("chunks:///_virtual/define-built-ins.js", ['./cjs-loader.mjs', './define-built-in.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var defineBuiltIn = require('../internals/define-built-in');
        module.exports = function (target, src, options) {
          for (var key in src) defineBuiltIn(target, key, src[key], options);
          return target;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/define-built-in': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/define-global-property.js", ['./cjs-loader.mjs', './global.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var global = require('../internals/global');

        // eslint-disable-next-line es/no-object-defineproperty -- safe
        var defineProperty = Object.defineProperty;
        module.exports = function (key, value) {
          try {
            defineProperty(global, key, {
              value: value,
              configurable: true,
              writable: true
            });
          } catch (error) {
            global[key] = value;
          }
          return value;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/global': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/delete-property-or-throw.js", ['./cjs-loader.mjs', './try-to-string.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var tryToString = require('../internals/try-to-string');
        var $TypeError = TypeError;
        module.exports = function (O, P) {
          if (!delete O[P]) throw $TypeError('Cannot delete property ' + tryToString(P) + ' of ' + tryToString(O));
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/try-to-string': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/descriptors.js", ['./cjs-loader.mjs', './fails.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var fails = require('../internals/fails');

        // Detect IE8's incomplete defineProperty implementation
        module.exports = !fails(function () {
          // eslint-disable-next-line es/no-object-defineproperty -- required for testing
          return Object.defineProperty({}, 1, {
            get: function get() {
              return 7;
            }
          })[1] !== 7;
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/fails': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/document-all.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var documentAll = typeof document == 'object' && document.all;

        // https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot
        // eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing
        var IS_HTMLDDA = typeof documentAll == 'undefined' && documentAll !== undefined;
        module.exports = {
          all: documentAll,
          IS_HTMLDDA: IS_HTMLDDA
        };

        // #endregion ORIGINAL CODE

        module.exports;
        module.exports.all;
        module.exports.IS_HTMLDDA;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/document-create-element.js", ['./cjs-loader.mjs', './global.js', './is-object.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var global = require('../internals/global');
        var isObject = require('../internals/is-object');
        var document = global.document;
        // typeof document.createElement is 'object' in old IE
        var EXISTS = isObject(document) && isObject(document.createElement);
        module.exports = function (it) {
          return EXISTS ? document.createElement(it) : {};
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/global': __cjsMetaURL$1,
          '../internals/is-object': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/does-not-exceed-safe-integer.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $TypeError = TypeError;
        var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991

        module.exports = function (it) {
          if (it > MAX_SAFE_INTEGER) throw $TypeError('Maximum allowed index exceeded');
          return it;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/dom-iterables.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        // iterable DOM collections
        // flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
        module.exports = {
          CSSRuleList: 0,
          CSSStyleDeclaration: 0,
          CSSValueList: 0,
          ClientRectList: 0,
          DOMRectList: 0,
          DOMStringList: 0,
          DOMTokenList: 1,
          DataTransferItemList: 0,
          FileList: 0,
          HTMLAllCollection: 0,
          HTMLCollection: 0,
          HTMLFormElement: 0,
          HTMLSelectElement: 0,
          MediaList: 0,
          MimeTypeArray: 0,
          NamedNodeMap: 0,
          NodeList: 1,
          PaintRequestList: 0,
          Plugin: 0,
          PluginArray: 0,
          SVGLengthList: 0,
          SVGNumberList: 0,
          SVGPathSegList: 0,
          SVGPointList: 0,
          SVGStringList: 0,
          SVGTransformList: 0,
          SourceBufferList: 0,
          StyleSheetList: 0,
          TextTrackCueList: 0,
          TextTrackList: 0,
          TouchList: 0
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/dom-token-list-prototype.js", ['./cjs-loader.mjs', './document-create-element.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        // in old WebKit versions, `element.classList` is not an instance of global `DOMTokenList`
        var documentCreateElement = require('../internals/document-create-element');
        var classList = documentCreateElement('span').classList;
        var DOMTokenListPrototype = classList && classList.constructor && classList.constructor.prototype;
        module.exports = DOMTokenListPrototype === Object.prototype ? undefined : DOMTokenListPrototype;

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/document-create-element': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/enc-base64.js", ['./core.js'], function (exports) {
  var WordArray;
  return {
    setters: [function (module) {
      WordArray = module.WordArray;
    }],
    execute: function () {
      var parseLoop = exports('parseLoop', function parseLoop(base64Str, base64StrLength, reverseMap) {
        var words = [];
        var nBytes = 0;
        for (var i = 0; i < base64StrLength; i += 1) {
          if (i % 4) {
            var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << i % 4 * 2;
            var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> 6 - i % 4 * 2;
            var bitsCombined = bits1 | bits2;
            words[nBytes >>> 2] |= bitsCombined << 24 - nBytes % 4 * 8;
            nBytes += 1;
          }
        }
        return WordArray.create(words, nBytes);
      });

      /**
       * Base64 encoding strategy.
       */
      var Base64 = exports('Base64', {
        /**
         * Converts a word array to a Base64 string.
         *
         * @param {WordArray} wordArray The word array.
         *
         * @return {string} The Base64 string.
         *
         * @static
         *
         * @example
         *
         *     const base64String = CryptoJS.enc.Base64.stringify(wordArray);
         */
        stringify: function stringify(wordArray) {
          // Shortcuts
          var words = wordArray.words,
            sigBytes = wordArray.sigBytes;
          var map = this._map;

          // Clamp excess bits
          wordArray.clamp();

          // Convert
          var base64Chars = [];
          for (var i = 0; i < sigBytes; i += 3) {
            var byte1 = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
            var byte2 = words[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 0xff;
            var byte3 = words[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 0xff;
            var triplet = byte1 << 16 | byte2 << 8 | byte3;
            for (var j = 0; j < 4 && i + j * 0.75 < sigBytes; j += 1) {
              base64Chars.push(map.charAt(triplet >>> 6 * (3 - j) & 0x3f));
            }
          }

          // Add padding
          var paddingChar = map.charAt(64);
          if (paddingChar) {
            while (base64Chars.length % 4) {
              base64Chars.push(paddingChar);
            }
          }
          return base64Chars.join('');
        },
        /**
         * Converts a Base64 string to a word array.
         *
         * @param {string} base64Str The Base64 string.
         *
         * @return {WordArray} The word array.
         *
         * @static
         *
         * @example
         *
         *     const wordArray = CryptoJS.enc.Base64.parse(base64String);
         */
        parse: function parse(base64Str) {
          // Shortcuts
          var base64StrLength = base64Str.length;
          var map = this._map;
          var reverseMap = this._reverseMap;
          if (!reverseMap) {
            this._reverseMap = [];
            reverseMap = this._reverseMap;
            for (var j = 0; j < map.length; j += 1) {
              reverseMap[map.charCodeAt(j)] = j;
            }
          }

          // Ignore padding
          var paddingChar = map.charAt(64);
          if (paddingChar) {
            var paddingIndex = base64Str.indexOf(paddingChar);
            if (paddingIndex !== -1) {
              base64StrLength = paddingIndex;
            }
          }

          // Convert
          return parseLoop(base64Str, base64StrLength, reverseMap);
        },
        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='
      });
    }
  };
});

System.register("chunks:///_virtual/enc-base64url.js", ['./enc-base64.js'], function (exports) {
  var parseLoop;
  return {
    setters: [function (module) {
      parseLoop = module.parseLoop;
    }],
    execute: function () {
      /**
       * Base64url encoding strategy.
       */
      var Base64url = exports('Base64url', {
        /**
         * Converts a word array to a Base64url string.
         *
         * @param {WordArray} wordArray The word array.
         * 
         * @param {boolean} urlSafe Whether to use url safe.
         *
         * @return {string} The Base64url string.
         *
         * @static
         *
         * @example
         *
         *     const base64String = CryptoJS.enc.Base64.stringify(wordArray);
         */
        stringify: function stringify(wordArray, urlSafe) {
          if (urlSafe === void 0) {
            urlSafe = true;
          }
          // Shortcuts
          var words = wordArray.words,
            sigBytes = wordArray.sigBytes;
          var map = urlSafe ? this._safeMap : this._map;

          // Clamp excess bits
          wordArray.clamp();

          // Convert
          var base64Chars = [];
          for (var i = 0; i < sigBytes; i += 3) {
            var byte1 = words[i >>> 2] >>> 24 - i % 4 * 8 & 0xff;
            var byte2 = words[i + 1 >>> 2] >>> 24 - (i + 1) % 4 * 8 & 0xff;
            var byte3 = words[i + 2 >>> 2] >>> 24 - (i + 2) % 4 * 8 & 0xff;
            var triplet = byte1 << 16 | byte2 << 8 | byte3;
            for (var j = 0; j < 4 && i + j * 0.75 < sigBytes; j += 1) {
              base64Chars.push(map.charAt(triplet >>> 6 * (3 - j) & 0x3f));
            }
          }

          // Add padding
          var paddingChar = map.charAt(64);
          if (paddingChar) {
            while (base64Chars.length % 4) {
              base64Chars.push(paddingChar);
            }
          }
          return base64Chars.join('');
        },
        /**
         * Converts a Base64url string to a word array.
         *
         * @param {string} base64Str The Base64url string.
         * 
         * @param {boolean} urlSafe Whether to use url safe.
         *
         * @return {WordArray} The word array.
         *
         * @static
         *
         * @example
         *
         *     const wordArray = CryptoJS.enc.Base64.parse(base64String);
         */
        parse: function parse(base64Str, urlSafe) {
          if (urlSafe === void 0) {
            urlSafe = true;
          }
          // Shortcuts
          var base64StrLength = base64Str.length;
          var map = urlSafe ? this._safeMap : this._map;
          var reverseMap = this._reverseMap;
          if (!reverseMap) {
            this._reverseMap = [];
            reverseMap = this._reverseMap;
            for (var j = 0; j < map.length; j += 1) {
              reverseMap[map.charCodeAt(j)] = j;
            }
          }

          // Ignore padding
          var paddingChar = map.charAt(64);
          if (paddingChar) {
            var paddingIndex = base64Str.indexOf(paddingChar);
            if (paddingIndex !== -1) {
              base64StrLength = paddingIndex;
            }
          }

          // Convert
          return parseLoop(base64Str, base64StrLength, reverseMap);
        },
        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',
        _safeMap: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'
      });
    }
  };
});

System.register("chunks:///_virtual/enc-utf16.js", ['./core.js'], function (exports) {
  var WordArray;
  return {
    setters: [function (module) {
      WordArray = module.WordArray;
    }],
    execute: function () {
      var swapEndian = function swapEndian(word) {
        return word << 8 & 0xff00ff00 | word >>> 8 & 0x00ff00ff;
      };

      /**
       * UTF-16 BE encoding strategy.
       */
      var Utf16BE = exports('Utf16BE', {
        /**
         * Converts a word array to a UTF-16 BE string.
         *
         * @param {WordArray} wordArray The word array.
         *
         * @return {string} The UTF-16 BE string.
         *
         * @static
         *
         * @example
         *
         *     const utf16String = CryptoJS.enc.Utf16.stringify(wordArray);
         */
        stringify: function stringify(wordArray) {
          // Shortcuts
          var words = wordArray.words,
            sigBytes = wordArray.sigBytes;

          // Convert
          var utf16Chars = [];
          for (var i = 0; i < sigBytes; i += 2) {
            var codePoint = words[i >>> 2] >>> 16 - i % 4 * 8 & 0xffff;
            utf16Chars.push(String.fromCharCode(codePoint));
          }
          return utf16Chars.join('');
        },
        /**
         * Converts a UTF-16 BE string to a word array.
         *
         * @param {string} utf16Str The UTF-16 BE string.
         *
         * @return {WordArray} The word array.
         *
         * @static
         *
         * @example
         *
         *     const wordArray = CryptoJS.enc.Utf16.parse(utf16String);
         */
        parse: function parse(utf16Str) {
          // Shortcut
          var utf16StrLength = utf16Str.length;

          // Convert
          var words = [];
          for (var i = 0; i < utf16StrLength; i += 1) {
            words[i >>> 1] |= utf16Str.charCodeAt(i) << 16 - i % 2 * 16;
          }
          return WordArray.create(words, utf16StrLength * 2);
        }
      });
      var Utf16 = exports('Utf16', Utf16BE);

      /**
       * UTF-16 LE encoding strategy.
       */
      var Utf16LE = exports('Utf16LE', {
        /**
         * Converts a word array to a UTF-16 LE string.
         *
         * @param {WordArray} wordArray The word array.
         *
         * @return {string} The UTF-16 LE string.
         *
         * @static
         *
         * @example
         *
         *     const utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);
         */
        stringify: function stringify(wordArray) {
          // Shortcuts
          var words = wordArray.words,
            sigBytes = wordArray.sigBytes;

          // Convert
          var utf16Chars = [];
          for (var i = 0; i < sigBytes; i += 2) {
            var codePoint = swapEndian(words[i >>> 2] >>> 16 - i % 4 * 8 & 0xffff);
            utf16Chars.push(String.fromCharCode(codePoint));
          }
          return utf16Chars.join('');
        },
        /**
         * Converts a UTF-16 LE string to a word array.
         *
         * @param {string} utf16Str The UTF-16 LE string.
         *
         * @return {WordArray} The word array.
         *
         * @static
         *
         * @example
         *
         *     const wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);
         */
        parse: function parse(utf16Str) {
          // Shortcut
          var utf16StrLength = utf16Str.length;

          // Convert
          var words = [];
          for (var i = 0; i < utf16StrLength; i += 1) {
            words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << 16 - i % 2 * 16);
          }
          return WordArray.create(words, utf16StrLength * 2);
        }
      });
    }
  };
});

System.register("chunks:///_virtual/engine-ff-version.js", ['./cjs-loader.mjs', './engine-user-agent.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var userAgent = require('../internals/engine-user-agent');
        var firefox = userAgent.match(/firefox\/(\d+)/i);
        module.exports = !!firefox && +firefox[1];

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/engine-user-agent': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/engine-is-browser.js", ['./cjs-loader.mjs', './engine-is-deno.js', './engine-is-node.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var IS_DENO = require('../internals/engine-is-deno');
        var IS_NODE = require('../internals/engine-is-node');
        module.exports = !IS_DENO && !IS_NODE && typeof window == 'object' && typeof document == 'object';

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/engine-is-deno': __cjsMetaURL$1,
          '../internals/engine-is-node': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/engine-is-deno.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        /* global Deno -- Deno case */
        module.exports = typeof Deno == 'object' && Deno && typeof Deno.version == 'object';

        // #endregion ORIGINAL CODE

        module.exports;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/engine-is-ie-or-edge.js", ['./cjs-loader.mjs', './engine-user-agent.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var UA = require('../internals/engine-user-agent');
        module.exports = /MSIE|Trident/.test(UA);

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/engine-user-agent': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/engine-is-ios-pebble.js", ['./cjs-loader.mjs', './engine-user-agent.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var userAgent = require('../internals/engine-user-agent');
        module.exports = /ipad|iphone|ipod/i.test(userAgent) && typeof Pebble != 'undefined';

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/engine-user-agent': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/engine-is-ios.js", ['./cjs-loader.mjs', './engine-user-agent.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var userAgent = require('../internals/engine-user-agent');

        // eslint-disable-next-line redos/no-vulnerable -- safe
        module.exports = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent);

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/engine-user-agent': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/engine-is-node.js", ['./cjs-loader.mjs', './global.js', './classof-raw.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var global = require('../internals/global');
        var classof = require('../internals/classof-raw');
        module.exports = classof(global.process) === 'process';

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/global': __cjsMetaURL$1,
          '../internals/classof-raw': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/engine-is-webos-webkit.js", ['./cjs-loader.mjs', './engine-user-agent.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var userAgent = require('../internals/engine-user-agent');
        module.exports = /web0s(?!.*chrome)/i.test(userAgent);

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/engine-user-agent': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/engine-user-agent.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        module.exports = typeof navigator != 'undefined' && String(navigator.userAgent) || '';

        // #endregion ORIGINAL CODE

        module.exports;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/engine-v8-version.js", ['./cjs-loader.mjs', './global.js', './engine-user-agent.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var global = require('../internals/global');
        var userAgent = require('../internals/engine-user-agent');
        var process = global.process;
        var Deno = global.Deno;
        var versions = process && process.versions || Deno && Deno.version;
        var v8 = versions && versions.v8;
        var match, version;
        if (v8) {
          match = v8.split('.');
          // in old Chrome, versions of V8 isn't V8 = Chrome / 10
          // but their correct versions are not interesting for us
          version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
        }

        // BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
        // so check `userAgent` even if `.v8` exists, but 0
        if (!version && userAgent) {
          match = userAgent.match(/Edge\/(\d+)/);
          if (!match || match[1] >= 74) {
            match = userAgent.match(/Chrome\/(\d+)/);
            if (match) version = +match[1];
          }
        }
        module.exports = version;

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/global': __cjsMetaURL$1,
          '../internals/engine-user-agent': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/engine-webkit-version.js", ['./cjs-loader.mjs', './engine-user-agent.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var userAgent = require('../internals/engine-user-agent');
        var webkit = userAgent.match(/AppleWebKit\/(\d+)\./);
        module.exports = !!webkit && +webkit[1];

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/engine-user-agent': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/enum-bug-keys.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        // IE8- don't enum bug keys
        module.exports = ['constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString', 'valueOf'];

        // #endregion ORIGINAL CODE

        module.exports;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/es.array-buffer.constructor.js", ['./cjs-loader.mjs', './export.js', './global.js', './array-buffer.js', './set-species.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var global = require('../internals/global');
        var arrayBufferModule = require('../internals/array-buffer');
        var setSpecies = require('../internals/set-species');
        var ARRAY_BUFFER = 'ArrayBuffer';
        var ArrayBuffer = arrayBufferModule[ARRAY_BUFFER];
        var NativeArrayBuffer = global[ARRAY_BUFFER];

        // `ArrayBuffer` constructor
        // https://tc39.es/ecma262/#sec-arraybuffer-constructor
        $({
          global: true,
          constructor: true,
          forced: NativeArrayBuffer !== ArrayBuffer
        }, {
          ArrayBuffer: ArrayBuffer
        });
        setSpecies(ARRAY_BUFFER);

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/global': __cjsMetaURL$2,
          '../internals/array-buffer': __cjsMetaURL$3,
          '../internals/set-species': __cjsMetaURL$4
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.array-buffer.constructor.mjs_cjs=&original=.js", ['./es.array-buffer.constructor.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.array-buffer.constructor.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.array-buffer.constructor.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.array-buffer.is-view.js", ['./cjs-loader.mjs', './export.js', './array-buffer-view-core.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var ArrayBufferViewCore = require('../internals/array-buffer-view-core');
        var NATIVE_ARRAY_BUFFER_VIEWS = ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;

        // `ArrayBuffer.isView` method
        // https://tc39.es/ecma262/#sec-arraybuffer.isview
        $({
          target: 'ArrayBuffer',
          stat: true,
          forced: !NATIVE_ARRAY_BUFFER_VIEWS
        }, {
          isView: ArrayBufferViewCore.isView
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/array-buffer-view-core': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.array-buffer.is-view.mjs_cjs=&original=.js", ['./es.array-buffer.is-view.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.array-buffer.is-view.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.array-buffer.is-view.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.array-buffer.slice.js", ['./cjs-loader.mjs', './export.js', './function-uncurry-this-clause.js', './fails.js', './array-buffer.js', './an-object.js', './to-absolute-index.js', './to-length.js', './species-constructor.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var uncurryThis = require('../internals/function-uncurry-this-clause');
        var fails = require('../internals/fails');
        var ArrayBufferModule = require('../internals/array-buffer');
        var anObject = require('../internals/an-object');
        var toAbsoluteIndex = require('../internals/to-absolute-index');
        var toLength = require('../internals/to-length');
        var speciesConstructor = require('../internals/species-constructor');
        var ArrayBuffer = ArrayBufferModule.ArrayBuffer;
        var DataView = ArrayBufferModule.DataView;
        var DataViewPrototype = DataView.prototype;
        var nativeArrayBufferSlice = uncurryThis(ArrayBuffer.prototype.slice);
        var getUint8 = uncurryThis(DataViewPrototype.getUint8);
        var setUint8 = uncurryThis(DataViewPrototype.setUint8);
        var INCORRECT_SLICE = fails(function () {
          return !new ArrayBuffer(2).slice(1, undefined).byteLength;
        });

        // `ArrayBuffer.prototype.slice` method
        // https://tc39.es/ecma262/#sec-arraybuffer.prototype.slice
        $({
          target: 'ArrayBuffer',
          proto: true,
          unsafe: true,
          forced: INCORRECT_SLICE
        }, {
          slice: function slice(start, end) {
            if (nativeArrayBufferSlice && end === undefined) {
              return nativeArrayBufferSlice(anObject(this), start); // FF fix
            }

            var length = anObject(this).byteLength;
            var first = toAbsoluteIndex(start, length);
            var fin = toAbsoluteIndex(end === undefined ? length : end, length);
            var result = new (speciesConstructor(this, ArrayBuffer))(toLength(fin - first));
            var viewSource = new DataView(this);
            var viewTarget = new DataView(result);
            var index = 0;
            while (first < fin) {
              setUint8(viewTarget, index++, getUint8(viewSource, first++));
            }
            return result;
          }
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/function-uncurry-this-clause': __cjsMetaURL$2,
          '../internals/fails': __cjsMetaURL$3,
          '../internals/array-buffer': __cjsMetaURL$4,
          '../internals/an-object': __cjsMetaURL$5,
          '../internals/to-absolute-index': __cjsMetaURL$6,
          '../internals/to-length': __cjsMetaURL$7,
          '../internals/species-constructor': __cjsMetaURL$8
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.array-buffer.slice.mjs_cjs=&original=.js", ['./es.array-buffer.slice.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.array-buffer.slice.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.array-buffer.slice.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.array.filter.js", ['./cjs-loader.mjs', './export.js', './array-iteration.js', './array-method-has-species-support.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var $filter = require('../internals/array-iteration').filter;
        var arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');
        var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');

        // `Array.prototype.filter` method
        // https://tc39.es/ecma262/#sec-array.prototype.filter
        // with adding support of @@species
        $({
          target: 'Array',
          proto: true,
          forced: !HAS_SPECIES_SUPPORT
        }, {
          filter: function filter(callbackfn /* , thisArg */) {
            return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
          }
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/array-iteration': __cjsMetaURL$2,
          '../internals/array-method-has-species-support': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.array.filter.mjs_cjs=&original=.js", ['./es.array.filter.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.array.filter.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.array.filter.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.array.find-index.js", ['./cjs-loader.mjs', './export.js', './array-iteration.js', './add-to-unscopables.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var $findIndex = require('../internals/array-iteration').findIndex;
        var addToUnscopables = require('../internals/add-to-unscopables');
        var FIND_INDEX = 'findIndex';
        var SKIPS_HOLES = true;

        // Shouldn't skip holes
        // eslint-disable-next-line es/no-array-prototype-findindex -- testing
        if (FIND_INDEX in []) Array(1)[FIND_INDEX](function () {
          SKIPS_HOLES = false;
        });

        // `Array.prototype.findIndex` method
        // https://tc39.es/ecma262/#sec-array.prototype.findindex
        $({
          target: 'Array',
          proto: true,
          forced: SKIPS_HOLES
        }, {
          findIndex: function findIndex(callbackfn /* , that = undefined */) {
            return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
          }
        });

        // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
        addToUnscopables(FIND_INDEX);

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/array-iteration': __cjsMetaURL$2,
          '../internals/add-to-unscopables': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.array.find-index.mjs_cjs=&original=.js", ['./es.array.find-index.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.array.find-index.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.array.find-index.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.array.find.js", ['./cjs-loader.mjs', './export.js', './array-iteration.js', './add-to-unscopables.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var $find = require('../internals/array-iteration').find;
        var addToUnscopables = require('../internals/add-to-unscopables');
        var FIND = 'find';
        var SKIPS_HOLES = true;

        // Shouldn't skip holes
        // eslint-disable-next-line es/no-array-prototype-find -- testing
        if (FIND in []) Array(1)[FIND](function () {
          SKIPS_HOLES = false;
        });

        // `Array.prototype.find` method
        // https://tc39.es/ecma262/#sec-array.prototype.find
        $({
          target: 'Array',
          proto: true,
          forced: SKIPS_HOLES
        }, {
          find: function find(callbackfn /* , that = undefined */) {
            return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
          }
        });

        // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
        addToUnscopables(FIND);

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/array-iteration': __cjsMetaURL$2,
          '../internals/add-to-unscopables': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.array.find.mjs_cjs=&original=.js", ['./es.array.find.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.array.find.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.array.find.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.array.from.js", ['./cjs-loader.mjs', './export.js', './array-from.js', './check-correctness-of-iteration.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var from = require('../internals/array-from');
        var checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');
        var INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {
          // eslint-disable-next-line es/no-array-from -- required for testing
          Array.from(iterable);
        });

        // `Array.from` method
        // https://tc39.es/ecma262/#sec-array.from
        $({
          target: 'Array',
          stat: true,
          forced: INCORRECT_ITERATION
        }, {
          from: from
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/array-from': __cjsMetaURL$2,
          '../internals/check-correctness-of-iteration': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.array.from.mjs_cjs=&original=.js", ['./es.array.from.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.array.from.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.array.from.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.array.includes.js", ['./cjs-loader.mjs', './export.js', './array-includes.js', './fails.js', './add-to-unscopables.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var $includes = require('../internals/array-includes').includes;
        var fails = require('../internals/fails');
        var addToUnscopables = require('../internals/add-to-unscopables');

        // FF99+ bug
        var BROKEN_ON_SPARSE = fails(function () {
          // eslint-disable-next-line es/no-array-prototype-includes -- detection
          return !Array(1).includes();
        });

        // `Array.prototype.includes` method
        // https://tc39.es/ecma262/#sec-array.prototype.includes
        $({
          target: 'Array',
          proto: true,
          forced: BROKEN_ON_SPARSE
        }, {
          includes: function includes(el /* , fromIndex = 0 */) {
            return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
          }
        });

        // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
        addToUnscopables('includes');

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/array-includes': __cjsMetaURL$2,
          '../internals/fails': __cjsMetaURL$3,
          '../internals/add-to-unscopables': __cjsMetaURL$4
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.array.includes.mjs_cjs=&original=.js", ['./es.array.includes.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.array.includes.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.array.includes.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.array.index-of.js", ['./cjs-loader.mjs', './export.js', './function-uncurry-this-clause.js', './array-includes.js', './array-method-is-strict.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        /* eslint-disable es/no-array-prototype-indexof -- required for testing */
        var $ = require('../internals/export');
        var uncurryThis = require('../internals/function-uncurry-this-clause');
        var $indexOf = require('../internals/array-includes').indexOf;
        var arrayMethodIsStrict = require('../internals/array-method-is-strict');
        var nativeIndexOf = uncurryThis([].indexOf);
        var NEGATIVE_ZERO = !!nativeIndexOf && 1 / nativeIndexOf([1], 1, -0) < 0;
        var FORCED = NEGATIVE_ZERO || !arrayMethodIsStrict('indexOf');

        // `Array.prototype.indexOf` method
        // https://tc39.es/ecma262/#sec-array.prototype.indexof
        $({
          target: 'Array',
          proto: true,
          forced: FORCED
        }, {
          indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
            var fromIndex = arguments.length > 1 ? arguments[1] : undefined;
            return NEGATIVE_ZERO
            // convert -0 to +0
            ? nativeIndexOf(this, searchElement, fromIndex) || 0 : $indexOf(this, searchElement, fromIndex);
          }
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/function-uncurry-this-clause': __cjsMetaURL$2,
          '../internals/array-includes': __cjsMetaURL$3,
          '../internals/array-method-is-strict': __cjsMetaURL$4
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.array.index-of.mjs_cjs=&original=.js", ['./es.array.index-of.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.array.index-of.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.array.index-of.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.array.iterator.js", ['./cjs-loader.mjs', './to-indexed-object.js', './add-to-unscopables.js', './iterators.js', './internal-state.js', './object-define-property.js', './iterator-define.js', './create-iter-result-object.js', './is-pure.js', './descriptors.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8, __cjsMetaURL$9;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$9 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var toIndexedObject = require('../internals/to-indexed-object');
        var addToUnscopables = require('../internals/add-to-unscopables');
        var Iterators = require('../internals/iterators');
        var InternalStateModule = require('../internals/internal-state');
        var defineProperty = require('../internals/object-define-property').f;
        var defineIterator = require('../internals/iterator-define');
        var createIterResultObject = require('../internals/create-iter-result-object');
        var IS_PURE = require('../internals/is-pure');
        var DESCRIPTORS = require('../internals/descriptors');
        var ARRAY_ITERATOR = 'Array Iterator';
        var setInternalState = InternalStateModule.set;
        var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

        // `Array.prototype.entries` method
        // https://tc39.es/ecma262/#sec-array.prototype.entries
        // `Array.prototype.keys` method
        // https://tc39.es/ecma262/#sec-array.prototype.keys
        // `Array.prototype.values` method
        // https://tc39.es/ecma262/#sec-array.prototype.values
        // `Array.prototype[@@iterator]` method
        // https://tc39.es/ecma262/#sec-array.prototype-@@iterator
        // `CreateArrayIterator` internal method
        // https://tc39.es/ecma262/#sec-createarrayiterator
        module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
          setInternalState(this, {
            type: ARRAY_ITERATOR,
            target: toIndexedObject(iterated),
            // target
            index: 0,
            // next index
            kind: kind // kind
          });
          // `%ArrayIteratorPrototype%.next` method
          // https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
        }, function () {
          var state = getInternalState(this);
          var target = state.target;
          var kind = state.kind;
          var index = state.index++;
          if (!target || index >= target.length) {
            state.target = undefined;
            return createIterResultObject(undefined, true);
          }
          switch (kind) {
            case 'keys':
              return createIterResultObject(index, false);
            case 'values':
              return createIterResultObject(target[index], false);
          }
          return createIterResultObject([index, target[index]], false);
        }, 'values');

        // argumentsList[@@iterator] is %ArrayProto_values%
        // https://tc39.es/ecma262/#sec-createunmappedargumentsobject
        // https://tc39.es/ecma262/#sec-createmappedargumentsobject
        var values = Iterators.Arguments = Iterators.Array;

        // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
        addToUnscopables('keys');
        addToUnscopables('values');
        addToUnscopables('entries');

        // V8 ~ Chrome 45- bug
        if (!IS_PURE && DESCRIPTORS && values.name !== 'values') try {
          defineProperty(values, 'name', {
            value: 'values'
          });
        } catch (error) {/* empty */}

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/to-indexed-object': __cjsMetaURL$1,
          '../internals/add-to-unscopables': __cjsMetaURL$2,
          '../internals/iterators': __cjsMetaURL$3,
          '../internals/internal-state': __cjsMetaURL$4,
          '../internals/object-define-property': __cjsMetaURL$5,
          '../internals/iterator-define': __cjsMetaURL$6,
          '../internals/create-iter-result-object': __cjsMetaURL$7,
          '../internals/is-pure': __cjsMetaURL$8,
          '../internals/descriptors': __cjsMetaURL$9
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.array.iterator.mjs_cjs=&original=.js", ['./es.array.iterator.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.array.iterator.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.array.iterator.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.array.join.js", ['./cjs-loader.mjs', './export.js', './function-uncurry-this.js', './indexed-object.js', './to-indexed-object.js', './array-method-is-strict.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var uncurryThis = require('../internals/function-uncurry-this');
        var IndexedObject = require('../internals/indexed-object');
        var toIndexedObject = require('../internals/to-indexed-object');
        var arrayMethodIsStrict = require('../internals/array-method-is-strict');
        var nativeJoin = uncurryThis([].join);
        var ES3_STRINGS = IndexedObject !== Object;
        var FORCED = ES3_STRINGS || !arrayMethodIsStrict('join', ',');

        // `Array.prototype.join` method
        // https://tc39.es/ecma262/#sec-array.prototype.join
        $({
          target: 'Array',
          proto: true,
          forced: FORCED
        }, {
          join: function join(separator) {
            return nativeJoin(toIndexedObject(this), separator === undefined ? ',' : separator);
          }
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/function-uncurry-this': __cjsMetaURL$2,
          '../internals/indexed-object': __cjsMetaURL$3,
          '../internals/to-indexed-object': __cjsMetaURL$4,
          '../internals/array-method-is-strict': __cjsMetaURL$5
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.array.join.mjs_cjs=&original=.js", ['./es.array.join.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.array.join.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.array.join.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.array.map.js", ['./cjs-loader.mjs', './export.js', './array-iteration.js', './array-method-has-species-support.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var $map = require('../internals/array-iteration').map;
        var arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');
        var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');

        // `Array.prototype.map` method
        // https://tc39.es/ecma262/#sec-array.prototype.map
        // with adding support of @@species
        $({
          target: 'Array',
          proto: true,
          forced: !HAS_SPECIES_SUPPORT
        }, {
          map: function map(callbackfn /* , thisArg */) {
            return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
          }
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/array-iteration': __cjsMetaURL$2,
          '../internals/array-method-has-species-support': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.array.map.mjs_cjs=&original=.js", ['./es.array.map.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.array.map.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.array.map.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.array.slice.js", ['./cjs-loader.mjs', './export.js', './is-array.js', './is-constructor.js', './is-object.js', './to-absolute-index.js', './length-of-array-like.js', './to-indexed-object.js', './create-property.js', './well-known-symbol.js', './array-method-has-species-support.js', './array-slice.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8, __cjsMetaURL$9, __cjsMetaURL$a, __cjsMetaURL$b;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$9 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$a = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$b = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var isArray = require('../internals/is-array');
        var isConstructor = require('../internals/is-constructor');
        var isObject = require('../internals/is-object');
        var toAbsoluteIndex = require('../internals/to-absolute-index');
        var lengthOfArrayLike = require('../internals/length-of-array-like');
        var toIndexedObject = require('../internals/to-indexed-object');
        var createProperty = require('../internals/create-property');
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');
        var nativeSlice = require('../internals/array-slice');
        var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');
        var SPECIES = wellKnownSymbol('species');
        var $Array = Array;
        var max = Math.max;

        // `Array.prototype.slice` method
        // https://tc39.es/ecma262/#sec-array.prototype.slice
        // fallback for not array-like ES3 strings and DOM objects
        $({
          target: 'Array',
          proto: true,
          forced: !HAS_SPECIES_SUPPORT
        }, {
          slice: function slice(start, end) {
            var O = toIndexedObject(this);
            var length = lengthOfArrayLike(O);
            var k = toAbsoluteIndex(start, length);
            var fin = toAbsoluteIndex(end === undefined ? length : end, length);
            // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible
            var Constructor, result, n;
            if (isArray(O)) {
              Constructor = O.constructor;
              // cross-realm fallback
              if (isConstructor(Constructor) && (Constructor === $Array || isArray(Constructor.prototype))) {
                Constructor = undefined;
              } else if (isObject(Constructor)) {
                Constructor = Constructor[SPECIES];
                if (Constructor === null) Constructor = undefined;
              }
              if (Constructor === $Array || Constructor === undefined) {
                return nativeSlice(O, k, fin);
              }
            }
            result = new (Constructor === undefined ? $Array : Constructor)(max(fin - k, 0));
            for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);
            result.length = n;
            return result;
          }
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/is-array': __cjsMetaURL$2,
          '../internals/is-constructor': __cjsMetaURL$3,
          '../internals/is-object': __cjsMetaURL$4,
          '../internals/to-absolute-index': __cjsMetaURL$5,
          '../internals/length-of-array-like': __cjsMetaURL$6,
          '../internals/to-indexed-object': __cjsMetaURL$7,
          '../internals/create-property': __cjsMetaURL$8,
          '../internals/well-known-symbol': __cjsMetaURL$9,
          '../internals/array-method-has-species-support': __cjsMetaURL$a,
          '../internals/array-slice': __cjsMetaURL$b
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.array.slice.mjs_cjs=&original=.js", ['./es.array.slice.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.array.slice.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.array.slice.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.array.splice.js", ['./cjs-loader.mjs', './export.js', './to-object.js', './to-absolute-index.js', './to-integer-or-infinity.js', './length-of-array-like.js', './array-set-length.js', './does-not-exceed-safe-integer.js', './array-species-create.js', './create-property.js', './delete-property-or-throw.js', './array-method-has-species-support.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8, __cjsMetaURL$9, __cjsMetaURL$a, __cjsMetaURL$b;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$9 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$a = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$b = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var toObject = require('../internals/to-object');
        var toAbsoluteIndex = require('../internals/to-absolute-index');
        var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');
        var lengthOfArrayLike = require('../internals/length-of-array-like');
        var setArrayLength = require('../internals/array-set-length');
        var doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');
        var arraySpeciesCreate = require('../internals/array-species-create');
        var createProperty = require('../internals/create-property');
        var deletePropertyOrThrow = require('../internals/delete-property-or-throw');
        var arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');
        var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');
        var max = Math.max;
        var min = Math.min;

        // `Array.prototype.splice` method
        // https://tc39.es/ecma262/#sec-array.prototype.splice
        // with adding support of @@species
        $({
          target: 'Array',
          proto: true,
          forced: !HAS_SPECIES_SUPPORT
        }, {
          splice: function splice(start, deleteCount /* , ...items */) {
            var O = toObject(this);
            var len = lengthOfArrayLike(O);
            var actualStart = toAbsoluteIndex(start, len);
            var argumentsLength = arguments.length;
            var insertCount, actualDeleteCount, A, k, from, to;
            if (argumentsLength === 0) {
              insertCount = actualDeleteCount = 0;
            } else if (argumentsLength === 1) {
              insertCount = 0;
              actualDeleteCount = len - actualStart;
            } else {
              insertCount = argumentsLength - 2;
              actualDeleteCount = min(max(toIntegerOrInfinity(deleteCount), 0), len - actualStart);
            }
            doesNotExceedSafeInteger(len + insertCount - actualDeleteCount);
            A = arraySpeciesCreate(O, actualDeleteCount);
            for (k = 0; k < actualDeleteCount; k++) {
              from = actualStart + k;
              if (from in O) createProperty(A, k, O[from]);
            }
            A.length = actualDeleteCount;
            if (insertCount < actualDeleteCount) {
              for (k = actualStart; k < len - actualDeleteCount; k++) {
                from = k + actualDeleteCount;
                to = k + insertCount;
                if (from in O) O[to] = O[from];else deletePropertyOrThrow(O, to);
              }
              for (k = len; k > len - actualDeleteCount + insertCount; k--) deletePropertyOrThrow(O, k - 1);
            } else if (insertCount > actualDeleteCount) {
              for (k = len - actualDeleteCount; k > actualStart; k--) {
                from = k + actualDeleteCount - 1;
                to = k + insertCount - 1;
                if (from in O) O[to] = O[from];else deletePropertyOrThrow(O, to);
              }
            }
            for (k = 0; k < insertCount; k++) {
              O[k + actualStart] = arguments[k + 2];
            }
            setArrayLength(O, len - actualDeleteCount + insertCount);
            return A;
          }
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/to-object': __cjsMetaURL$2,
          '../internals/to-absolute-index': __cjsMetaURL$3,
          '../internals/to-integer-or-infinity': __cjsMetaURL$4,
          '../internals/length-of-array-like': __cjsMetaURL$5,
          '../internals/array-set-length': __cjsMetaURL$6,
          '../internals/does-not-exceed-safe-integer': __cjsMetaURL$7,
          '../internals/array-species-create': __cjsMetaURL$8,
          '../internals/create-property': __cjsMetaURL$9,
          '../internals/delete-property-or-throw': __cjsMetaURL$a,
          '../internals/array-method-has-species-support': __cjsMetaURL$b
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.array.splice.mjs_cjs=&original=.js", ['./es.array.splice.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.array.splice.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.array.splice.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.function.name.js", ['./cjs-loader.mjs', './descriptors.js', './function-name.js', './function-uncurry-this.js', './define-built-in-accessor.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var DESCRIPTORS = require('../internals/descriptors');
        var FUNCTION_NAME_EXISTS = require('../internals/function-name').EXISTS;
        var uncurryThis = require('../internals/function-uncurry-this');
        var defineBuiltInAccessor = require('../internals/define-built-in-accessor');
        var FunctionPrototype = Function.prototype;
        var functionToString = uncurryThis(FunctionPrototype.toString);
        var nameRE = /function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/;
        var regExpExec = uncurryThis(nameRE.exec);
        var NAME = 'name';

        // Function instances `.name` property
        // https://tc39.es/ecma262/#sec-function-instances-name
        if (DESCRIPTORS && !FUNCTION_NAME_EXISTS) {
          defineBuiltInAccessor(FunctionPrototype, NAME, {
            configurable: true,
            get: function get() {
              try {
                return regExpExec(nameRE, functionToString(this))[1];
              } catch (error) {
                return '';
              }
            }
          });
        }

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/descriptors': __cjsMetaURL$1,
          '../internals/function-name': __cjsMetaURL$2,
          '../internals/function-uncurry-this': __cjsMetaURL$3,
          '../internals/define-built-in-accessor': __cjsMetaURL$4
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.function.name.mjs_cjs=&original=.js", ['./es.function.name.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.function.name.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.function.name.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.json.stringify.js", ['./cjs-loader.mjs', './export.js', './get-built-in.js', './function-apply.js', './function-call.js', './function-uncurry-this.js', './fails.js', './is-callable.js', './is-symbol.js', './array-slice.js', './get-json-replacer-function.js', './symbol-constructor-detection.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8, __cjsMetaURL$9, __cjsMetaURL$a, __cjsMetaURL$b;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$9 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$a = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$b = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var getBuiltIn = require('../internals/get-built-in');
        var apply = require('../internals/function-apply');
        var call = require('../internals/function-call');
        var uncurryThis = require('../internals/function-uncurry-this');
        var fails = require('../internals/fails');
        var isCallable = require('../internals/is-callable');
        var isSymbol = require('../internals/is-symbol');
        var arraySlice = require('../internals/array-slice');
        var getReplacerFunction = require('../internals/get-json-replacer-function');
        var NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');
        var $String = String;
        var $stringify = getBuiltIn('JSON', 'stringify');
        var exec = uncurryThis(/./.exec);
        var charAt = uncurryThis(''.charAt);
        var charCodeAt = uncurryThis(''.charCodeAt);
        var replace = uncurryThis(''.replace);
        var numberToString = uncurryThis(1.0.toString);
        var tester = /[\uD800-\uDFFF]/g;
        var low = /^[\uD800-\uDBFF]$/;
        var hi = /^[\uDC00-\uDFFF]$/;
        var WRONG_SYMBOLS_CONVERSION = !NATIVE_SYMBOL || fails(function () {
          var symbol = getBuiltIn('Symbol')('stringify detection');
          // MS Edge converts symbol values to JSON as {}
          return $stringify([symbol]) !== '[null]'
          // WebKit converts symbol values to JSON as null
          || $stringify({
            a: symbol
          }) !== '{}'
          // V8 throws on boxed symbols
          || $stringify(Object(symbol)) !== '{}';
        });

        // https://github.com/tc39/proposal-well-formed-stringify
        var ILL_FORMED_UNICODE = fails(function () {
          return $stringify("\uDF06\uD834") !== "\"\\udf06\\ud834\"" || $stringify("\uDEAD") !== "\"\\udead\"";
        });
        var stringifyWithSymbolsFix = function stringifyWithSymbolsFix(it, replacer) {
          var args = arraySlice(arguments);
          var $replacer = getReplacerFunction(replacer);
          if (!isCallable($replacer) && (it === undefined || isSymbol(it))) return; // IE8 returns string on undefined
          args[1] = function (key, value) {
            // some old implementations (like WebKit) could pass numbers as keys
            if (isCallable($replacer)) value = call($replacer, this, $String(key), value);
            if (!isSymbol(value)) return value;
          };
          return apply($stringify, null, args);
        };
        var fixIllFormed = function fixIllFormed(match, offset, string) {
          var prev = charAt(string, offset - 1);
          var next = charAt(string, offset + 1);
          if (exec(low, match) && !exec(hi, next) || exec(hi, match) && !exec(low, prev)) {
            return "\\u" + numberToString(charCodeAt(match, 0), 16);
          }
          return match;
        };
        if ($stringify) {
          // `JSON.stringify` method
          // https://tc39.es/ecma262/#sec-json.stringify
          $({
            target: 'JSON',
            stat: true,
            arity: 3,
            forced: WRONG_SYMBOLS_CONVERSION || ILL_FORMED_UNICODE
          }, {
            // eslint-disable-next-line no-unused-vars -- required for `.length`
            stringify: function stringify(it, replacer, space) {
              var args = arraySlice(arguments);
              var result = apply(WRONG_SYMBOLS_CONVERSION ? stringifyWithSymbolsFix : $stringify, null, args);
              return ILL_FORMED_UNICODE && typeof result == 'string' ? replace(result, tester, fixIllFormed) : result;
            }
          });
        }

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/get-built-in': __cjsMetaURL$2,
          '../internals/function-apply': __cjsMetaURL$3,
          '../internals/function-call': __cjsMetaURL$4,
          '../internals/function-uncurry-this': __cjsMetaURL$5,
          '../internals/fails': __cjsMetaURL$6,
          '../internals/is-callable': __cjsMetaURL$7,
          '../internals/is-symbol': __cjsMetaURL$8,
          '../internals/array-slice': __cjsMetaURL$9,
          '../internals/get-json-replacer-function': __cjsMetaURL$a,
          '../internals/symbol-constructor-detection': __cjsMetaURL$b
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.json.stringify.mjs_cjs=&original=.js", ['./es.json.stringify.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.json.stringify.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.json.stringify.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.number.constructor.js", ['./cjs-loader.mjs', './export.js', './is-pure.js', './descriptors.js', './global.js', './path.js', './function-uncurry-this.js', './is-forced.js', './has-own-property.js', './inherit-if-required.js', './object-is-prototype-of.js', './is-symbol.js', './to-primitive.js', './fails.js', './object-get-own-property-names.js', './object-get-own-property-descriptor.js', './object-define-property.js', './this-number-value.js', './string-trim.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8, __cjsMetaURL$9, __cjsMetaURL$a, __cjsMetaURL$b, __cjsMetaURL$c, __cjsMetaURL$d, __cjsMetaURL$e, __cjsMetaURL$f, __cjsMetaURL$g, __cjsMetaURL$h, __cjsMetaURL$i;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$9 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$a = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$b = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$c = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$d = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$e = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$f = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$g = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$h = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$i = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var IS_PURE = require('../internals/is-pure');
        var DESCRIPTORS = require('../internals/descriptors');
        var global = require('../internals/global');
        var path = require('../internals/path');
        var uncurryThis = require('../internals/function-uncurry-this');
        var isForced = require('../internals/is-forced');
        var hasOwn = require('../internals/has-own-property');
        var inheritIfRequired = require('../internals/inherit-if-required');
        var isPrototypeOf = require('../internals/object-is-prototype-of');
        var isSymbol = require('../internals/is-symbol');
        var toPrimitive = require('../internals/to-primitive');
        var fails = require('../internals/fails');
        var getOwnPropertyNames = require('../internals/object-get-own-property-names').f;
        var getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;
        var defineProperty = require('../internals/object-define-property').f;
        var thisNumberValue = require('../internals/this-number-value');
        var trim = require('../internals/string-trim').trim;
        var NUMBER = 'Number';
        var NativeNumber = global[NUMBER];
        var PureNumberNamespace = path[NUMBER];
        var NumberPrototype = NativeNumber.prototype;
        var TypeError = global.TypeError;
        var stringSlice = uncurryThis(''.slice);
        var charCodeAt = uncurryThis(''.charCodeAt);

        // `ToNumeric` abstract operation
        // https://tc39.es/ecma262/#sec-tonumeric
        var toNumeric = function toNumeric(value) {
          var primValue = toPrimitive(value, 'number');
          return typeof primValue == 'bigint' ? primValue : toNumber(primValue);
        };

        // `ToNumber` abstract operation
        // https://tc39.es/ecma262/#sec-tonumber
        var toNumber = function toNumber(argument) {
          var it = toPrimitive(argument, 'number');
          var first, third, radix, maxCode, digits, length, index, code;
          if (isSymbol(it)) throw TypeError('Cannot convert a Symbol value to a number');
          if (typeof it == 'string' && it.length > 2) {
            it = trim(it);
            first = charCodeAt(it, 0);
            if (first === 43 || first === 45) {
              third = charCodeAt(it, 2);
              if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
            } else if (first === 48) {
              switch (charCodeAt(it, 1)) {
                // fast equal of /^0b[01]+$/i
                case 66:
                case 98:
                  radix = 2;
                  maxCode = 49;
                  break;
                // fast equal of /^0o[0-7]+$/i
                case 79:
                case 111:
                  radix = 8;
                  maxCode = 55;
                  break;
                default:
                  return +it;
              }
              digits = stringSlice(it, 2);
              length = digits.length;
              for (index = 0; index < length; index++) {
                code = charCodeAt(digits, index);
                // parseInt parses a string to a first unavailable symbol
                // but ToNumber should return NaN if a string contains unavailable symbols
                if (code < 48 || code > maxCode) return NaN;
              }
              return parseInt(digits, radix);
            }
          }
          return +it;
        };
        var FORCED = isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'));
        var calledWithNew = function calledWithNew(dummy) {
          // includes check on 1..constructor(foo) case
          return isPrototypeOf(NumberPrototype, dummy) && fails(function () {
            thisNumberValue(dummy);
          });
        };

        // `Number` constructor
        // https://tc39.es/ecma262/#sec-number-constructor
        var NumberWrapper = function Number(value) {
          var n = arguments.length < 1 ? 0 : NativeNumber(toNumeric(value));
          return calledWithNew(this) ? inheritIfRequired(Object(n), this, NumberWrapper) : n;
        };
        NumberWrapper.prototype = NumberPrototype;
        if (FORCED && !IS_PURE) NumberPrototype.constructor = NumberWrapper;
        $({
          global: true,
          constructor: true,
          wrap: true,
          forced: FORCED
        }, {
          Number: NumberWrapper
        });

        // Use `internal/copy-constructor-properties` helper in `core-js@4`
        var copyConstructorProperties = function copyConstructorProperties(target, source) {
          for (var keys = DESCRIPTORS ? getOwnPropertyNames(source) : (
            // ES3:
            'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
            // ES2015 (in case, if modules with ES2015 Number statics required before):
            'EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,' +
            // ESNext
            'fromString,range').split(','), j = 0, key; keys.length > j; j++) {
            if (hasOwn(source, key = keys[j]) && !hasOwn(target, key)) {
              defineProperty(target, key, getOwnPropertyDescriptor(source, key));
            }
          }
        };
        if (IS_PURE && PureNumberNamespace) copyConstructorProperties(path[NUMBER], PureNumberNamespace);
        if (FORCED || IS_PURE) copyConstructorProperties(path[NUMBER], NativeNumber);

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/is-pure': __cjsMetaURL$2,
          '../internals/descriptors': __cjsMetaURL$3,
          '../internals/global': __cjsMetaURL$4,
          '../internals/path': __cjsMetaURL$5,
          '../internals/function-uncurry-this': __cjsMetaURL$6,
          '../internals/is-forced': __cjsMetaURL$7,
          '../internals/has-own-property': __cjsMetaURL$8,
          '../internals/inherit-if-required': __cjsMetaURL$9,
          '../internals/object-is-prototype-of': __cjsMetaURL$a,
          '../internals/is-symbol': __cjsMetaURL$b,
          '../internals/to-primitive': __cjsMetaURL$c,
          '../internals/fails': __cjsMetaURL$d,
          '../internals/object-get-own-property-names': __cjsMetaURL$e,
          '../internals/object-get-own-property-descriptor': __cjsMetaURL$f,
          '../internals/object-define-property': __cjsMetaURL$g,
          '../internals/this-number-value': __cjsMetaURL$h,
          '../internals/string-trim': __cjsMetaURL$i
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.number.constructor.mjs_cjs=&original=.js", ['./es.number.constructor.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.number.constructor.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.number.constructor.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.number.is-integer.js", ['./cjs-loader.mjs', './export.js', './is-integral-number.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var isIntegralNumber = require('../internals/is-integral-number');

        // `Number.isInteger` method
        // https://tc39.es/ecma262/#sec-number.isinteger
        $({
          target: 'Number',
          stat: true
        }, {
          isInteger: isIntegralNumber
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/is-integral-number': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.number.is-integer.mjs_cjs=&original=.js", ['./es.number.is-integer.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.number.is-integer.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.number.is-integer.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.number.max-safe-integer.js", ['./cjs-loader.mjs', './export.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');

        // `Number.MAX_SAFE_INTEGER` constant
        // https://tc39.es/ecma262/#sec-number.max_safe_integer
        $({
          target: 'Number',
          stat: true,
          nonConfigurable: true,
          nonWritable: true
        }, {
          MAX_SAFE_INTEGER: 0x1FFFFFFFFFFFFF
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.number.max-safe-integer.mjs_cjs=&original=.js", ['./es.number.max-safe-integer.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.number.max-safe-integer.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.number.max-safe-integer.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.number.parse-int.js", ['./cjs-loader.mjs', './export.js', './number-parse-int.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var parseInt = require('../internals/number-parse-int');

        // `Number.parseInt` method
        // https://tc39.es/ecma262/#sec-number.parseint
        // eslint-disable-next-line es/no-number-parseint -- required for testing
        $({
          target: 'Number',
          stat: true,
          forced: Number.parseInt !== parseInt
        }, {
          parseInt: parseInt
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/number-parse-int': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.number.parse-int.mjs_cjs=&original=.js", ['./es.number.parse-int.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.number.parse-int.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.number.parse-int.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.object.assign.js", ['./cjs-loader.mjs', './export.js', './object-assign.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var assign = require('../internals/object-assign');

        // `Object.assign` method
        // https://tc39.es/ecma262/#sec-object.assign
        // eslint-disable-next-line es/no-object-assign -- required for testing
        $({
          target: 'Object',
          stat: true,
          arity: 2,
          forced: Object.assign !== assign
        }, {
          assign: assign
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/object-assign': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.object.assign.mjs_cjs=&original=.js", ['./es.object.assign.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.object.assign.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.object.assign.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.object.entries.js", ['./cjs-loader.mjs', './export.js', './object-to-array.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var $entries = require('../internals/object-to-array').entries;

        // `Object.entries` method
        // https://tc39.es/ecma262/#sec-object.entries
        $({
          target: 'Object',
          stat: true
        }, {
          entries: function entries(O) {
            return $entries(O);
          }
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/object-to-array': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.object.entries.mjs_cjs=&original=.js", ['./es.object.entries.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.object.entries.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.object.entries.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.object.get-prototype-of.js", ['./cjs-loader.mjs', './export.js', './fails.js', './to-object.js', './object-get-prototype-of.js', './correct-prototype-getter.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var fails = require('../internals/fails');
        var toObject = require('../internals/to-object');
        var nativeGetPrototypeOf = require('../internals/object-get-prototype-of');
        var CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');
        var FAILS_ON_PRIMITIVES = fails(function () {
          nativeGetPrototypeOf(1);
        });

        // `Object.getPrototypeOf` method
        // https://tc39.es/ecma262/#sec-object.getprototypeof
        $({
          target: 'Object',
          stat: true,
          forced: FAILS_ON_PRIMITIVES,
          sham: !CORRECT_PROTOTYPE_GETTER
        }, {
          getPrototypeOf: function getPrototypeOf(it) {
            return nativeGetPrototypeOf(toObject(it));
          }
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/fails': __cjsMetaURL$2,
          '../internals/to-object': __cjsMetaURL$3,
          '../internals/object-get-prototype-of': __cjsMetaURL$4,
          '../internals/correct-prototype-getter': __cjsMetaURL$5
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.object.get-prototype-of.mjs_cjs=&original=.js", ['./es.object.get-prototype-of.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.object.get-prototype-of.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.object.get-prototype-of.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.object.keys.js", ['./cjs-loader.mjs', './export.js', './to-object.js', './object-keys.js', './fails.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var toObject = require('../internals/to-object');
        var nativeKeys = require('../internals/object-keys');
        var fails = require('../internals/fails');
        var FAILS_ON_PRIMITIVES = fails(function () {
          nativeKeys(1);
        });

        // `Object.keys` method
        // https://tc39.es/ecma262/#sec-object.keys
        $({
          target: 'Object',
          stat: true,
          forced: FAILS_ON_PRIMITIVES
        }, {
          keys: function keys(it) {
            return nativeKeys(toObject(it));
          }
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/to-object': __cjsMetaURL$2,
          '../internals/object-keys': __cjsMetaURL$3,
          '../internals/fails': __cjsMetaURL$4
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.object.keys.mjs_cjs=&original=.js", ['./es.object.keys.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.object.keys.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.object.keys.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.object.to-string.js", ['./cjs-loader.mjs', './to-string-tag-support.js', './define-built-in.js', './object-to-string.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');
        var defineBuiltIn = require('../internals/define-built-in');
        var toString = require('../internals/object-to-string');

        // `Object.prototype.toString` method
        // https://tc39.es/ecma262/#sec-object.prototype.tostring
        if (!TO_STRING_TAG_SUPPORT) {
          defineBuiltIn(Object.prototype, 'toString', toString, {
            unsafe: true
          });
        }

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/to-string-tag-support': __cjsMetaURL$1,
          '../internals/define-built-in': __cjsMetaURL$2,
          '../internals/object-to-string': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.object.to-string.mjs_cjs=&original=.js", ['./es.object.to-string.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.object.to-string.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.object.to-string.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.parse-int.js", ['./cjs-loader.mjs', './export.js', './number-parse-int.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var $parseInt = require('../internals/number-parse-int');

        // `parseInt` method
        // https://tc39.es/ecma262/#sec-parseint-string-radix
        $({
          global: true,
          forced: parseInt !== $parseInt
        }, {
          parseInt: $parseInt
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/number-parse-int': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.parse-int.mjs_cjs=&original=.js", ['./es.parse-int.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.parse-int.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.parse-int.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.promise.all.js", ['./cjs-loader.mjs', './export.js', './function-call.js', './a-callable.js', './new-promise-capability.js', './perform.js', './iterate.js', './promise-statics-incorrect-iteration.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var call = require('../internals/function-call');
        var aCallable = require('../internals/a-callable');
        var newPromiseCapabilityModule = require('../internals/new-promise-capability');
        var perform = require('../internals/perform');
        var iterate = require('../internals/iterate');
        var PROMISE_STATICS_INCORRECT_ITERATION = require('../internals/promise-statics-incorrect-iteration');

        // `Promise.all` method
        // https://tc39.es/ecma262/#sec-promise.all
        $({
          target: 'Promise',
          stat: true,
          forced: PROMISE_STATICS_INCORRECT_ITERATION
        }, {
          all: function all(iterable) {
            var C = this;
            var capability = newPromiseCapabilityModule.f(C);
            var resolve = capability.resolve;
            var reject = capability.reject;
            var result = perform(function () {
              var $promiseResolve = aCallable(C.resolve);
              var values = [];
              var counter = 0;
              var remaining = 1;
              iterate(iterable, function (promise) {
                var index = counter++;
                var alreadyCalled = false;
                remaining++;
                call($promiseResolve, C, promise).then(function (value) {
                  if (alreadyCalled) return;
                  alreadyCalled = true;
                  values[index] = value;
                  --remaining || resolve(values);
                }, reject);
              });
              --remaining || resolve(values);
            });
            if (result.error) reject(result.value);
            return capability.promise;
          }
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/function-call': __cjsMetaURL$2,
          '../internals/a-callable': __cjsMetaURL$3,
          '../internals/new-promise-capability': __cjsMetaURL$4,
          '../internals/perform': __cjsMetaURL$5,
          '../internals/iterate': __cjsMetaURL$6,
          '../internals/promise-statics-incorrect-iteration': __cjsMetaURL$7
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.promise.catch.js", ['./cjs-loader.mjs', './export.js', './is-pure.js', './promise-constructor-detection.js', './promise-native-constructor.js', './get-built-in.js', './is-callable.js', './define-built-in.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var IS_PURE = require('../internals/is-pure');
        var FORCED_PROMISE_CONSTRUCTOR = require('../internals/promise-constructor-detection').CONSTRUCTOR;
        var NativePromiseConstructor = require('../internals/promise-native-constructor');
        var getBuiltIn = require('../internals/get-built-in');
        var isCallable = require('../internals/is-callable');
        var defineBuiltIn = require('../internals/define-built-in');
        var NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;

        // `Promise.prototype.catch` method
        // https://tc39.es/ecma262/#sec-promise.prototype.catch
        $({
          target: 'Promise',
          proto: true,
          forced: FORCED_PROMISE_CONSTRUCTOR,
          real: true
        }, {
          'catch': function _catch(onRejected) {
            return this.then(undefined, onRejected);
          }
        });

        // makes sure that native promise-based APIs `Promise#catch` properly works with patched `Promise#then`
        if (!IS_PURE && isCallable(NativePromiseConstructor)) {
          var method = getBuiltIn('Promise').prototype['catch'];
          if (NativePromisePrototype['catch'] !== method) {
            defineBuiltIn(NativePromisePrototype, 'catch', method, {
              unsafe: true
            });
          }
        }

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/is-pure': __cjsMetaURL$2,
          '../internals/promise-constructor-detection': __cjsMetaURL$3,
          '../internals/promise-native-constructor': __cjsMetaURL$4,
          '../internals/get-built-in': __cjsMetaURL$5,
          '../internals/is-callable': __cjsMetaURL$6,
          '../internals/define-built-in': __cjsMetaURL$7
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.promise.constructor.js", ['./cjs-loader.mjs', './export.js', './is-pure.js', './engine-is-node.js', './global.js', './function-call.js', './define-built-in.js', './object-set-prototype-of.js', './set-to-string-tag.js', './set-species.js', './a-callable.js', './is-callable.js', './is-object.js', './an-instance.js', './species-constructor.js', './task.js', './microtask.js', './host-report-errors.js', './perform.js', './queue.js', './internal-state.js', './promise-native-constructor.js', './promise-constructor-detection.js', './new-promise-capability.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8, __cjsMetaURL$9, __cjsMetaURL$a, __cjsMetaURL$b, __cjsMetaURL$c, __cjsMetaURL$d, __cjsMetaURL$e, __cjsMetaURL$f, __cjsMetaURL$g, __cjsMetaURL$h, __cjsMetaURL$i, __cjsMetaURL$j, __cjsMetaURL$k, __cjsMetaURL$l, __cjsMetaURL$m, __cjsMetaURL$n;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$9 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$a = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$b = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$c = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$d = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$e = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$f = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$g = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$h = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$i = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$j = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$k = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$l = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$m = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$n = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var IS_PURE = require('../internals/is-pure');
        var IS_NODE = require('../internals/engine-is-node');
        var global = require('../internals/global');
        var call = require('../internals/function-call');
        var defineBuiltIn = require('../internals/define-built-in');
        var setPrototypeOf = require('../internals/object-set-prototype-of');
        var setToStringTag = require('../internals/set-to-string-tag');
        var setSpecies = require('../internals/set-species');
        var aCallable = require('../internals/a-callable');
        var isCallable = require('../internals/is-callable');
        var isObject = require('../internals/is-object');
        var anInstance = require('../internals/an-instance');
        var speciesConstructor = require('../internals/species-constructor');
        var task = require('../internals/task').set;
        var microtask = require('../internals/microtask');
        var hostReportErrors = require('../internals/host-report-errors');
        var perform = require('../internals/perform');
        var Queue = require('../internals/queue');
        var InternalStateModule = require('../internals/internal-state');
        var NativePromiseConstructor = require('../internals/promise-native-constructor');
        var PromiseConstructorDetection = require('../internals/promise-constructor-detection');
        var newPromiseCapabilityModule = require('../internals/new-promise-capability');
        var PROMISE = 'Promise';
        var FORCED_PROMISE_CONSTRUCTOR = PromiseConstructorDetection.CONSTRUCTOR;
        var NATIVE_PROMISE_REJECTION_EVENT = PromiseConstructorDetection.REJECTION_EVENT;
        var NATIVE_PROMISE_SUBCLASSING = PromiseConstructorDetection.SUBCLASSING;
        var getInternalPromiseState = InternalStateModule.getterFor(PROMISE);
        var setInternalState = InternalStateModule.set;
        var NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;
        var PromiseConstructor = NativePromiseConstructor;
        var PromisePrototype = NativePromisePrototype;
        var TypeError = global.TypeError;
        var document = global.document;
        var process = global.process;
        var newPromiseCapability = newPromiseCapabilityModule.f;
        var newGenericPromiseCapability = newPromiseCapability;
        var DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);
        var UNHANDLED_REJECTION = 'unhandledrejection';
        var REJECTION_HANDLED = 'rejectionhandled';
        var PENDING = 0;
        var FULFILLED = 1;
        var REJECTED = 2;
        var HANDLED = 1;
        var UNHANDLED = 2;
        var Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;

        // helpers
        var isThenable = function isThenable(it) {
          var then;
          return isObject(it) && isCallable(then = it.then) ? then : false;
        };
        var callReaction = function callReaction(reaction, state) {
          var value = state.value;
          var ok = state.state === FULFILLED;
          var handler = ok ? reaction.ok : reaction.fail;
          var resolve = reaction.resolve;
          var reject = reaction.reject;
          var domain = reaction.domain;
          var result, then, exited;
          try {
            if (handler) {
              if (!ok) {
                if (state.rejection === UNHANDLED) onHandleUnhandled(state);
                state.rejection = HANDLED;
              }
              if (handler === true) result = value;else {
                if (domain) domain.enter();
                result = handler(value); // can throw
                if (domain) {
                  domain.exit();
                  exited = true;
                }
              }
              if (result === reaction.promise) {
                reject(TypeError('Promise-chain cycle'));
              } else if (then = isThenable(result)) {
                call(then, result, resolve, reject);
              } else resolve(result);
            } else reject(value);
          } catch (error) {
            if (domain && !exited) domain.exit();
            reject(error);
          }
        };
        var notify = function notify(state, isReject) {
          if (state.notified) return;
          state.notified = true;
          microtask(function () {
            var reactions = state.reactions;
            var reaction;
            while (reaction = reactions.get()) {
              callReaction(reaction, state);
            }
            state.notified = false;
            if (isReject && !state.rejection) onUnhandled(state);
          });
        };
        var dispatchEvent = function dispatchEvent(name, promise, reason) {
          var event, handler;
          if (DISPATCH_EVENT) {
            event = document.createEvent('Event');
            event.promise = promise;
            event.reason = reason;
            event.initEvent(name, false, true);
            global.dispatchEvent(event);
          } else event = {
            promise: promise,
            reason: reason
          };
          if (!NATIVE_PROMISE_REJECTION_EVENT && (handler = global['on' + name])) handler(event);else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);
        };
        var onUnhandled = function onUnhandled(state) {
          call(task, global, function () {
            var promise = state.facade;
            var value = state.value;
            var IS_UNHANDLED = isUnhandled(state);
            var result;
            if (IS_UNHANDLED) {
              result = perform(function () {
                if (IS_NODE) {
                  process.emit('unhandledRejection', value, promise);
                } else dispatchEvent(UNHANDLED_REJECTION, promise, value);
              });
              // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
              state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
              if (result.error) throw result.value;
            }
          });
        };
        var isUnhandled = function isUnhandled(state) {
          return state.rejection !== HANDLED && !state.parent;
        };
        var onHandleUnhandled = function onHandleUnhandled(state) {
          call(task, global, function () {
            var promise = state.facade;
            if (IS_NODE) {
              process.emit('rejectionHandled', promise);
            } else dispatchEvent(REJECTION_HANDLED, promise, state.value);
          });
        };
        var bind = function bind(fn, state, unwrap) {
          return function (value) {
            fn(state, value, unwrap);
          };
        };
        var internalReject = function internalReject(state, value, unwrap) {
          if (state.done) return;
          state.done = true;
          if (unwrap) state = unwrap;
          state.value = value;
          state.state = REJECTED;
          notify(state, true);
        };
        var internalResolve = function internalResolve(state, value, unwrap) {
          if (state.done) return;
          state.done = true;
          if (unwrap) state = unwrap;
          try {
            if (state.facade === value) throw TypeError("Promise can't be resolved itself");
            var then = isThenable(value);
            if (then) {
              microtask(function () {
                var wrapper = {
                  done: false
                };
                try {
                  call(then, value, bind(internalResolve, wrapper, state), bind(internalReject, wrapper, state));
                } catch (error) {
                  internalReject(wrapper, error, state);
                }
              });
            } else {
              state.value = value;
              state.state = FULFILLED;
              notify(state, false);
            }
          } catch (error) {
            internalReject({
              done: false
            }, error, state);
          }
        };

        // constructor polyfill
        if (FORCED_PROMISE_CONSTRUCTOR) {
          // 25.4.3.1 Promise(executor)
          PromiseConstructor = function Promise(executor) {
            anInstance(this, PromisePrototype);
            aCallable(executor);
            call(Internal, this);
            var state = getInternalPromiseState(this);
            try {
              executor(bind(internalResolve, state), bind(internalReject, state));
            } catch (error) {
              internalReject(state, error);
            }
          };
          PromisePrototype = PromiseConstructor.prototype;

          // eslint-disable-next-line no-unused-vars -- required for `.length`
          Internal = function Promise(executor) {
            setInternalState(this, {
              type: PROMISE,
              done: false,
              notified: false,
              parent: false,
              reactions: new Queue(),
              rejection: false,
              state: PENDING,
              value: undefined
            });
          };

          // `Promise.prototype.then` method
          // https://tc39.es/ecma262/#sec-promise.prototype.then
          Internal.prototype = defineBuiltIn(PromisePrototype, 'then', function then(onFulfilled, onRejected) {
            var state = getInternalPromiseState(this);
            var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));
            state.parent = true;
            reaction.ok = isCallable(onFulfilled) ? onFulfilled : true;
            reaction.fail = isCallable(onRejected) && onRejected;
            reaction.domain = IS_NODE ? process.domain : undefined;
            if (state.state === PENDING) state.reactions.add(reaction);else microtask(function () {
              callReaction(reaction, state);
            });
            return reaction.promise;
          });
          OwnPromiseCapability = function OwnPromiseCapability() {
            var promise = new Internal();
            var state = getInternalPromiseState(promise);
            this.promise = promise;
            this.resolve = bind(internalResolve, state);
            this.reject = bind(internalReject, state);
          };
          newPromiseCapabilityModule.f = newPromiseCapability = function newPromiseCapability(C) {
            return C === PromiseConstructor || C === PromiseWrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);
          };
          if (!IS_PURE && isCallable(NativePromiseConstructor) && NativePromisePrototype !== Object.prototype) {
            nativeThen = NativePromisePrototype.then;
            if (!NATIVE_PROMISE_SUBCLASSING) {
              // make `Promise#then` return a polyfilled `Promise` for native promise-based APIs
              defineBuiltIn(NativePromisePrototype, 'then', function then(onFulfilled, onRejected) {
                var that = this;
                return new PromiseConstructor(function (resolve, reject) {
                  call(nativeThen, that, resolve, reject);
                }).then(onFulfilled, onRejected);
                // https://github.com/zloirock/core-js/issues/640
              }, {
                unsafe: true
              });
            }

            // make `.constructor === Promise` work for native promise-based APIs
            try {
              delete NativePromisePrototype.constructor;
            } catch (error) {/* empty */}

            // make `instanceof Promise` work for native promise-based APIs
            if (setPrototypeOf) {
              setPrototypeOf(NativePromisePrototype, PromisePrototype);
            }
          }
        }
        $({
          global: true,
          constructor: true,
          wrap: true,
          forced: FORCED_PROMISE_CONSTRUCTOR
        }, {
          Promise: PromiseConstructor
        });
        setToStringTag(PromiseConstructor, PROMISE, false, true);
        setSpecies(PROMISE);

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/is-pure': __cjsMetaURL$2,
          '../internals/engine-is-node': __cjsMetaURL$3,
          '../internals/global': __cjsMetaURL$4,
          '../internals/function-call': __cjsMetaURL$5,
          '../internals/define-built-in': __cjsMetaURL$6,
          '../internals/object-set-prototype-of': __cjsMetaURL$7,
          '../internals/set-to-string-tag': __cjsMetaURL$8,
          '../internals/set-species': __cjsMetaURL$9,
          '../internals/a-callable': __cjsMetaURL$a,
          '../internals/is-callable': __cjsMetaURL$b,
          '../internals/is-object': __cjsMetaURL$c,
          '../internals/an-instance': __cjsMetaURL$d,
          '../internals/species-constructor': __cjsMetaURL$e,
          '../internals/task': __cjsMetaURL$f,
          '../internals/microtask': __cjsMetaURL$g,
          '../internals/host-report-errors': __cjsMetaURL$h,
          '../internals/perform': __cjsMetaURL$i,
          '../internals/queue': __cjsMetaURL$j,
          '../internals/internal-state': __cjsMetaURL$k,
          '../internals/promise-native-constructor': __cjsMetaURL$l,
          '../internals/promise-constructor-detection': __cjsMetaURL$m,
          '../internals/new-promise-capability': __cjsMetaURL$n
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.promise.js", ['./cjs-loader.mjs', './es.promise.constructor.js', './es.promise.all.js', './es.promise.catch.js', './es.promise.race.js', './es.promise.reject.js', './es.promise.resolve.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        // TODO: Remove this module from `core-js@4` since it's split to modules listed below
        require('../modules/es.promise.constructor');
        require('../modules/es.promise.all');
        require('../modules/es.promise.catch');
        require('../modules/es.promise.race');
        require('../modules/es.promise.reject');
        require('../modules/es.promise.resolve');

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../modules/es.promise.constructor': __cjsMetaURL$1,
          '../modules/es.promise.all': __cjsMetaURL$2,
          '../modules/es.promise.catch': __cjsMetaURL$3,
          '../modules/es.promise.race': __cjsMetaURL$4,
          '../modules/es.promise.reject': __cjsMetaURL$5,
          '../modules/es.promise.resolve': __cjsMetaURL$6
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.promise.mjs_cjs=&original=.js", ['./es.promise.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.promise.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.promise.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.promise.race.js", ['./cjs-loader.mjs', './export.js', './function-call.js', './a-callable.js', './new-promise-capability.js', './perform.js', './iterate.js', './promise-statics-incorrect-iteration.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var call = require('../internals/function-call');
        var aCallable = require('../internals/a-callable');
        var newPromiseCapabilityModule = require('../internals/new-promise-capability');
        var perform = require('../internals/perform');
        var iterate = require('../internals/iterate');
        var PROMISE_STATICS_INCORRECT_ITERATION = require('../internals/promise-statics-incorrect-iteration');

        // `Promise.race` method
        // https://tc39.es/ecma262/#sec-promise.race
        $({
          target: 'Promise',
          stat: true,
          forced: PROMISE_STATICS_INCORRECT_ITERATION
        }, {
          race: function race(iterable) {
            var C = this;
            var capability = newPromiseCapabilityModule.f(C);
            var reject = capability.reject;
            var result = perform(function () {
              var $promiseResolve = aCallable(C.resolve);
              iterate(iterable, function (promise) {
                call($promiseResolve, C, promise).then(capability.resolve, reject);
              });
            });
            if (result.error) reject(result.value);
            return capability.promise;
          }
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/function-call': __cjsMetaURL$2,
          '../internals/a-callable': __cjsMetaURL$3,
          '../internals/new-promise-capability': __cjsMetaURL$4,
          '../internals/perform': __cjsMetaURL$5,
          '../internals/iterate': __cjsMetaURL$6,
          '../internals/promise-statics-incorrect-iteration': __cjsMetaURL$7
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.promise.reject.js", ['./cjs-loader.mjs', './export.js', './function-call.js', './new-promise-capability.js', './promise-constructor-detection.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var call = require('../internals/function-call');
        var newPromiseCapabilityModule = require('../internals/new-promise-capability');
        var FORCED_PROMISE_CONSTRUCTOR = require('../internals/promise-constructor-detection').CONSTRUCTOR;

        // `Promise.reject` method
        // https://tc39.es/ecma262/#sec-promise.reject
        $({
          target: 'Promise',
          stat: true,
          forced: FORCED_PROMISE_CONSTRUCTOR
        }, {
          reject: function reject(r) {
            var capability = newPromiseCapabilityModule.f(this);
            call(capability.reject, undefined, r);
            return capability.promise;
          }
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/function-call': __cjsMetaURL$2,
          '../internals/new-promise-capability': __cjsMetaURL$3,
          '../internals/promise-constructor-detection': __cjsMetaURL$4
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.promise.resolve.js", ['./cjs-loader.mjs', './export.js', './get-built-in.js', './is-pure.js', './promise-native-constructor.js', './promise-constructor-detection.js', './promise-resolve.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var getBuiltIn = require('../internals/get-built-in');
        var IS_PURE = require('../internals/is-pure');
        var NativePromiseConstructor = require('../internals/promise-native-constructor');
        var FORCED_PROMISE_CONSTRUCTOR = require('../internals/promise-constructor-detection').CONSTRUCTOR;
        var promiseResolve = require('../internals/promise-resolve');
        var PromiseConstructorWrapper = getBuiltIn('Promise');
        var CHECK_WRAPPER = IS_PURE && !FORCED_PROMISE_CONSTRUCTOR;

        // `Promise.resolve` method
        // https://tc39.es/ecma262/#sec-promise.resolve
        $({
          target: 'Promise',
          stat: true,
          forced: IS_PURE || FORCED_PROMISE_CONSTRUCTOR
        }, {
          resolve: function resolve(x) {
            return promiseResolve(CHECK_WRAPPER && this === PromiseConstructorWrapper ? NativePromiseConstructor : this, x);
          }
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/get-built-in': __cjsMetaURL$2,
          '../internals/is-pure': __cjsMetaURL$3,
          '../internals/promise-native-constructor': __cjsMetaURL$4,
          '../internals/promise-constructor-detection': __cjsMetaURL$5,
          '../internals/promise-resolve': __cjsMetaURL$6
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.regexp.constructor.js", ['./cjs-loader.mjs', './descriptors.js', './global.js', './function-uncurry-this.js', './is-forced.js', './inherit-if-required.js', './create-non-enumerable-property.js', './object-get-own-property-names.js', './object-is-prototype-of.js', './is-regexp.js', './to-string.js', './regexp-get-flags.js', './regexp-sticky-helpers.js', './proxy-accessor.js', './define-built-in.js', './fails.js', './has-own-property.js', './internal-state.js', './set-species.js', './well-known-symbol.js', './regexp-unsupported-dot-all.js', './regexp-unsupported-ncg.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8, __cjsMetaURL$9, __cjsMetaURL$a, __cjsMetaURL$b, __cjsMetaURL$c, __cjsMetaURL$d, __cjsMetaURL$e, __cjsMetaURL$f, __cjsMetaURL$g, __cjsMetaURL$h, __cjsMetaURL$i, __cjsMetaURL$j, __cjsMetaURL$k, __cjsMetaURL$l;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$9 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$a = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$b = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$c = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$d = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$e = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$f = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$g = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$h = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$i = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$j = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$k = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$l = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var DESCRIPTORS = require('../internals/descriptors');
        var global = require('../internals/global');
        var uncurryThis = require('../internals/function-uncurry-this');
        var isForced = require('../internals/is-forced');
        var inheritIfRequired = require('../internals/inherit-if-required');
        var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');
        var getOwnPropertyNames = require('../internals/object-get-own-property-names').f;
        var isPrototypeOf = require('../internals/object-is-prototype-of');
        var isRegExp = require('../internals/is-regexp');
        var toString = require('../internals/to-string');
        var getRegExpFlags = require('../internals/regexp-get-flags');
        var stickyHelpers = require('../internals/regexp-sticky-helpers');
        var proxyAccessor = require('../internals/proxy-accessor');
        var defineBuiltIn = require('../internals/define-built-in');
        var fails = require('../internals/fails');
        var hasOwn = require('../internals/has-own-property');
        var enforceInternalState = require('../internals/internal-state').enforce;
        var setSpecies = require('../internals/set-species');
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var UNSUPPORTED_DOT_ALL = require('../internals/regexp-unsupported-dot-all');
        var UNSUPPORTED_NCG = require('../internals/regexp-unsupported-ncg');
        var MATCH = wellKnownSymbol('match');
        var NativeRegExp = global.RegExp;
        var RegExpPrototype = NativeRegExp.prototype;
        var SyntaxError = global.SyntaxError;
        var exec = uncurryThis(RegExpPrototype.exec);
        var charAt = uncurryThis(''.charAt);
        var replace = uncurryThis(''.replace);
        var stringIndexOf = uncurryThis(''.indexOf);
        var stringSlice = uncurryThis(''.slice);
        // TODO: Use only proper RegExpIdentifierName
        var IS_NCG = /^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/;
        var re1 = /a/g;
        var re2 = /a/g;

        // "new" should create a new object, old webkit bug
        var CORRECT_NEW = new NativeRegExp(re1) !== re1;
        var MISSED_STICKY = stickyHelpers.MISSED_STICKY;
        var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;
        var BASE_FORCED = DESCRIPTORS && (!CORRECT_NEW || MISSED_STICKY || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG || fails(function () {
          re2[MATCH] = false;
          // RegExp constructor can alter flags and IsRegExp works correct with @@match
          return NativeRegExp(re1) !== re1 || NativeRegExp(re2) === re2 || String(NativeRegExp(re1, 'i')) !== '/a/i';
        }));
        var handleDotAll = function handleDotAll(string) {
          var length = string.length;
          var index = 0;
          var result = '';
          var brackets = false;
          var chr;
          for (; index <= length; index++) {
            chr = charAt(string, index);
            if (chr === '\\') {
              result += chr + charAt(string, ++index);
              continue;
            }
            if (!brackets && chr === '.') {
              result += '[\\s\\S]';
            } else {
              if (chr === '[') {
                brackets = true;
              } else if (chr === ']') {
                brackets = false;
              }
              result += chr;
            }
          }
          return result;
        };
        var handleNCG = function handleNCG(string) {
          var length = string.length;
          var index = 0;
          var result = '';
          var named = [];
          var names = {};
          var brackets = false;
          var ncg = false;
          var groupid = 0;
          var groupname = '';
          var chr;
          for (; index <= length; index++) {
            chr = charAt(string, index);
            if (chr === '\\') {
              chr += charAt(string, ++index);
            } else if (chr === ']') {
              brackets = false;
            } else if (!brackets) switch (true) {
              case chr === '[':
                brackets = true;
                break;
              case chr === '(':
                if (exec(IS_NCG, stringSlice(string, index + 1))) {
                  index += 2;
                  ncg = true;
                }
                result += chr;
                groupid++;
                continue;
              case chr === '>' && ncg:
                if (groupname === '' || hasOwn(names, groupname)) {
                  throw new SyntaxError('Invalid capture group name');
                }
                names[groupname] = true;
                named[named.length] = [groupname, groupid];
                ncg = false;
                groupname = '';
                continue;
            }
            if (ncg) groupname += chr;else result += chr;
          }
          return [result, named];
        };

        // `RegExp` constructor
        // https://tc39.es/ecma262/#sec-regexp-constructor
        if (isForced('RegExp', BASE_FORCED)) {
          var RegExpWrapper = function RegExp(pattern, flags) {
            var thisIsRegExp = isPrototypeOf(RegExpPrototype, this);
            var patternIsRegExp = isRegExp(pattern);
            var flagsAreUndefined = flags === undefined;
            var groups = [];
            var rawPattern = pattern;
            var rawFlags, dotAll, sticky, handled, result, state;
            if (!thisIsRegExp && patternIsRegExp && flagsAreUndefined && pattern.constructor === RegExpWrapper) {
              return pattern;
            }
            if (patternIsRegExp || isPrototypeOf(RegExpPrototype, pattern)) {
              pattern = pattern.source;
              if (flagsAreUndefined) flags = getRegExpFlags(rawPattern);
            }
            pattern = pattern === undefined ? '' : toString(pattern);
            flags = flags === undefined ? '' : toString(flags);
            rawPattern = pattern;
            if (UNSUPPORTED_DOT_ALL && 'dotAll' in re1) {
              dotAll = !!flags && stringIndexOf(flags, 's') > -1;
              if (dotAll) flags = replace(flags, /s/g, '');
            }
            rawFlags = flags;
            if (MISSED_STICKY && 'sticky' in re1) {
              sticky = !!flags && stringIndexOf(flags, 'y') > -1;
              if (sticky && UNSUPPORTED_Y) flags = replace(flags, /y/g, '');
            }
            if (UNSUPPORTED_NCG) {
              handled = handleNCG(pattern);
              pattern = handled[0];
              groups = handled[1];
            }
            result = inheritIfRequired(NativeRegExp(pattern, flags), thisIsRegExp ? this : RegExpPrototype, RegExpWrapper);
            if (dotAll || sticky || groups.length) {
              state = enforceInternalState(result);
              if (dotAll) {
                state.dotAll = true;
                state.raw = RegExpWrapper(handleDotAll(pattern), rawFlags);
              }
              if (sticky) state.sticky = true;
              if (groups.length) state.groups = groups;
            }
            if (pattern !== rawPattern) try {
              // fails in old engines, but we have no alternatives for unsupported regex syntax
              createNonEnumerableProperty(result, 'source', rawPattern === '' ? '(?:)' : rawPattern);
            } catch (error) {/* empty */}
            return result;
          };
          for (var keys = getOwnPropertyNames(NativeRegExp), index = 0; keys.length > index;) {
            proxyAccessor(RegExpWrapper, NativeRegExp, keys[index++]);
          }
          RegExpPrototype.constructor = RegExpWrapper;
          RegExpWrapper.prototype = RegExpPrototype;
          defineBuiltIn(global, 'RegExp', RegExpWrapper, {
            constructor: true
          });
        }

        // https://tc39.es/ecma262/#sec-get-regexp-@@species
        setSpecies('RegExp');

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/descriptors': __cjsMetaURL$1,
          '../internals/global': __cjsMetaURL$2,
          '../internals/function-uncurry-this': __cjsMetaURL$3,
          '../internals/is-forced': __cjsMetaURL$4,
          '../internals/inherit-if-required': __cjsMetaURL$5,
          '../internals/create-non-enumerable-property': __cjsMetaURL$6,
          '../internals/object-get-own-property-names': __cjsMetaURL$7,
          '../internals/object-is-prototype-of': __cjsMetaURL$8,
          '../internals/is-regexp': __cjsMetaURL$9,
          '../internals/to-string': __cjsMetaURL$a,
          '../internals/regexp-get-flags': __cjsMetaURL$b,
          '../internals/regexp-sticky-helpers': __cjsMetaURL$c,
          '../internals/proxy-accessor': __cjsMetaURL$d,
          '../internals/define-built-in': __cjsMetaURL$e,
          '../internals/fails': __cjsMetaURL$f,
          '../internals/has-own-property': __cjsMetaURL$g,
          '../internals/internal-state': __cjsMetaURL$h,
          '../internals/set-species': __cjsMetaURL$i,
          '../internals/well-known-symbol': __cjsMetaURL$j,
          '../internals/regexp-unsupported-dot-all': __cjsMetaURL$k,
          '../internals/regexp-unsupported-ncg': __cjsMetaURL$l
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.regexp.constructor.mjs_cjs=&original=.js", ['./es.regexp.constructor.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.regexp.constructor.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.regexp.constructor.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.regexp.exec.js", ['./cjs-loader.mjs', './export.js', './regexp-exec.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var exec = require('../internals/regexp-exec');

        // `RegExp.prototype.exec` method
        // https://tc39.es/ecma262/#sec-regexp.prototype.exec
        $({
          target: 'RegExp',
          proto: true,
          forced: /./.exec !== exec
        }, {
          exec: exec
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/regexp-exec': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.regexp.exec.mjs_cjs=&original=.js", ['./es.regexp.exec.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.regexp.exec.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.regexp.exec.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.regexp.sticky.js", ['./cjs-loader.mjs', './descriptors.js', './regexp-sticky-helpers.js', './classof-raw.js', './define-built-in-accessor.js', './internal-state.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var DESCRIPTORS = require('../internals/descriptors');
        var MISSED_STICKY = require('../internals/regexp-sticky-helpers').MISSED_STICKY;
        var classof = require('../internals/classof-raw');
        var defineBuiltInAccessor = require('../internals/define-built-in-accessor');
        var getInternalState = require('../internals/internal-state').get;
        var RegExpPrototype = RegExp.prototype;
        var $TypeError = TypeError;

        // `RegExp.prototype.sticky` getter
        // https://tc39.es/ecma262/#sec-get-regexp.prototype.sticky
        if (DESCRIPTORS && MISSED_STICKY) {
          defineBuiltInAccessor(RegExpPrototype, 'sticky', {
            configurable: true,
            get: function sticky() {
              if (this === RegExpPrototype) return;
              // We can't use InternalStateModule.getterFor because
              // we don't add metadata for regexps created by a literal.
              if (classof(this) === 'RegExp') {
                return !!getInternalState(this).sticky;
              }
              throw $TypeError('Incompatible receiver, RegExp required');
            }
          });
        }

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/descriptors': __cjsMetaURL$1,
          '../internals/regexp-sticky-helpers': __cjsMetaURL$2,
          '../internals/classof-raw': __cjsMetaURL$3,
          '../internals/define-built-in-accessor': __cjsMetaURL$4,
          '../internals/internal-state': __cjsMetaURL$5
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.regexp.sticky.mjs_cjs=&original=.js", ['./es.regexp.sticky.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.regexp.sticky.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.regexp.sticky.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.regexp.test.js", ['./cjs-loader.mjs', './es.regexp.exec.js', './export.js', './function-call.js', './is-callable.js', './an-object.js', './to-string.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        // TODO: Remove from `core-js@4` since it's moved to entry points
        require('../modules/es.regexp.exec');
        var $ = require('../internals/export');
        var call = require('../internals/function-call');
        var isCallable = require('../internals/is-callable');
        var anObject = require('../internals/an-object');
        var toString = require('../internals/to-string');
        var DELEGATES_TO_EXEC = function () {
          var execCalled = false;
          var re = /[ac]/;
          re.exec = function () {
            execCalled = true;
            return /./.exec.apply(this, arguments);
          };
          return re.test('abc') === true && execCalled;
        }();
        var nativeTest = /./.test;

        // `RegExp.prototype.test` method
        // https://tc39.es/ecma262/#sec-regexp.prototype.test
        $({
          target: 'RegExp',
          proto: true,
          forced: !DELEGATES_TO_EXEC
        }, {
          test: function test(S) {
            var R = anObject(this);
            var string = toString(S);
            var exec = R.exec;
            if (!isCallable(exec)) return call(nativeTest, R, string);
            var result = call(exec, R, string);
            if (result === null) return false;
            anObject(result);
            return true;
          }
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../modules/es.regexp.exec': __cjsMetaURL$1,
          '../internals/export': __cjsMetaURL$2,
          '../internals/function-call': __cjsMetaURL$3,
          '../internals/is-callable': __cjsMetaURL$4,
          '../internals/an-object': __cjsMetaURL$5,
          '../internals/to-string': __cjsMetaURL$6
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.regexp.test.mjs_cjs=&original=.js", ['./es.regexp.test.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.regexp.test.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.regexp.test.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.regexp.to-string.js", ['./cjs-loader.mjs', './function-name.js', './define-built-in.js', './an-object.js', './to-string.js', './fails.js', './regexp-get-flags.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var PROPER_FUNCTION_NAME = require('../internals/function-name').PROPER;
        var defineBuiltIn = require('../internals/define-built-in');
        var anObject = require('../internals/an-object');
        var $toString = require('../internals/to-string');
        var fails = require('../internals/fails');
        var getRegExpFlags = require('../internals/regexp-get-flags');
        var TO_STRING = 'toString';
        var RegExpPrototype = RegExp.prototype;
        var nativeToString = RegExpPrototype[TO_STRING];
        var NOT_GENERIC = fails(function () {
          return nativeToString.call({
            source: 'a',
            flags: 'b'
          }) !== '/a/b';
        });
        // FF44- RegExp#toString has a wrong name
        var INCORRECT_NAME = PROPER_FUNCTION_NAME && nativeToString.name !== TO_STRING;

        // `RegExp.prototype.toString` method
        // https://tc39.es/ecma262/#sec-regexp.prototype.tostring
        if (NOT_GENERIC || INCORRECT_NAME) {
          defineBuiltIn(RegExp.prototype, TO_STRING, function toString() {
            var R = anObject(this);
            var pattern = $toString(R.source);
            var flags = $toString(getRegExpFlags(R));
            return '/' + pattern + '/' + flags;
          }, {
            unsafe: true
          });
        }

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-name': __cjsMetaURL$1,
          '../internals/define-built-in': __cjsMetaURL$2,
          '../internals/an-object': __cjsMetaURL$3,
          '../internals/to-string': __cjsMetaURL$4,
          '../internals/fails': __cjsMetaURL$5,
          '../internals/regexp-get-flags': __cjsMetaURL$6
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.regexp.to-string.mjs_cjs=&original=.js", ['./es.regexp.to-string.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.regexp.to-string.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.regexp.to-string.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.string.ends-with.js", ['./cjs-loader.mjs', './export.js', './function-uncurry-this-clause.js', './object-get-own-property-descriptor.js', './to-length.js', './to-string.js', './not-a-regexp.js', './require-object-coercible.js', './correct-is-regexp-logic.js', './is-pure.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8, __cjsMetaURL$9;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$9 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var uncurryThis = require('../internals/function-uncurry-this-clause');
        var getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;
        var toLength = require('../internals/to-length');
        var toString = require('../internals/to-string');
        var notARegExp = require('../internals/not-a-regexp');
        var requireObjectCoercible = require('../internals/require-object-coercible');
        var correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');
        var IS_PURE = require('../internals/is-pure');

        // eslint-disable-next-line es/no-string-prototype-endswith -- safe
        var nativeEndsWith = uncurryThis(''.endsWith);
        var slice = uncurryThis(''.slice);
        var min = Math.min;
        var CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('endsWith');
        // https://github.com/zloirock/core-js/pull/702
        var MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {
          var descriptor = getOwnPropertyDescriptor(String.prototype, 'endsWith');
          return descriptor && !descriptor.writable;
        }();

        // `String.prototype.endsWith` method
        // https://tc39.es/ecma262/#sec-string.prototype.endswith
        $({
          target: 'String',
          proto: true,
          forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC
        }, {
          endsWith: function endsWith(searchString /* , endPosition = @length */) {
            var that = toString(requireObjectCoercible(this));
            notARegExp(searchString);
            var endPosition = arguments.length > 1 ? arguments[1] : undefined;
            var len = that.length;
            var end = endPosition === undefined ? len : min(toLength(endPosition), len);
            var search = toString(searchString);
            return nativeEndsWith ? nativeEndsWith(that, search, end) : slice(that, end - search.length, end) === search;
          }
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/function-uncurry-this-clause': __cjsMetaURL$2,
          '../internals/object-get-own-property-descriptor': __cjsMetaURL$3,
          '../internals/to-length': __cjsMetaURL$4,
          '../internals/to-string': __cjsMetaURL$5,
          '../internals/not-a-regexp': __cjsMetaURL$6,
          '../internals/require-object-coercible': __cjsMetaURL$7,
          '../internals/correct-is-regexp-logic': __cjsMetaURL$8,
          '../internals/is-pure': __cjsMetaURL$9
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.string.ends-with.mjs_cjs=&original=.js", ['./es.string.ends-with.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.string.ends-with.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.string.ends-with.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.string.includes.js", ['./cjs-loader.mjs', './export.js', './function-uncurry-this.js', './not-a-regexp.js', './require-object-coercible.js', './to-string.js', './correct-is-regexp-logic.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var uncurryThis = require('../internals/function-uncurry-this');
        var notARegExp = require('../internals/not-a-regexp');
        var requireObjectCoercible = require('../internals/require-object-coercible');
        var toString = require('../internals/to-string');
        var correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');
        var stringIndexOf = uncurryThis(''.indexOf);

        // `String.prototype.includes` method
        // https://tc39.es/ecma262/#sec-string.prototype.includes
        $({
          target: 'String',
          proto: true,
          forced: !correctIsRegExpLogic('includes')
        }, {
          includes: function includes(searchString /* , position = 0 */) {
            return !!~stringIndexOf(toString(requireObjectCoercible(this)), toString(notARegExp(searchString)), arguments.length > 1 ? arguments[1] : undefined);
          }
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/function-uncurry-this': __cjsMetaURL$2,
          '../internals/not-a-regexp': __cjsMetaURL$3,
          '../internals/require-object-coercible': __cjsMetaURL$4,
          '../internals/to-string': __cjsMetaURL$5,
          '../internals/correct-is-regexp-logic': __cjsMetaURL$6
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.string.includes.mjs_cjs=&original=.js", ['./es.string.includes.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.string.includes.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.string.includes.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.string.iterator.js", ['./cjs-loader.mjs', './string-multibyte.js', './to-string.js', './internal-state.js', './iterator-define.js', './create-iter-result-object.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var charAt = require('../internals/string-multibyte').charAt;
        var toString = require('../internals/to-string');
        var InternalStateModule = require('../internals/internal-state');
        var defineIterator = require('../internals/iterator-define');
        var createIterResultObject = require('../internals/create-iter-result-object');
        var STRING_ITERATOR = 'String Iterator';
        var setInternalState = InternalStateModule.set;
        var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);

        // `String.prototype[@@iterator]` method
        // https://tc39.es/ecma262/#sec-string.prototype-@@iterator
        defineIterator(String, 'String', function (iterated) {
          setInternalState(this, {
            type: STRING_ITERATOR,
            string: toString(iterated),
            index: 0
          });
          // `%StringIteratorPrototype%.next` method
          // https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next
        }, function next() {
          var state = getInternalState(this);
          var string = state.string;
          var index = state.index;
          var point;
          if (index >= string.length) return createIterResultObject(undefined, true);
          point = charAt(string, index);
          state.index += point.length;
          return createIterResultObject(point, false);
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/string-multibyte': __cjsMetaURL$1,
          '../internals/to-string': __cjsMetaURL$2,
          '../internals/internal-state': __cjsMetaURL$3,
          '../internals/iterator-define': __cjsMetaURL$4,
          '../internals/create-iter-result-object': __cjsMetaURL$5
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.string.iterator.mjs_cjs=&original=.js", ['./es.string.iterator.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.string.iterator.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.string.iterator.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.string.match.js", ['./cjs-loader.mjs', './function-call.js', './fix-regexp-well-known-symbol-logic.js', './an-object.js', './is-null-or-undefined.js', './to-length.js', './to-string.js', './require-object-coercible.js', './get-method.js', './advance-string-index.js', './regexp-exec-abstract.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8, __cjsMetaURL$9, __cjsMetaURL$a;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$9 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$a = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var call = require('../internals/function-call');
        var fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');
        var anObject = require('../internals/an-object');
        var isNullOrUndefined = require('../internals/is-null-or-undefined');
        var toLength = require('../internals/to-length');
        var toString = require('../internals/to-string');
        var requireObjectCoercible = require('../internals/require-object-coercible');
        var getMethod = require('../internals/get-method');
        var advanceStringIndex = require('../internals/advance-string-index');
        var regExpExec = require('../internals/regexp-exec-abstract');

        // @@match logic
        fixRegExpWellKnownSymbolLogic('match', function (MATCH, nativeMatch, maybeCallNative) {
          return [
          // `String.prototype.match` method
          // https://tc39.es/ecma262/#sec-string.prototype.match
          function match(regexp) {
            var O = requireObjectCoercible(this);
            var matcher = isNullOrUndefined(regexp) ? undefined : getMethod(regexp, MATCH);
            return matcher ? call(matcher, regexp, O) : new RegExp(regexp)[MATCH](toString(O));
          },
          // `RegExp.prototype[@@match]` method
          // https://tc39.es/ecma262/#sec-regexp.prototype-@@match
          function (string) {
            var rx = anObject(this);
            var S = toString(string);
            var res = maybeCallNative(nativeMatch, rx, S);
            if (res.done) return res.value;
            if (!rx.global) return regExpExec(rx, S);
            var fullUnicode = rx.unicode;
            rx.lastIndex = 0;
            var A = [];
            var n = 0;
            var result;
            while ((result = regExpExec(rx, S)) !== null) {
              var matchStr = toString(result[0]);
              A[n] = matchStr;
              if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
              n++;
            }
            return n === 0 ? null : A;
          }];
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-call': __cjsMetaURL$1,
          '../internals/fix-regexp-well-known-symbol-logic': __cjsMetaURL$2,
          '../internals/an-object': __cjsMetaURL$3,
          '../internals/is-null-or-undefined': __cjsMetaURL$4,
          '../internals/to-length': __cjsMetaURL$5,
          '../internals/to-string': __cjsMetaURL$6,
          '../internals/require-object-coercible': __cjsMetaURL$7,
          '../internals/get-method': __cjsMetaURL$8,
          '../internals/advance-string-index': __cjsMetaURL$9,
          '../internals/regexp-exec-abstract': __cjsMetaURL$a
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.string.match.mjs_cjs=&original=.js", ['./es.string.match.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.string.match.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.string.match.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.string.starts-with.js", ['./cjs-loader.mjs', './export.js', './function-uncurry-this-clause.js', './object-get-own-property-descriptor.js', './to-length.js', './to-string.js', './not-a-regexp.js', './require-object-coercible.js', './correct-is-regexp-logic.js', './is-pure.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8, __cjsMetaURL$9;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$9 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var uncurryThis = require('../internals/function-uncurry-this-clause');
        var getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;
        var toLength = require('../internals/to-length');
        var toString = require('../internals/to-string');
        var notARegExp = require('../internals/not-a-regexp');
        var requireObjectCoercible = require('../internals/require-object-coercible');
        var correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');
        var IS_PURE = require('../internals/is-pure');

        // eslint-disable-next-line es/no-string-prototype-startswith -- safe
        var nativeStartsWith = uncurryThis(''.startsWith);
        var stringSlice = uncurryThis(''.slice);
        var min = Math.min;
        var CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('startsWith');
        // https://github.com/zloirock/core-js/pull/702
        var MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {
          var descriptor = getOwnPropertyDescriptor(String.prototype, 'startsWith');
          return descriptor && !descriptor.writable;
        }();

        // `String.prototype.startsWith` method
        // https://tc39.es/ecma262/#sec-string.prototype.startswith
        $({
          target: 'String',
          proto: true,
          forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC
        }, {
          startsWith: function startsWith(searchString /* , position = 0 */) {
            var that = toString(requireObjectCoercible(this));
            notARegExp(searchString);
            var index = toLength(min(arguments.length > 1 ? arguments[1] : undefined, that.length));
            var search = toString(searchString);
            return nativeStartsWith ? nativeStartsWith(that, search, index) : stringSlice(that, index, index + search.length) === search;
          }
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/function-uncurry-this-clause': __cjsMetaURL$2,
          '../internals/object-get-own-property-descriptor': __cjsMetaURL$3,
          '../internals/to-length': __cjsMetaURL$4,
          '../internals/to-string': __cjsMetaURL$5,
          '../internals/not-a-regexp': __cjsMetaURL$6,
          '../internals/require-object-coercible': __cjsMetaURL$7,
          '../internals/correct-is-regexp-logic': __cjsMetaURL$8,
          '../internals/is-pure': __cjsMetaURL$9
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.string.starts-with.mjs_cjs=&original=.js", ['./es.string.starts-with.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.string.starts-with.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.string.starts-with.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.at.js", ['./cjs-loader.mjs', './array-buffer-view-core.js', './length-of-array-like.js', './to-integer-or-infinity.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var ArrayBufferViewCore = require('../internals/array-buffer-view-core');
        var lengthOfArrayLike = require('../internals/length-of-array-like');
        var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');
        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.at` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.at
        exportTypedArrayMethod('at', function at(index) {
          var O = aTypedArray(this);
          var len = lengthOfArrayLike(O);
          var relativeIndex = toIntegerOrInfinity(index);
          var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;
          return k < 0 || k >= len ? undefined : O[k];
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/array-buffer-view-core': __cjsMetaURL$1,
          '../internals/length-of-array-like': __cjsMetaURL$2,
          '../internals/to-integer-or-infinity': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.copy-within.js", ['./cjs-loader.mjs', './function-uncurry-this.js', './array-buffer-view-core.js', './array-copy-within.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var uncurryThis = require('../internals/function-uncurry-this');
        var ArrayBufferViewCore = require('../internals/array-buffer-view-core');
        var $ArrayCopyWithin = require('../internals/array-copy-within');
        var u$ArrayCopyWithin = uncurryThis($ArrayCopyWithin);
        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.copyWithin` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.copywithin
        exportTypedArrayMethod('copyWithin', function copyWithin(target, start /* , end */) {
          return u$ArrayCopyWithin(aTypedArray(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-uncurry-this': __cjsMetaURL$1,
          '../internals/array-buffer-view-core': __cjsMetaURL$2,
          '../internals/array-copy-within': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.copy-within.mjs_cjs=&original=.js", ['./es.typed-array.copy-within.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.copy-within.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.copy-within.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.every.js", ['./cjs-loader.mjs', './array-buffer-view-core.js', './array-iteration.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var ArrayBufferViewCore = require('../internals/array-buffer-view-core');
        var $every = require('../internals/array-iteration').every;
        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.every` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.every
        exportTypedArrayMethod('every', function every(callbackfn /* , thisArg */) {
          return $every(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/array-buffer-view-core': __cjsMetaURL$1,
          '../internals/array-iteration': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.every.mjs_cjs=&original=.js", ['./es.typed-array.every.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.every.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.every.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.fill.js", ['./cjs-loader.mjs', './array-buffer-view-core.js', './array-fill.js', './to-big-int.js', './classof.js', './function-call.js', './function-uncurry-this.js', './fails.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var ArrayBufferViewCore = require('../internals/array-buffer-view-core');
        var $fill = require('../internals/array-fill');
        var toBigInt = require('../internals/to-big-int');
        var classof = require('../internals/classof');
        var call = require('../internals/function-call');
        var uncurryThis = require('../internals/function-uncurry-this');
        var fails = require('../internals/fails');
        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
        var slice = uncurryThis(''.slice);

        // V8 ~ Chrome < 59, Safari < 14.1, FF < 55, Edge <=18
        var CONVERSION_BUG = fails(function () {
          var count = 0;
          // eslint-disable-next-line es/no-typed-arrays -- safe
          new Int8Array(2).fill({
            valueOf: function valueOf() {
              return count++;
            }
          });
          return count !== 1;
        });

        // `%TypedArray%.prototype.fill` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.fill
        exportTypedArrayMethod('fill', function fill(value /* , start, end */) {
          var length = arguments.length;
          aTypedArray(this);
          var actualValue = slice(classof(this), 0, 3) === 'Big' ? toBigInt(value) : +value;
          return call($fill, this, actualValue, length > 1 ? arguments[1] : undefined, length > 2 ? arguments[2] : undefined);
        }, CONVERSION_BUG);

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/array-buffer-view-core': __cjsMetaURL$1,
          '../internals/array-fill': __cjsMetaURL$2,
          '../internals/to-big-int': __cjsMetaURL$3,
          '../internals/classof': __cjsMetaURL$4,
          '../internals/function-call': __cjsMetaURL$5,
          '../internals/function-uncurry-this': __cjsMetaURL$6,
          '../internals/fails': __cjsMetaURL$7
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.fill.mjs_cjs=&original=.js", ['./es.typed-array.fill.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.fill.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.fill.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.filter.js", ['./cjs-loader.mjs', './array-buffer-view-core.js', './array-iteration.js', './typed-array-from-species-and-list.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var ArrayBufferViewCore = require('../internals/array-buffer-view-core');
        var $filter = require('../internals/array-iteration').filter;
        var fromSpeciesAndList = require('../internals/typed-array-from-species-and-list');
        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.filter` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.filter
        exportTypedArrayMethod('filter', function filter(callbackfn /* , thisArg */) {
          var list = $filter(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
          return fromSpeciesAndList(this, list);
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/array-buffer-view-core': __cjsMetaURL$1,
          '../internals/array-iteration': __cjsMetaURL$2,
          '../internals/typed-array-from-species-and-list': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.filter.mjs_cjs=&original=.js", ['./es.typed-array.filter.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.filter.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.filter.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.find-index.js", ['./cjs-loader.mjs', './array-buffer-view-core.js', './array-iteration.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var ArrayBufferViewCore = require('../internals/array-buffer-view-core');
        var $findIndex = require('../internals/array-iteration').findIndex;
        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.findIndex` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.findindex
        exportTypedArrayMethod('findIndex', function findIndex(predicate /* , thisArg */) {
          return $findIndex(aTypedArray(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/array-buffer-view-core': __cjsMetaURL$1,
          '../internals/array-iteration': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.find-index.mjs_cjs=&original=.js", ['./es.typed-array.find-index.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.find-index.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.find-index.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.find.js", ['./cjs-loader.mjs', './array-buffer-view-core.js', './array-iteration.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var ArrayBufferViewCore = require('../internals/array-buffer-view-core');
        var $find = require('../internals/array-iteration').find;
        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.find` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.find
        exportTypedArrayMethod('find', function find(predicate /* , thisArg */) {
          return $find(aTypedArray(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/array-buffer-view-core': __cjsMetaURL$1,
          '../internals/array-iteration': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.find.mjs_cjs=&original=.js", ['./es.typed-array.find.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.find.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.find.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.float32-array.js", ['./cjs-loader.mjs', './typed-array-constructor.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var createTypedArrayConstructor = require('../internals/typed-array-constructor');

        // `Float32Array` constructor
        // https://tc39.es/ecma262/#sec-typedarray-objects
        createTypedArrayConstructor('Float32', function (init) {
          return function Float32Array(data, byteOffset, length) {
            return init(this, data, byteOffset, length);
          };
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/typed-array-constructor': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.float32-array.mjs_cjs=&original=.js", ['./es.typed-array.float32-array.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.float32-array.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.float32-array.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.float64-array.js", ['./cjs-loader.mjs', './typed-array-constructor.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var createTypedArrayConstructor = require('../internals/typed-array-constructor');

        // `Float64Array` constructor
        // https://tc39.es/ecma262/#sec-typedarray-objects
        createTypedArrayConstructor('Float64', function (init) {
          return function Float64Array(data, byteOffset, length) {
            return init(this, data, byteOffset, length);
          };
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/typed-array-constructor': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.float64-array.mjs_cjs=&original=.js", ['./es.typed-array.float64-array.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.float64-array.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.float64-array.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.for-each.js", ['./cjs-loader.mjs', './array-buffer-view-core.js', './array-iteration.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var ArrayBufferViewCore = require('../internals/array-buffer-view-core');
        var $forEach = require('../internals/array-iteration').forEach;
        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.forEach` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.foreach
        exportTypedArrayMethod('forEach', function forEach(callbackfn /* , thisArg */) {
          $forEach(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/array-buffer-view-core': __cjsMetaURL$1,
          '../internals/array-iteration': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.for-each.mjs_cjs=&original=.js", ['./es.typed-array.for-each.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.for-each.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.for-each.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.includes.js", ['./cjs-loader.mjs', './array-buffer-view-core.js', './array-includes.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var ArrayBufferViewCore = require('../internals/array-buffer-view-core');
        var $includes = require('../internals/array-includes').includes;
        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.includes` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.includes
        exportTypedArrayMethod('includes', function includes(searchElement /* , fromIndex */) {
          return $includes(aTypedArray(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/array-buffer-view-core': __cjsMetaURL$1,
          '../internals/array-includes': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.includes.mjs_cjs=&original=.js", ['./es.typed-array.includes.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.includes.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.includes.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.index-of.js", ['./cjs-loader.mjs', './array-buffer-view-core.js', './array-includes.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var ArrayBufferViewCore = require('../internals/array-buffer-view-core');
        var $indexOf = require('../internals/array-includes').indexOf;
        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.indexOf` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.indexof
        exportTypedArrayMethod('indexOf', function indexOf(searchElement /* , fromIndex */) {
          return $indexOf(aTypedArray(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/array-buffer-view-core': __cjsMetaURL$1,
          '../internals/array-includes': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.index-of.mjs_cjs=&original=.js", ['./es.typed-array.index-of.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.index-of.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.index-of.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.int16-array.js", ['./cjs-loader.mjs', './typed-array-constructor.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var createTypedArrayConstructor = require('../internals/typed-array-constructor');

        // `Int16Array` constructor
        // https://tc39.es/ecma262/#sec-typedarray-objects
        createTypedArrayConstructor('Int16', function (init) {
          return function Int16Array(data, byteOffset, length) {
            return init(this, data, byteOffset, length);
          };
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/typed-array-constructor': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.int16-array.mjs_cjs=&original=.js", ['./es.typed-array.int16-array.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.int16-array.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.int16-array.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.int32-array.js", ['./cjs-loader.mjs', './typed-array-constructor.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var createTypedArrayConstructor = require('../internals/typed-array-constructor');

        // `Int32Array` constructor
        // https://tc39.es/ecma262/#sec-typedarray-objects
        createTypedArrayConstructor('Int32', function (init) {
          return function Int32Array(data, byteOffset, length) {
            return init(this, data, byteOffset, length);
          };
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/typed-array-constructor': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.int32-array.mjs_cjs=&original=.js", ['./es.typed-array.int32-array.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.int32-array.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.int32-array.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.int8-array.js", ['./cjs-loader.mjs', './typed-array-constructor.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var createTypedArrayConstructor = require('../internals/typed-array-constructor');

        // `Int8Array` constructor
        // https://tc39.es/ecma262/#sec-typedarray-objects
        createTypedArrayConstructor('Int8', function (init) {
          return function Int8Array(data, byteOffset, length) {
            return init(this, data, byteOffset, length);
          };
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/typed-array-constructor': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.int8-array.mjs_cjs=&original=.js", ['./es.typed-array.int8-array.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.int8-array.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.int8-array.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.iterator.js", ['./cjs-loader.mjs', './global.js', './fails.js', './function-uncurry-this.js', './array-buffer-view-core.js', './es.array.iterator.js', './well-known-symbol.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var global = require('../internals/global');
        var fails = require('../internals/fails');
        var uncurryThis = require('../internals/function-uncurry-this');
        var ArrayBufferViewCore = require('../internals/array-buffer-view-core');
        var ArrayIterators = require('../modules/es.array.iterator');
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var ITERATOR = wellKnownSymbol('iterator');
        var Uint8Array = global.Uint8Array;
        var arrayValues = uncurryThis(ArrayIterators.values);
        var arrayKeys = uncurryThis(ArrayIterators.keys);
        var arrayEntries = uncurryThis(ArrayIterators.entries);
        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
        var TypedArrayPrototype = Uint8Array && Uint8Array.prototype;
        var GENERIC = !fails(function () {
          TypedArrayPrototype[ITERATOR].call([1]);
        });
        var ITERATOR_IS_VALUES = !!TypedArrayPrototype && TypedArrayPrototype.values && TypedArrayPrototype[ITERATOR] === TypedArrayPrototype.values && TypedArrayPrototype.values.name === 'values';
        var typedArrayValues = function values() {
          return arrayValues(aTypedArray(this));
        };

        // `%TypedArray%.prototype.entries` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.entries
        exportTypedArrayMethod('entries', function entries() {
          return arrayEntries(aTypedArray(this));
        }, GENERIC);
        // `%TypedArray%.prototype.keys` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.keys
        exportTypedArrayMethod('keys', function keys() {
          return arrayKeys(aTypedArray(this));
        }, GENERIC);
        // `%TypedArray%.prototype.values` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.values
        exportTypedArrayMethod('values', typedArrayValues, GENERIC || !ITERATOR_IS_VALUES, {
          name: 'values'
        });
        // `%TypedArray%.prototype[@@iterator]` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype-@@iterator
        exportTypedArrayMethod(ITERATOR, typedArrayValues, GENERIC || !ITERATOR_IS_VALUES, {
          name: 'values'
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/global': __cjsMetaURL$1,
          '../internals/fails': __cjsMetaURL$2,
          '../internals/function-uncurry-this': __cjsMetaURL$3,
          '../internals/array-buffer-view-core': __cjsMetaURL$4,
          '../modules/es.array.iterator': __cjsMetaURL$5,
          '../internals/well-known-symbol': __cjsMetaURL$6
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.iterator.mjs_cjs=&original=.js", ['./es.typed-array.iterator.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.iterator.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.iterator.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.join.js", ['./cjs-loader.mjs', './array-buffer-view-core.js', './function-uncurry-this.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var ArrayBufferViewCore = require('../internals/array-buffer-view-core');
        var uncurryThis = require('../internals/function-uncurry-this');
        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
        var $join = uncurryThis([].join);

        // `%TypedArray%.prototype.join` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.join
        exportTypedArrayMethod('join', function join(separator) {
          return $join(aTypedArray(this), separator);
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/array-buffer-view-core': __cjsMetaURL$1,
          '../internals/function-uncurry-this': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.join.mjs_cjs=&original=.js", ['./es.typed-array.join.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.join.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.join.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.last-index-of.js", ['./cjs-loader.mjs', './array-buffer-view-core.js', './function-apply.js', './array-last-index-of.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var ArrayBufferViewCore = require('../internals/array-buffer-view-core');
        var apply = require('../internals/function-apply');
        var $lastIndexOf = require('../internals/array-last-index-of');
        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.lastIndexOf` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.lastindexof
        exportTypedArrayMethod('lastIndexOf', function lastIndexOf(searchElement /* , fromIndex */) {
          var length = arguments.length;
          return apply($lastIndexOf, aTypedArray(this), length > 1 ? [searchElement, arguments[1]] : [searchElement]);
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/array-buffer-view-core': __cjsMetaURL$1,
          '../internals/function-apply': __cjsMetaURL$2,
          '../internals/array-last-index-of': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.last-index-of.mjs_cjs=&original=.js", ['./es.typed-array.last-index-of.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.last-index-of.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.last-index-of.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.map.js", ['./cjs-loader.mjs', './array-buffer-view-core.js', './array-iteration.js', './typed-array-species-constructor.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var ArrayBufferViewCore = require('../internals/array-buffer-view-core');
        var $map = require('../internals/array-iteration').map;
        var typedArraySpeciesConstructor = require('../internals/typed-array-species-constructor');
        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.map` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.map
        exportTypedArrayMethod('map', function map(mapfn /* , thisArg */) {
          return $map(aTypedArray(this), mapfn, arguments.length > 1 ? arguments[1] : undefined, function (O, length) {
            return new (typedArraySpeciesConstructor(O))(length);
          });
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/array-buffer-view-core': __cjsMetaURL$1,
          '../internals/array-iteration': __cjsMetaURL$2,
          '../internals/typed-array-species-constructor': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.map.mjs_cjs=&original=.js", ['./es.typed-array.map.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.map.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.map.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.reduce-right.js", ['./cjs-loader.mjs', './array-buffer-view-core.js', './array-reduce.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var ArrayBufferViewCore = require('../internals/array-buffer-view-core');
        var $reduceRight = require('../internals/array-reduce').right;
        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.reduceRight` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduceright
        exportTypedArrayMethod('reduceRight', function reduceRight(callbackfn /* , initialValue */) {
          var length = arguments.length;
          return $reduceRight(aTypedArray(this), callbackfn, length, length > 1 ? arguments[1] : undefined);
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/array-buffer-view-core': __cjsMetaURL$1,
          '../internals/array-reduce': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.reduce-right.mjs_cjs=&original=.js", ['./es.typed-array.reduce-right.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.reduce-right.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.reduce-right.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.reduce.js", ['./cjs-loader.mjs', './array-buffer-view-core.js', './array-reduce.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var ArrayBufferViewCore = require('../internals/array-buffer-view-core');
        var $reduce = require('../internals/array-reduce').left;
        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.reduce` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduce
        exportTypedArrayMethod('reduce', function reduce(callbackfn /* , initialValue */) {
          var length = arguments.length;
          return $reduce(aTypedArray(this), callbackfn, length, length > 1 ? arguments[1] : undefined);
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/array-buffer-view-core': __cjsMetaURL$1,
          '../internals/array-reduce': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.reduce.mjs_cjs=&original=.js", ['./es.typed-array.reduce.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.reduce.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.reduce.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.reverse.js", ['./cjs-loader.mjs', './array-buffer-view-core.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var ArrayBufferViewCore = require('../internals/array-buffer-view-core');
        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
        var floor = Math.floor;

        // `%TypedArray%.prototype.reverse` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.reverse
        exportTypedArrayMethod('reverse', function reverse() {
          var that = this;
          var length = aTypedArray(that).length;
          var middle = floor(length / 2);
          var index = 0;
          var value;
          while (index < middle) {
            value = that[index];
            that[index++] = that[--length];
            that[length] = value;
          }
          return that;
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/array-buffer-view-core': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.reverse.mjs_cjs=&original=.js", ['./es.typed-array.reverse.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.reverse.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.reverse.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.set.js", ['./cjs-loader.mjs', './global.js', './function-call.js', './array-buffer-view-core.js', './length-of-array-like.js', './to-offset.js', './to-object.js', './fails.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var global = require('../internals/global');
        var call = require('../internals/function-call');
        var ArrayBufferViewCore = require('../internals/array-buffer-view-core');
        var lengthOfArrayLike = require('../internals/length-of-array-like');
        var toOffset = require('../internals/to-offset');
        var toIndexedObject = require('../internals/to-object');
        var fails = require('../internals/fails');
        var RangeError = global.RangeError;
        var Int8Array = global.Int8Array;
        var Int8ArrayPrototype = Int8Array && Int8Array.prototype;
        var $set = Int8ArrayPrototype && Int8ArrayPrototype.set;
        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
        var WORKS_WITH_OBJECTS_AND_GENERIC_ON_TYPED_ARRAYS = !fails(function () {
          // eslint-disable-next-line es/no-typed-arrays -- required for testing
          var array = new Uint8ClampedArray(2);
          call($set, array, {
            length: 1,
            0: 3
          }, 1);
          return array[1] !== 3;
        });

        // https://bugs.chromium.org/p/v8/issues/detail?id=11294 and other
        var TO_OBJECT_BUG = WORKS_WITH_OBJECTS_AND_GENERIC_ON_TYPED_ARRAYS && ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS && fails(function () {
          var array = new Int8Array(2);
          array.set(1);
          array.set('2', 1);
          return array[0] !== 0 || array[1] !== 2;
        });

        // `%TypedArray%.prototype.set` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.set
        exportTypedArrayMethod('set', function set(arrayLike /* , offset */) {
          aTypedArray(this);
          var offset = toOffset(arguments.length > 1 ? arguments[1] : undefined, 1);
          var src = toIndexedObject(arrayLike);
          if (WORKS_WITH_OBJECTS_AND_GENERIC_ON_TYPED_ARRAYS) return call($set, this, src, offset);
          var length = this.length;
          var len = lengthOfArrayLike(src);
          var index = 0;
          if (len + offset > length) throw RangeError('Wrong length');
          while (index < len) this[offset + index] = src[index++];
        }, !WORKS_WITH_OBJECTS_AND_GENERIC_ON_TYPED_ARRAYS || TO_OBJECT_BUG);

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/global': __cjsMetaURL$1,
          '../internals/function-call': __cjsMetaURL$2,
          '../internals/array-buffer-view-core': __cjsMetaURL$3,
          '../internals/length-of-array-like': __cjsMetaURL$4,
          '../internals/to-offset': __cjsMetaURL$5,
          '../internals/to-object': __cjsMetaURL$6,
          '../internals/fails': __cjsMetaURL$7
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.set.mjs_cjs=&original=.js", ['./es.typed-array.set.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.set.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.set.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.slice.js", ['./cjs-loader.mjs', './array-buffer-view-core.js', './typed-array-species-constructor.js', './fails.js', './array-slice.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var ArrayBufferViewCore = require('../internals/array-buffer-view-core');
        var typedArraySpeciesConstructor = require('../internals/typed-array-species-constructor');
        var fails = require('../internals/fails');
        var arraySlice = require('../internals/array-slice');
        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
        var FORCED = fails(function () {
          // eslint-disable-next-line es/no-typed-arrays -- required for testing
          new Int8Array(1).slice();
        });

        // `%TypedArray%.prototype.slice` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.slice
        exportTypedArrayMethod('slice', function slice(start, end) {
          var list = arraySlice(aTypedArray(this), start, end);
          var C = typedArraySpeciesConstructor(this);
          var index = 0;
          var length = list.length;
          var result = new C(length);
          while (length > index) result[index] = list[index++];
          return result;
        }, FORCED);

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/array-buffer-view-core': __cjsMetaURL$1,
          '../internals/typed-array-species-constructor': __cjsMetaURL$2,
          '../internals/fails': __cjsMetaURL$3,
          '../internals/array-slice': __cjsMetaURL$4
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.slice.mjs_cjs=&original=.js", ['./es.typed-array.slice.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.slice.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.slice.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.some.js", ['./cjs-loader.mjs', './array-buffer-view-core.js', './array-iteration.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var ArrayBufferViewCore = require('../internals/array-buffer-view-core');
        var $some = require('../internals/array-iteration').some;
        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.some` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.some
        exportTypedArrayMethod('some', function some(callbackfn /* , thisArg */) {
          return $some(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/array-buffer-view-core': __cjsMetaURL$1,
          '../internals/array-iteration': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.some.mjs_cjs=&original=.js", ['./es.typed-array.some.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.some.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.some.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.sort.js", ['./cjs-loader.mjs', './global.js', './function-uncurry-this-clause.js', './fails.js', './a-callable.js', './array-sort.js', './array-buffer-view-core.js', './engine-ff-version.js', './engine-is-ie-or-edge.js', './engine-v8-version.js', './engine-webkit-version.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8, __cjsMetaURL$9, __cjsMetaURL$a;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$9 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$a = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var global = require('../internals/global');
        var uncurryThis = require('../internals/function-uncurry-this-clause');
        var fails = require('../internals/fails');
        var aCallable = require('../internals/a-callable');
        var internalSort = require('../internals/array-sort');
        var ArrayBufferViewCore = require('../internals/array-buffer-view-core');
        var FF = require('../internals/engine-ff-version');
        var IE_OR_EDGE = require('../internals/engine-is-ie-or-edge');
        var V8 = require('../internals/engine-v8-version');
        var WEBKIT = require('../internals/engine-webkit-version');
        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
        var Uint16Array = global.Uint16Array;
        var nativeSort = Uint16Array && uncurryThis(Uint16Array.prototype.sort);

        // WebKit
        var ACCEPT_INCORRECT_ARGUMENTS = !!nativeSort && !(fails(function () {
          nativeSort(new Uint16Array(2), null);
        }) && fails(function () {
          nativeSort(new Uint16Array(2), {});
        }));
        var STABLE_SORT = !!nativeSort && !fails(function () {
          // feature detection can be too slow, so check engines versions
          if (V8) return V8 < 74;
          if (FF) return FF < 67;
          if (IE_OR_EDGE) return true;
          if (WEBKIT) return WEBKIT < 602;
          var array = new Uint16Array(516);
          var expected = Array(516);
          var index, mod;
          for (index = 0; index < 516; index++) {
            mod = index % 4;
            array[index] = 515 - index;
            expected[index] = index - 2 * mod + 3;
          }
          nativeSort(array, function (a, b) {
            return (a / 4 | 0) - (b / 4 | 0);
          });
          for (index = 0; index < 516; index++) {
            if (array[index] !== expected[index]) return true;
          }
        });
        var getSortCompare = function getSortCompare(comparefn) {
          return function (x, y) {
            if (comparefn !== undefined) return +comparefn(x, y) || 0;
            // eslint-disable-next-line no-self-compare -- NaN check
            if (y !== y) return -1;
            // eslint-disable-next-line no-self-compare -- NaN check
            if (x !== x) return 1;
            if (x === 0 && y === 0) return 1 / x > 0 && 1 / y < 0 ? 1 : -1;
            return x > y;
          };
        };

        // `%TypedArray%.prototype.sort` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.sort
        exportTypedArrayMethod('sort', function sort(comparefn) {
          if (comparefn !== undefined) aCallable(comparefn);
          if (STABLE_SORT) return nativeSort(this, comparefn);
          return internalSort(aTypedArray(this), getSortCompare(comparefn));
        }, !STABLE_SORT || ACCEPT_INCORRECT_ARGUMENTS);

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/global': __cjsMetaURL$1,
          '../internals/function-uncurry-this-clause': __cjsMetaURL$2,
          '../internals/fails': __cjsMetaURL$3,
          '../internals/a-callable': __cjsMetaURL$4,
          '../internals/array-sort': __cjsMetaURL$5,
          '../internals/array-buffer-view-core': __cjsMetaURL$6,
          '../internals/engine-ff-version': __cjsMetaURL$7,
          '../internals/engine-is-ie-or-edge': __cjsMetaURL$8,
          '../internals/engine-v8-version': __cjsMetaURL$9,
          '../internals/engine-webkit-version': __cjsMetaURL$a
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.sort.mjs_cjs=&original=.js", ['./es.typed-array.sort.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.sort.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.sort.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.subarray.js", ['./cjs-loader.mjs', './array-buffer-view-core.js', './to-length.js', './to-absolute-index.js', './typed-array-species-constructor.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var ArrayBufferViewCore = require('../internals/array-buffer-view-core');
        var toLength = require('../internals/to-length');
        var toAbsoluteIndex = require('../internals/to-absolute-index');
        var typedArraySpeciesConstructor = require('../internals/typed-array-species-constructor');
        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

        // `%TypedArray%.prototype.subarray` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.subarray
        exportTypedArrayMethod('subarray', function subarray(begin, end) {
          var O = aTypedArray(this);
          var length = O.length;
          var beginIndex = toAbsoluteIndex(begin, length);
          var C = typedArraySpeciesConstructor(O);
          return new C(O.buffer, O.byteOffset + beginIndex * O.BYTES_PER_ELEMENT, toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - beginIndex));
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/array-buffer-view-core': __cjsMetaURL$1,
          '../internals/to-length': __cjsMetaURL$2,
          '../internals/to-absolute-index': __cjsMetaURL$3,
          '../internals/typed-array-species-constructor': __cjsMetaURL$4
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.subarray.mjs_cjs=&original=.js", ['./es.typed-array.subarray.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.subarray.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.subarray.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.to-locale-string.js", ['./cjs-loader.mjs', './global.js', './function-apply.js', './array-buffer-view-core.js', './fails.js', './array-slice.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var global = require('../internals/global');
        var apply = require('../internals/function-apply');
        var ArrayBufferViewCore = require('../internals/array-buffer-view-core');
        var fails = require('../internals/fails');
        var arraySlice = require('../internals/array-slice');
        var Int8Array = global.Int8Array;
        var aTypedArray = ArrayBufferViewCore.aTypedArray;
        var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
        var $toLocaleString = [].toLocaleString;

        // iOS Safari 6.x fails here
        var TO_LOCALE_STRING_BUG = !!Int8Array && fails(function () {
          $toLocaleString.call(new Int8Array(1));
        });
        var FORCED = fails(function () {
          return [1, 2].toLocaleString() !== new Int8Array([1, 2]).toLocaleString();
        }) || !fails(function () {
          Int8Array.prototype.toLocaleString.call([1, 2]);
        });

        // `%TypedArray%.prototype.toLocaleString` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.tolocalestring
        exportTypedArrayMethod('toLocaleString', function toLocaleString() {
          return apply($toLocaleString, TO_LOCALE_STRING_BUG ? arraySlice(aTypedArray(this)) : aTypedArray(this), arraySlice(arguments));
        }, FORCED);

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/global': __cjsMetaURL$1,
          '../internals/function-apply': __cjsMetaURL$2,
          '../internals/array-buffer-view-core': __cjsMetaURL$3,
          '../internals/fails': __cjsMetaURL$4,
          '../internals/array-slice': __cjsMetaURL$5
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.to-locale-string.mjs_cjs=&original=.js", ['./es.typed-array.to-locale-string.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.to-locale-string.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.to-locale-string.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.to-string.js", ['./cjs-loader.mjs', './array-buffer-view-core.js', './fails.js', './global.js', './function-uncurry-this.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var exportTypedArrayMethod = require('../internals/array-buffer-view-core').exportTypedArrayMethod;
        var fails = require('../internals/fails');
        var global = require('../internals/global');
        var uncurryThis = require('../internals/function-uncurry-this');
        var Uint8Array = global.Uint8Array;
        var Uint8ArrayPrototype = Uint8Array && Uint8Array.prototype || {};
        var arrayToString = [].toString;
        var join = uncurryThis([].join);
        if (fails(function () {
          arrayToString.call({});
        })) {
          arrayToString = function toString() {
            return join(this);
          };
        }
        var IS_NOT_ARRAY_METHOD = Uint8ArrayPrototype.toString !== arrayToString;

        // `%TypedArray%.prototype.toString` method
        // https://tc39.es/ecma262/#sec-%typedarray%.prototype.tostring
        exportTypedArrayMethod('toString', arrayToString, IS_NOT_ARRAY_METHOD);

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/array-buffer-view-core': __cjsMetaURL$1,
          '../internals/fails': __cjsMetaURL$2,
          '../internals/global': __cjsMetaURL$3,
          '../internals/function-uncurry-this': __cjsMetaURL$4
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.to-string.mjs_cjs=&original=.js", ['./es.typed-array.to-string.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.to-string.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.to-string.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.uint16-array.js", ['./cjs-loader.mjs', './typed-array-constructor.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var createTypedArrayConstructor = require('../internals/typed-array-constructor');

        // `Uint16Array` constructor
        // https://tc39.es/ecma262/#sec-typedarray-objects
        createTypedArrayConstructor('Uint16', function (init) {
          return function Uint16Array(data, byteOffset, length) {
            return init(this, data, byteOffset, length);
          };
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/typed-array-constructor': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.uint16-array.mjs_cjs=&original=.js", ['./es.typed-array.uint16-array.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.uint16-array.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.uint16-array.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.uint32-array.js", ['./cjs-loader.mjs', './typed-array-constructor.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var createTypedArrayConstructor = require('../internals/typed-array-constructor');

        // `Uint32Array` constructor
        // https://tc39.es/ecma262/#sec-typedarray-objects
        createTypedArrayConstructor('Uint32', function (init) {
          return function Uint32Array(data, byteOffset, length) {
            return init(this, data, byteOffset, length);
          };
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/typed-array-constructor': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.uint32-array.mjs_cjs=&original=.js", ['./es.typed-array.uint32-array.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.uint32-array.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.uint32-array.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.uint8-array.js", ['./cjs-loader.mjs', './typed-array-constructor.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var createTypedArrayConstructor = require('../internals/typed-array-constructor');

        // `Uint8Array` constructor
        // https://tc39.es/ecma262/#sec-typedarray-objects
        createTypedArrayConstructor('Uint8', function (init) {
          return function Uint8Array(data, byteOffset, length) {
            return init(this, data, byteOffset, length);
          };
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/typed-array-constructor': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/es.typed-array.uint8-array.mjs_cjs=&original=.js", ['./es.typed-array.uint8-array.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './es.typed-array.uint8-array.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./es.typed-array.uint8-array.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/esnext.typed-array.at.js", ['./cjs-loader.mjs', './es.typed-array.at.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        // TODO: Remove from `core-js@4`
        require('../modules/es.typed-array.at');

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../modules/es.typed-array.at': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/esnext.typed-array.at.mjs_cjs=&original=.js", ['./esnext.typed-array.at.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './esnext.typed-array.at.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./esnext.typed-array.at.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/evpkdf.js", ['./rollupPluginModLoBabelHelpers.js', './core.js', './md5.js'], function (exports) {
  var _inheritsLoose, Base, WordArray, MD5Algo;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      Base = module.Base;
      WordArray = module.WordArray;
    }, function (module) {
      MD5Algo = module.MD5Algo;
    }],
    execute: function () {
      /**
       * This key derivation function is meant to conform with EVP_BytesToKey.
       * www.openssl.org/docs/crypto/EVP_BytesToKey.html
       */
      var EvpKDFAlgo = exports('EvpKDFAlgo', /*#__PURE__*/function (_Base) {
        _inheritsLoose(EvpKDFAlgo, _Base);
        /**
         * Initializes a newly created key derivation function.
         *
         * @param {Object} cfg (Optional) The configuration options to use for the derivation.
         *
         * @example
         *
         *     const kdf = CryptoJS.algo.EvpKDF.create();
         *     const kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });
         *     const kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });
         */
        function EvpKDFAlgo(cfg) {
          var _this;
          _this = _Base.call(this) || this;

          /**
           * Configuration options.
           *
           * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
           * @property {Hasher} hasher The hash algorithm to use. Default: MD5
           * @property {number} iterations The number of iterations to perform. Default: 1
           */
          _this.cfg = Object.assign(new Base(), {
            keySize: 128 / 32,
            hasher: MD5Algo,
            iterations: 1
          }, cfg);
          return _this;
        }

        /**
         * Derives a key from a password.
         *
         * @param {WordArray|string} password The password.
         * @param {WordArray|string} salt A salt.
         *
         * @return {WordArray} The derived key.
         *
         * @example
         *
         *     const key = kdf.compute(password, salt);
         */
        var _proto = EvpKDFAlgo.prototype;
        _proto.compute = function compute(password, salt) {
          var block;

          // Shortcut
          var cfg = this.cfg;

          // Init hasher
          var hasher = cfg.hasher.create();

          // Initial values
          var derivedKey = WordArray.create();

          // Shortcuts
          var derivedKeyWords = derivedKey.words;
          var keySize = cfg.keySize,
            iterations = cfg.iterations;

          // Generate key
          while (derivedKeyWords.length < keySize) {
            if (block) {
              hasher.update(block);
            }
            block = hasher.update(password).finalize(salt);
            hasher.reset();

            // Iterations
            for (var i = 1; i < iterations; i += 1) {
              block = hasher.finalize(block);
              hasher.reset();
            }
            derivedKey.concat(block);
          }
          derivedKey.sigBytes = keySize * 4;
          return derivedKey;
        };
        return EvpKDFAlgo;
      }(Base));

      /**
       * Derives a key from a password.
       *
       * @param {WordArray|string} password The password.
       * @param {WordArray|string} salt A salt.
       * @param {Object} cfg (Optional) The configuration options to use for this computation.
       *
       * @return {WordArray} The derived key.
       *
       * @static
       *
       * @example
       *
       *     var key = CryptoJS.EvpKDF(password, salt);
       *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });
       *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });
       */
      var EvpKDF = exports('EvpKDF', function EvpKDF(password, salt, cfg) {
        return EvpKDFAlgo.create(cfg).compute(password, salt);
      });
    }
  };
});

System.register("chunks:///_virtual/export.js", ['./cjs-loader.mjs', './global.js', './object-get-own-property-descriptor.js', './create-non-enumerable-property.js', './define-built-in.js', './define-global-property.js', './copy-constructor-properties.js', './is-forced.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var global = require('../internals/global');
        var getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;
        var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');
        var defineBuiltIn = require('../internals/define-built-in');
        var defineGlobalProperty = require('../internals/define-global-property');
        var copyConstructorProperties = require('../internals/copy-constructor-properties');
        var isForced = require('../internals/is-forced');

        /*
          options.target         - name of the target object
          options.global         - target is the global object
          options.stat           - export as static methods of target
          options.proto          - export as prototype methods of target
          options.real           - real prototype method for the `pure` version
          options.forced         - export even if the native feature is available
          options.bind           - bind methods to the target, required for the `pure` version
          options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version
          options.unsafe         - use the simple assignment of property instead of delete + defineProperty
          options.sham           - add a flag to not completely full polyfills
          options.enumerable     - export as enumerable property
          options.dontCallGetSet - prevent calling a getter on target
          options.name           - the .name of the function if it does not match the key
        */
        module.exports = function (options, source) {
          var TARGET = options.target;
          var GLOBAL = options.global;
          var STATIC = options.stat;
          var FORCED, target, key, targetProperty, sourceProperty, descriptor;
          if (GLOBAL) {
            target = global;
          } else if (STATIC) {
            target = global[TARGET] || defineGlobalProperty(TARGET, {});
          } else {
            target = (global[TARGET] || {}).prototype;
          }
          if (target) for (key in source) {
            sourceProperty = source[key];
            if (options.dontCallGetSet) {
              descriptor = getOwnPropertyDescriptor(target, key);
              targetProperty = descriptor && descriptor.value;
            } else targetProperty = target[key];
            FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
            // contained in target
            if (!FORCED && targetProperty !== undefined) {
              if (typeof sourceProperty == typeof targetProperty) continue;
              copyConstructorProperties(sourceProperty, targetProperty);
            }
            // add a flag to not completely full polyfills
            if (options.sham || targetProperty && targetProperty.sham) {
              createNonEnumerableProperty(sourceProperty, 'sham', true);
            }
            defineBuiltIn(target, key, sourceProperty, options);
          }
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/global': __cjsMetaURL$1,
          '../internals/object-get-own-property-descriptor': __cjsMetaURL$2,
          '../internals/create-non-enumerable-property': __cjsMetaURL$3,
          '../internals/define-built-in': __cjsMetaURL$4,
          '../internals/define-global-property': __cjsMetaURL$5,
          '../internals/copy-constructor-properties': __cjsMetaURL$6,
          '../internals/is-forced': __cjsMetaURL$7
        };
      });
    }
  };
});

System.register("chunks:///_virtual/fails.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        module.exports = function (exec) {
          try {
            return !!exec();
          } catch (error) {
            return true;
          }
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/fix-regexp-well-known-symbol-logic.js", ['./cjs-loader.mjs', './es.regexp.exec.js', './function-uncurry-this-clause.js', './define-built-in.js', './regexp-exec.js', './fails.js', './well-known-symbol.js', './create-non-enumerable-property.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        // TODO: Remove from `core-js@4` since it's moved to entry points
        require('../modules/es.regexp.exec');
        var uncurryThis = require('../internals/function-uncurry-this-clause');
        var defineBuiltIn = require('../internals/define-built-in');
        var regexpExec = require('../internals/regexp-exec');
        var fails = require('../internals/fails');
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');
        var SPECIES = wellKnownSymbol('species');
        var RegExpPrototype = RegExp.prototype;
        module.exports = function (KEY, exec, FORCED, SHAM) {
          var SYMBOL = wellKnownSymbol(KEY);
          var DELEGATES_TO_SYMBOL = !fails(function () {
            // String methods call symbol-named RegEp methods
            var O = {};
            O[SYMBOL] = function () {
              return 7;
            };
            return ''[KEY](O) !== 7;
          });
          var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {
            // Symbol-named RegExp methods call .exec
            var execCalled = false;
            var re = /a/;
            if (KEY === 'split') {
              // We can't use real regex here since it causes deoptimization
              // and serious performance degradation in V8
              // https://github.com/zloirock/core-js/issues/306
              re = {};
              // RegExp[@@split] doesn't call the regex's exec method, but first creates
              // a new one. We need to return the patched regex when creating the new one.
              re.constructor = {};
              re.constructor[SPECIES] = function () {
                return re;
              };
              re.flags = '';
              re[SYMBOL] = /./[SYMBOL];
            }
            re.exec = function () {
              execCalled = true;
              return null;
            };
            re[SYMBOL]('');
            return !execCalled;
          });
          if (!DELEGATES_TO_SYMBOL || !DELEGATES_TO_EXEC || FORCED) {
            var uncurriedNativeRegExpMethod = uncurryThis(/./[SYMBOL]);
            var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {
              var uncurriedNativeMethod = uncurryThis(nativeMethod);
              var $exec = regexp.exec;
              if ($exec === regexpExec || $exec === RegExpPrototype.exec) {
                if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
                  // The native String method already delegates to @@method (this
                  // polyfilled function), leasing to infinite recursion.
                  // We avoid it by directly calling the native @@method method.
                  return {
                    done: true,
                    value: uncurriedNativeRegExpMethod(regexp, str, arg2)
                  };
                }
                return {
                  done: true,
                  value: uncurriedNativeMethod(str, regexp, arg2)
                };
              }
              return {
                done: false
              };
            });
            defineBuiltIn(String.prototype, KEY, methods[0]);
            defineBuiltIn(RegExpPrototype, SYMBOL, methods[1]);
          }
          if (SHAM) createNonEnumerableProperty(RegExpPrototype[SYMBOL], 'sham', true);
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../modules/es.regexp.exec': __cjsMetaURL$1,
          '../internals/function-uncurry-this-clause': __cjsMetaURL$2,
          '../internals/define-built-in': __cjsMetaURL$3,
          '../internals/regexp-exec': __cjsMetaURL$4,
          '../internals/fails': __cjsMetaURL$5,
          '../internals/well-known-symbol': __cjsMetaURL$6,
          '../internals/create-non-enumerable-property': __cjsMetaURL$7
        };
      });
    }
  };
});

System.register("chunks:///_virtual/format-hex.js", ['./cipher-core.js', './core.js'], function (exports) {
  var CipherParams, Hex;
  return {
    setters: [function (module) {
      CipherParams = module.CipherParams;
    }, function (module) {
      Hex = module.Hex;
    }],
    execute: function () {
      var HexFormatter = exports('HexFormatter', {
        /**
         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.
         *
         * @param {CipherParams} cipherParams The cipher params object.
         *
         * @return {string} The hexadecimally encoded string.
         *
         * @static
         *
         * @example
         *
         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);
         */
        stringify: function stringify(cipherParams) {
          return cipherParams.ciphertext.toString(Hex);
        },
        /**
         * Converts a hexadecimally encoded ciphertext string to a cipher params object.
         *
         * @param {string} input The hexadecimally encoded string.
         *
         * @return {CipherParams} The cipher params object.
         *
         * @static
         *
         * @example
         *
         *     var cipherParams = CryptoJS.format.Hex.parse(hexString);
         */
        parse: function parse(input) {
          var ciphertext = Hex.parse(input);
          return CipherParams.create({
            ciphertext: ciphertext
          });
        }
      });
    }
  };
});

System.register("chunks:///_virtual/function-apply.js", ['./cjs-loader.mjs', './function-bind-native.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var NATIVE_BIND = require('../internals/function-bind-native');
        var FunctionPrototype = Function.prototype;
        var apply = FunctionPrototype.apply;
        var call = FunctionPrototype.call;

        // eslint-disable-next-line es/no-reflect -- safe
        module.exports = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {
          return call.apply(apply, arguments);
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-bind-native': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/function-bind-context.js", ['./cjs-loader.mjs', './function-uncurry-this-clause.js', './a-callable.js', './function-bind-native.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var uncurryThis = require('../internals/function-uncurry-this-clause');
        var aCallable = require('../internals/a-callable');
        var NATIVE_BIND = require('../internals/function-bind-native');
        var bind = uncurryThis(uncurryThis.bind);

        // optional / simple context binding
        module.exports = function (fn, that) {
          aCallable(fn);
          return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function /* ...args */
          () {
            return fn.apply(that, arguments);
          };
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-uncurry-this-clause': __cjsMetaURL$1,
          '../internals/a-callable': __cjsMetaURL$2,
          '../internals/function-bind-native': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/function-bind-native.js", ['./cjs-loader.mjs', './fails.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var fails = require('../internals/fails');
        module.exports = !fails(function () {
          // eslint-disable-next-line es/no-function-prototype-bind -- safe
          var test = function () {/* empty */}.bind();
          // eslint-disable-next-line no-prototype-builtins -- safe
          return typeof test != 'function' || test.hasOwnProperty('prototype');
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/fails': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/function-call.js", ['./cjs-loader.mjs', './function-bind-native.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var NATIVE_BIND = require('../internals/function-bind-native');
        var call = Function.prototype.call;
        module.exports = NATIVE_BIND ? call.bind(call) : function () {
          return call.apply(call, arguments);
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-bind-native': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/function-name.js", ['./cjs-loader.mjs', './descriptors.js', './has-own-property.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var DESCRIPTORS = require('../internals/descriptors');
        var hasOwn = require('../internals/has-own-property');
        var FunctionPrototype = Function.prototype;
        // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
        var getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;
        var EXISTS = hasOwn(FunctionPrototype, 'name');
        // additional protection from minified / mangled / dropped function names
        var PROPER = EXISTS && function something() {/* empty */}.name === 'something';
        var CONFIGURABLE = EXISTS && (!DESCRIPTORS || DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable);
        module.exports = {
          EXISTS: EXISTS,
          PROPER: PROPER,
          CONFIGURABLE: CONFIGURABLE
        };

        // #endregion ORIGINAL CODE

        module.exports;
        module.exports.EXISTS;
        module.exports.PROPER;
        module.exports.CONFIGURABLE;
      }, function () {
        return {
          '../internals/descriptors': __cjsMetaURL$1,
          '../internals/has-own-property': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/function-uncurry-this-accessor.js", ['./cjs-loader.mjs', './function-uncurry-this.js', './a-callable.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var uncurryThis = require('../internals/function-uncurry-this');
        var aCallable = require('../internals/a-callable');
        module.exports = function (object, key, method) {
          try {
            // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
            return uncurryThis(aCallable(Object.getOwnPropertyDescriptor(object, key)[method]));
          } catch (error) {/* empty */}
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-uncurry-this': __cjsMetaURL$1,
          '../internals/a-callable': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/function-uncurry-this-clause.js", ['./cjs-loader.mjs', './classof-raw.js', './function-uncurry-this.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var classofRaw = require('../internals/classof-raw');
        var uncurryThis = require('../internals/function-uncurry-this');
        module.exports = function (fn) {
          // Nashorn bug:
          //   https://github.com/zloirock/core-js/issues/1128
          //   https://github.com/zloirock/core-js/issues/1130
          if (classofRaw(fn) === 'Function') return uncurryThis(fn);
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/classof-raw': __cjsMetaURL$1,
          '../internals/function-uncurry-this': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/function-uncurry-this.js", ['./cjs-loader.mjs', './function-bind-native.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var NATIVE_BIND = require('../internals/function-bind-native');
        var FunctionPrototype = Function.prototype;
        var call = FunctionPrototype.call;
        var uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);
        module.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {
          return function () {
            return call.apply(fn, arguments);
          };
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-bind-native': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/get-built-in.js", ['./cjs-loader.mjs', './global.js', './is-callable.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var global = require('../internals/global');
        var isCallable = require('../internals/is-callable');
        var aFunction = function aFunction(argument) {
          return isCallable(argument) ? argument : undefined;
        };
        module.exports = function (namespace, method) {
          return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/global': __cjsMetaURL$1,
          '../internals/is-callable': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/get-iterator-method.js", ['./cjs-loader.mjs', './classof.js', './get-method.js', './is-null-or-undefined.js', './iterators.js', './well-known-symbol.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var classof = require('../internals/classof');
        var getMethod = require('../internals/get-method');
        var isNullOrUndefined = require('../internals/is-null-or-undefined');
        var Iterators = require('../internals/iterators');
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var ITERATOR = wellKnownSymbol('iterator');
        module.exports = function (it) {
          if (!isNullOrUndefined(it)) return getMethod(it, ITERATOR) || getMethod(it, '@@iterator') || Iterators[classof(it)];
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/classof': __cjsMetaURL$1,
          '../internals/get-method': __cjsMetaURL$2,
          '../internals/is-null-or-undefined': __cjsMetaURL$3,
          '../internals/iterators': __cjsMetaURL$4,
          '../internals/well-known-symbol': __cjsMetaURL$5
        };
      });
    }
  };
});

System.register("chunks:///_virtual/get-iterator.js", ['./cjs-loader.mjs', './function-call.js', './a-callable.js', './an-object.js', './try-to-string.js', './get-iterator-method.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var call = require('../internals/function-call');
        var aCallable = require('../internals/a-callable');
        var anObject = require('../internals/an-object');
        var tryToString = require('../internals/try-to-string');
        var getIteratorMethod = require('../internals/get-iterator-method');
        var $TypeError = TypeError;
        module.exports = function (argument, usingIterator) {
          var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;
          if (aCallable(iteratorMethod)) return anObject(call(iteratorMethod, argument));
          throw $TypeError(tryToString(argument) + ' is not iterable');
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-call': __cjsMetaURL$1,
          '../internals/a-callable': __cjsMetaURL$2,
          '../internals/an-object': __cjsMetaURL$3,
          '../internals/try-to-string': __cjsMetaURL$4,
          '../internals/get-iterator-method': __cjsMetaURL$5
        };
      });
    }
  };
});

System.register("chunks:///_virtual/get-json-replacer-function.js", ['./cjs-loader.mjs', './function-uncurry-this.js', './is-array.js', './is-callable.js', './classof-raw.js', './to-string.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var uncurryThis = require('../internals/function-uncurry-this');
        var isArray = require('../internals/is-array');
        var isCallable = require('../internals/is-callable');
        var classof = require('../internals/classof-raw');
        var toString = require('../internals/to-string');
        var push = uncurryThis([].push);
        module.exports = function (replacer) {
          if (isCallable(replacer)) return replacer;
          if (!isArray(replacer)) return;
          var rawLength = replacer.length;
          var keys = [];
          for (var i = 0; i < rawLength; i++) {
            var element = replacer[i];
            if (typeof element == 'string') push(keys, element);else if (typeof element == 'number' || classof(element) === 'Number' || classof(element) === 'String') push(keys, toString(element));
          }
          var keysLength = keys.length;
          var root = true;
          return function (key, value) {
            if (root) {
              root = false;
              return value;
            }
            if (isArray(this)) return value;
            for (var j = 0; j < keysLength; j++) if (keys[j] === key) return value;
          };
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-uncurry-this': __cjsMetaURL$1,
          '../internals/is-array': __cjsMetaURL$2,
          '../internals/is-callable': __cjsMetaURL$3,
          '../internals/classof-raw': __cjsMetaURL$4,
          '../internals/to-string': __cjsMetaURL$5
        };
      });
    }
  };
});

System.register("chunks:///_virtual/get-method.js", ['./cjs-loader.mjs', './a-callable.js', './is-null-or-undefined.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var aCallable = require('../internals/a-callable');
        var isNullOrUndefined = require('../internals/is-null-or-undefined');

        // `GetMethod` abstract operation
        // https://tc39.es/ecma262/#sec-getmethod
        module.exports = function (V, P) {
          var func = V[P];
          return isNullOrUndefined(func) ? undefined : aCallable(func);
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/a-callable': __cjsMetaURL$1,
          '../internals/is-null-or-undefined': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/global.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var check = function check(it) {
          return it && it.Math === Math && it;
        };

        // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
        module.exports =
        // eslint-disable-next-line es/no-global-this -- safe
        check(typeof globalThis == 'object' && globalThis) || check(typeof window == 'object' && window) ||
        // eslint-disable-next-line no-restricted-globals -- safe
        check(typeof self == 'object' && self) || check(typeof global == 'object' && global) ||
        // eslint-disable-next-line no-new-func -- fallback
        function () {
          return this;
        }() || this || Function('return this')();

        // #endregion ORIGINAL CODE

        module.exports;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/has-own-property.js", ['./cjs-loader.mjs', './function-uncurry-this.js', './to-object.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var uncurryThis = require('../internals/function-uncurry-this');
        var toObject = require('../internals/to-object');
        var hasOwnProperty = uncurryThis({}.hasOwnProperty);

        // `HasOwnProperty` abstract operation
        // https://tc39.es/ecma262/#sec-hasownproperty
        // eslint-disable-next-line es/no-object-hasown -- safe
        module.exports = Object.hasOwn || function hasOwn(it, key) {
          return hasOwnProperty(toObject(it), key);
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-uncurry-this': __cjsMetaURL$1,
          '../internals/to-object': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/hidden-keys.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        module.exports = {};

        // #endregion ORIGINAL CODE

        module.exports;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/host-report-errors.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        module.exports = function (a, b) {
          try {
            // eslint-disable-next-line no-console -- safe
            arguments.length === 1 ? console.error(a) : console.error(a, b);
          } catch (error) {/* empty */}
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/html.js", ['./cjs-loader.mjs', './get-built-in.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var getBuiltIn = require('../internals/get-built-in');
        module.exports = getBuiltIn('document', 'documentElement');

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/get-built-in': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/ie8-dom-define.js", ['./cjs-loader.mjs', './descriptors.js', './fails.js', './document-create-element.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var DESCRIPTORS = require('../internals/descriptors');
        var fails = require('../internals/fails');
        var createElement = require('../internals/document-create-element');

        // Thanks to IE8 for its funny defineProperty
        module.exports = !DESCRIPTORS && !fails(function () {
          // eslint-disable-next-line es/no-object-defineproperty -- required for testing
          return Object.defineProperty(createElement('div'), 'a', {
            get: function get() {
              return 7;
            }
          }).a !== 7;
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/descriptors': __cjsMetaURL$1,
          '../internals/fails': __cjsMetaURL$2,
          '../internals/document-create-element': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/ieee754.js", ['./cjs-loader.mjs', './math-sign.js', './math-trunc.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        // IEEE754 conversions based on https://github.com/feross/ieee754
        var sign = require('../internals/math-sign');
        var trunc = require('../internals/math-trunc');
        var $Array = Array;
        var abs = Math.abs;
        var pow = Math.pow;
        var floor = Math.floor;
        var log = Math.log;
        var LN2 = Math.LN2;
        var roundToEven = function roundToEven(number) {
          var truncated = trunc(number);
          var delta = abs(number - truncated);
          if (delta > 0.5 || delta === 0.5 && truncated % 2 !== 0) {
            return truncated + sign(number);
          }
          return truncated;
        };
        var pack = function pack(number, mantissaLength, bytes) {
          var buffer = $Array(bytes);
          var exponentLength = bytes * 8 - mantissaLength - 1;
          var eMax = (1 << exponentLength) - 1;
          var eBias = eMax >> 1;
          var rt = mantissaLength === 23 ? pow(2, -24) - pow(2, -77) : 0;
          var s = number < 0 || number === 0 && 1 / number < 0 ? 1 : 0;
          var index = 0;
          var exponent, mantissa, c;
          number = abs(number);
          // eslint-disable-next-line no-self-compare -- NaN check
          if (number !== number || number === Infinity) {
            // eslint-disable-next-line no-self-compare -- NaN check
            mantissa = number !== number ? 1 : 0;
            exponent = eMax;
          } else {
            exponent = floor(log(number) / LN2);
            c = pow(2, -exponent);
            if (number * c < 1) {
              exponent--;
              c *= 2;
            }
            if (exponent + eBias >= 1) {
              number += rt / c;
            } else {
              number += rt * pow(2, 1 - eBias);
            }
            if (number * c >= 2) {
              exponent++;
              c /= 2;
            }
            if (exponent + eBias >= eMax) {
              mantissa = 0;
              exponent = eMax;
            } else if (exponent + eBias >= 1) {
              mantissa = roundToEven((number * c - 1) * pow(2, mantissaLength));
              exponent += eBias;
            } else {
              mantissa = roundToEven(number * pow(2, eBias - 1) * pow(2, mantissaLength));
              exponent = 0;
            }
          }
          while (mantissaLength >= 8) {
            buffer[index++] = mantissa & 255;
            mantissa /= 256;
            mantissaLength -= 8;
          }
          exponent = exponent << mantissaLength | mantissa;
          exponentLength += mantissaLength;
          while (exponentLength > 0) {
            buffer[index++] = exponent & 255;
            exponent /= 256;
            exponentLength -= 8;
          }
          buffer[--index] |= s * 128;
          return buffer;
        };
        var unpack = function unpack(buffer, mantissaLength) {
          var bytes = buffer.length;
          var exponentLength = bytes * 8 - mantissaLength - 1;
          var eMax = (1 << exponentLength) - 1;
          var eBias = eMax >> 1;
          var nBits = exponentLength - 7;
          var index = bytes - 1;
          var s = buffer[index--];
          var exponent = s & 127;
          var mantissa;
          s >>= 7;
          while (nBits > 0) {
            exponent = exponent * 256 + buffer[index--];
            nBits -= 8;
          }
          mantissa = exponent & (1 << -nBits) - 1;
          exponent >>= -nBits;
          nBits += mantissaLength;
          while (nBits > 0) {
            mantissa = mantissa * 256 + buffer[index--];
            nBits -= 8;
          }
          if (exponent === 0) {
            exponent = 1 - eBias;
          } else if (exponent === eMax) {
            return mantissa ? NaN : s ? -Infinity : Infinity;
          } else {
            mantissa += pow(2, mantissaLength);
            exponent -= eBias;
          }
          return (s ? -1 : 1) * mantissa * pow(2, exponent - mantissaLength);
        };
        module.exports = {
          pack: pack,
          unpack: unpack
        };

        // #endregion ORIGINAL CODE

        module.exports;
        module.exports.pack;
        module.exports.unpack;
      }, function () {
        return {
          '../internals/math-sign': __cjsMetaURL$1,
          '../internals/math-trunc': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/index.js", ['./core.js', './x64-core.js', './cipher-core.js', './enc-utf16.js', './enc-base64.js', './enc-base64url.js', './md5.js', './sha1.js', './sha224.js', './sha256.js', './sha384.js', './sha512.js', './sha3.js', './ripemd160.js', './pbkdf2.js', './evpkdf.js', './aes.js', './tripledes.js', './rabbit.js', './rabbit-legacy.js', './rc4.js', './blowfish.js', './mode-cfb.js', './mode-ctr.js', './mode-ctr-gladman.js', './mode-ecb.js', './mode-ofb.js', './pad-ansix923.js', './pad-iso10126.js', './pad-iso97971.js', './pad-nopadding.js', './pad-zeropadding.js', './format-hex.js'], function (exports) {
  var Base, WordArray, BufferedBlockAlgorithm, Hasher, Hex, Latin1, Utf8, HMAC, X64Word, X64WordArray, Cipher, StreamCipher, BlockCipherMode, BlockCipher, CipherParams, SerializableCipher, PasswordBasedCipher, CBC, Pkcs7, OpenSSLFormatter, OpenSSLKdf, Utf16, Utf16BE, Utf16LE, Base64, Base64url, MD5Algo, MD5, HmacMD5, SHA1Algo, SHA1, HmacSHA1, SHA224Algo, SHA224, HmacSHA224, SHA256Algo, SHA256, HmacSHA256, SHA384Algo, SHA384, HmacSHA384, SHA512Algo, SHA512, HmacSHA512, SHA3Algo, SHA3, HmacSHA3, RIPEMD160Algo, RIPEMD160, HmacRIPEMD160, PBKDF2Algo, PBKDF2, EvpKDFAlgo, EvpKDF, AESAlgo, AES, DESAlgo, TripleDESAlgo, DES, TripleDES, RabbitAlgo, Rabbit, RabbitLegacyAlgo, RabbitLegacy, RC4Algo, RC4DropAlgo, RC4, RC4Drop, BlowfishAlgo, Blowfish, CFB, CTR, CTRGladman, ECB, OFB, AnsiX923, Iso10126, Iso97971, NoPadding, ZeroPadding, HexFormatter;
  return {
    setters: [function (module) {
      Base = module.Base;
      WordArray = module.WordArray;
      BufferedBlockAlgorithm = module.BufferedBlockAlgorithm;
      Hasher = module.Hasher;
      Hex = module.Hex;
      Latin1 = module.Latin1;
      Utf8 = module.Utf8;
      HMAC = module.HMAC;
    }, function (module) {
      X64Word = module.X64Word;
      X64WordArray = module.X64WordArray;
    }, function (module) {
      Cipher = module.Cipher;
      StreamCipher = module.StreamCipher;
      BlockCipherMode = module.BlockCipherMode;
      BlockCipher = module.BlockCipher;
      CipherParams = module.CipherParams;
      SerializableCipher = module.SerializableCipher;
      PasswordBasedCipher = module.PasswordBasedCipher;
      CBC = module.CBC;
      Pkcs7 = module.Pkcs7;
      OpenSSLFormatter = module.OpenSSLFormatter;
      OpenSSLKdf = module.OpenSSLKdf;
    }, function (module) {
      Utf16 = module.Utf16;
      Utf16BE = module.Utf16BE;
      Utf16LE = module.Utf16LE;
    }, function (module) {
      Base64 = module.Base64;
    }, function (module) {
      Base64url = module.Base64url;
    }, function (module) {
      MD5Algo = module.MD5Algo;
      MD5 = module.MD5;
      HmacMD5 = module.HmacMD5;
    }, function (module) {
      SHA1Algo = module.SHA1Algo;
      SHA1 = module.SHA1;
      HmacSHA1 = module.HmacSHA1;
    }, function (module) {
      SHA224Algo = module.SHA224Algo;
      SHA224 = module.SHA224;
      HmacSHA224 = module.HmacSHA224;
    }, function (module) {
      SHA256Algo = module.SHA256Algo;
      SHA256 = module.SHA256;
      HmacSHA256 = module.HmacSHA256;
    }, function (module) {
      SHA384Algo = module.SHA384Algo;
      SHA384 = module.SHA384;
      HmacSHA384 = module.HmacSHA384;
    }, function (module) {
      SHA512Algo = module.SHA512Algo;
      SHA512 = module.SHA512;
      HmacSHA512 = module.HmacSHA512;
    }, function (module) {
      SHA3Algo = module.SHA3Algo;
      SHA3 = module.SHA3;
      HmacSHA3 = module.HmacSHA3;
    }, function (module) {
      RIPEMD160Algo = module.RIPEMD160Algo;
      RIPEMD160 = module.RIPEMD160;
      HmacRIPEMD160 = module.HmacRIPEMD160;
    }, function (module) {
      PBKDF2Algo = module.PBKDF2Algo;
      PBKDF2 = module.PBKDF2;
    }, function (module) {
      EvpKDFAlgo = module.EvpKDFAlgo;
      EvpKDF = module.EvpKDF;
    }, function (module) {
      AESAlgo = module.AESAlgo;
      AES = module.AES;
    }, function (module) {
      DESAlgo = module.DESAlgo;
      TripleDESAlgo = module.TripleDESAlgo;
      DES = module.DES;
      TripleDES = module.TripleDES;
    }, function (module) {
      RabbitAlgo = module.RabbitAlgo;
      Rabbit = module.Rabbit;
    }, function (module) {
      RabbitLegacyAlgo = module.RabbitLegacyAlgo;
      RabbitLegacy = module.RabbitLegacy;
    }, function (module) {
      RC4Algo = module.RC4Algo;
      RC4DropAlgo = module.RC4DropAlgo;
      RC4 = module.RC4;
      RC4Drop = module.RC4Drop;
    }, function (module) {
      BlowfishAlgo = module.BlowfishAlgo;
      Blowfish = module.Blowfish;
    }, function (module) {
      CFB = module.CFB;
    }, function (module) {
      CTR = module.CTR;
    }, function (module) {
      CTRGladman = module.CTRGladman;
    }, function (module) {
      ECB = module.ECB;
    }, function (module) {
      OFB = module.OFB;
    }, function (module) {
      AnsiX923 = module.AnsiX923;
    }, function (module) {
      Iso10126 = module.Iso10126;
    }, function (module) {
      Iso97971 = module.Iso97971;
    }, function (module) {
      NoPadding = module.NoPadding;
    }, function (module) {
      ZeroPadding = module.ZeroPadding;
    }, function (module) {
      HexFormatter = module.HexFormatter;
    }],
    execute: function () {
      var CryptoES = exports('default', {
        lib: {
          Base: Base,
          WordArray: WordArray,
          BufferedBlockAlgorithm: BufferedBlockAlgorithm,
          Hasher: Hasher,
          Cipher: Cipher,
          StreamCipher: StreamCipher,
          BlockCipherMode: BlockCipherMode,
          BlockCipher: BlockCipher,
          CipherParams: CipherParams,
          SerializableCipher: SerializableCipher,
          PasswordBasedCipher: PasswordBasedCipher
        },
        x64: {
          Word: X64Word,
          WordArray: X64WordArray
        },
        enc: {
          Hex: Hex,
          Latin1: Latin1,
          Utf8: Utf8,
          Utf16: Utf16,
          Utf16BE: Utf16BE,
          Utf16LE: Utf16LE,
          Base64: Base64,
          Base64url: Base64url
        },
        algo: {
          HMAC: HMAC,
          MD5: MD5Algo,
          SHA1: SHA1Algo,
          SHA224: SHA224Algo,
          SHA256: SHA256Algo,
          SHA384: SHA384Algo,
          SHA512: SHA512Algo,
          SHA3: SHA3Algo,
          RIPEMD160: RIPEMD160Algo,
          PBKDF2: PBKDF2Algo,
          EvpKDF: EvpKDFAlgo,
          AES: AESAlgo,
          DES: DESAlgo,
          TripleDES: TripleDESAlgo,
          Rabbit: RabbitAlgo,
          RabbitLegacy: RabbitLegacyAlgo,
          RC4: RC4Algo,
          RC4Drop: RC4DropAlgo,
          Blowfish: BlowfishAlgo
        },
        mode: {
          CBC: CBC,
          CFB: CFB,
          CTR: CTR,
          CTRGladman: CTRGladman,
          ECB: ECB,
          OFB: OFB
        },
        pad: {
          Pkcs7: Pkcs7,
          AnsiX923: AnsiX923,
          Iso10126: Iso10126,
          Iso97971: Iso97971,
          NoPadding: NoPadding,
          ZeroPadding: ZeroPadding
        },
        format: {
          OpenSSL: OpenSSLFormatter,
          Hex: HexFormatter
        },
        kdf: {
          OpenSSL: OpenSSLKdf
        },
        MD5: MD5,
        HmacMD5: HmacMD5,
        SHA1: SHA1,
        HmacSHA1: HmacSHA1,
        SHA224: SHA224,
        HmacSHA224: HmacSHA224,
        SHA256: SHA256,
        HmacSHA256: HmacSHA256,
        SHA384: SHA384,
        HmacSHA384: HmacSHA384,
        SHA512: SHA512,
        HmacSHA512: HmacSHA512,
        SHA3: SHA3,
        HmacSHA3: HmacSHA3,
        RIPEMD160: RIPEMD160,
        HmacRIPEMD160: HmacRIPEMD160,
        PBKDF2: PBKDF2,
        EvpKDF: EvpKDF,
        AES: AES,
        DES: DES,
        TripleDES: TripleDES,
        Rabbit: Rabbit,
        RabbitLegacy: RabbitLegacy,
        RC4: RC4,
        RC4Drop: RC4Drop,
        Blowfish: Blowfish
      });
    }
  };
});

System.register("chunks:///_virtual/index.mjs", ['./index3.mjs', './es.object.to-string.mjs_cjs=&original=.js', './es.regexp.to-string.mjs_cjs=&original=.js', './es.number.max-safe-integer.mjs_cjs=&original=.js', './es.number.constructor.mjs_cjs=&original=.js', './es.regexp.exec.mjs_cjs=&original=.js', './es.regexp.test.mjs_cjs=&original=.js', './es.array.iterator.mjs_cjs=&original=.js', './es.array-buffer.slice.mjs_cjs=&original=.js', './es.typed-array.uint8-array.mjs_cjs=&original=.js', './esnext.typed-array.at.mjs_cjs=&original=.js', './es.typed-array.copy-within.mjs_cjs=&original=.js', './es.typed-array.every.mjs_cjs=&original=.js', './es.typed-array.fill.mjs_cjs=&original=.js', './es.typed-array.filter.mjs_cjs=&original=.js', './es.typed-array.find.mjs_cjs=&original=.js', './es.typed-array.find-index.mjs_cjs=&original=.js', './es.typed-array.for-each.mjs_cjs=&original=.js', './es.typed-array.includes.mjs_cjs=&original=.js', './es.typed-array.index-of.mjs_cjs=&original=.js', './es.typed-array.iterator.mjs_cjs=&original=.js', './es.typed-array.join.mjs_cjs=&original=.js', './es.typed-array.last-index-of.mjs_cjs=&original=.js', './es.typed-array.map.mjs_cjs=&original=.js', './es.typed-array.reduce.mjs_cjs=&original=.js', './es.typed-array.reduce-right.mjs_cjs=&original=.js', './es.typed-array.reverse.mjs_cjs=&original=.js', './es.typed-array.set.mjs_cjs=&original=.js', './es.typed-array.slice.mjs_cjs=&original=.js', './es.typed-array.some.mjs_cjs=&original=.js', './es.typed-array.sort.mjs_cjs=&original=.js', './es.typed-array.subarray.mjs_cjs=&original=.js', './es.typed-array.to-locale-string.mjs_cjs=&original=.js', './es.typed-array.to-string.mjs_cjs=&original=.js', './es.array.from.mjs_cjs=&original=.js', './es.string.iterator.mjs_cjs=&original=.js', './es.number.parse-int.mjs_cjs=&original=.js', './es.array.join.mjs_cjs=&original=.js', './es.string.match.mjs_cjs=&original=.js', './es.function.name.mjs_cjs=&original=.js', './es.json.stringify.mjs_cjs=&original=.js', './es.promise.mjs_cjs=&original=.js', './es.regexp.constructor.mjs_cjs=&original=.js', './es.regexp.sticky.mjs_cjs=&original=.js', './web.dom-collections.for-each.mjs_cjs=&original=.js', './es.array.filter.mjs_cjs=&original=.js', './es.object.keys.mjs_cjs=&original=.js', './es.array.find-index.mjs_cjs=&original=.js', './es.array.splice.mjs_cjs=&original=.js', './es.array.slice.mjs_cjs=&original=.js', './es.array.find.mjs_cjs=&original=.js', './es.string.ends-with.mjs_cjs=&original=.js', './es.array.includes.mjs_cjs=&original=.js', './es.string.includes.mjs_cjs=&original=.js', './es.string.starts-with.mjs_cjs=&original=.js', './es.typed-array.int8-array.mjs_cjs=&original=.js', './es.typed-array.int16-array.mjs_cjs=&original=.js', './es.typed-array.int32-array.mjs_cjs=&original=.js', './es.typed-array.uint16-array.mjs_cjs=&original=.js', './es.typed-array.uint32-array.mjs_cjs=&original=.js', './es.typed-array.float32-array.mjs_cjs=&original=.js', './es.typed-array.float64-array.mjs_cjs=&original=.js', './es.array.map.mjs_cjs=&original=.js', './es.object.assign.mjs_cjs=&original=.js', './es.array.index-of.mjs_cjs=&original=.js', './web.dom-collections.iterator.mjs_cjs=&original=.js', './es.array-buffer.constructor.mjs_cjs=&original=.js', './es.array-buffer.is-view.mjs_cjs=&original=.js', './web.url.to-json.mjs_cjs=&original=.js', './es.object.entries.mjs_cjs=&original=.js', './es.number.is-integer.mjs_cjs=&original=.js', './es.object.get-prototype-of.mjs_cjs=&original=.js', './es.parse-int.mjs_cjs=&original=.js', './index5.mjs', './tslib.es6.mjs', './index4.mjs'], function (exports) {
  var TsrpcError, __extends, _assign, __awaiter, __generator, BaseHttpClient, defaultBaseHttpClientOptions, defaultBaseWsClientOptions, BaseWsClient;
  return {
    setters: [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, function (module) {
      TsrpcError = module.TsrpcError;
      var _setter = {};
      _setter.TransportDataProto = module.TransportDataProto;
      _setter.TsrpcError = module.TsrpcError;
      _setter.TsrpcErrorType = module.TsrpcErrorType;
      _setter.setLogLevel = module.setLogLevel;
      exports(_setter);
    }, function (module) {
      __extends = module.__extends;
      _assign = module.__assign;
      __awaiter = module.__awaiter;
      __generator = module.__generator;
    }, function (module) {
      BaseHttpClient = module.BaseHttpClient;
      defaultBaseHttpClientOptions = module.defaultBaseHttpClientOptions;
      defaultBaseWsClientOptions = module.defaultBaseWsClientOptions;
      BaseWsClient = module.BaseWsClient;
    }],
    execute: function () {
      /*!
       * TSRPC Browser v3.4.16
       * -----------------------------------------
       * Copyright (c) King Wang.
       * MIT License
       * https://github.com/k8w/tsrpc-browser
       */

      /**
       * @internal
       */
      var HttpProxy = /** @class */function () {
        function HttpProxy() {}
        HttpProxy.prototype.fetch = function (options) {
          var _this = this;
          var _a;
          var rs;
          var promise = new Promise(function (_rs) {
            rs = _rs;
          });
          var xhr = new XMLHttpRequest();
          if (typeof navigator !== 'undefined' && ((_a = navigator === null || navigator === void 0 ? void 0 : navigator.userAgent) === null || _a === void 0 ? void 0 : _a.indexOf('MSIE 8.0;')) > -1) {
            //IE8 不支持onload onabort onerror事件
            xhr.onreadystatechange = function () {
              return __awaiter(_this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                  if (xhr.readyState == 4) {
                    //Network Error
                    if (xhr.status == 0 || xhr.response == null && xhr.responseText == null) {
                      rs({
                        isSucc: false,
                        err: new TsrpcError('Network Error', {
                          type: TsrpcError.Type.NetworkError,
                          httpCode: xhr.status
                        })
                      });
                      return [2 /*return*/];
                    }
                    //IE9 wrongURL 会返回12029
                    if (xhr.status == 12029) {
                      rs({
                        isSucc: false,
                        err: new TsrpcError({
                          message: 'Network Error',
                          type: TsrpcError.Type.NetworkError,
                          httpCode: xhr.status
                        })
                      });
                      return [2 /*return*/];
                    }
                    // Res
                    rs({
                      isSucc: true,
                      res: options.responseType === 'text' ? xhr.responseText : new Uint8Array(xhr.response)
                    });
                  }
                  return [2 /*return*/];
                });
              });
            };
          } else {
            xhr.onerror = function () {
              rs({
                isSucc: false,
                err: new TsrpcError({
                  message: 'Network Error',
                  type: TsrpcError.Type.NetworkError,
                  httpCode: xhr.status
                })
              });
            };
            // 有的平台 超时不触发onerror
            xhr.ontimeout = function () {
              rs({
                isSucc: false,
                err: new TsrpcError({
                  message: 'Request Timeout',
                  type: TsrpcError.Type.NetworkError,
                  code: 'TIMEOUT'
                })
              });
            };
            // Res
            xhr.onload = function () {
              return __awaiter(_this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                  if (xhr.status === 200 || xhr.status === 500) {
                    rs({
                      isSucc: true,
                      res: xhr.response && (options.responseType === 'text' ? xhr.responseText : new Uint8Array(xhr.response))
                    });
                  } else {
                    rs({
                      isSucc: false,
                      err: new TsrpcError({
                        message: 'HTTP Error ' + xhr.status,
                        type: TsrpcError.Type.ServerError,
                        httpCode: xhr.status
                      })
                    });
                  }
                  return [2 /*return*/];
                });
              });
            };

            var transportOptions_1 = options.transportOptions;
            if (!!transportOptions_1.onProgress) {
              xhr.upload.onprogress = function (e) {
                var _a;
                (_a = transportOptions_1.onProgress) === null || _a === void 0 ? void 0 : _a.call(transportOptions_1, e.loaded / e.total);
              };
            }
          }
          xhr.open(options.method, options.url, true);
          if (options.headers) {
            for (var key in options.headers) {
              xhr.setRequestHeader(key, options.headers[key]);
            }
          }
          xhr.responseType = options.responseType;
          var timeout = options.timeout;
          if (timeout) {
            xhr.timeout = timeout;
          }
          xhr.send(options.data);
          var abort = xhr.abort.bind(xhr);
          return {
            promise: promise,
            abort: abort
          };
        };
        return HttpProxy;
      }();

      /**
       * HTTP Client for TSRPC.
       * It uses XMLHttpRequest to send requests.
       * @typeParam ServiceType - `ServiceType` from generated `proto.ts`
       */
      var HttpClient = exports('HttpClient', /** @class */function (_super) {
        __extends(HttpClient, _super);
        function HttpClient(proto, options) {
          var httpProxy = new HttpProxy();
          return _super.call(this, proto, httpProxy, _assign(_assign({}, defaultHttpClientOptions), options)) || this;
        }
        HttpClient.prototype.callApi = function (apiName, req, options) {
          if (options === void 0) {
            options = {};
          }
          return _super.prototype.callApi.call(this, apiName, req, options);
        };
        HttpClient.prototype.sendMsg = function (msgName, msg, options) {
          if (options === void 0) {
            options = {};
          }
          return _super.prototype.sendMsg.call(this, msgName, msg, options);
        };
        return HttpClient;
      }(BaseHttpClient));
      var defaultHttpClientOptions = _assign(_assign({}, defaultBaseHttpClientOptions), {
        customObjectIdClass: String
      });

      /**
       * @internal
       */
      var WebSocketProxy = /** @class */function () {
        function WebSocketProxy(caUrl) {
          this.caUrl = caUrl;
        }
        WebSocketProxy.prototype.connect = function (server, protocols) {
          var _this = this;
          if (this.caUrl) {
            // @ts-ignore
            this._ws = new WebSocket(server, protocols, this.caUrl);
          } else {
            this._ws = new WebSocket(server, protocols);
          }
          this._ws.binaryType = 'arraybuffer';
          this._ws.onopen = this.options.onOpen;
          this._ws.onerror = this.options.onError;
          this._ws.onclose = function (e) {
            _this.options.onClose(e.code, e.reason);
            _this._ws = undefined;
          };
          this._ws.onmessage = function (e) {
            var _a;
            if (e.data instanceof ArrayBuffer) {
              _this.options.onMessage(new Uint8Array(e.data));
            } else if (typeof e.data === 'string') {
              _this.options.onMessage(e.data);
            } else {
              (_a = _this.options.logger) === null || _a === void 0 ? void 0 : _a.warn('[Unresolved Recv]', e.data);
            }
          };
        };
        WebSocketProxy.prototype.close = function (code, reason) {
          var _a;
          (_a = this._ws) === null || _a === void 0 ? void 0 : _a.close(code, reason);
          this._ws = undefined;
        };
        WebSocketProxy.prototype.send = function (data) {
          return __awaiter(this, void 0, void 0, function () {
            var sendData, buf;
            return __generator(this, function (_a) {
              try {
                sendData = void 0;
                if (typeof data === 'string') {
                  sendData = data;
                } else {
                  buf = data;
                  if (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {
                    sendData = buf.buffer;
                  } else {
                    sendData = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
                  }
                }
                this._ws.send(sendData);
                return [2 /*return*/, {}];
              } catch (err) {
                return [2 /*return*/, {
                  err: new TsrpcError('Network Error', {
                    code: 'SEND_BUF_ERR',
                    type: TsrpcError.Type.NetworkError,
                    innerErr: err
                  })
                }];
              }
              return [2 /*return*/];
            });
          });
        };

        return WebSocketProxy;
      }();

      /**
       * Client for TSRPC WebSocket Server.
       * @typeParam ServiceType - `ServiceType` from generated `proto.ts`
       */
      var WsClient = exports('WsClient', /** @class */function (_super) {
        __extends(WsClient, _super);
        function WsClient(proto, options) {
          var wsp = new WebSocketProxy(options === null || options === void 0 ? void 0 : options.caUrl);
          return _super.call(this, proto, wsp, _assign(_assign({}, defaultWsClientOptions), options)) || this;
        }
        return WsClient;
      }(BaseWsClient));
      var defaultWsClientOptions = _assign(_assign({}, defaultBaseWsClientOptions), {
        customObjectIdClass: String
      });
    }
  };
});

System.register("chunks:///_virtual/index.mjs_cjs=&original=.js", ['./index2.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './index.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./index.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/index.mjs_cjs=&original=2.js", ['./index3.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './index.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./index.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/index.mjs_cjs=&original=3.js", ['./index4.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './index.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./index.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/index2.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        ///<reference path="index.d.ts"/>
        var _a;
        var extendFuncs = {
          remove: function remove(filter) {
            if (typeof filter == 'function') {
              for (var i = this.length - 1; i > -1; --i) {
                filter(this[i], i, this) && this.splice(i, 1);
              }
            } else {
              for (var i = this.length - 1; i > -1; --i) {
                this[i] === filter && this.splice(i, 1);
              }
            }
            return this;
          },
          removeOne: function removeOne(filter) {
            if (typeof filter == 'function') {
              for (var i = 0; i < this.length; ++i) {
                if (filter(this[i], i, this)) {
                  this.splice(i, 1);
                  return this;
                }
              }
            } else {
              for (var i = 0; i < this.length; ++i) {
                if (this[i] === filter) {
                  this.splice(i, 1);
                  return this;
                }
              }
            }
            return this;
          },
          first: function first() {
            return this.length ? this[0] : null;
          },
          last: function last() {
            return this.length ? this[this.length - 1] : null;
          },
          max: function max(mapper) {
            if (!this.length) {
              return null;
            }
            if (typeof mapper == 'function') {
              var max = mapper(this[0], 0, this);
              for (var i = 1; i < this.length; ++i) {
                var temp = mapper(this[i], i, this);
                max = temp > max ? temp : max;
              }
              return max;
            } else {
              return this.reduce(function (prev, cur) {
                return prev > cur ? prev : cur;
              });
            }
          },
          min: function min(mapper) {
            if (!this.length) {
              return null;
            }
            function _min(a, b) {
              return a < b ? a : b;
            }
            if (typeof mapper == 'function') {
              var min = mapper(this[0], 0, this);
              for (var i = 1; i < this.length; ++i) {
                var temp = mapper(this[i], i, this);
                min = temp < min ? temp : min;
              }
              return min;
            } else {
              return this.reduce(function (prev, cur) {
                return _min(prev, cur);
              });
            }
          },
          distinct: function distinct() {
            return this.filter(function (v, i, arr) {
              return arr.indexOf(v) === i;
            });
          },
          filterIndex: function filterIndex(filter) {
            var output = [];
            for (var i = 0; i < this.length; ++i) {
              if (filter(this[i], i, this)) {
                output.push(i);
              }
            }
            return output;
          },
          count: function count(filter) {
            var result = 0;
            for (var i = 0; i < this.length; ++i) {
              if (filter(this[i], i, this)) {
                ++result;
              }
            }
            return result;
          },
          sum: function sum(mapper) {
            var result = 0;
            for (var i = 0; i < this.length; ++i) {
              result += mapper ? mapper(this[i], i, this) : this[i];
            }
            return result;
          },
          average: function average(mapper) {
            return this.sum(mapper) / this.length;
          },
          orderBy: function orderBy() {
            var mappers = [];
            for (var _i = 0; _i < arguments.length; _i++) {
              mappers[_i] = arguments[_i];
            }
            return this.slice().sort(function (a, b) {
              for (var i = 0; i < mappers.length; ++i) {
                var va = mappers[i](a);
                var vb = mappers[i](b);
                if (va > vb) {
                  return 1;
                } else if (va < vb) {
                  return -1;
                }
              }
              return 0;
            });
          },
          orderByDesc: function orderByDesc() {
            var mappers = [];
            for (var _i = 0; _i < arguments.length; _i++) {
              mappers[_i] = arguments[_i];
            }
            return this.slice().sort(function (a, b) {
              for (var i = 0; i < mappers.length; ++i) {
                var va = mappers[i](a);
                var vb = mappers[i](b);
                if (va > vb) {
                  return -1;
                } else if (va < vb) {
                  return 1;
                }
              }
              return 0;
            });
          },
          binarySearch: function binarySearch(value, keyMapper) {
            var low = 0,
              high = this.length - 1;
            while (low <= high) {
              var mid = (high + low) / 2 | 0;
              var midValue = keyMapper ? keyMapper(this[mid]) : this[mid];
              if (value === midValue) {
                return mid;
              } else if (value > midValue) {
                low = mid + 1;
              } else if (value < midValue) {
                high = mid - 1;
              }
            }
            return -1;
          },
          binaryInsert: function binaryInsert(item, keyMapper, unique) {
            if (typeof keyMapper == 'boolean') {
              unique = keyMapper;
              keyMapper = undefined;
            }
            var low = 0,
              high = this.length - 1;
            var mid = NaN;
            var itemValue = keyMapper ? keyMapper(item) : item;
            while (low <= high) {
              mid = (high + low) / 2 | 0;
              var midValue = keyMapper ? keyMapper(this[mid]) : this[mid];
              if (itemValue === midValue) {
                if (unique) {
                  return mid;
                } else {
                  break;
                }
              } else if (itemValue > midValue) {
                low = mid + 1;
              } else if (itemValue < midValue) {
                high = mid - 1;
              }
            }
            var index = low > mid ? mid + 1 : mid;
            this.splice(index, 0, item);
            return index;
          },
          binaryDistinct: function binaryDistinct(keyMapper) {
            return this.filter(function (v, i, arr) {
              return arr.binarySearch(v, keyMapper) === i;
            });
          },
          findLast: function findLast(predicate) {
            for (var i = this.length - 1; i > -1; --i) {
              if (predicate(this[i], i, this)) {
                return this[i];
              }
            }
            return undefined;
          },
          findLastIndex: function findLastIndex(predicate) {
            for (var i = this.length - 1; i > -1; --i) {
              if (predicate(this[i], i, this)) {
                return i;
              }
            }
            return -1;
          },
          groupBy: function groupBy(grouper) {
            var group = this.reduce(function (prev, next) {
              var groupKey = grouper(next);
              if (!prev[groupKey]) {
                prev[groupKey] = [];
              }
              prev[groupKey].push(next);
              return prev;
            }, {});
            return Object.keys(group).map(function (key) {
              var arr = group[key];
              arr.key = key;
              return arr;
            });
          },
          __k8w_extended: {
            value: true
          }
        };
        if (!Array.prototype.__k8w_extended) {
          for (var key in extendFuncs) {
            Object.defineProperties(Array.prototype, (_a = {}, _a[key] = {
              value: extendFuncs[key],
              writable: true
            }, _a));
          }
        }

        // #endregion ORIGINAL CODE

        module.exports;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/index2.mjs", ['./index3.mjs', './tslib.es6.mjs', './index4.mjs', './index5.mjs'], function (exports) {
  var __extends, _assign, defaultBaseHttpClientOptions, defaultBaseWsClientOptions, BaseHttpClient, BaseWsClient, TsrpcError;
  return {
    setters: [null, function (module) {
      __extends = module.__extends;
      _assign = module.__assign;
    }, function (module) {
      defaultBaseHttpClientOptions = module.defaultBaseHttpClientOptions;
      defaultBaseWsClientOptions = module.defaultBaseWsClientOptions;
      BaseHttpClient = module.BaseHttpClient;
      BaseWsClient = module.BaseWsClient;
    }, function (module) {
      TsrpcError = module.TsrpcError;
      var _setter = {};
      _setter.TransportDataProto = module.TransportDataProto;
      _setter.TsrpcError = module.TsrpcError;
      _setter.TsrpcErrorType = module.TsrpcErrorType;
      _setter.setLogLevel = module.setLogLevel;
      exports(_setter);
    }],
    execute: function () {
      /*!
       * TSRPC Miniapp v3.4.16
       * -----------------------------------------
       * Copyright (c) King Wang.
       * MIT License
       * https://github.com/k8w/tsrpc-miniapp
       */
      var HttpProxy = /** @class */function () {
        function HttpProxy() {}
        HttpProxy.prototype.fetch = function (options) {
          var _a;
          if (!this.miniappObj) {
            return {
              abort: function abort() {},
              promise: Promise.resolve({
                isSucc: false,
                err: new TsrpcError('miniappObj is not set, please check if this is miniapp environment.', {
                  type: TsrpcError.Type.ClientError
                })
              })
            };
          }
          var rs;
          var promise = new Promise(function (_rs) {
            rs = _rs;
          });
          var data;
          if (typeof options.data === 'string') {
            data = options.data;
          } else {
            var buf = options.data;
            if (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {
              data = buf.buffer;
            } else {
              data = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
            }
          }
          var reqTask = this.miniappObj.request({
            url: options.url,
            data: data,
            method: options.method,
            header: (_a = options.headers) !== null && _a !== void 0 ? _a : {
              'content-type': 'application/octet-stream'
            },
            dataType: '其他',
            responseType: options.responseType,
            success: function success(res) {
              if (res.statusCode === 200 || res.statusCode === 500) {
                rs({
                  isSucc: true,
                  res: typeof res.data === 'string' ? res.data : new Uint8Array(res.data)
                });
              } else {
                rs({
                  isSucc: false,
                  err: new TsrpcError({
                    message: 'HTTP Error ' + res.statusCode,
                    type: TsrpcError.Type.ServerError,
                    httpCode: res.statusCode
                  })
                });
              }
            },
            fail: function fail(res) {
              rs({
                isSucc: false,
                err: new TsrpcError({
                  message: 'Network Error',
                  type: TsrpcError.Type.NetworkError,
                  innerErr: res
                })
              });
            }
          });
          var abort = reqTask.abort.bind(reqTask);
          return {
            promise: promise,
            abort: abort
          };
        };
        return HttpProxy;
      }();

      /**
       * Client for TSRPC HTTP Server.
       * It uses native http module of NodeJS.
       * @typeParam ServiceType - `ServiceType` from generated `proto.ts`
       */
      var HttpClient = exports('HttpClient', /** @class */function (_super) {
        __extends(HttpClient, _super);
        function HttpClient(proto, options) {
          var _this = this;
          var httpProxy = new HttpProxy();
          _this = _super.call(this, proto, httpProxy, _assign(_assign({}, defaultHttpClientOptions), options)) || this;
          httpProxy.miniappObj = _this.options.miniappObj;
          return _this;
        }
        return HttpClient;
      }(BaseHttpClient));
      var defaultHttpClientOptions = _assign(_assign({}, defaultBaseHttpClientOptions), {
        miniappObj: typeof wx !== 'undefined' ? wx : undefined,
        customObjectIdClass: String
      });
      var WebSocketProxy = /** @class */function () {
        function WebSocketProxy() {}
        WebSocketProxy.prototype.connect = function (server, protocols) {
          var _this = this;
          var ws = this.miniappObj.connectSocket(_assign(_assign({}, this.client.options.connectSocketOptions), {
            url: server,
            protocols: protocols
          }));
          this._ws = ws;
          this._ws.onOpen(function (header) {
            if (_this._ws !== ws) {
              return;
            }
            _this.options.onOpen();
          });
          this._ws.onError(function (res) {
            if (_this._ws !== ws) {
              return;
            }
            ws.close();
            _this._ws = undefined;
            _this.options.onError(res);
          });
          this._ws.onClose(function (e) {
            if (_this._ws !== ws) {
              return;
            }
            _this._ws = undefined;
            _this.options.onClose(e.code, e.reason);
          });
          this._ws.onMessage(function (e) {
            if (_this._ws !== ws) {
              return;
            }
            if (typeof e.data === 'string') {
              _this.options.onMessage(e.data);
            } else {
              _this.options.onMessage(new Uint8Array(e.data));
            }
          });
        };
        WebSocketProxy.prototype.close = function (code, reason) {
          var _this = this;
          var _a;
          (_a = this._ws) === null || _a === void 0 ? void 0 : _a.close({
            code: code,
            reason: reason,
            fail: function fail(res) {
              var _a;
              // 重试一次
              console.error('WebSocket closed failed', res);
              (_a = _this._ws) === null || _a === void 0 ? void 0 : _a.close();
            }
          });
          this._ws = undefined;
        };
        WebSocketProxy.prototype.send = function (data) {
          var _this = this;
          var sendData;
          if (typeof data === 'string') {
            sendData = data;
          } else {
            var buf = data;
            if (buf.byteOffset === 0 && buf.byteLength === buf.buffer.byteLength) {
              sendData = buf.buffer;
            } else {
              sendData = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
            }
          }
          return new Promise(function (rs) {
            _this._ws.send({
              data: sendData,
              success: function success() {
                rs({});
              },
              fail: function fail(res) {
                rs({
                  err: new TsrpcError({
                    message: 'Network Error',
                    type: TsrpcError.Type.NetworkError,
                    innerErr: res
                  })
                });
              }
            });
          });
        };
        return WebSocketProxy;
      }();

      /**
       * Client for TSRPC WebSocket Server.
       * @typeParam ServiceType - `ServiceType` from generated `proto.ts`
       */
      var WsClient = exports('WsClient', /** @class */function (_super) {
        __extends(WsClient, _super);
        function WsClient(proto, options) {
          var _this = this;
          var wsp = new WebSocketProxy();
          _this = _super.call(this, proto, wsp, _assign(_assign({}, defaultWsClientOptions), options)) || this;
          if (!_this.options.miniappObj) {
            throw new Error('options.miniappObj is not set');
          }
          wsp.miniappObj = _this.options.miniappObj;
          wsp.client = _this;
          return _this;
        }
        return WsClient;
      }(BaseWsClient));
      var defaultWsClientOptions = _assign(_assign({}, defaultBaseWsClientOptions), {
        miniappObj: typeof wx !== 'undefined' ? wx : undefined,
        customObjectIdClass: String
      });
    }
  };
});

System.register("chunks:///_virtual/index3.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        ///<reference path="index.d.ts"/>
        /**
         * 将sources合并到target，该合并全部是深拷贝
         * @param target
         * @param sources
         * @returns {Object}
         */
        Object.merge = function (target) {
          var sources = [];
          for (var _i = 1; _i < arguments.length; _i++) {
            sources[_i - 1] = arguments[_i];
          }
          for (var i = 0; i < sources.length; ++i) {
            var source = sources[i];
            if (typeof source != 'object' || source == null) {
              continue;
            }
            for (var skey in source) {
              //只处理自身的key 这里可能来自于外部prototype的扩展
              if (!source.hasOwnProperty(skey)) {
                continue;
              }
              if (source[skey] instanceof Date) {
                //Date类型 要克隆一份 保证深拷贝
                target[skey] = new Date(source[skey]);
                continue;
              } else if (typeof target[skey] == 'object' && target[skey] != null && typeof source[skey] == 'object' && source[skey] != null) {
                // 两个都是Object 递归merge之
                Object.merge(target[skey], source[skey]);
              } else {
                if (Array.isArray(source[skey])) {
                  // 数组merge后还是数组
                  target[skey] = Object.merge([], source[skey]);
                } else if (typeof source[skey] == 'object' && source[skey] !== null) {
                  // Object要克隆一份以确保深拷贝
                  target[skey] = Object.merge({}, source[skey]);
                } else {
                  // 基本类型 直接赋值即可
                  target[skey] = source[skey];
                }
              }
            }
          }
          return target;
        };
        if (!Object.values) {
          Object.values = function (obj) {
            var output = [];
            for (var k in obj) {
              obj.hasOwnProperty(k) && output.push(obj[k]);
            }
            return output;
          };
        }
        if (!Object.entries) {
          Object.entries = function (obj) {
            var output = [];
            for (var key in obj) {
              if (!obj.hasOwnProperty(key)) {
                continue;
              }
              output.push([key, obj[key]]);
            }
            return output;
          };
        }
        Object.forEach = function (obj, handler) {
          for (var key in obj) {
            if (!obj.hasOwnProperty(key)) {
              return;
            }
            handler(obj[key], key, obj);
          }
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/index3.mjs", ['./index.mjs_cjs=&original=.js', './index.mjs_cjs=&original=3.js', './index.mjs_cjs=&original=2.js'], function () {
  return {
    setters: [null, null, null],
    execute: function () {
      //应对IE9以下没有console
      if (typeof window != 'undefined' && !window.console) {
        window.console = {};
        console.log = console.debug = console.info = console.warn = console.error = console.time = console.timeEnd = function () {};
      }
      //应对某些浏览器没有console.debug的情况
      if (!console.debug) {
        console.debug = console.log;
      }
    }
  };
});

System.register("chunks:///_virtual/index4.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        ///<reference path="index.d.ts"/>
        function prependZero(matched, num) {
          return matched.length > 1 && num < 10 ? "0" + num : "" + num;
        }
        Date.prototype.format = function (pattern) {
          var _this = this;
          if (pattern === void 0) {
            pattern = 'YYYY-MM-DD hh:mm:ss';
          }
          return pattern.replace(/y{2,}|Y{2,}/, function (v) {
            return (_this.getFullYear() + "").substr(4 - v.length);
          }).replace(/M{1,2}/, function (v) {
            return prependZero(v, _this.getMonth() + 1);
          }).replace(/D{1,2}|d{1,2}/, function (v) {
            return prependZero(v, _this.getDate());
          }).replace(/Q|q/, function (v) {
            return prependZero(v, Math.ceil((_this.getMonth() + 1) / 3));
          }).replace(/h{1,2}|H{1,2}/, function (v) {
            return prependZero(v, _this.getHours());
          }).replace(/m{1,2}/, function (v) {
            return prependZero(v, _this.getMinutes());
          }).replace(/s{1,2}/, function (v) {
            return prependZero(v, _this.getSeconds());
          }).replace(/SSS|S/, function (v) {
            var ms = '' + _this.getMilliseconds();
            return v.length === 1 ? ms : "" + (ms.length === 1 ? '00' : ms.length === 2 ? '0' : '') + ms;
          });
        };
        Date.today = function () {
          var now = new Date();
          return new Date(now.getFullYear(), now.getMonth(), now.getDate()).getTime();
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/index4.mjs", ['./index3.mjs', './tslib.es6.mjs', './index6.mjs', './index5.mjs', './index7.mjs'], function (exports) {
  var __awaiter, __generator, __extends, _assign, TSBuffer, TransportDataProto, TsrpcError, setLogLevel, TsrpcErrorType, SchemaType;
  return {
    setters: [null, function (module) {
      __awaiter = module.__awaiter;
      __generator = module.__generator;
      __extends = module.__extends;
      _assign = module.__assign;
    }, function (module) {
      TSBuffer = module.TSBuffer;
    }, function (module) {
      TransportDataProto = module.TransportDataProto;
      TsrpcError = module.TsrpcError;
      setLogLevel = module.setLogLevel;
      TsrpcErrorType = module.TsrpcErrorType;
    }, function (module) {
      SchemaType = module.SchemaType;
    }],
    execute: function () {
      exports({
        WsClientStatus: void 0,
        getCustomObjectIdTypes: getCustomObjectIdTypes
      });

      /*!
       * TSRPC Base Client v2.1.15
       * -----------------------------------------
       * Copyright (c) Kingworks Corporation.
       * MIT License
       * https://github.com/k8w/tsrpc-base-client
       */

      /**
       * An auto-increment counter
       */
      var Counter = exports('Counter', /** @class */function () {
        function Counter(min, max) {
          if (min === void 0) {
            min = 1;
          }
          if (max === void 0) {
            max = Number.MAX_SAFE_INTEGER;
          }
          this._min = min;
          this._max = max;
          this._last = max;
        }
        /**
         * Reset the counter, makes `getNext()` restart from `0`
         */
        Counter.prototype.reset = function () {
          this._last = this._max;
        };
        /**
         * Get next counter value, and auto increment `1`
         * @param notInc - Just get the next possible value, not actually increasing the sequence
         */
        Counter.prototype.getNext = function (notInc) {
          return this._last >= this._max ? this._last = this._min : notInc ? this._last : ++this._last;
        };
        Object.defineProperty(Counter.prototype, "last", {
          /**
           * Last return of `getNext()`
           */
          get: function get() {
            return this._last;
          },
          enumerable: false,
          configurable: true
        });
        return Counter;
      }());

      /**
       * A `Flow` is consists of many `FlowNode`, which is function with the same input and output (like pipeline).
       *
       * @remarks
       * `Flow` is like a hook or event, executed at a specific time.
       * The difference to event is it can be used to **interrupt** an action, by return `undefined` or `null` in a node.
       */
      var Flow = exports('Flow', /** @class */function () {
        function Flow() {
          /**
           * All node functions, if you want to adjust the sort you can modify this.
           */
          this.nodes = [];
          /**
           * Event when error throwed from a `FlowNode` function.
           * By default, it does nothing except print a `Uncaught FlowError` error log.
           * @param e
           * @param last
           * @param input
           * @param logger
           */
          this.onError = function (e, last, input, logger) {
            logger === null || logger === void 0 ? void 0 : logger.error('Uncaught FlowError:', e);
          };
        }
        /**
         * Execute all node function one by one, the previous output is the next input,
         * until the last output would be return to the caller.
         *
         * @remarks
         * If any node function return `null | undefined`, or throws an error,
         * the latter node functions would not be executed.
         * And it would return `null | undefined` immediately to the caller,
         * which tell the caller it means a interruption,
         * to let the caller stop latter behaviours.
         *
         * @param input The input of the first `FlowNode`
         * @param logger Logger to print log, `undefined` means to hide all log.
         * @returns
         */
        Flow.prototype.exec = function (input, logger) {
          return __awaiter(this, void 0, void 0, function () {
            var res, i, e_1;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  res = input;
                  i = 0;
                  _a.label = 1;
                case 1:
                  if (!(i < this.nodes.length)) return [3 /*break*/, 7];
                  _a.label = 2;
                case 2:
                  _a.trys.push([2, 4,, 5]);
                  return [4 /*yield*/, this.nodes[i](res)];
                case 3:
                  res = _a.sent();
                  return [3 /*break*/, 5];
                case 4:
                  e_1 = _a.sent();
                  this.onError(e_1, res, input, logger);
                  return [2 /*return*/, undefined];
                case 5:
                  // Return 非true 表示不继续后续流程 立即中止
                  if (res === null || res === undefined) {
                    return [2 /*return*/, res];
                  }
                  _a.label = 6;
                case 6:
                  ++i;
                  return [3 /*break*/, 1];
                case 7:
                  return [2 /*return*/, res];
              }
            });
          });
        };
        /**
         * Append a node function to the last
         * @param node
         * @returns
         */
        Flow.prototype.push = function (node) {
          this.nodes.push(node);
          return node;
        };
        /**
         * Remove a node function
         * @param node
         * @returns
         */
        Flow.prototype.remove = function (node) {
          return this.nodes.remove(function (v) {
            return v === node;
          });
        };
        return Flow;
      }());
      function getCustomObjectIdTypes(classObjectId) {
        var output = {};
        // string
        if (classObjectId === String) {
          output['?mongodb/ObjectId'] = {
            type: SchemaType.Custom,
            validate: function validate(value) {
              if (typeof value !== 'string') {
                return {
                  isSucc: false,
                  errMsg: "Expected type to be `string`, actually `".concat(typeof value, "`.")
                };
              }
              if (!/^[0-9a-fA-F]{24}$/.test(value)) {
                return {
                  isSucc: false,
                  errMsg: 'ObjectId must be a string of 24 hex characters'
                };
              }
              return {
                isSucc: true
              };
            },
            encode: function encode(value) {
              return new Uint8Array(Array.from({
                length: 12
              }, function (_, i) {
                return Number.parseInt('0x' + value.substr(i * 2, 2));
              }));
            },
            decode: function decode(buf) {
              return Array.from(buf, function (v) {
                var str = v.toString(16);
                if (str.length === 1) {
                  str = '0' + str;
                }
                return str;
              }).join('');
            }
          };
        }
        // ObjectId
        else {
          output['?mongodb/ObjectId'] = {
            type: SchemaType.Custom,
            validate: function validate(value) {
              return value instanceof classObjectId ? {
                isSucc: true
              } : {
                isSucc: false,
                errMsg: "Expected to be instance of `ObjectId`, actually not."
              };
            },
            encode: function encode(value) {
              return new Uint8Array(value.id);
            },
            decode: function decode(buf) {
              return new classObjectId(buf);
            },
            decodeJSON: function decodeJSON(json) {
              return new classObjectId(json);
            }
          };
        }
        output['?mongodb/ObjectID'] = output['?mongodb/ObjectId'];
        output['?bson/ObjectId'] = output['?mongodb/ObjectId'];
        output['?bson/ObjectID'] = output['?mongodb/ObjectId'];
        return output;
      }

      /**
       * A manager for TSRPC receiving messages
       */
      var MsgHandlerManager = exports('MsgHandlerManager', /** @class */function () {
        function MsgHandlerManager() {
          this._handlers = {};
        }
        /**
         * Execute all handlers parallelly
         * @returns handlers count
         */
        MsgHandlerManager.prototype.forEachHandler = function (msgName, logger) {
          var args = [];
          for (var _i = 2; _i < arguments.length; _i++) {
            args[_i - 2] = arguments[_i];
          }
          var handlers = this._handlers[msgName];
          if (!handlers) {
            return [];
          }
          var output = [];
          for (var _a = 0, handlers_1 = handlers; _a < handlers_1.length; _a++) {
            var handler = handlers_1[_a];
            try {
              output.push(handler.apply(void 0, args));
            } catch (e) {
              logger === null || logger === void 0 ? void 0 : logger.error('[MsgHandlerError]', e);
            }
          }
          return output;
        };
        /**
         * Add message handler, duplicate handlers to the same `msgName` would be ignored.
         * @param msgName
         * @param handler
         * @returns
         */
        MsgHandlerManager.prototype.addHandler = function (msgName, handler) {
          var handlers = this._handlers[msgName];
          // 初始化Handlers
          if (!handlers) {
            handlers = this._handlers[msgName] = [];
          }
          // 防止重复监听
          else if (handlers.some(function (v) {
            return v === handler;
          })) {
            return;
          }
          handlers.push(handler);
        };
        /**
         * Remove handler from the specific `msgName`
         * @param msgName
         * @param handler
         * @returns
         */
        MsgHandlerManager.prototype.removeHandler = function (msgName, handler) {
          var handlers = this._handlers[msgName];
          if (!handlers) {
            return;
          }
          handlers.removeOne(function (v) {
            return v === handler;
          });
        };
        /**
         * Remove all handlers for the specific `msgName`
         * @param msgName
         */
        MsgHandlerManager.prototype.removeAllHandlers = function (msgName) {
          this._handlers[msgName] = undefined;
        };
        return MsgHandlerManager;
      }());

      /** A utility for generate `ServiceMap` */
      var ServiceMapUtil = exports('ServiceMapUtil', /** @class */function () {
        function ServiceMapUtil() {}
        ServiceMapUtil.getServiceMap = function (proto) {
          var map = {
            id2Service: {},
            apiName2Service: {},
            msgName2Service: {}
          };
          for (var _i = 0, _a = proto.services; _i < _a.length; _i++) {
            var v = _a[_i];
            var match = v.name.match(/(.+\/)?([^\/]+)$/);
            var path = match[1] || '';
            var name_1 = match[2];
            if (v.type === 'api') {
              var svc = _assign(_assign({}, v), {
                reqSchemaId: "".concat(path, "Ptl").concat(name_1, "/Req").concat(name_1),
                resSchemaId: "".concat(path, "Ptl").concat(name_1, "/Res").concat(name_1)
              });
              map.apiName2Service[v.name] = svc;
              map.id2Service[v.id] = svc;
            } else {
              var svc = _assign(_assign({}, v), {
                msgSchemaId: "".concat(path, "Msg").concat(name_1, "/Msg").concat(name_1)
              });
              map.msgName2Service[v.name] = svc;
              map.id2Service[v.id] = svc;
            }
          }
          return map;
        };
        return ServiceMapUtil;
      }());
      var TransportDataUtil = exports('TransportDataUtil', /** @class */function () {
        function TransportDataUtil() {}
        Object.defineProperty(TransportDataUtil, "tsbuffer", {
          get: function get() {
            if (!this._tsbuffer) {
              this._tsbuffer = new TSBuffer(TransportDataProto);
            }
            return this._tsbuffer;
          },
          enumerable: false,
          configurable: true
        });
        TransportDataUtil.encodeClientMsg = function (tsbuffer, service, msg, type, connType) {
          if (type === 'buffer') {
            var op = tsbuffer.encode(msg, service.msgSchemaId);
            if (!op.isSucc) {
              return op;
            }
            var serverInputData = {
              serviceId: service.id,
              buffer: op.buf
            };
            var opOut = this.tsbuffer.encode(serverInputData, 'ServerInputData');
            return opOut.isSucc ? {
              isSucc: true,
              output: opOut.buf
            } : {
              isSucc: false,
              errMsg: opOut.errMsg
            };
          } else {
            var op = tsbuffer.encodeJSON(msg, service.msgSchemaId);
            if (!op.isSucc) {
              return op;
            }
            var json = connType === 'SHORT' ? op.json : [service.name, op.json];
            return {
              isSucc: true,
              output: type === 'json' ? json : JSON.stringify(json)
            };
          }
        };
        TransportDataUtil.encodeApiReq = function (tsbuffer, service, req, type, sn) {
          if (type === 'buffer') {
            var op = tsbuffer.encode(req, service.reqSchemaId);
            if (!op.isSucc) {
              return op;
            }
            var serverInputData = {
              serviceId: service.id,
              buffer: op.buf,
              sn: sn
            };
            var opOut = this.tsbuffer.encode(serverInputData, 'ServerInputData');
            return opOut.isSucc ? {
              isSucc: true,
              output: opOut.buf
            } : {
              isSucc: false,
              errMsg: opOut.errMsg
            };
          } else {
            var op = tsbuffer.encodeJSON(req, service.reqSchemaId);
            if (!op.isSucc) {
              return op;
            }
            var json = sn === undefined ? op.json : [service.name, op.json, sn];
            return {
              isSucc: true,
              output: type === 'json' ? json : JSON.stringify(json)
            };
          }
        };
        TransportDataUtil.encodeServerMsg = function (tsbuffer, service, msg, type, connType) {
          if (type === 'buffer') {
            var op = tsbuffer.encode(msg, service.msgSchemaId);
            if (!op.isSucc) {
              return op;
            }
            var serverOutputData = {
              serviceId: service.id,
              buffer: op.buf
            };
            var opOut = this.tsbuffer.encode(serverOutputData, 'ServerOutputData');
            return opOut.isSucc ? {
              isSucc: true,
              output: opOut.buf
            } : {
              isSucc: false,
              errMsg: opOut.errMsg
            };
          } else {
            var op = tsbuffer.encodeJSON(msg, service.msgSchemaId);
            if (!op.isSucc) {
              return op;
            }
            var json = connType === 'SHORT' ? op.json : [service.name, op.json];
            return {
              isSucc: true,
              output: type === 'json' ? json : JSON.stringify(json)
            };
          }
        };
        TransportDataUtil.parseServerOutout = function (tsbuffer, serviceMap, data, serviceId) {
          if (data instanceof Uint8Array) {
            var opServerOutputData = this.tsbuffer.decode(data, 'ServerOutputData');
            if (!opServerOutputData.isSucc) {
              return opServerOutputData;
            }
            var serverOutputData = opServerOutputData.value;
            serviceId = serviceId !== null && serviceId !== void 0 ? serviceId : serverOutputData.serviceId;
            if (serviceId === undefined) {
              return {
                isSucc: false,
                errMsg: "Missing 'serviceId' in ServerOutput"
              };
            }
            var service = serviceMap.id2Service[serviceId];
            if (!service) {
              return {
                isSucc: false,
                errMsg: "Invalid service ID: ".concat(serviceId, " (from ServerOutput)")
              };
            }
            if (service.type === 'msg') {
              if (!serverOutputData.buffer) {
                return {
                  isSucc: false,
                  errMsg: 'Empty msg buffer (from ServerOutput)'
                };
              }
              var opMsg = tsbuffer.decode(serverOutputData.buffer, service.msgSchemaId);
              if (!opMsg.isSucc) {
                return opMsg;
              }
              return {
                isSucc: true,
                result: {
                  type: 'msg',
                  service: service,
                  msg: opMsg.value
                }
              };
            } else {
              if (serverOutputData.error) {
                return {
                  isSucc: true,
                  result: {
                    type: 'api',
                    service: service,
                    sn: serverOutputData.sn,
                    ret: {
                      isSucc: false,
                      err: new TsrpcError(serverOutputData.error)
                    }
                  }
                };
              } else {
                if (!serverOutputData.buffer) {
                  return {
                    isSucc: false,
                    errMsg: 'Empty API res buffer (from ServerOutput)'
                  };
                }
                var opRes = tsbuffer.decode(serverOutputData.buffer, service.resSchemaId);
                if (!opRes.isSucc) {
                  return opRes;
                }
                return {
                  isSucc: true,
                  result: {
                    type: 'api',
                    service: service,
                    sn: serverOutputData.sn,
                    ret: {
                      isSucc: true,
                      res: opRes.value
                    }
                  }
                };
              }
            }
          } else {
            var json = void 0;
            if (typeof data === 'string') {
              try {
                json = JSON.parse(data);
              } catch (e) {
                return {
                  isSucc: false,
                  errMsg: "Invalid input JSON: ".concat(e.message)
                };
              }
            } else {
              json = data;
            }
            var body = void 0;
            var sn = void 0;
            var service = void 0;
            if (serviceId == undefined) {
              if (!Array.isArray(json)) {
                return {
                  isSucc: false,
                  errMsg: "Invalid server output format"
                };
              }
              var serviceName = json[0];
              body = json[1];
              sn = json[2];
              // 有 SN 是 Api，没 SN 是 Msg
              service = sn ? serviceMap.apiName2Service[serviceName] : serviceMap.msgName2Service[serviceName];
              if (!service) {
                return {
                  isSucc: false,
                  errMsg: "Invalid service name: ".concat(serviceName, " (from ServerOutputData)")
                };
              }
            } else {
              service = serviceMap.id2Service[serviceId];
              if (!service) {
                return {
                  isSucc: false,
                  errMsg: "Invalid service ID: ".concat(serviceId)
                };
              }
              body = json;
            }
            if (service.type === 'api') {
              if (body.isSucc && 'res' in body) {
                var op = tsbuffer.decodeJSON(body.res, service.resSchemaId);
                if (!op.isSucc) {
                  return op;
                }
                body.res = op.value;
              } else if (body.err) {
                body.err = new TsrpcError(body.err);
              } else {
                return {
                  isSucc: false,
                  errMsg: "Invalid server output format"
                };
              }
              return {
                isSucc: true,
                result: {
                  type: 'api',
                  service: service,
                  sn: sn,
                  ret: body
                }
              };
            } else {
              var op = tsbuffer.decodeJSON(body, service.msgSchemaId);
              if (!op.isSucc) {
                return op;
              }
              return {
                isSucc: true,
                result: {
                  type: 'msg',
                  service: service,
                  msg: op.value
                }
              };
            }
          }
        };
        // 心跳包（Ping & Pong），所有开头为 0 的 Buffer，均为控制指令
        TransportDataUtil.HeartbeatPacket = new Uint8Array([0]);
        return TransportDataUtil;
      }());

      /**
       * An abstract base class for TSRPC Client,
       * which includes some common buffer process flows.
       *
       * @remarks
       * You can implement a client on a specific transportation protocol (like HTTP, WebSocket, QUIP) by extend this.
       *
       * @typeParam ServiceType - `ServiceType` from generated `proto.ts`
       *
       * @see
       * {@link https://github.com/k8w/tsrpc}
       * {@link https://github.com/k8w/tsrpc-browser}
       * {@link https://github.com/k8w/tsrpc-miniapp}
       */
      var BaseClient = exports('BaseClient', /** @class */function () {
        function BaseClient(proto, options) {
          this._msgHandlers = new MsgHandlerManager();
          /**
           * {@link Flow} to process `callApi`, `sendMsg`, buffer input/output, etc...
           */
          this.flows = {
            // callApi
            preCallApiFlow: new Flow(),
            preApiReturnFlow: new Flow(),
            postApiReturnFlow: new Flow(),
            // sendMsg
            preSendMsgFlow: new Flow(),
            postSendMsgFlow: new Flow(),
            preRecvMsgFlow: new Flow(),
            postRecvMsgFlow: new Flow(),
            // buffer
            preSendDataFlow: new Flow(),
            preRecvDataFlow: new Flow(),
            /**
             * @deprecated Please use `preSendDataFlow` instead
             */
            preSendBufferFlow: new Flow(),
            /**
             * @deprecated Please use `preRecvDataFlow` instead
             */
            preRecvBufferFlow: new Flow(),
            // Connection Flows (Only for WebSocket)
            /** Before connect to WebSocket server */
            preConnectFlow: new Flow(),
            /** After WebSocket connect successfully */
            postConnectFlow: new Flow(),
            /** After WebSocket disconnected (from connected status) */
            postDisconnectFlow: new Flow()
          };
          this._apiSnCounter = new Counter(1);
          /**
           * Pending API Requests
           */
          this._pendingApis = [];
          /** @deprecated Please use `_onRecvData` instead */
          this._onRecvBuf = this._onRecvData;
          this.options = options;
          this.serviceMap = ServiceMapUtil.getServiceMap(proto);
          this.dataType = this.options.json ? 'text' : 'buffer';
          var types = _assign({}, proto.types);
          // Custom ObjectId handler
          if (options.customObjectIdClass) {
            types = _assign(_assign({}, types), getCustomObjectIdTypes(options.customObjectIdClass));
          }
          this.tsbuffer = new TSBuffer(types);
          this.logger = this.options.logger;
          if (this.logger) {
            this.logger = setLogLevel(this.logger, this.options.logLevel);
          }
        }
        Object.defineProperty(BaseClient.prototype, "lastSN", {
          /**
           * The `SN` number of the last `callApi()`,
           * which can be passed to `abort()` to abort an API request.
           * @example
           * ```ts
           * client.callApi('xxx', { value: 'xxx' })
           *   .then(ret=>{ console.log('succ', ret) });
           * let lastSN = client.lastSN;
           * client.abort(lastSN);
           * ```
           */
          get: function get() {
            return this._apiSnCounter.last;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(BaseClient.prototype, "nextSN", {
          /**
           * The `SN` number of the next `callApi()`,
           * which can be passed to `abort()` to abort an API request.
           * @example
           * ```ts
           * let nextSN = client.nextSN;
           * client.callApi('xxx', { value: 'xxx' })
           * ```
           */
          get: function get() {
            return this._apiSnCounter.getNext(true);
          },
          enumerable: false,
          configurable: true
        });
        /**
         * Send request and wait for the return
         * @param apiName
         * @param req - Request body
         * @param options - Transport options
         * @returns return a `ApiReturn`, all error (network error, business error, code exception...) is unified as `TsrpcError`.
         * The promise is never rejected, so you just need to process all error in one place.
         */
        BaseClient.prototype.callApi = function (apiName, req, options) {
          if (options === void 0) {
            options = {};
          }
          return __awaiter(this, void 0, void 0, function () {
            var sn, pendingItem, promise;
            var _this = this;
            return __generator(this, function (_a) {
              sn = this._apiSnCounter.getNext();
              pendingItem = {
                sn: sn,
                abortKey: options.abortKey,
                service: this.serviceMap.apiName2Service[apiName]
              };
              this._pendingApis.push(pendingItem);
              promise = new Promise(function (rs) {
                return __awaiter(_this, void 0, void 0, function () {
                  var pre, ret, preReturn;
                  var _a, _b;
                  return __generator(this, function (_c) {
                    switch (_c.label) {
                      case 0:
                        return [4 /*yield*/, this.flows.preCallApiFlow.exec({
                          apiName: apiName,
                          req: req,
                          options: options
                        }, this.logger)];
                      case 1:
                        pre = _c.sent();
                        if (!pre || pendingItem.isAborted) {
                          this.abort(pendingItem.sn);
                          return [2 /*return*/];
                        }

                        if (!pre["return"]) return [3 /*break*/, 2];
                        ret = pre["return"];
                        return [3 /*break*/, 4];
                      case 2:
                        return [4 /*yield*/, this._doCallApi(pre.apiName, pre.req, pre.options, pendingItem)];
                      case 3:
                        // do call means it will send buffer via network
                        ret = _c.sent();
                        _c.label = 4;
                      case 4:
                        if (pendingItem.isAborted) {
                          return [2 /*return*/];
                        }
                        // Log Original Return
                        if (ret.isSucc) {
                          this.options.logApi && ((_a = this.logger) === null || _a === void 0 ? void 0 : _a.log("[ApiRes] #".concat(pendingItem.sn, " ").concat(apiName), ret.res));
                        } else {
                          this.options.logApi && ((_b = this.logger) === null || _b === void 0 ? void 0 : _b[ret.err.type === TsrpcError.Type.ApiError ? 'log' : 'error']("[ApiErr] #".concat(pendingItem.sn, " ").concat(apiName), ret.err));
                        }
                        return [4 /*yield*/, this.flows.preApiReturnFlow.exec(_assign(_assign({}, pre), {
                          "return": ret
                        }), this.logger)];
                      case 5:
                        preReturn = _c.sent();
                        if (!preReturn) {
                          this.abort(pendingItem.sn);
                          return [2 /*return*/];
                        }

                        rs(preReturn["return"]);
                        // Post Flow
                        this.flows.postApiReturnFlow.exec(preReturn, this.logger);
                        return [2 /*return*/];
                    }
                  });
                });
              });
              // Finally clear pendings
              promise["catch"]().then(function () {
                _this._pendingApis.removeOne(function (v) {
                  return v.sn === pendingItem.sn;
                });
              });
              return [2 /*return*/, promise];
            });
          });
        };
        BaseClient.prototype._doCallApi = function (apiName, req, options, pendingItem) {
          var _a;
          if (options === void 0) {
            options = {};
          }
          return __awaiter(this, void 0, void 0, function () {
            var promise;
            var _this = this;
            return __generator(this, function (_b) {
              this.options.logApi && ((_a = this.logger) === null || _a === void 0 ? void 0 : _a.log("[ApiReq] #".concat(pendingItem.sn), apiName, req));
              promise = new Promise(function (rs) {
                return __awaiter(_this, void 0, void 0, function () {
                  var service, opEncode, promiseReturn, promiseSend, opSend, ret;
                  var _a;
                  return __generator(this, function (_b) {
                    switch (_b.label) {
                      case 0:
                        service = this.serviceMap.apiName2Service[apiName];
                        if (!service) {
                          rs({
                            isSucc: false,
                            err: new TsrpcError('Invalid api name: ' + apiName, {
                              code: 'INVALID_API_NAME',
                              type: TsrpcErrorType.ClientError
                            })
                          });
                          return [2 /*return*/];
                        }

                        pendingItem.service = service;
                        opEncode = TransportDataUtil.encodeApiReq(this.tsbuffer, service, req, this.dataType, this.type === 'LONG' ? pendingItem.sn : undefined);
                        if (!opEncode.isSucc) {
                          rs({
                            isSucc: false,
                            err: new TsrpcError(opEncode.errMsg, {
                              type: TsrpcErrorType.ClientError,
                              code: 'INPUT_DATA_ERR'
                            })
                          });
                          return [2 /*return*/];
                        }

                        promiseReturn = this._waitApiReturn(pendingItem, (_a = options.timeout) !== null && _a !== void 0 ? _a : this.options.timeout);
                        promiseSend = this.sendData(opEncode.output, options, service.id, pendingItem);
                        return [4 /*yield*/, promiseSend];
                      case 1:
                        opSend = _b.sent();
                        if (opSend.err) {
                          rs({
                            isSucc: false,
                            err: opSend.err
                          });
                          return [2 /*return*/];
                        }

                        return [4 /*yield*/, promiseReturn];
                      case 2:
                        ret = _b.sent();
                        if (pendingItem.isAborted) {
                          return [2 /*return*/];
                        }

                        rs(ret);
                        return [2 /*return*/];
                    }
                  });
                });
              });

              return [2 /*return*/, promise];
            });
          });
        };
        /**
         * Send message, without response, not ensuring the server is received and processed correctly.
         * @param msgName
         * @param msg - Message body
         * @param options - Transport options
         * @returns If the promise is resolved, it means the request is sent to system kernel successfully.
         * Notice that not means the server received and processed the message correctly.
         */
        BaseClient.prototype.sendMsg = function (msgName, msg, options) {
          var _this = this;
          if (options === void 0) {
            options = {};
          }
          var promise = new Promise(function (rs) {
            return __awaiter(_this, void 0, void 0, function () {
              var pre, service, opEncode, promiseSend, opSend;
              var _a, _b;
              return __generator(this, function (_c) {
                switch (_c.label) {
                  case 0:
                    return [4 /*yield*/, this.flows.preSendMsgFlow.exec({
                      msgName: msgName,
                      msg: msg,
                      options: options
                    }, this.logger)];
                  case 1:
                    pre = _c.sent();
                    if (!pre) {
                      return [2 /*return*/];
                    }
                    // The msg is not prevented by pre flow
                    this.options.logMsg && ((_a = this.logger) === null || _a === void 0 ? void 0 : _a.log("[SendMsg]", msgName, msg));
                    service = this.serviceMap.msgName2Service[msgName];
                    if (!service) {
                      (_b = this.logger) === null || _b === void 0 ? void 0 : _b.error('Invalid msg name: ' + msgName);
                      rs({
                        isSucc: false,
                        err: new TsrpcError('Invalid msg name: ' + msgName, {
                          code: 'INVALID_MSG_NAME',
                          type: TsrpcErrorType.ClientError
                        })
                      });
                      return [2 /*return*/];
                    }

                    opEncode = TransportDataUtil.encodeClientMsg(this.tsbuffer, service, msg, this.dataType, this.type);
                    if (!opEncode.isSucc) {
                      rs({
                        isSucc: false,
                        err: new TsrpcError(opEncode.errMsg, {
                          type: TsrpcErrorType.ClientError,
                          code: 'ENCODE_MSG_ERR'
                        })
                      });
                      return [2 /*return*/];
                    }

                    promiseSend = this.sendData(opEncode.output, options, service.id);
                    return [4 /*yield*/, promiseSend];
                  case 2:
                    opSend = _c.sent();
                    if (opSend.err) {
                      rs({
                        isSucc: false,
                        err: opSend.err
                      });
                      return [2 /*return*/];
                    }

                    rs({
                      isSucc: true
                    });
                    // Post Flow
                    this.flows.postSendMsgFlow.exec(pre, this.logger);
                    return [2 /*return*/];
                }
              });
            });
          });

          promise.then(function (v) {
            var _a;
            if (!v.isSucc) {
              ((_a = _this.logger) !== null && _a !== void 0 ? _a : console).error('[SendMsgErr]', v.err);
            }
          });
          return promise;
        };
        /**
         * Add a message handler,
         * duplicate handlers to the same `msgName` would be ignored.
         * @param msgName
         * @param handler
         * @returns
         */
        // listenMsg<T extends keyof ServiceType['msg']>(msgName: T, handler: ClientMsgHandler<ServiceType, T, this>): ClientMsgHandler<ServiceType, T, this>;
        // listenMsg(msgName: RegExp, handler: ClientMsgHandler<ServiceType, keyof ServiceType['msg'], this>): ClientMsgHandler<ServiceType, keyof ServiceType['msg'], this>;
        // listenMsg(msgName: string | RegExp, handler: ClientMsgHandler<ServiceType, string, this>): ClientMsgHandler<ServiceType, string, this> {
        BaseClient.prototype.listenMsg = function (msgName, handler) {
          var _this = this;
          if (msgName instanceof RegExp) {
            Object.keys(this.serviceMap.msgName2Service).filter(function (k) {
              return msgName.test(k);
            }).forEach(function (k) {
              _this._msgHandlers.addHandler(k, handler);
            });
          } else {
            this._msgHandlers.addHandler(msgName, handler);
          }
          return handler;
        };
        /**
         * Remove a message handler
         */
        BaseClient.prototype.unlistenMsg = function (msgName, handler) {
          var _this = this;
          if (msgName instanceof RegExp) {
            Object.keys(this.serviceMap.msgName2Service).filter(function (k) {
              return msgName.test(k);
            }).forEach(function (k) {
              _this._msgHandlers.removeHandler(k, handler);
            });
          } else {
            this._msgHandlers.removeHandler(msgName, handler);
          }
        };
        /**
         * Remove all handlers from a message
         */
        BaseClient.prototype.unlistenMsgAll = function (msgName) {
          var _this = this;
          if (msgName instanceof RegExp) {
            Object.keys(this.serviceMap.msgName2Service).filter(function (k) {
              return msgName.test(k);
            }).forEach(function (k) {
              _this._msgHandlers.removeAllHandlers(k);
            });
          } else {
            this._msgHandlers.removeAllHandlers(msgName);
          }
        };
        /**
         * Abort a pending API request, it makes the promise returned by `callApi()` neither resolved nor rejected forever.
         * @param sn - Every api request has a unique `sn` number, you can get it by `this.lastSN`
         */
        BaseClient.prototype.abort = function (sn) {
          var _a, _b;
          // Find
          var index = this._pendingApis.findIndex(function (v) {
            return v.sn === sn;
          });
          if (index === -1) {
            return;
          }
          var pendingItem = this._pendingApis[index];
          // Clear
          this._pendingApis.splice(index, 1);
          pendingItem.onReturn = undefined;
          pendingItem.isAborted = true;
          // Log
          (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log("[ApiAbort] #".concat(pendingItem.sn, " ").concat(pendingItem.service.name));
          // onAbort
          (_b = pendingItem.onAbort) === null || _b === void 0 ? void 0 : _b.call(pendingItem);
        };
        /**
         * Abort all API requests that has the `abortKey`.
         * It makes the promise returned by `callApi` neither resolved nor rejected forever.
         * @param abortKey - The `abortKey` of options when `callApi()`, see {@link TransportOptions.abortKey}.
         * @example
         * ```ts
         * // Send API request many times
         * client.callApi('SendData', { data: 'AAA' }, { abortKey: 'Session#123' });
         * client.callApi('SendData', { data: 'BBB' }, { abortKey: 'Session#123' });
         * client.callApi('SendData', { data: 'CCC' }, { abortKey: 'Session#123' });
         *
         * // And abort the at once
         * client.abortByKey('Session#123');
         * ```
         */
        BaseClient.prototype.abortByKey = function (abortKey) {
          var _this = this;
          this._pendingApis.filter(function (v) {
            return v.abortKey === abortKey;
          }).forEach(function (v) {
            _this.abort(v.sn);
          });
        };
        /**
         * Abort all pending API requests.
         * It makes the promise returned by `callApi` neither resolved nor rejected forever.
         */
        BaseClient.prototype.abortAll = function () {
          var _this = this;
          this._pendingApis.slice().forEach(function (v) {
            return _this.abort(v.sn);
          });
        };
        /**
         * Send data (binary or text)
         * @remarks
         * Long connection: wait res by listenning `conn.onmessage`
         * Short connection: wait res by waitting response
         * @param data
         * @param options
         * @param sn
         */
        BaseClient.prototype.sendData = function (data, options, serviceId, pendingApiItem) {
          var _a, _b, _c;
          return __awaiter(this, void 0, void 0, function () {
            var pre, preBuf;
            return __generator(this, function (_d) {
              switch (_d.label) {
                case 0:
                  return [4 /*yield*/, this.flows.preSendDataFlow.exec({
                    data: data,
                    sn: pendingApiItem === null || pendingApiItem === void 0 ? void 0 : pendingApiItem.sn
                  }, this.logger)];
                case 1:
                  pre = _d.sent();
                  if (!pre) {
                    return [2 /*return*/, new Promise(function (rs) {})];
                  }
                  data = pre.data;
                  if (!(data instanceof Uint8Array)) return [3 /*break*/, 3];
                  return [4 /*yield*/, this.flows.preSendBufferFlow.exec({
                    buf: data,
                    sn: pendingApiItem === null || pendingApiItem === void 0 ? void 0 : pendingApiItem.sn
                  }, this.logger)];
                case 2:
                  preBuf = _d.sent();
                  if (!preBuf) {
                    return [2 /*return*/, new Promise(function (rs) {})];
                  }
                  data = preBuf.buf;
                  _d.label = 3;
                case 3:
                  // debugBuf log
                  if (this.options.debugBuf) {
                    if (typeof data === 'string') {
                      (_a = this.logger) === null || _a === void 0 ? void 0 : _a.debug('[SendText]' + (pendingApiItem ? ' #' + pendingApiItem.sn : '') + " length=".concat(data.length), data);
                    } else if (data instanceof Uint8Array) {
                      (_b = this.logger) === null || _b === void 0 ? void 0 : _b.debug('[SendBuf]' + (pendingApiItem ? ' #' + pendingApiItem.sn : '') + " length=".concat(data.length), data);
                    } else {
                      (_c = this.logger) === null || _c === void 0 ? void 0 : _c.debug('[SendJSON]' + (pendingApiItem ? ' #' + pendingApiItem.sn : ''), data);
                    }
                  }
                  return [2 /*return*/, this._sendData(data, options, serviceId, pendingApiItem)];
              }
            });
          });
        };
        // 信道可传输二进制或字符串
        BaseClient.prototype._onRecvData = function (data, pendingApiItem) {
          var _a, _b, _c, _d, _e, _f, _g, _h, _j;
          return __awaiter(this, void 0, void 0, function () {
            var sn, pre, pre_1, opParsed, parsed, pre_2;
            return __generator(this, function (_k) {
              switch (_k.label) {
                case 0:
                  sn = pendingApiItem === null || pendingApiItem === void 0 ? void 0 : pendingApiItem.sn;
                  return [4 /*yield*/, this.flows.preRecvDataFlow.exec({
                    data: data,
                    sn: sn
                  }, this.logger)];
                case 1:
                  pre = _k.sent();
                  if (!pre) {
                    return [2 /*return*/];
                  }

                  data = pre.data;
                  if (!(typeof data === 'string')) return [3 /*break*/, 2];
                  this.options.debugBuf && ((_a = this.logger) === null || _a === void 0 ? void 0 : _a.debug('[RecvText]' + (sn ? ' #' + sn : ''), data));
                  return [3 /*break*/, 5];
                case 2:
                  if (!(data instanceof Uint8Array)) return [3 /*break*/, 4];
                  this.options.debugBuf && ((_b = this.logger) === null || _b === void 0 ? void 0 : _b.debug('[RecvBuf]' + (sn ? ' #' + sn : ''), 'length=' + data.length, data));
                  return [4 /*yield*/, this.flows.preRecvBufferFlow.exec({
                    buf: data,
                    sn: sn
                  }, this.logger)];
                case 3:
                  pre_1 = _k.sent();
                  if (!pre_1) {
                    return [2 /*return*/];
                  }

                  data = pre_1.buf;
                  return [3 /*break*/, 5];
                case 4:
                  this.options.debugBuf && ((_c = this.logger) === null || _c === void 0 ? void 0 : _c.debug('[RecvJSON]' + (sn ? ' #' + sn : ''), data));
                  _k.label = 5;
                case 5:
                  opParsed = TransportDataUtil.parseServerOutout(this.tsbuffer, this.serviceMap, data, pendingApiItem === null || pendingApiItem === void 0 ? void 0 : pendingApiItem.service.id);
                  if (!opParsed.isSucc) {
                    (_d = this.logger) === null || _d === void 0 ? void 0 : _d.error('ParseServerOutputError: ' + opParsed.errMsg);
                    if (data instanceof Uint8Array) {
                      (_e = this.logger) === null || _e === void 0 ? void 0 : _e.error('Please check the version of serviceProto between server and client');
                    }
                    if (pendingApiItem) {
                      (_f = pendingApiItem.onReturn) === null || _f === void 0 ? void 0 : _f.call(pendingApiItem, {
                        isSucc: false,
                        err: new TsrpcError('Parse server output error', {
                          type: TsrpcErrorType.ServerError
                        })
                      });
                    }
                    return [2 /*return*/];
                  }

                  parsed = opParsed.result;
                  if (!(parsed.type === 'api')) return [3 /*break*/, 6];
                  sn = sn !== null && sn !== void 0 ? sn : parsed.sn;
                  // call ApiReturn listeners
                  (_h = (_g = this._pendingApis.find(function (v) {
                    return v.sn === sn;
                  })) === null || _g === void 0 ? void 0 : _g.onReturn) === null || _h === void 0 ? void 0 : _h.call(_g, parsed.ret);
                  return [3 /*break*/, 9];
                case 6:
                  if (!(parsed.type === 'msg')) return [3 /*break*/, 9];
                  this.options.logMsg && ((_j = this.logger) === null || _j === void 0 ? void 0 : _j.log("[RecvMsg] ".concat(parsed.service.name), parsed.msg));
                  return [4 /*yield*/, this.flows.preRecvMsgFlow.exec({
                    msgName: parsed.service.name,
                    msg: parsed.msg
                  }, this.logger)];
                case 7:
                  pre_2 = _k.sent();
                  if (!pre_2) {
                    return [2 /*return*/];
                  }

                  this._msgHandlers.forEachHandler(pre_2.msgName, this.logger, pre_2.msg, pre_2.msgName);
                  // Post Flow
                  return [4 /*yield*/, this.flows.postRecvMsgFlow.exec(pre_2, this.logger)];
                case 8:
                  // Post Flow
                  _k.sent();
                  _k.label = 9;
                case 9:
                  return [2 /*return*/];
              }
            });
          });
        };
        /**
         * @param sn
         * @param timeout
         * @returns `undefined` 代表 canceled
         */
        BaseClient.prototype._waitApiReturn = function (pendingItem, timeout) {
          return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
              return [2 /*return*/, new Promise(function (rs) {
                // Timeout
                var timer;
                if (timeout) {
                  timer = setTimeout(function () {
                    timer = undefined;
                    _this._pendingApis.removeOne(function (v) {
                      return v.sn === pendingItem.sn;
                    });
                    rs({
                      isSucc: false,
                      err: new TsrpcError('Request Timeout', {
                        type: TsrpcErrorType.NetworkError,
                        code: 'TIMEOUT'
                      })
                    });
                  }, timeout);
                }
                // Listener (trigger by `this._onRecvBuf`)
                pendingItem.onReturn = function (ret) {
                  if (timer) {
                    clearTimeout(timer);
                    timer = undefined;
                  }
                  _this._pendingApis.removeOne(function (v) {
                    return v.sn === pendingItem.sn;
                  });
                  rs(ret);
                };
              })];
            });
          });
        };
        return BaseClient;
      }());
      var defaultBaseClientOptions = exports('defaultBaseClientOptions', {
        logLevel: 'debug',
        logApi: true,
        logMsg: true,
        json: false,
        timeout: 15000,
        debugBuf: false
      });

      /**
       * Base HTTP Client
       */
      var BaseHttpClient = exports('BaseHttpClient', /** @class */function (_super) {
        __extends(BaseHttpClient, _super);
        function BaseHttpClient(proto, http, options) {
          var _this = this;
          var _a;
          _this = _super.call(this, proto, _assign(_assign({}, defaultBaseHttpClientOptions), options)) || this;
          _this.type = 'SHORT';
          _this._http = http;
          _this._jsonServer = _this.options.server + (_this.options.server.endsWith('/') ? '' : '/');
          (_a = _this.logger) === null || _a === void 0 ? void 0 : _a.log('TSRPC HTTP Client :', _this.options.server);
          return _this;
        }
        BaseHttpClient.prototype._sendData = function (data, options, serviceId, pendingApiItem) {
          return __awaiter(this, void 0, void 0, function () {
            var promise;
            var _this = this;
            return __generator(this, function (_a) {
              promise = function () {
                return __awaiter(_this, void 0, void 0, function () {
                  var service, urlSearch, url, _a, fetchPromise, abort, fetchRes;
                  return __generator(this, function (_b) {
                    switch (_b.label) {
                      case 0:
                        service = this.serviceMap.id2Service[serviceId];
                        urlSearch = service.type === 'msg' ? '?type=msg' : '';
                        url = typeof data === 'string' ? this._jsonServer + service.name + urlSearch : this.options.server;
                        _a = this._http.fetch({
                          url: url,
                          data: data,
                          method: 'POST',
                          timeout: options.timeout || this.options.timeout,
                          headers: {
                            'Content-Type': typeof data === 'string' ? 'application/json' : 'application/octet-stream'
                          },
                          transportOptions: options,
                          responseType: typeof data === 'string' ? 'text' : 'arraybuffer'
                        }), fetchPromise = _a.promise, abort = _a.abort;
                        if (pendingApiItem) {
                          pendingApiItem.onAbort = function () {
                            abort();
                          };
                        }
                        // Aborted
                        if (pendingApiItem === null || pendingApiItem === void 0 ? void 0 : pendingApiItem.isAborted) {
                          return [2 /*return*/, new Promise(function (rs) {})];
                        }
                        return [4 /*yield*/, fetchPromise];
                      case 1:
                        fetchRes = _b.sent();
                        if (!fetchRes.isSucc) {
                          return [2 /*return*/, {
                            err: fetchRes.err
                          }];
                        }
                        return [2 /*return*/, {
                          res: fetchRes.res
                        }];
                    }
                  });
                });
              }();
              promise.then(function (v) {
                // Msg 不需要 onRecvData
                if (pendingApiItem && v.res) {
                  _this._onRecvData(v.res, pendingApiItem);
                }
              });
              // Finally
              promise["catch"](function (e) {}).then(function () {
                if (pendingApiItem) {
                  pendingApiItem.onAbort = undefined;
                }
              });
              return [2 /*return*/, promise];
            });
          });
        };
        return BaseHttpClient;
      }(BaseClient));
      var defaultBaseHttpClientOptions = exports('defaultBaseHttpClientOptions', _assign(_assign({}, defaultBaseClientOptions), {
        server: 'http://localhost:3000',
        // logger: new TerminalColorLogger(),
        jsonPrune: true
      }));

      /**
       * WebSocket Client for TSRPC.
       * It uses native `WebSocket` of browser.
       * @typeParam ServiceType - `ServiceType` from generated `proto.ts`
       */
      var BaseWsClient = exports('BaseWsClient', /** @class */function (_super) {
        __extends(BaseWsClient, _super);
        function BaseWsClient(proto, wsp, options) {
          var _this = this;
          var _a;
          _this = _super.call(this, proto, _assign(_assign({}, defaultBaseWsClientOptions), options)) || this;
          _this.type = 'LONG';
          _this._onWsOpen = function () {
            var _a;
            if (!_this._connecting) {
              return;
            }
            _this._status = WsClientStatus.Opened;
            _this._connecting.rs({
              isSucc: true
            });
            _this._connecting = undefined;
            (_a = _this.logger) === null || _a === void 0 ? void 0 : _a.log('WebSocket connection to server successful');
            _this.flows.postConnectFlow.exec({}, _this.logger);
            // First heartbeat
            if (_this.options.heartbeat) {
              _this._heartbeat();
            }
          };
          _this._onWsClose = function (code, reason) {
            var _a, _b, _c;
            // 防止重复执行
            if (_this._status === WsClientStatus.Closed) {
              return;
            }
            var isManual = !!_this._rsDisconnecting;
            var isConnectedBefore = _this.isConnected || isManual;
            _this._status = WsClientStatus.Closed;
            // 连接中，返回连接失败
            if (_this._connecting) {
              _this._connecting.rs({
                isSucc: false,
                errMsg: "Failed to connect to WebSocket server: ".concat(_this.options.server)
              });
              _this._connecting = undefined;
              (_a = _this.logger) === null || _a === void 0 ? void 0 : _a.error("Failed to connect to WebSocket server: ".concat(_this.options.server));
            }
            // Clear heartbeat
            if (_this._pendingHeartbeat) {
              clearTimeout(_this._pendingHeartbeat.timeoutTimer);
              _this._pendingHeartbeat = undefined;
            }
            if (_this._nextHeartbeatTimer) {
              clearTimeout(_this._nextHeartbeatTimer);
            }
            // disconnect中，返回成功
            if (_this._rsDisconnecting) {
              _this._rsDisconnecting();
              _this._rsDisconnecting = undefined;
              (_b = _this.logger) === null || _b === void 0 ? void 0 : _b.log('Disconnected succ', "code=".concat(code, " reason=").concat(reason));
            }
            // 非 disconnect 中，从连接中意外断开
            else if (isConnectedBefore) {
              (_c = _this.logger) === null || _c === void 0 ? void 0 : _c.log("Lost connection to ".concat(_this.options.server), "code=".concat(code, " reason=").concat(reason));
            }
            // postDisconnectFlow，仅从连接状态断开时触发
            if (isConnectedBefore) {
              _this.flows.postDisconnectFlow.exec({
                reason: reason,
                isManual: isManual
              }, _this.logger);
            }
            // 对所有请求中的 API 报错
            _this._pendingApis.slice().forEach(function (v) {
              var _a;
              (_a = v.onReturn) === null || _a === void 0 ? void 0 : _a.call(v, {
                isSucc: false,
                err: new TsrpcError(reason || 'Lost connection to server', {
                  type: TsrpcErrorType.NetworkError,
                  code: 'LOST_CONN'
                })
              });
            });
          };
          _this._onWsError = function (e) {
            var _a, _b;
            (_a = _this.logger) === null || _a === void 0 ? void 0 : _a.error('[WebSocket Error]', e);
            // 连接中，返回连接失败
            if (_this._connecting) {
              _this._connecting.rs({
                isSucc: false,
                errMsg: "Failed to connect to WebSocket server: ".concat(_this.options.server)
              });
              _this._connecting = undefined;
              (_b = _this.logger) === null || _b === void 0 ? void 0 : _b.error("Failed to connect to WebSocket server: ".concat(_this.options.server));
            }
          };
          _this._onWsMessage = function (data) {
            if (_this._status !== WsClientStatus.Opened) {
              return;
            }
            // 心跳包回包
            if (data instanceof Uint8Array && data.length === TransportDataUtil.HeartbeatPacket.length && data.every(function (v, i) {
              return v === TransportDataUtil.HeartbeatPacket[i];
            })) {
              _this._onHeartbeatAnswer(data);
              return;
            }
            _this._onRecvData(data);
          };
          // #region Heartbeat
          /**
           * Last latency time (ms) of heartbeat test
           */
          _this.lastHeartbeatLatency = 0;
          // #endregion
          _this._status = WsClientStatus.Closed;
          _this._wsp = wsp;
          wsp.options = {
            onOpen: _this._onWsOpen,
            onClose: _this._onWsClose,
            onError: _this._onWsError,
            onMessage: _this._onWsMessage,
            logger: _this.logger
          };
          (_a = _this.logger) === null || _a === void 0 ? void 0 : _a.log('TSRPC WebSocket Client :', _this.options.server);
          return _this;
        }
        BaseWsClient.prototype._sendData = function (data) {
          return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
              return [2 /*return*/, new Promise(function (rs) {
                return __awaiter(_this, void 0, void 0, function () {
                  return __generator(this, function (_a) {
                    if (!this.isConnected) {
                      rs({
                        err: new TsrpcError('WebSocket is not connected', {
                          code: 'WS_NOT_OPEN',
                          type: TsrpcError.Type.ClientError
                        })
                      });
                      return [2 /*return*/];
                    }
                    // Do Send
                    rs(this._wsp.send(data));
                    return [2 /*return*/];
                  });
                });
              })];
            });
          });
        };
        /**
         * Send a heartbeat packet
         */
        BaseWsClient.prototype._heartbeat = function () {
          var _this = this;
          var _a;
          if (this._pendingHeartbeat || this._status !== WsClientStatus.Opened || !this.options.heartbeat) {
            return;
          }
          this._pendingHeartbeat = {
            startTime: Date.now(),
            timeoutTimer: setTimeout(function () {
              var _a;
              _this._pendingHeartbeat = undefined;
              // heartbeat timeout, disconnect if still connected
              (_a = _this.logger) === null || _a === void 0 ? void 0 : _a.error('[Heartbeat] Heartbeat timeout, the connection disconnected automatically.');
              _this._wsClose(3000, 'Heartbeat timeout');
              _this._wsp.options.onClose(3000, 'Heartbeat timeout');
            }, this.options.heartbeat.timeout)
          };
          this.options.debugBuf && ((_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('[Heartbeat] Send ping', TransportDataUtil.HeartbeatPacket));
          this._sendData(TransportDataUtil.HeartbeatPacket);
        };
        BaseWsClient.prototype._onHeartbeatAnswer = function (data) {
          var _this = this;
          var _a;
          if (!this._pendingHeartbeat || this._status !== WsClientStatus.Opened || !this.options.heartbeat) {
            return;
          }
          // heartbeat succ
          this.lastHeartbeatLatency = Date.now() - this._pendingHeartbeat.startTime;
          this.options.debugBuf && ((_a = this.logger) === null || _a === void 0 ? void 0 : _a.log("[Heartbeat] Recv pong, latency=".concat(this.lastHeartbeatLatency, "ms"), data));
          clearTimeout(this._pendingHeartbeat.timeoutTimer);
          this._pendingHeartbeat = undefined;
          // next heartbeat timer
          this._nextHeartbeatTimer = setTimeout(function () {
            _this._heartbeat();
          }, this.options.heartbeat.interval);
        };
        Object.defineProperty(BaseWsClient.prototype, "status", {
          get: function get() {
            return this._status;
          },
          enumerable: false,
          configurable: true
        });
        Object.defineProperty(BaseWsClient.prototype, "isConnected", {
          get: function get() {
            return this._status === WsClientStatus.Opened;
          },
          enumerable: false,
          configurable: true
        });
        /**
         * Start connecting, you must connect first before `callApi()` and `sendMsg()`.
         * @throws never
         */
        BaseWsClient.prototype.connect = function () {
          var _a, _b;
          return __awaiter(this, void 0, void 0, function () {
            var pre, promiseConnect;
            var _this = this;
            return __generator(this, function (_c) {
              switch (_c.label) {
                case 0:
                  // 已连接成功
                  if (this.isConnected) {
                    return [2 /*return*/, {
                      isSucc: true
                    }];
                  }
                  // 已连接中
                  if (this._connecting) {
                    return [2 /*return*/, this._connecting.promise];
                  }
                  return [4 /*yield*/, this.flows.preConnectFlow.exec({}, this.logger)];
                case 1:
                  pre = _c.sent();
                  // Pre return
                  if (pre === null || pre === void 0 ? void 0 : pre["return"]) {
                    return [2 /*return*/, pre["return"]];
                  }
                  // Canceled
                  if (!pre) {
                    return [2 /*return*/, new Promise(function (rs) {})];
                  }
                  try {
                    this._wsp.connect(this.options.server, [this.options.json ? 'text' : 'buffer']);
                  } catch (e) {
                    (_a = this.logger) === null || _a === void 0 ? void 0 : _a.error(e);
                    return [2 /*return*/, {
                      isSucc: false,
                      errMsg: e.message
                    }];
                  }
                  this._status = WsClientStatus.Opening;
                  (_b = this.logger) === null || _b === void 0 ? void 0 : _b.log("Start connecting ".concat(this.options.server, "..."));
                  this._connecting = {};
                  promiseConnect = new Promise(function (rs) {
                    _this._connecting.rs = rs;
                  });
                  this._connecting.promise = promiseConnect;
                  return [2 /*return*/, promiseConnect];
              }
            });
          });
        };
        /**
         * Disconnect immediately
         * @throws never
         */
        BaseWsClient.prototype.disconnect = function (code, reason) {
          var _a;
          return __awaiter(this, void 0, void 0, function () {
            var isClosed;
            var _this = this;
            return __generator(this, function (_b) {
              if (this._status === WsClientStatus.Closed) {
                return [2 /*return*/];
              }

              this._status = WsClientStatus.Closing;
              (_a = this.logger) === null || _a === void 0 ? void 0 : _a.log('Start disconnecting...');
              isClosed = false;
              return [2 /*return*/, Promise.race([
              // 正常等待 onClose 关闭
              new Promise(function (rs) {
                _this._rsDisconnecting = function () {
                  if (isClosed) {
                    return;
                  }
                  isClosed = true;
                  rs();
                };
                _this._wsClose(code !== null && code !== void 0 ? code : 1000, reason !== null && reason !== void 0 ? reason : '');
              }),
              // 超时保护，1 秒未收到关闭请求的，直接 onClose 掉
              new Promise(function (rs) {
                setTimeout(function () {
                  if (isClosed) {
                    return;
                  }
                  isClosed = true;
                  _this._onWsClose(1005, 'Connection closed, but not received ws.onClose event.');
                }, 1000);
              })])];
            });
          });
        };
        BaseWsClient.prototype._wsClose = function (code, reason) {
          var _a;
          try {
            this._wsp.close(code !== null && code !== void 0 ? code : 1000, reason !== null && reason !== void 0 ? reason : '');
          } catch (e) {
            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.error('[WsCloseError]', e);
          }
        };
        return BaseWsClient;
      }(BaseClient));
      var defaultBaseWsClientOptions = exports('defaultBaseWsClientOptions', _assign(_assign({}, defaultBaseClientOptions), {
        server: 'ws://localhost:3000'
      }));
      var WsClientStatus;
      (function (WsClientStatus) {
        WsClientStatus["Opening"] = "OPENING";
        WsClientStatus["Opened"] = "OPENED";
        WsClientStatus["Closing"] = "CLOSING";
        WsClientStatus["Closed"] = "CLOSED";
      })(WsClientStatus || (WsClientStatus = exports('WsClientStatus', {})));
    }
  };
});

System.register("chunks:///_virtual/index5.mjs", ['./index7.mjs', './tslib.es6.mjs'], function (exports) {
  var SchemaType, _assign;
  return {
    setters: [function (module) {
      SchemaType = module.SchemaType;
    }, function (module) {
      _assign = module.__assign;
    }],
    execute: function () {
      exports({
        TsrpcErrorType: void 0,
        setLogLevel: setLogLevel
      });

      /*!
       * TSRPC Proto v1.4.3
       * -----------------------------------------
       * Copyright (c) Kingworks Corporation.
       * MIT License
       * https://github.com/k8w/tsrpc-proto
       */
      var empty = function empty() {};
      function setLogLevel(logger, logLevel) {
        switch (logLevel) {
          case 'none':
            return {
              debug: empty,
              log: empty,
              warn: empty,
              error: empty
            };
          case 'error':
            return {
              debug: empty,
              log: empty,
              warn: empty,
              error: logger.error.bind(logger)
            };
          case 'warn':
            return {
              debug: empty,
              log: empty,
              warn: logger.warn.bind(logger),
              error: logger.error.bind(logger)
            };
          case 'info':
            return {
              debug: empty,
              log: logger.log.bind(logger),
              warn: logger.warn.bind(logger),
              error: logger.error.bind(logger)
            };
          case 'debug':
            return logger;
          default:
            throw new Error("Invalid logLevel: '".concat(logLevel, "'"));
        }
      }
      var TsrpcErrorType;
      (function (TsrpcErrorType) {
        /** Network error, like connection broken, network timeout, etc. */
        TsrpcErrorType["NetworkError"] = "NetworkError";
        /**
         * Server exception, for example "request format error", "database exception", etc.
         *
         * @remarks
         * This error message may be not suitable to show to user,
         * but the error info is useful for engineer to find some bug.
         * So you can show a user-friendly message to user (like "System error, please contact XXX"),
         * and report some debug info at the same time.
         */
        TsrpcErrorType["ServerError"] = "ServerError";
        /** Client exception, for example parse server output error.
         * (May because of the proto file is not the same between server and client)
         */
        TsrpcErrorType["ClientError"] = "ClientError";
        /**
         * The business error returned by `call.error`.
         * It is always business-relatived, for example `call.error('Password is incorrect')`, `call.error('Not enough credit')`, etc.
         */
        TsrpcErrorType["ApiError"] = "ApiError";
      })(TsrpcErrorType || (TsrpcErrorType = exports('TsrpcErrorType', {})));
      var TransportDataProto = exports('TransportDataProto', {
        "ServerInputData": {
          "type": SchemaType.Interface,
          "properties": [{
            "id": 0,
            "name": "serviceId",
            "type": {
              "type": SchemaType.Number,
              "scalarType": "uint"
            }
          }, {
            "id": 1,
            "name": "buffer",
            "type": {
              "type": SchemaType.Buffer,
              "arrayType": "Uint8Array"
            }
          }, {
            "id": 2,
            "name": "sn",
            "type": {
              "type": SchemaType.Number,
              "scalarType": "uint"
            },
            "optional": true
          }]
        },
        "ServerOutputData": {
          "type": SchemaType.Interface,
          "properties": [{
            "id": 0,
            "name": "buffer",
            "type": {
              "type": SchemaType.Buffer,
              "arrayType": "Uint8Array"
            },
            "optional": true
          }, {
            "id": 1,
            "name": "error",
            "type": {
              "type": SchemaType.Reference,
              "target": "TsrpcErrorData"
            },
            "optional": true
          }, {
            "id": 2,
            "name": "serviceId",
            "type": {
              "type": SchemaType.Number,
              "scalarType": "uint"
            },
            "optional": true
          }, {
            "id": 3,
            "name": "sn",
            "type": {
              "type": SchemaType.Number,
              "scalarType": "uint"
            },
            "optional": true
          }]
        },
        "TsrpcErrorData": {
          "type": SchemaType.Interface,
          "properties": [{
            "id": 0,
            "name": "message",
            "type": {
              "type": SchemaType.String
            }
          }, {
            "id": 1,
            "name": "type",
            "type": {
              "type": SchemaType.Reference,
              "target": "TsrpcErrorType"
            }
          }, {
            "id": 2,
            "name": "code",
            "type": {
              "type": SchemaType.Union,
              "members": [{
                "id": 0,
                "type": {
                  "type": SchemaType.String
                }
              }, {
                "id": 1,
                "type": {
                  "type": SchemaType.Number,
                  "scalarType": "int"
                }
              }]
            },
            "optional": true
          }],
          "indexSignature": {
            "keyType": "String",
            "type": {
              "type": SchemaType.Any
            }
          }
        },
        "TsrpcErrorType": {
          "type": SchemaType.Enum,
          "members": [{
            "id": 0,
            "value": "NetworkError"
          }, {
            "id": 1,
            "value": "ServerError"
          }, {
            "id": 2,
            "value": "ClientError"
          }, {
            "id": 3,
            "value": "ApiError"
          }]
        }
      });

      /**
       * A unified Error that returned by TSRPC server or client
       *
       * @remarks
       * It has many uses, for example:
       *
       * 1. You can handle business errors and network errors uniformly.
       * 2. In API handle process, `throw new TsrpcError('xxx')` would return the same error to client directly (like `call.error()`),
       * while `throw new Error('XXX')` would return a unified "Server Internal Error".
       */
      var TsrpcError = exports('TsrpcError', /** @class */function () {
        function TsrpcError(dataOrMessage, data) {
          var _a;
          if (typeof dataOrMessage === 'string') {
            this.message = dataOrMessage;
            this.type = (_a = data === null || data === void 0 ? void 0 : data.type) !== null && _a !== void 0 ? _a : TsrpcErrorType.ApiError;
            _assign(this, data);
          } else {
            _assign(this, dataOrMessage);
          }
        }
        TsrpcError.prototype.toString = function () {
          return "[TSRPC ".concat(this.type, "]: ").concat(this.message);
        };
        TsrpcError.Type = TsrpcErrorType;
        return TsrpcError;
      }());
    }
  };
});

System.register("chunks:///_virtual/index6.mjs", ['./index3.mjs', './tslib.es6.mjs', './index8.mjs', './index7.mjs'], function (exports) {
  var _assign, TSBufferValidator, SchemaType;
  return {
    setters: [null, function (module) {
      _assign = module.__assign;
    }, function (module) {
      TSBufferValidator = module.TSBufferValidator;
    }, function (module) {
      SchemaType = module.SchemaType;
    }],
    execute: function () {
      /*!
       * TSBuffer v2.2.9
       * -----------------------------------------
       * MIT LICENSE
       * KingWorks (C) Copyright 2024
       * https://github.com/k8w/tsbuffer
       */
      var Base64Util = exports('Base64Util', /** @class */function () {
        function Base64Util() {}
        Base64Util.bufferToBase64 = function (buf) {
          if (typeof Buffer !== 'undefined') {
            return Buffer.from(buf).toString('base64');
          }
          var base64 = '';
          var len = buf.length;
          for (var i = 0; i < len; i += 3) {
            base64 += base64Chars[buf[i] >> 2];
            base64 += base64Chars[(buf[i] & 3) << 4 | buf[i + 1] >> 4];
            base64 += base64Chars[(buf[i + 1] & 15) << 2 | buf[i + 2] >> 6];
            base64 += base64Chars[buf[i + 2] & 63];
          }
          if (len % 3 === 2) {
            base64 = base64.substring(0, base64.length - 1) + '=';
          } else if (len % 3 === 1) {
            base64 = base64.substring(0, base64.length - 2) + '==';
          }
          return base64;
        };
        Base64Util.base64ToBuffer = function (base64) {
          if (typeof Buffer !== 'undefined') {
            return new Uint8Array(Buffer.from(base64, 'base64'));
          }
          var bufferLength = base64.length * 0.75,
            len = base64.length,
            p = 0;
          var encoded1, encoded2, encoded3, encoded4;
          if (base64[base64.length - 1] === '=') {
            bufferLength--;
            if (base64[base64.length - 2] === '=') {
              bufferLength--;
            }
          }
          var buf = new Uint8Array(bufferLength);
          for (var i = 0; i < len; i += 4) {
            encoded1 = lookup[base64.charCodeAt(i)];
            encoded2 = lookup[base64.charCodeAt(i + 1)];
            encoded3 = lookup[base64.charCodeAt(i + 2)];
            encoded4 = lookup[base64.charCodeAt(i + 3)];
            buf[p++] = encoded1 << 2 | encoded2 >> 4;
            buf[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;
            buf[p++] = (encoded3 & 3) << 6 | encoded4 & 63;
          }
          return buf;
        };
        return Base64Util;
      }());
      /*base64*/
      var base64Chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
      // Use a lookup table to find the index.
      var lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);
      for (var i = 0; i < base64Chars.length; i++) {
        lookup[base64Chars.charCodeAt(i)] = i;
      }
      /*end*/

      var CoderUtil = /** @class */function () {
        function CoderUtil() {}
        CoderUtil.isJsonCompatible = function (schema, type, protoHelper) {
          var _this = this;
          var schemaInfo = schema;
          var key = type === 'encode' ? 'isJsonEncodable' : 'isJsonDecodable';
          if (schemaInfo[key] === undefined) {
            // Just for avoding circular recursive, the value should be overwriten below
            schemaInfo[key] = true;
            switch (schema.type) {
              case SchemaType.Array:
                schemaInfo[key] = this.isJsonCompatible(schema.elementType, type, protoHelper);
                break;
              case SchemaType.Tuple:
                schemaInfo[key] = schema.elementTypes.every(function (v) {
                  return _this.isJsonCompatible(v, type, protoHelper);
                });
                break;
              case SchemaType.Interface:
                var flatSchema = protoHelper.getFlatInterfaceSchema(schema);
                schemaInfo[key] = flatSchema.properties.every(function (v) {
                  return _this.isJsonCompatible(v.type, type, protoHelper);
                });
                if (flatSchema.indexSignature) {
                  schemaInfo[key] = schemaInfo[key] && this.isJsonCompatible(flatSchema.indexSignature.type, type, protoHelper);
                }
                break;
              case SchemaType.IndexedAccess:
              case SchemaType.Reference:
                {
                  var parsed = protoHelper.parseReference(schema);
                  schemaInfo[key] = this.isJsonCompatible(parsed, type, protoHelper);
                  break;
                }
              case SchemaType.Union:
              case SchemaType.Intersection:
                schemaInfo[key] = schema.members.every(function (v) {
                  return _this.isJsonCompatible(v.type, type, protoHelper);
                });
                break;
              case SchemaType.NonNullable:
                schemaInfo[key] = this.isJsonCompatible(schema.target, type, protoHelper);
                break;
              case SchemaType.Pick:
              case SchemaType.Partial:
              case SchemaType.Omit:
              case SchemaType.Overwrite:
                {
                  var parsed = protoHelper.parseMappedType(schema);
                  if (parsed.type === SchemaType.Interface) {
                    var flatSchema_1 = protoHelper.getFlatInterfaceSchema(schema);
                    schemaInfo[key] = flatSchema_1.properties.every(function (v) {
                      return _this.isJsonCompatible(v.type, type, protoHelper);
                    });
                    if (flatSchema_1.indexSignature) {
                      schemaInfo[key] = schemaInfo[key] && this.isJsonCompatible(flatSchema_1.indexSignature.type, type, protoHelper);
                    }
                  } else if (parsed.type === SchemaType.Union || parsed.type === SchemaType.Intersection) {
                    schemaInfo[key] = parsed.members.every(function (v) {
                      return _this.isJsonCompatible(v.type, type, protoHelper);
                    });
                  }
                  break;
                }
              case SchemaType.Custom:
              case SchemaType.Date:
              case SchemaType.Buffer:
                schemaInfo[key] = false;
                break;
              default:
                schemaInfo[key] = true;
                break;
            }
          }
          return schemaInfo[key];
        };
        return CoderUtil;
      }();

      /** @internal */
      var IdBlockUtil = /** @class */function () {
        function IdBlockUtil() {}
        IdBlockUtil.getPayloadLengthInfo = function (parsedSchema, protoHelper) {
          switch (parsedSchema.type) {
            case SchemaType.Boolean:
            case SchemaType.Enum:
              return {
                lengthType: LengthType.Varint
              };
            case SchemaType.Number:
              if (!parsedSchema.scalarType || parsedSchema.scalarType.includes('64') || parsedSchema.scalarType === 'double') {
                return {
                  lengthType: LengthType.Bit64
                };
              } else if (parsedSchema.scalarType && parsedSchema.scalarType.startsWith('big')) {
                return {
                  lengthType: LengthType.LengthDelimited
                };
              } else {
                return {
                  lengthType: LengthType.Varint
                };
              }
            case SchemaType.Buffer:
            case SchemaType.String:
            case SchemaType.Any:
            case SchemaType.Object:
              return {
                lengthType: LengthType.LengthDelimited
              };
            case SchemaType.Interface:
            case SchemaType.Pick:
            case SchemaType.Partial:
            case SchemaType.Omit:
            case SchemaType.Union:
            case SchemaType.Intersection:
              return {
                lengthType: LengthType.IdBlock
              };
            case SchemaType.Array:
            case SchemaType.Overwrite:
            case SchemaType.Tuple:
              return {
                lengthType: LengthType.LengthDelimited,
                needLengthPrefix: true
              };
            case SchemaType.Literal:
              return {
                lengthType: LengthType.LengthDelimited,
                needLengthPrefix: false
              };
            case SchemaType.Date:
              return {
                lengthType: LengthType.Varint
              };
            case SchemaType.NonNullable:
              return this.getPayloadLengthInfo(protoHelper.parseReference(parsedSchema.target), protoHelper);
            case SchemaType.Custom:
              return {
                lengthType: LengthType.LengthDelimited
              };
            default:
              // @ts-expect-error
              throw new Error("Unrecognized schema type: ".concat(parsedSchema.type));
          }
        };
        return IdBlockUtil;
      }();
      /** @internal */
      var LengthType;
      (function (LengthType) {
        LengthType[LengthType["LengthDelimited"] = 0] = "LengthDelimited";
        LengthType[LengthType["Varint"] = 1] = "Varint";
        LengthType[LengthType["Bit64"] = 2] = "Bit64";
        LengthType[LengthType["IdBlock"] = 3] = "IdBlock";
      })(LengthType || (LengthType = {}));

      /** @internal */
      var SchemaUtil = /** @class */function () {
        function SchemaUtil() {}
        /** type类型是否能编码为该literal */
        SchemaUtil.canBeLiteral = function (schema, literal) {
          var _this = this;
          if (schema.type === SchemaType.Union) {
            return schema.members.some(function (v) {
              return _this.canBeLiteral(v.type, literal);
            });
          }
          if (schema.type === SchemaType.Any) {
            return true;
          }
          if (schema.type === SchemaType.Literal && schema.literal === literal) {
            return true;
          }
          return false;
        };
        return SchemaUtil;
      }();
      var TypedArrays = {
        Int8Array: Int8Array,
        Int16Array: Int16Array,
        Int32Array: Int32Array,
        Uint8Array: Uint8Array,
        Uint16Array: Uint16Array,
        Uint32Array: Uint32Array,
        Float32Array: Float32Array,
        Float64Array: Float64Array
      };

      /**!
       * From [protobuf.js](https://github.com/protobufjs/protobuf.js/blob/master/lib/utf8/index.js)
       */
      var Utf8CoderJS = {
        measureLength: function measureLength(str) {
          var len = 0,
            c = 0;
          for (var i = 0; i < str.length; ++i) {
            c = str.charCodeAt(i);
            if (c < 128) len += 1;else if (c < 2048) len += 2;else if ((c & 0xFC00) === 0xD800 && (str.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {
              ++i;
              len += 4;
            } else len += 3;
          }
          return len;
        },
        write: function write(str, buf, pos) {
          var start = pos,
            c1,
            // character 1
            c2; // character 2
          for (var i = 0; i < str.length; ++i) {
            c1 = str.charCodeAt(i);
            if (c1 < 128) {
              buf[pos++] = c1;
            } else if (c1 < 2048) {
              buf[pos++] = c1 >> 6 | 192;
              buf[pos++] = c1 & 63 | 128;
            } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = str.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {
              c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);
              ++i;
              buf[pos++] = c1 >> 18 | 240;
              buf[pos++] = c1 >> 12 & 63 | 128;
              buf[pos++] = c1 >> 6 & 63 | 128;
              buf[pos++] = c1 & 63 | 128;
            } else {
              buf[pos++] = c1 >> 12 | 224;
              buf[pos++] = c1 >> 6 & 63 | 128;
              buf[pos++] = c1 & 63 | 128;
            }
          }
          return pos - start;
        },
        read: function read(buf, pos, length) {
          if (length < 1) {
            return "";
          }
          var str = "";
          for (var i = pos, end = pos + length; i < end;) {
            var t = buf[i++];
            if (t <= 0x7F) {
              str += String.fromCharCode(t);
            } else if (t >= 0xC0 && t < 0xE0) {
              str += String.fromCharCode((t & 0x1F) << 6 | buf[i++] & 0x3F);
            } else if (t >= 0xE0 && t < 0xF0) {
              str += String.fromCharCode((t & 0xF) << 12 | (buf[i++] & 0x3F) << 6 | buf[i++] & 0x3F);
            } else if (t >= 0xF0) {
              var t2 = ((t & 7) << 18 | (buf[i++] & 0x3F) << 12 | (buf[i++] & 0x3F) << 6 | buf[i++] & 0x3F) - 0x10000;
              str += String.fromCharCode(0xD800 + (t2 >> 10));
              str += String.fromCharCode(0xDC00 + (t2 & 0x3FF));
            }
          }
          return str;
        }
      };
      var Utf8CoderNode = {
        measureLength: function measureLength(str) {
          return Buffer.byteLength(str, 'utf-8');
        },
        write: function write(str, buf, pos) {
          return Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength).write(str, pos, 'utf-8');
        },
        read: function read(buf, pos, length) {
          return Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength).toString('utf-8', pos, pos + length);
        }
      };
      /**
       * 自动判断环境，选择使用NodeJS Native方法编码或是JS编码
       */
      var Utf8Coder = typeof Buffer !== 'undefined' && Buffer.from && Buffer.prototype.write ? Utf8CoderNode : Utf8CoderJS;

      /** @internal */
      var Varint64 = /** @class */function () {
        function Varint64(high, low, byteLength) {
          this.uint32s = new Uint32Array([high, low]);
          if (byteLength !== undefined) {
            this._byteLength = byteLength;
          }
        }
        Varint64.from = function (value) {
          if (value === 0) {
            return this.Zero;
          }
          var sign = value < 0;
          if (sign) {
            value = -value;
          }
          var lo = value >>> 0,
            hi = (value - lo) / 4294967296 >>> 0;
          if (sign) {
            hi = ~hi >>> 0;
            lo = ~lo >>> 0;
            if (++lo > 4294967295) {
              lo = 0;
              if (++hi > 4294967295) hi = 0;
            }
          }
          return new Varint64(hi, lo);
        };
        Varint64.prototype.toNumber = function (unsigned) {
          if (!unsigned && this.uint32s[0] >>> 31) {
            var low = ~this.uint32s[1] + 1 >>> 0,
              high = ~this.uint32s[0] >>> 0;
            if (!low) high = high + 1 >>> 0;
            return -(low + high * 4294967296);
          }
          return this.uint32s[1] + this.uint32s[0] * 4294967296;
        };
        Varint64.prototype.zzEncode = function () {
          var mask = this.uint32s[0] >> 31;
          this.uint32s[0] = ((this.uint32s[0] << 1 | this.uint32s[1] >>> 31) ^ mask) >>> 0;
          this.uint32s[1] = (this.uint32s[1] << 1 ^ mask) >>> 0;
          return this;
        };
        Varint64.prototype.zzDecode = function () {
          var mask = -(this.uint32s[1] & 1);
          this.uint32s[1] = ((this.uint32s[1] >>> 1 | this.uint32s[0] << 31) ^ mask) >>> 0;
          this.uint32s[0] = (this.uint32s[0] >>> 1 ^ mask) >>> 0;
          return this;
        };
        Object.defineProperty(Varint64.prototype, "byteLength", {
          get: function get() {
            if (this._byteLength === undefined) {
              var part0 = this.uint32s[1],
                part1 = (this.uint32s[1] >>> 28 | this.uint32s[0] << 4) >>> 0,
                part2 = this.uint32s[0] >>> 24;
              this._byteLength = part2 === 0 ? part1 === 0 ? part0 < 16384 ? part0 < 128 ? 1 : 2 : part0 < 2097152 ? 3 : 4 : part1 < 16384 ? part1 < 128 ? 5 : 6 : part1 < 2097152 ? 7 : 8 : part2 < 128 ? 9 : 10;
            }
            return this._byteLength;
          },
          enumerable: false,
          configurable: true
        });
        /**
         * 编码
         * @param buf
         * @param pos
         * @returns 编码后最新的pos
         */
        Varint64.prototype.writeToBuffer = function (buf, pos) {
          while (this.uint32s[0]) {
            buf[pos++] = this.uint32s[1] & 127 | 128;
            this.uint32s[1] = (this.uint32s[1] >>> 7 | this.uint32s[0] << 25) >>> 0;
            this.uint32s[0] >>>= 7;
          }
          while (this.uint32s[1] > 127) {
            buf[pos++] = this.uint32s[1] & 127 | 128;
            this.uint32s[1] = this.uint32s[1] >>> 7;
          }
          buf[pos++] = this.uint32s[1];
          return pos;
        };
        Varint64.readFromBuffer = function (buf, pos) {
          var startPos = pos;
          var hi = 0,
            lo = 0;
          var i = 0;
          if (buf.byteLength - pos > 4) {
            // fast route (lo)
            for (; i < 4; ++i) {
              // 1st..4th
              lo = (lo | (buf[pos] & 127) << i * 7) >>> 0;
              if (buf[pos++] < 128) return new Varint64(hi, lo, pos - startPos);
            }
            // 5th
            lo = (lo | (buf[pos] & 127) << 28) >>> 0;
            hi = (hi | (buf[pos] & 127) >> 4) >>> 0;
            if (buf[pos++] < 128) return new Varint64(hi, lo, pos - startPos);
            i = 0;
          } else {
            for (; i < 3; ++i) {
              /* istanbul ignore if */
              if (pos >= buf.byteLength) throw new Error('Read varint error: index out of range');
              // 1st..3th
              lo = (lo | (buf[pos] & 127) << i * 7) >>> 0;
              if (buf[pos++] < 128) return new Varint64(hi, lo, pos - startPos);
            }
            // 4th
            lo = (lo | (buf[pos++] & 127) << i * 7) >>> 0;
            return new Varint64(hi, lo, pos - startPos);
          }
          if (buf.byteLength - pos > 4) {
            // fast route (hi)
            for (; i < 5; ++i) {
              // 6th..10th
              hi = (hi | (buf[pos] & 127) << i * 7 + 3) >>> 0;
              if (buf[pos++] < 128) return new Varint64(hi, lo, pos - startPos);
            }
          } else {
            for (; i < 5; ++i) {
              /* istanbul ignore if */
              if (pos >= buf.byteLength) throw new Error('Read varint error: index out of range');
              // 6th..10th
              hi = (hi | (buf[pos] & 127) << i * 7 + 3) >>> 0;
              if (buf[pos++] < 128) return new Varint64(hi, lo, pos - startPos);
            }
          }
          /* istanbul ignore next */
          throw Error("invalid varint encoding");
        };
        Varint64.Zero = new Varint64(0, 0);
        return Varint64;
      }();
      var BufferReader = /** @class */function () {
        function BufferReader() {
          this._pos = 0;
        }
        BufferReader.prototype.load = function (buf, pos) {
          if (pos === void 0) {
            pos = 0;
          }
          this._buf = buf;
          this._pos = pos;
          this._view = new DataView(buf.buffer);
        };
        BufferReader.prototype.readVarint = function () {
          var varint = Varint64.readFromBuffer(this._buf, this._pos);
          this._pos += varint.byteLength;
          return varint;
        };
        BufferReader.prototype.readUint = function () {
          return this.readVarint().toNumber(true);
        };
        BufferReader.prototype.readInt = function () {
          return this.readVarint().zzDecode().toNumber();
        };
        BufferReader.prototype.readDouble = function () {
          var pos = this._pos;
          this._pos += 8;
          return this._view.getFloat64(this._buf.byteOffset + pos);
        };
        BufferReader.prototype.readString = function () {
          var strByteLength = this.readUint();
          var str = Utf8Coder.read(this._buf, this._pos, strByteLength);
          this._pos += strByteLength;
          return str;
        };
        BufferReader.prototype.readBuffer = function () {
          var bufByteLength = this.readUint();
          var buf = this._buf.subarray(this._pos, this._pos + bufByteLength);
          this._pos += bufByteLength;
          return buf;
        };
        BufferReader.prototype.skip = function (byteLength) {
          this._pos += byteLength;
        };
        BufferReader.prototype.skipByLengthType = function (lengthType) {
          if (lengthType === LengthType.Bit64) {
            this._pos += 8;
          } else if (lengthType === LengthType.Varint) {
            this.readVarint();
          } else if (lengthType === LengthType.LengthDelimited) {
            var bufByteLength = this.readUint();
            this._pos += bufByteLength;
          } else if (lengthType === LengthType.IdBlock) {
            this.skipIdBlock();
          } else {
            throw new Error('Unknown lengthType: ' + lengthType);
          }
        };
        BufferReader.prototype.skipIdBlock = function () {
          var idNum = this.readUint();
          for (var i = 0; i < idNum; ++i) {
            var id = this.readUint();
            var lengthType = id & 3;
            this.skipByLengthType(lengthType);
          }
        };
        BufferReader.prototype.readBoolean = function () {
          var value = this._view.getUint8(this._buf.byteOffset + this._pos++);
          if (value === 255) {
            return true;
          } else if (value === 0) {
            return false;
          } else {
            throw new Error("Invalid boolean encoding [".concat(value, "] at pos ").concat(this._pos - 1));
          }
        };
        Object.defineProperty(BufferReader.prototype, "unreadByteLength", {
          get: function get() {
            return this._buf.byteLength - this._pos;
          },
          enumerable: false,
          configurable: true
        });
        BufferReader.prototype.dispose = function () {
          this._buf = this._view = undefined;
        };
        return BufferReader;
      }();

      /** @internal */
      var Decoder = /** @class */function () {
        function Decoder(options) {
          this._options = options;
          this._reader = new BufferReader();
          this._validator = options.validator;
        }
        Decoder.prototype.decode = function (buffer, schema) {
          this._reader.load(buffer);
          return this._read(schema);
        };
        Decoder.prototype.decodeJSON = function (json, schema) {
          var _this = this;
          if (json === null || CoderUtil.isJsonCompatible(schema, 'decode', this._validator.protoHelper)) {
            return json;
          }
          // 递归 只处理 ArrayBuffer、Date、ObjectId
          switch (schema.type) {
            case SchemaType.Array:
              if (!Array.isArray(json)) {
                break;
              }
              return json.map(function (v) {
                return _this.decodeJSON(v, schema.elementType);
              });
            case SchemaType.Tuple:
              if (!Array.isArray(json)) {
                break;
              }
              return json.map(function (v, i) {
                return _this.decodeJSON(v, schema.elementTypes[i]);
              });
            case SchemaType.Interface:
              if (json.constructor !== Object) {
                break;
              }
              json = Object.assign({}, json);
              var flatSchema = this._validator.protoHelper.getFlatInterfaceSchema(schema);
              var _loop_1 = function _loop_1(key) {
                var property = flatSchema.properties.find(function (v) {
                  return v.name === key;
                });
                if (property) {
                  json[key] = this_1.decodeJSON(json[key], property.type);
                } else if (flatSchema.indexSignature) {
                  json[key] = this_1.decodeJSON(json[key], flatSchema.indexSignature.type);
                }
              };
              var this_1 = this;
              for (var key in json) {
                _loop_1(key);
              }
              return json;
            case SchemaType.Date:
              if (typeof json !== 'string' && typeof json !== 'number') {
                break;
              }
              return new Date(json);
            case SchemaType.Partial:
            case SchemaType.Pick:
            case SchemaType.Omit:
            case SchemaType.Overwrite:
              var parsed = this._validator.protoHelper.parseMappedType(schema);
              if (parsed.type === SchemaType.Interface) {
                if (json.constructor !== Object) {
                  break;
                }
                json = Object.assign({}, json);
                var flatSchema_1 = this._validator.protoHelper.getFlatInterfaceSchema(schema);
                var _loop_2 = function _loop_2(key) {
                  var property = flatSchema_1.properties.find(function (v) {
                    return v.name === key;
                  });
                  if (property) {
                    json[key] = this_2.decodeJSON(json[key], property.type);
                  } else if (flatSchema_1.indexSignature) {
                    json[key] = this_2.decodeJSON(json[key], flatSchema_1.indexSignature.type);
                  }
                };
                var this_2 = this;
                for (var key in json) {
                  _loop_2(key);
                }
                return json;
              } else if (parsed.type === SchemaType.Union || parsed.type === SchemaType.Intersection) {
                for (var _i = 0, _a = parsed.members; _i < _a.length; _i++) {
                  var member = _a[_i];
                  json = this.decodeJSON(json, member.type);
                }
                return json;
              }
              break;
            case SchemaType.Buffer:
              if (typeof json !== 'string') {
                break;
              }
              var uint8Arr = Base64Util.base64ToBuffer(json);
              return this._getBufferValue(uint8Arr, schema);
            case SchemaType.IndexedAccess:
            case SchemaType.Reference:
            case SchemaType.Keyof:
              return this.decodeJSON(json, this._validator.protoHelper.parseReference(schema));
            case SchemaType.Union:
            case SchemaType.Intersection:
              {
                // 逐个编码 然后合并 （失败的会原值返回，所以不影响结果）
                for (var _b = 0, _c = schema.members; _b < _c.length; _b++) {
                  var member = _c[_b];
                  json = this.decodeJSON(json, member.type);
                }
                return json;
              }
            case SchemaType.NonNullable:
              return this.decodeJSON(json, schema.target);
            case SchemaType.Custom:
              if (schema.decodeJSON) {
                return schema.decodeJSON(json);
              }
              break;
            default:
              schema.type;
          }
          return json;
        };
        Decoder.prototype._read = function (schema) {
          switch (schema.type) {
            case SchemaType.Boolean:
              return this._reader.readBoolean();
            case SchemaType.Number:
              return this._readNumber(schema);
            case SchemaType.String:
              return this._reader.readString();
            case SchemaType.Array:
              {
                var output = [];
                // 数组长度：Varint
                var length_1 = this._reader.readUint();
                for (var i = 0; i < length_1; ++i) {
                  var item = this._read(schema.elementType);
                  output.push(item);
                }
                return output;
              }
            case SchemaType.Tuple:
              {
                if (schema.elementTypes.length > 64) {
                  throw new Error('Elements oversized, maximum supported tuple elements is 64, now get ' + schema.elementTypes.length);
                }
                var output = [];
                // PayloadMask: Varint64
                var payloadMask = this._reader.readVarint();
                // 计算maskIndices
                var maskIndices = [];
                // Low
                for (var i = 0; i < 32; ++i) {
                  if (payloadMask.uint32s[1] & 1 << i) {
                    maskIndices.push(i);
                  }
                }
                // High
                for (var i = 0; i < 32; ++i) {
                  if (payloadMask.uint32s[0] & 1 << i) {
                    maskIndices.push(i + 32);
                  }
                }
                if (!maskIndices.length) {
                  return [];
                }
                var maxIndex = maskIndices.last();
                for (var i = 0, nextMaskIndex = 0, next = maskIndices[0]; i <= maxIndex; ++i) {
                  if (i === next) {
                    output[i] = this._read(schema.elementTypes[i]);
                    ++nextMaskIndex;
                    next = maskIndices[nextMaskIndex];
                  } else {
                    output[i] = undefined;
                  }
                }
                // undefined as null
                for (var i = 0; i < schema.elementTypes.length; ++i) {
                  if (this._undefinedAsNull(output[i], schema.elementTypes[i], schema.optionalStartIndex !== undefined && i >= schema.optionalStartIndex)) {
                    output[i] = null;
                  }
                }
                return output;
              }
            case SchemaType.Enum:
              var enumId_1 = this._reader.readVarint().toNumber();
              var enumItem = schema.members.find(function (v) {
                return v.id === enumId_1;
              });
              if (!enumItem) {
                throw new Error("Invalid enum encoding: unexpected id ".concat(enumId_1));
              }
              return enumItem.value;
            case SchemaType.Any:
            case SchemaType.Object:
              var jsonStr = this._reader.readString();
              if (jsonStr === 'undefined') {
                return undefined;
              }
              return JSON.parse(jsonStr);
            case SchemaType.Literal:
              return schema.literal;
            case SchemaType.Interface:
              return this._readInterface(schema);
            case SchemaType.Buffer:
              var uint8Arr = this._reader.readBuffer();
              return this._getBufferValue(uint8Arr, schema);
            case SchemaType.IndexedAccess:
            case SchemaType.Reference:
            case SchemaType.Keyof:
              return this._read(this._validator.protoHelper.parseReference(schema));
            case SchemaType.Partial:
            case SchemaType.Pick:
            case SchemaType.Omit:
            case SchemaType.Overwrite:
              var parsed = this._validator.protoHelper.parseMappedType(schema);
              if (parsed.type === SchemaType.Interface) {
                return this._readPureMappedType(schema);
              } else {
                return this._readUnionOrIntersection(parsed);
              }
            case SchemaType.Union:
            case SchemaType.Intersection:
              return this._readUnionOrIntersection(schema);
            case SchemaType.Date:
              return new Date(this._reader.readUint());
            case SchemaType.NonNullable:
              return this._read(schema.target);
            case SchemaType.Custom:
              if (!schema.decode) {
                throw new Error('Missing decode method for CustomTypeSchema');
              }
              var buf = this._reader.readBuffer();
              return schema.decode(buf);
            default:
              // @ts-expect-error
              throw new Error("Unrecognized schema type: ".concat(schema.type));
          }
        };
        /**
         * PureMappedType 每一层的target 都是MappedType或Interface（最终层）
         */
        Decoder.prototype._readPureMappedType = function (schema) {
          var output;
          var overwrite;
          if (schema.type === 'Overwrite') {
            // Overwrite Block
            overwrite = this._read(schema.overwrite);
          }
          var parsedTarget = this._validator.protoHelper.parseReference(schema.target);
          if (parsedTarget.type === 'Interface') {
            output = this._readInterface(parsedTarget);
          } else if (parsedTarget.type === 'Pick' || parsedTarget.type === 'Omit' || parsedTarget.type === 'Partial' || parsedTarget.type === 'Overwrite') {
            output = this._readPureMappedType(parsedTarget);
          } else {
            throw new Error('Invalid PureMappedType child: ' + schema.type);
          }
          // filter key
          if (schema.type === 'Pick') {
            // 把Pick以外的剔除
            for (var key in output) {
              if (schema.keys.indexOf(key) === -1) {
                delete output[key];
              }
            }
          } else if (schema.type === 'Omit') {
            // 剔除Omit
            for (var key in output) {
              if (schema.keys.indexOf(key) > -1) {
                delete output[key];
              }
            }
          } else if (schema.type === 'Overwrite') {
            Object.assign(output, overwrite);
          }
          // Partial 原样返回
          return output;
        };
        Decoder.prototype._readNumber = function (schema) {
          // 默认为double
          var scalarType = schema.scalarType || 'double';
          switch (scalarType) {
            // 定长编码
            case 'double':
              return this._reader.readDouble();
            // Varint编码
            case 'int':
              return this._reader.readInt();
            case 'uint':
              return this._reader.readUint();
            default:
              throw new Error('Scalar type not support : ' + scalarType);
          }
        };
        Decoder.prototype._readInterface = function (schema) {
          var output = {};
          var flatSchema = this._validator.protoHelper.getFlatInterfaceSchema(schema);
          // BlockID数量
          var blockIdNum = this._reader.readUint();
          var _loop_3 = function _loop_3(i) {
            // ReadBlock
            var readBlockId = this_3._reader.readUint();
            var lengthType = readBlockId & 3;
            var blockId = readBlockId >> 2;
            // indexSignature
            if (blockId === 0) {
              if (flatSchema.indexSignature) {
                var type = flatSchema.indexSignature.type;
                var fieldName = this_3._reader.readString();
                this_3._skipIdLengthPrefix(this_3._validator.protoHelper.parseReference(type));
                output[fieldName] = this_3._read(type);
              }
              // indexSignature未定义，可能是新协议，此处兼容，根据lengthType跳过
              else {
                // skip fieldName
                this_3._reader.skipByLengthType(LengthType.LengthDelimited);
                // skipPayload
                this_3._reader.skipByLengthType(lengthType);
              }
            }
            // extend block
            else if (blockId <= 9) {
              var extendId_1 = blockId - 1;
              var extend = schema["extends"] && schema["extends"].find(function (v) {
                return v.id === extendId_1;
              });
              if (extend) {
                this_3._skipIdLengthPrefix(this_3._validator.protoHelper.parseReference(extend.type));
                var extendValue = this_3._read(extend.type);
                Object.assign(output, extendValue);
              }
              // 未知的extendId 可能是新协议 跳过
              else {
                // skipPayload
                this_3._reader.skipByLengthType(lengthType);
              }
            }
            // property
            else {
              var propertyId_1 = blockId - 10;
              var property = schema.properties && schema.properties.find(function (v) {
                return v.id === propertyId_1;
              });
              if (property) {
                this_3._skipIdLengthPrefix(this_3._validator.protoHelper.parseReference(property.type));
                output[property.name] = this_3._read(property.type);
              }
              // 未知的PropertyID 可能是新协议 跳过
              else {
                // skipPayload
                this_3._reader.skipByLengthType(lengthType);
              }
            }
          };
          var this_3 = this;
          for (var i = 0; i < blockIdNum; ++i) {
            _loop_3();
          }
          // Literal property 由于不编码 将其补回
          // undefined as null
          for (var _i = 0, _a = flatSchema.properties; _i < _a.length; _i++) {
            var property = _a[_i];
            if (output.hasOwnProperty(property.name)) {
              continue;
            }
            // Literal
            var parsedType = this._validator.protoHelper.parseReference(property.type);
            if (parsedType.type === 'Literal') {
              output[property.name] = parsedType.literal;
              continue;
            }
            // undefined as null
            if (this._undefinedAsNull(output[property.name], parsedType, property.optional)) {
              output[property.name] = null;
              continue;
            }
          }
          return output;
        };
        /** @internal 是否该null值小于当做undefined编码 */
        Decoder.prototype._undefinedAsNull = function (value, type, isOptional) {
          return value === undefined && this._options.undefinedAsNull && !SchemaUtil.canBeLiteral(type, undefined) && !isOptional && SchemaUtil.canBeLiteral(type, null);
        };
        Decoder.prototype._skipIdLengthPrefix = function (parsedSchema) {
          var lengthInfo = IdBlockUtil.getPayloadLengthInfo(parsedSchema, this._validator.protoHelper);
          if (lengthInfo.needLengthPrefix) {
            // skip length prefix
            this._reader.skipByLengthType(LengthType.Varint);
          }
        };
        Decoder.prototype._readUnionOrIntersection = function (schema) {
          var output;
          var idNum = this._reader.readUint();
          var _loop_4 = function _loop_4(i) {
            var readId = this_4._reader.readUint();
            var lengthType = readId & 3;
            var id = readId >> 2;
            var member = schema.members.find(function (v) {
              return v.id === id;
            });
            // 不可识别的Member，可能是新协议，跳过使兼容
            if (!member) {
              this_4._reader.skipByLengthType(lengthType);
              return "continue";
            }
            this_4._skipIdLengthPrefix(this_4._validator.protoHelper.parseReference(member.type));
            var value = this_4._read(member.type);
            if (this_4._isObject(output) && this_4._isObject(value)) {
              Object.assign(output, value);
            } else {
              output = value;
            }
          };
          var this_4 = this;
          for (var i = 0; i < idNum; ++i) {
            _loop_4();
          }
          if (this._undefinedAsNull(output, schema)) {
            output = null;
          }
          return output;
        };
        Decoder.prototype._isObject = function (value) {
          return typeof value === 'object' && value !== null;
        };
        Decoder.prototype._getBufferValue = function (uint8Arr, schema) {
          if (schema.arrayType) {
            if (schema.arrayType === 'BigInt64Array' || schema.arrayType === 'BigUint64Array') {
              throw new Error('Unsupported arrayType: ' + schema.arrayType);
            }
            // Uint8Array 性能最高
            else if (schema.arrayType === 'Uint8Array') {
              return uint8Arr;
            }
            // 其余TypedArray 可能需要内存拷贝 性能次之
            else {
              var typedArr = TypedArrays[schema.arrayType];
              // 字节对齐，可以直接转，无需拷贝内存
              if (uint8Arr.byteOffset % typedArr.BYTES_PER_ELEMENT === 0) {
                return new typedArr(uint8Arr.buffer, uint8Arr.byteOffset, uint8Arr.byteLength / typedArr.BYTES_PER_ELEMENT);
              }
              // 字节不对齐，不能直接转，只能拷贝内存后再生成
              else {
                var arrBuf = uint8Arr.buffer.slice(uint8Arr.byteOffset, uint8Arr.byteOffset + uint8Arr.byteLength);
                return new typedArr(arrBuf);
              }
            }
          } else {
            return uint8Arr.byteLength === uint8Arr.buffer.byteLength && uint8Arr.byteOffset === 0 ? uint8Arr.buffer : uint8Arr.buffer.slice(uint8Arr.byteOffset, uint8Arr.byteOffset + uint8Arr.byteLength);
          }
        };
        return Decoder;
      }();

      /** @internal */
      var Config = {
        "interface": {
          maxExtendsNum: 9
        }
      };

      /**
       * 用Op来串联 next
       * Op包含 function next length
       * 先度量长度再执行编码
       * 一次性编码
       * 使用BufferPool
       * writer.uint32(xx).string(xxx).finish();
       * @internal
       */
      var BufferWriter = /** @class */function () {
        function BufferWriter() {
          this._ops = [];
        }
        Object.defineProperty(BufferWriter.prototype, "ops", {
          get: function get() {
            return this._ops;
          },
          enumerable: false,
          configurable: true
        });
        BufferWriter.prototype.clear = function () {
          this._ops = [];
        };
        BufferWriter.prototype.push = function (req) {
          this._ops.push(this.req2op(req));
          return this;
        };
        BufferWriter.prototype.req2op = function (req) {
          if (req.type === 'string' || req.type === 'buffer') {
            var valueLength = this.measureLength(req);
            // Length
            this.push({
              type: 'varint',
              value: Varint64.from(valueLength)
            });
            // Value
            return _assign(_assign({}, req), {
              length: valueLength
            });
          } else {
            var length_1 = this.measureLength(req);
            return _assign(_assign({}, req), {
              length: length_1
            });
          }
        };
        BufferWriter.prototype.measureLength = function (req) {
          switch (req.type) {
            case 'varint':
              return req.value.byteLength;
            case 'string':
              return Utf8Coder.measureLength(req.value);
            case 'buffer':
              return req.value.byteLength;
            case 'double':
              return 8;
            case 'boolean':
              return 1;
            default:
              return NaN;
          }
        };
        BufferWriter.prototype.finish = function () {
          var byteLength = this._ops.sum(function (v) {
            return v.length;
          });
          var pos = 0;
          var buf = new Uint8Array(byteLength);
          var view = new DataView(buf.buffer);
          for (var _i = 0, _a = this._ops; _i < _a.length; _i++) {
            var op = _a[_i];
            switch (op.type) {
              case 'varint':
                var newPos = op.value.writeToBuffer(buf, pos);
                if (newPos !== pos + op.length) {
                  throw new Error("Error varint measuredLength ".concat(op.length, ", actual is ").concat(newPos - pos, ", value is ").concat(op.value.toNumber()));
                }
                break;
              case 'double':
                view.setFloat64(buf.byteOffset + pos, op.value);
                break;
              case 'string':
                var encLen = Utf8Coder.write(op.value, buf, pos);
                if (encLen !== op.length) {
                  throw new Error("Expect ".concat(op.length, " bytes but encoded ").concat(encLen, " bytes"));
                }
                break;
              case 'buffer':
                buf.subarray(pos, pos + op.length).set(op.value);
                break;
              case 'boolean':
                view.setUint8(buf.byteOffset + pos, op.value ? 255 : 0);
                break;
            }
            pos += op.length;
          }
          return buf;
        };
        return BufferWriter;
      }();

      /** @internal */
      var Encoder = /** @class */function () {
        function Encoder(options) {
          this._options = options;
          this._writer = new BufferWriter();
          this._validator = options.validator;
        }
        Encoder.prototype.encode = function (value, schema) {
          this._writer.clear();
          this._write(value, schema);
          return this._writer.finish();
        };
        Encoder.prototype.encodeJSON = function (value, schema) {
          var _this = this;
          // JSON 能直接传输的类型，直接跳过
          if (typeof value !== 'object' || value === null || CoderUtil.isJsonCompatible(schema, 'encode', this._validator.protoHelper)) {
            return value;
          }
          switch (schema.type) {
            case SchemaType.Array:
              if (!Array.isArray(value)) {
                break;
              }
              return value.map(function (v) {
                return _this.encodeJSON(v, schema.elementType);
              });
            case SchemaType.Tuple:
              {
                if (!Array.isArray(value)) {
                  break;
                }
                return value.map(function (v, i) {
                  return _this.encodeJSON(v, schema.elementTypes[i]);
                });
              }
            case SchemaType.Interface:
              {
                if (value.constructor !== Object) {
                  break;
                }
                value = Object.assign({}, value);
                var flatSchema = this._validator.protoHelper.getFlatInterfaceSchema(schema);
                var _loop_1 = function _loop_1(key) {
                  var property = flatSchema.properties.find(function (v) {
                    return v.name === key;
                  });
                  if (property) {
                    value[key] = this_1.encodeJSON(value[key], property.type);
                  } else if (flatSchema.indexSignature) {
                    value[key] = this_1.encodeJSON(value[key], flatSchema.indexSignature.type);
                  }
                };
                var this_1 = this;
                for (var key in value) {
                  _loop_1(key);
                }
                return value;
              }
            case SchemaType.Partial:
            case SchemaType.Pick:
            case SchemaType.Omit:
            case SchemaType.Overwrite:
              var parsed = this._validator.protoHelper.parseMappedType(schema);
              return this.encodeJSON(value, parsed);
            case SchemaType.Buffer:
              if (!(value instanceof ArrayBuffer) && !ArrayBuffer.isView(value)) {
                break;
              }
              if (schema.arrayType) {
                if (schema.arrayType === 'Uint8Array') {
                  return Base64Util.bufferToBase64(value);
                }
                var view = value;
                var buf = view.byteLength === view.buffer.byteLength && view.byteOffset === 0 ? view.buffer : view.buffer.slice(view.byteOffset, view.byteOffset + view.byteLength);
                return Base64Util.bufferToBase64(new Uint8Array(buf));
              } else {
                return Base64Util.bufferToBase64(new Uint8Array(value));
              }
            case SchemaType.IndexedAccess:
            case SchemaType.Reference:
            case SchemaType.Keyof:
              return this.encodeJSON(value, this._validator.protoHelper.parseReference(schema));
            case SchemaType.Union:
            case SchemaType.Intersection:
              {
                // 逐个编码 然后合并 （失败的会原值返回，所以不影响结果）
                for (var _i = 0, _a = schema.members; _i < _a.length; _i++) {
                  var member = _a[_i];
                  value = this.encodeJSON(value, member.type);
                }
                return value;
              }
            case SchemaType.NonNullable:
              return this.encodeJSON(value, schema.target);
            case SchemaType.Date:
              if (!(value instanceof Date)) {
                break;
              }
              return value.toJSON();
            case SchemaType.Custom:
              if (schema.encodeJSON) {
                return schema.encodeJSON(value);
              } else if (typeof (value === null || value === void 0 ? void 0 : value.toJSON) === 'function') {
                return value.toJSON();
              } else if (typeof (value === null || value === void 0 ? void 0 : value.toString) === 'function') {
                return value.toString();
              }
              return value;
            default:
              schema.type;
          }
          return value;
        };
        Encoder.prototype._write = function (value, schema, options) {
          switch (schema.type) {
            case SchemaType.Boolean:
              this._writer.push({
                type: 'boolean',
                value: value
              });
              break;
            case SchemaType.Number:
              this._writeNumber(value, schema);
              break;
            case SchemaType.String:
              this._writer.push({
                type: 'string',
                value: value
              });
              break;
            case SchemaType.Array:
              {
                var _v = value;
                // 数组长度：Varint
                this._writer.push({
                  type: 'varint',
                  value: Varint64.from(_v.length)
                });
                // Element Payload
                for (var i = 0; i < _v.length; ++i) {
                  this._write(_v[i], schema.elementType);
                }
                break;
              }
            case SchemaType.Tuple:
              {
                if (schema.elementTypes.length > 64) {
                  throw new Error('Elements oversized, maximum supported tuple elements is 64, now get ' + schema.elementTypes.length);
                }
                var _v = value;
                // 计算maskPos（要编码的值的index）
                var maskIndices = [];
                for (var i = 0; i < _v.length; ++i) {
                  // undefined 不编码
                  // null as undefined
                  if (_v[i] === undefined || this._nullAsUndefined(_v[i], schema.elementTypes[i])) {
                    continue;
                  }
                  maskIndices.push(i);
                }
                // 生成PayloadMask：Varint64
                var lo = 0;
                var hi = 0;
                for (var _i = 0, maskIndices_1 = maskIndices; _i < maskIndices_1.length; _i++) {
                  var v = maskIndices_1[_i];
                  if (v < 32) {
                    lo |= 1 << v;
                  } else {
                    hi |= 1 << v - 32;
                  }
                }
                this._writer.push({
                  type: 'varint',
                  value: new Varint64(hi, lo)
                });
                // Element Payload
                for (var _a = 0, maskIndices_2 = maskIndices; _a < maskIndices_2.length; _a++) {
                  var i = maskIndices_2[_a];
                  this._write(_v[i], schema.elementTypes[i]);
                }
                break;
              }
            case SchemaType.Enum:
              var enumItem = schema.members.find(function (v) {
                return v.value === value;
              });
              if (!enumItem) {
                throw new Error("Unexpect enum value: ".concat(value));
              }
              this._writer.push({
                type: 'varint',
                value: Varint64.from(enumItem.id)
              });
              break;
            case SchemaType.Any:
              if (value === undefined) {
                this._writer.push({
                  type: 'string',
                  value: 'undefined'
                });
              } else {
                this._writer.push({
                  type: 'string',
                  value: JSON.stringify(value)
                });
              }
              break;
            case SchemaType.Object:
              this._writer.push({
                type: 'string',
                value: JSON.stringify(value)
              });
              break;
            case SchemaType.Literal:
              break;
            case SchemaType.Interface:
              this._writeInterface(value, schema, options);
              break;
            case SchemaType.Buffer:
              this._writeBuffer(value);
              break;
            case SchemaType.IndexedAccess:
            case SchemaType.Reference:
            case SchemaType.Keyof:
              this._write(value, this._validator.protoHelper.parseReference(schema), options);
              break;
            case SchemaType.Partial:
            case SchemaType.Pick:
            case SchemaType.Omit:
            case SchemaType.Overwrite:
              var parsed = this._validator.protoHelper.parseMappedType(schema);
              if (parsed.type === SchemaType.Interface) {
                this._writePureMappedType(value, schema, options);
              } else if (parsed.type === SchemaType.Union) {
                this._writeUnion(value, parsed, options === null || options === void 0 ? void 0 : options.skipFields);
              } else if (parsed.type === SchemaType.Intersection) {
                this._writeIntersection(value, parsed, options === null || options === void 0 ? void 0 : options.skipFields);
              }
              break;
            case SchemaType.Union:
              this._writeUnion(value, schema, options === null || options === void 0 ? void 0 : options.skipFields);
              break;
            case SchemaType.Intersection:
              this._writeIntersection(value, schema, options === null || options === void 0 ? void 0 : options.skipFields);
              break;
            case SchemaType.Date:
              this._writer.push({
                type: 'varint',
                value: Varint64.from(value.getTime())
              });
              break;
            case SchemaType.NonNullable:
              this._write(value, schema.target, options);
              break;
            case SchemaType.Custom:
              if (!schema.encode) {
                throw new Error('Missing encode method for CustomTypeSchema');
              }
              var buf = schema.encode(value);
              // 以 Buffer 形式写入
              this._writeBuffer(buf);
              break;
            default:
              // @ts-expect-error
              throw new Error("Unrecognized schema type: ".concat(schema.type));
          }
        };
        Encoder.prototype._writePureMappedType = function (value, schema, options) {
          if (!options) {
            options = {};
          }
          if (schema.type === 'Pick') {
            // 已存在 取交集
            if (options.pickFields) {
              var newPickFields = {};
              for (var _i = 0, _a = schema.keys; _i < _a.length; _i++) {
                var v = _a[_i];
                if (options.pickFields[v]) {
                  newPickFields[v] = 1;
                }
              }
              options.pickFields = newPickFields;
            }
            // 不存在 初始化
            else {
              options.pickFields = {};
              for (var _b = 0, _c = schema.keys; _b < _c.length; _b++) {
                var v = _c[_b];
                options.pickFields[v] = 1;
              }
            }
          } else if (schema.type === 'Omit') {
            // 不存在 初始化
            if (!(options === null || options === void 0 ? void 0 : options.skipFields)) {
              if (!options) {
                options = {};
              }
              options.skipFields = {};
            }
            // 取并集                
            for (var _d = 0, _e = schema.keys; _d < _e.length; _d++) {
              var v = _e[_d];
              options.skipFields[v] = 1;
            }
          } else if (schema.type === 'Overwrite') {
            var parsed = this._parseOverwrite(value, schema);
            // 写入Overwrite部分
            this._write(parsed.overwriteValue, parsed.overwrite, options);
          } else if (schema.type === 'Partial') ;else {
            // @ts-expect-error
            throw new Error('Invalid PureMappedType child: ' + schema.type);
          }
          // Write Interface
          var parsedTarget = this._validator.protoHelper.parseReference(schema.target);
          if (parsedTarget.type === 'Interface') {
            this._writeInterface(value, parsedTarget, options);
          } else {
            this._writePureMappedType(value, parsedTarget, options);
          }
        };
        Encoder.prototype._writeNumber = function (value, schema) {
          // 默认为double
          var scalarType = schema.scalarType || 'double';
          switch (scalarType) {
            // 定长编码
            case 'double':
              this._writer.push({
                type: scalarType,
                value: value
              });
              break;
            // Varint编码
            case 'int':
              this._writer.push({
                type: 'varint',
                value: Varint64.from(value).zzEncode()
              });
              break;
            case 'uint':
              this._writer.push({
                type: 'varint',
                value: Varint64.from(value)
              });
              break;
            default:
              throw new Error('Scalar type not support : ' + scalarType);
          }
        };
        Encoder.prototype._writeInterface = function (value, schema, options) {
          // skipFields默认值
          if (!options) {
            options = {};
          }
          if (!options.skipFields) {
            options.skipFields = {};
          }
          // 记录起始op位置，用于最后插入BlockID数量
          var opStartOps = this._writer.ops.length;
          var blockIdCount = 0;
          // 以下，interface
          // extends
          if (schema["extends"]) {
            // 支持的继承数量有上限
            if (schema["extends"].length > Config["interface"].maxExtendsNum) {
              throw new Error("Max support ".concat(Config["interface"].maxExtendsNum, " extends, actual: ").concat(schema["extends"].length));
            }
            for (var _i = 0, _a = schema["extends"]; _i < _a.length; _i++) {
              var extend = _a[_i];
              // BlockID = extend.id + 1
              var blockId = extend.id + 1;
              this._writer.push({
                type: 'varint',
                value: Varint64.from(blockId)
              });
              var blockIdPos = this._writer.ops.length - 1;
              // 写入extend interface前 writeOps的长度
              var opsLengthBeforeWrite = this._writer.ops.length;
              // extend Block
              var parsedExtend = this._validator.protoHelper.parseReference(extend.type);
              this._writeInterface(value, parsedExtend, _assign(_assign({}, options), {
                // 确保indexSignature是在最小层级编码
                skipIndexSignature: !!schema.indexSignature || options.skipIndexSignature // 如果父级有indexSignature 或 父级跳过 则跳过indexSignature
              }));
              // 写入前后writeOps只增加了一个（block length），说明该extend并未写入任何property字段，取消编码这个block
              if (this._writer.ops.length === opsLengthBeforeWrite + 1) {
                // 移除BlockID
                this._writer.ops.splice(this._writer.ops.length - 2, 2);
              }
              // extend写入成功 blockId数量+1
              else {
                ++blockIdCount;
                this._processIdWithLengthType(blockIdPos, extend.type);
              }
            }
          }
          // property
          if (schema.properties) {
            for (var _b = 0, _c = schema.properties; _b < _c.length; _b++) {
              var property = _c[_b];
              var parsedType = this._validator.protoHelper.parseReference(property.type);
              var propValue = value[property.name];
              // PickFields
              if (options.pickFields && !options.pickFields[property.name]) {
                continue;
              }
              // Literal不编码 直接跳过
              if (parsedType.type === 'Literal') {
                options.skipFields[property.name] = 1;
                continue;
              }
              // null as undefined
              if (this._nullAsUndefined(propValue, property.type)) {
                propValue = undefined;
              }
              // undefined不编码
              if (propValue === undefined) {
                continue;
              }
              // SkipFields
              if (options.skipFields[property.name]) {
                continue;
              }
              options.skipFields[property.name] = 1;
              var blockId = property.id + Config["interface"].maxExtendsNum + 1;
              // BlockID (propertyID)
              this._writer.push({
                type: 'varint',
                value: Varint64.from(blockId)
              });
              var blockIdPos = this._writer.ops.length - 1;
              // Value Payload
              this._write(propValue, parsedType);
              ++blockIdCount;
              this._processIdWithLengthType(blockIdPos, parsedType);
            }
          }
          // indexSignature
          if (!options.skipIndexSignature) {
            var flat = this._validator.protoHelper.getFlatInterfaceSchema(schema);
            if (flat.indexSignature) {
              for (var key in value) {
                if (value[key] === undefined || this._nullAsUndefined(value[key], flat.indexSignature.type)) {
                  continue;
                }
                // PickFields
                if (options.pickFields && !options.pickFields[key]) {
                  continue;
                }
                // SkipFields
                if (options.skipFields[key]) {
                  continue;
                }
                options.skipFields[key] = 1;
                // BlockID == 0
                this._writer.push({
                  type: 'varint',
                  value: Varint64.from(0)
                });
                var blockIdPos = this._writer.ops.length - 1;
                // 字段名
                this._writer.push({
                  type: 'string',
                  value: key
                });
                var lengthPrefixPos = this._writer.ops.length;
                // Value Payload
                this._write(value[key], flat.indexSignature.type);
                ++blockIdCount;
                this._processIdWithLengthType(blockIdPos, flat.indexSignature.type, lengthPrefixPos);
              }
            }
          }
          this._writer.ops.splice(opStartOps, 0, this._writer.req2op({
            type: 'varint',
            value: Varint64.from(blockIdCount)
          }));
        };
        /** @internal 是否该null值小于当做undefined编码 */
        Encoder.prototype._nullAsUndefined = function (value, type) {
          return value === null && this._options.nullAsUndefined && !SchemaUtil.canBeLiteral(type, null);
          // && SchemaUtil.canBeLiteral(type, undefined)  一定为true 因为先validate过了
        };

        Encoder.prototype._parseOverwrite = function (value, schema) {
          var skipFields = {};
          // 解引用
          var target = this._validator.protoHelper.parseReference(schema.target);
          var overwrite = this._validator.protoHelper.parseReference(schema.overwrite);
          var flatTarget = this._validator.protoHelper.getFlatInterfaceSchema(target);
          var flatOverwrite = this._validator.protoHelper.getFlatInterfaceSchema(overwrite);
          // 先区分哪些字段进入Target块，哪些字段进入Overwrite块
          var overwriteValue = {};
          var targetValue = {};
          // Overwrite块 property
          if (flatOverwrite.properties) {
            // 只要Overwrite中有此Property，即在Overwrite块编码
            for (var _i = 0, _a = flatOverwrite.properties; _i < _a.length; _i++) {
              var property = _a[_i];
              // undefined不编码，跳过SkipFIelds
              if (value[property.name] !== undefined && !skipFields[property.name]) {
                overwriteValue[property.name] = value[property.name];
                skipFields[property.name] = 1;
              }
            }
          }
          // Target块 property
          if (flatTarget.properties) {
            for (var _b = 0, _c = flatTarget.properties; _b < _c.length; _b++) {
              var property = _c[_b];
              // undefined不编码，跳过SkipFields
              if (value[property.name] !== undefined && !skipFields[property.name]) {
                targetValue[property.name] = value[property.name];
                skipFields[property.name] = 1;
              }
            }
          }
          // indexSignature
          var indexSignatureWriteValue; // indexSignature要写入的目标（overwrite或target）
          var indexSignature;
          // IndexSignature，优先使用Overwrite的
          if (flatOverwrite.indexSignature) {
            indexSignature = flatOverwrite.indexSignature;
            indexSignatureWriteValue = overwriteValue;
          } else if (flatTarget.indexSignature) {
            indexSignature = flatTarget.indexSignature;
            indexSignatureWriteValue = targetValue;
          }
          if (indexSignature) {
            for (var key in value) {
              if (skipFields[key]) {
                continue;
              }
              indexSignatureWriteValue[key] = value[key];
              skipFields[key] = 1;
            }
          }
          // 编码，此处不再需要SkipFields，因为已经筛选过
          return {
            target: target,
            targetValue: targetValue,
            overwrite: overwrite,
            overwriteValue: overwriteValue
          };
        };
        Encoder.prototype._writeUnion = function (value, schema, skipFields, unionProperties) {
          // 计算unionProperties
          // if (!unionProperties) {
          //     unionProperties = skipFields ? Object.keys(skipFields) : [];
          // }
          // this._validator.protoHelper.getUnionProperties(schema).forEach(v => {
          //     unionProperties!.binaryInsert(v, true);
          // })
          if (skipFields === void 0) {
            skipFields = {};
          }
          // 记住编码起点
          var encodeStartPos = this._writer.ops.length;
          var idNum = 0;
          // null as undefined
          if (this._nullAsUndefined(value, schema)) {
            value = undefined;
          }
          for (var _i = 0, _a = schema.members; _i < _a.length; _i++) {
            var member = _a[_i];
            // 验证该member是否可以编码            
            var vRes = this._validator.validate(value, member.type, {
              // 禁用excessPropertyChecks（以代替unionProperties）
              excessPropertyChecks: false
              // 启用strictNullChecks（null as undefined已经前置处理）
              // strictNullChecks: true
            });

            if (vRes.isSucc) {
              // 编码
              // Part2: ID
              this._writer.push({
                type: 'varint',
                value: Varint64.from(member.id)
              });
              var idPos = this._writer.ops.length - 1;
              // Part3: Payload
              if (member.type.type === 'Union') {
                this._writeUnion(value, member.type, skipFields);
              } else {
                this._write(value, member.type, {
                  skipFields: skipFields
                });
              }
              idNum++;
              this._processIdWithLengthType(idPos, member.type);
              // 非object的value，类型一定互斥，只编码一个足矣
              if (typeof value !== 'object') {
                break;
              }
            }
          }
          // 已经编码
          if (idNum > 0) {
            // 前置ID数量
            this._writer.ops.splice(encodeStartPos, 0, this._writer.req2op({
              type: 'varint',
              value: Varint64.from(idNum)
            }));
            return;
          } else {
            // 未编码，没有任何条件满足，抛出异常
            throw new Error('Non member is satisfied for union type');
          }
        };
        Encoder.prototype._writeIntersection = function (value, schema, skipFields) {
          if (skipFields === void 0) {
            skipFields = {};
          }
          // ID数量（member数量）
          this._writer.push({
            type: 'varint',
            value: Varint64.from(schema.members.length)
          });
          // 按Member依次编码
          for (var _i = 0, _a = schema.members; _i < _a.length; _i++) {
            var member = _a[_i];
            // ID
            this._writer.push({
              type: 'varint',
              value: Varint64.from(member.id)
            });
            var idPos = this._writer.ops.length - 1;
            // 编码块
            this._write(value, member.type, {
              skipFields: skipFields
            });
            this._processIdWithLengthType(idPos, member.type);
          }
        };
        Encoder.prototype._writeBuffer = function (value) {
          // ArrayBuffer 转为Uint8Array
          if (value instanceof ArrayBuffer) {
            this._writer.push({
              type: 'buffer',
              value: new Uint8Array(value)
            });
          }
          // Uint8Array 直接写入
          else if (value instanceof Uint8Array) {
            this._writer.push({
              type: 'buffer',
              value: value
            });
          }
          // 其它TypedArray 转为Uint8Array
          else {
            var key = value.constructor.name;
            var arrType = TypedArrays[key];
            var uint8Arr = new Uint8Array(value.buffer, value.byteOffset, value.length * arrType.BYTES_PER_ELEMENT);
            this._writer.push({
              type: 'buffer',
              value: uint8Arr
            });
          }
        };
        // private _writeIdBlocks(blocks: IDBlockItem[]) {
        //     // 字段数量: Varint
        //     this._writer.push({ type: 'varint', value: Varint64.from(blocks.length) });
        //     // 依次编码
        //     for (let item of blocks) {
        //         // ID
        //         this._writer.push({ type: 'varint', value: Varint64.from(item.id) });
        //         // Payload
        //         this._write(item.value, item.schema)
        //     }
        // }
        /**
         * 重新处理ID位，使其加入末位长度信息2Bit
         * @param idPos
         */
        Encoder.prototype._processIdWithLengthType = function (idPos, payloadType, lengthPrefixPos) {
          var idOp = this._writer.ops[idPos];
          if (idOp.type !== 'varint') {
            throw new Error('Error idPos: ' + idPos);
          }
          // 解引用
          var parsedSchema = this._validator.protoHelper.parseReference(payloadType);
          var lengthInfo = IdBlockUtil.getPayloadLengthInfo(parsedSchema, this._validator.protoHelper);
          var newId = (idOp.value.toNumber() << 2) + lengthInfo.lengthType;
          this._writer.ops[idPos] = this._writer.req2op({
            type: 'varint',
            value: Varint64.from(newId)
          });
          if (lengthInfo.needLengthPrefix) {
            var payloadByteLength = this._writer.ops.filter(function (v, i) {
              return i > idPos;
            }).sum(function (v) {
              return v.length;
            });
            this._writer.ops.splice(lengthPrefixPos == undefined ? idPos + 1 : lengthPrefixPos, 0, this._writer.req2op({
              type: 'varint',
              value: Varint64.from(payloadByteLength)
            }));
          }
        };
        return Encoder;
      }();

      /**
       * @public
       */
      var TSBuffer = exports('TSBuffer', /** @class */function () {
        function TSBuffer(proto, options) {
          /** @internal 默认配置 */
          this._options = {
            excessPropertyChecks: true,
            strictNullChecks: false,
            skipEncodeValidate: false,
            skipDecodeValidate: false,
            cloneProto: true
          };
          // but `options.validatorOptions` has higher priority to validate process (don't affect encode)
          this._options = _assign(_assign({}, this._options), options);
          this._proto = this._options.cloneProto ? Object.merge({}, proto) : proto;
          Object.assign(this._proto, Object.merge({}, options === null || options === void 0 ? void 0 : options.customTypes));
          this._validator = new TSBufferValidator(this._proto, {
            excessPropertyChecks: this._options.excessPropertyChecks,
            strictNullChecks: this._options.strictNullChecks,
            cloneProto: false
          });
          this.validate = this._validator.validate.bind(this._validator);
          this.prune = this._validator.prune.bind(this._validator);
          this._encoder = new Encoder({
            validator: this._validator,
            // if !strictNullChecks, then encoder can convert null to undefined
            nullAsUndefined: !this._options.strictNullChecks
          });
          this._decoder = new Decoder({
            validator: this._validator,
            // if !strictNullChecks, then decoder can convert undefined to null
            undefinedAsNull: !this._options.strictNullChecks
          });
        }
        /**
         * 编码
         * @param value - 要编码的值
         * @param schemaOrId - Schema 或 SchemaID，例如`a/b.ts`下的`Test`类型，其ID为`a/b/Test`
         */
        TSBuffer.prototype.encode = function (value, schemaOrId, options) {
          var _a;
          var schema;
          if (typeof schemaOrId === 'string') {
            schema = this._proto[schemaOrId];
            if (!schema) {
              return {
                isSucc: false,
                errMsg: "Cannot find schema\uFF1A ".concat(schemaOrId)
              };
            }
          } else {
            schema = schemaOrId;
          }
          // validate before encode
          if (!((_a = options === null || options === void 0 ? void 0 : options.skipValidate) !== null && _a !== void 0 ? _a : this._options.skipEncodeValidate)) {
            var vRes = this._validator.validate(value, schema, {
              // 禁用excessPropertyChecks，因为不会编码excess property
              excessPropertyChecks: false
            });
            if (!vRes.isSucc) {
              return vRes;
            }
          }
          var buf;
          try {
            buf = this._encoder.encode(value, schema);
          } catch (e) {
            return {
              isSucc: false,
              errMsg: e.message
            };
          }
          return {
            isSucc: true,
            buf: buf
          };
        };
        /**
         * 解码
         * @param buf - 待解码的二进制数据
         * @param schemaOrId - Schema 或 SchemaID，例如`a/b.ts`下的`Test`类型，其ID为`a/b/Test`
         */
        TSBuffer.prototype.decode = function (buf, schemaOrId, options) {
          var _a;
          var schema;
          if (typeof schemaOrId === 'string') {
            schema = this._proto[schemaOrId];
            if (!schema) {
              return {
                isSucc: false,
                errMsg: "Cannot find schema\uFF1A ".concat(schemaOrId),
                errPhase: undefined
              };
            }
          } else {
            schema = schemaOrId;
          }
          var value;
          try {
            value = this._decoder.decode(buf, schema);
          } catch (e) {
            return {
              isSucc: false,
              errMsg: e.message,
              errPhase: 'decode'
            };
          }
          if (!((_a = options === null || options === void 0 ? void 0 : options.skipValidate) !== null && _a !== void 0 ? _a : this._options.skipDecodeValidate)) {
            var vRes = this._validator.validate(value, schema);
            if (!vRes.isSucc) {
              return _assign(_assign({}, vRes), {
                errPhase: 'validate'
              });
            }
          }
          return {
            isSucc: true,
            value: value
          };
        };
        /**
         * 编码为 JSON Object，根据协议将 JSON 不支持的格式（如 ArrayBuffer、Date、ObjectId）转换成 JSON 可传输的格式
         * @param value
         * @param schemaOrId
         * @param options
         */
        TSBuffer.prototype.encodeJSON = function (value, schemaOrId, options) {
          var _a;
          var schema;
          if (typeof schemaOrId === 'string') {
            schema = this._proto[schemaOrId];
            if (!schema) {
              return {
                isSucc: false,
                errMsg: "Cannot find schema\uFF1A ".concat(schemaOrId)
              };
            }
          } else {
            schema = schemaOrId;
          }
          // validate before encode
          if (!((_a = options === null || options === void 0 ? void 0 : options.skipValidate) !== null && _a !== void 0 ? _a : this._options.skipEncodeValidate)) {
            var vRes = this._validator.prune(value, schema);
            if (!vRes.isSucc) {
              return vRes;
            }
            value = vRes.pruneOutput;
          }
          // TODO schema 里没有 Buffer 和 Custom 的自动跳过
          var json;
          try {
            json = this._encoder.encodeJSON(value, schema);
          } catch (e) {
            return {
              isSucc: false,
              errMsg: e.message
            };
          }
          return {
            isSucc: true,
            json: json
          };
        };
        /**
         * 从 JSON Object 解码，根据协议将 ArrayBuffer、Date、ObjectId 等类型从 JSON 中还原
         * @param json - JSON Object (是 JSON 对象，而非 JSON 字符串)
         * @param schemaOrId
         * @param options
         */
        TSBuffer.prototype.decodeJSON = function (json, schemaOrId, options) {
          var _a;
          var schema;
          if (typeof schemaOrId === 'string') {
            schema = this._proto[schemaOrId];
            if (!schema) {
              return {
                isSucc: false,
                errMsg: "Cannot find schema\uFF1A ".concat(schemaOrId),
                errPhase: undefined
              };
            }
          } else {
            schema = schemaOrId;
          }
          // TODO schema 里没有 Buffer 和 Custom 的自动跳过
          var value;
          try {
            value = this._decoder.decodeJSON(json, schema);
          } catch (e) {
            return {
              isSucc: false,
              errMsg: e.message,
              errPhase: 'decode'
            };
          }
          if (!((_a = options === null || options === void 0 ? void 0 : options.skipValidate) !== null && _a !== void 0 ? _a : this._options.skipDecodeValidate)) {
            var vRes = this._validator.prune(value, schema);
            if (!vRes.isSucc) {
              vRes.errPhase = 'validate';
              return vRes;
            }
            return {
              isSucc: true,
              value: vRes.pruneOutput
            };
          }
          return {
            isSucc: true,
            value: value
          };
        };
        return TSBuffer;
      }());
    }
  };
});

System.register("chunks:///_virtual/index7.mjs", [], function (exports) {
  return {
    execute: function () {
      /*!
       * TSBuffer Schema v2.2.0
       * -----------------------------------------
       * MIT LICENSE
       * KingWorks (C) Copyright 2022
       * https://github.com/k8w/tsbuffer-schema
       */
      /**
       * Enum for every possible `TSBufferSchema['type']`
       */
      var SchemaType = exports('SchemaType', /** @class */function () {
        function SchemaType() {}
        // #region 确定的TypeScript的类型
        SchemaType.Boolean = 'Boolean';
        SchemaType.Number = 'Number';
        SchemaType.String = 'String';
        SchemaType.Array = 'Array';
        SchemaType.Tuple = 'Tuple';
        SchemaType.Enum = 'Enum';
        SchemaType.Any = 'Any';
        SchemaType.Literal = 'Literal';
        SchemaType.Object = 'Object';
        SchemaType.Interface = 'Interface';
        SchemaType.Buffer = 'Buffer';
        SchemaType.IndexedAccess = 'IndexedAccess';
        SchemaType.Reference = 'Reference';
        SchemaType.Keyof = 'Keyof';
        SchemaType.Union = 'Union';
        SchemaType.Intersection = 'Intersection';
        SchemaType.NonNullable = 'NonNullable';
        SchemaType.Date = 'Date';
        // #endregion
        // #region 非TypeScript基本类型，临时过渡用
        SchemaType.Pick = 'Pick';
        SchemaType.Partial = 'Partial';
        SchemaType.Omit = 'Omit';
        SchemaType.Overwrite = 'Overwrite';
        // #endregion
        SchemaType.Custom = 'Custom';
        return SchemaType;
      }());
    }
  };
});

System.register("chunks:///_virtual/index8.mjs", ['./index3.mjs', './tslib.es6.mjs', './index7.mjs'], function (exports) {
  var _assign, SchemaType;
  return {
    setters: [null, function (module) {
      _assign = module.__assign;
    }, function (module) {
      SchemaType = module.SchemaType;
    }],
    execute: function () {
      /*!
       * TSBuffer Validator v2.1.2
       * -----------------------------------------
       * MIT LICENSE
       * KingWorks (C) Copyright 2023
       * https://github.com/k8w/tsbuffer-validator
       */
      var ProtoHelper = exports('ProtoHelper', /** @class */function () {
        function ProtoHelper(proto) {
          this._schemaWithUuids = [];
          this._unionPropertiesCache = {};
          this._flatInterfaceSchemaCache = {};
          this._parseMappedTypeCache = new WeakMap();
          this.proto = proto;
        }
        /** 将ReferenceTypeSchema层层转换为它最终实际引用的类型 */
        ProtoHelper.prototype.parseReference = function (schema) {
          // Reference
          if (schema.type === SchemaType.Reference) {
            var parsedSchema = this.proto[schema.target];
            if (!parsedSchema) {
              throw new Error("Cannot find reference target: ".concat(schema.target));
            }
            if (this.isTypeReference(parsedSchema)) {
              return this.parseReference(parsedSchema);
            } else {
              return parsedSchema;
            }
          }
          // IndexedAccess
          else if (schema.type === SchemaType.IndexedAccess) {
            if (!this.isInterface(schema.objectType)) {
              throw new Error("Error objectType: ".concat(schema.objectType.type));
            }
            // find prop item
            var flat = this.getFlatInterfaceSchema(schema.objectType);
            var propItem = flat.properties.find(function (v) {
              return v.name === schema.index;
            });
            var propType = void 0;
            if (propItem) {
              propType = propItem.type;
            } else {
              if (flat.indexSignature) {
                propType = flat.indexSignature.type;
              } else {
                throw new Error("Error index: ".concat(schema.index));
              }
            }
            // optional -> | undefined
            if (propItem && propItem.optional && (
            // 引用的字段是optional
            propItem.type.type !== SchemaType.Union // 自身不为Union
            // 或自身为Union，但没有undefined成员条件
            || propItem.type.members.findIndex(function (v) {
              return v.type.type === SchemaType.Literal && v.type.literal === undefined;
            }) === -1)) {
              propType = {
                type: SchemaType.Union,
                members: [{
                  id: 0,
                  type: propType
                }, {
                  id: 1,
                  type: {
                    type: SchemaType.Literal,
                    literal: undefined
                  }
                }]
              };
            }
            return this.isTypeReference(propType) ? this.parseReference(propType) : propType;
          } else if (schema.type === SchemaType.Keyof) {
            var flatInterface = this.getFlatInterfaceSchema(schema.target);
            return {
              type: SchemaType.Union,
              members: flatInterface.properties.map(function (v, i) {
                return {
                  id: i,
                  type: {
                    type: SchemaType.Literal,
                    literal: v.name
                  }
                };
              })
            };
          } else {
            return schema;
          }
        };
        ProtoHelper.prototype.isInterface = function (schema, excludeReference) {
          if (excludeReference === void 0) {
            excludeReference = false;
          }
          if (!excludeReference && this.isTypeReference(schema)) {
            var parsed = this.parseReference(schema);
            return this.isInterface(parsed, excludeReference);
          } else {
            return schema.type === SchemaType.Interface || this.isMappedType(schema) && this.parseMappedType(schema).type === SchemaType.Interface;
          }
        };
        ProtoHelper.prototype.isMappedType = function (schema) {
          return schema.type === SchemaType.Pick || schema.type === SchemaType.Partial || schema.type === SchemaType.Omit || schema.type === SchemaType.Overwrite;
        };
        ProtoHelper.prototype.isTypeReference = function (schema) {
          return schema.type === SchemaType.Reference || schema.type === SchemaType.IndexedAccess || schema.type === SchemaType.Keyof;
        };
        ProtoHelper.prototype._getSchemaUuid = function (schema) {
          var schemaWithUuid = schema;
          if (!schemaWithUuid.uuid) {
            schemaWithUuid.uuid = this._schemaWithUuids.push(schemaWithUuid);
          }
          return schemaWithUuid.uuid;
        };
        ProtoHelper.prototype.getUnionProperties = function (schema) {
          var uuid = this._getSchemaUuid(schema);
          if (!this._unionPropertiesCache[uuid]) {
            this._unionPropertiesCache[uuid] = this._addUnionProperties([], schema.members.map(function (v) {
              return v.type;
            }));
          }
          return this._unionPropertiesCache[uuid];
        };
        /**
         * unionProperties: 在Union或Intersection类型中，出现在任意member中的字段
         */
        ProtoHelper.prototype._addUnionProperties = function (unionProperties, schemas) {
          for (var i = 0, len = schemas.length; i < len; ++i) {
            var schema = this.parseReference(schemas[i]);
            // Interface及其Ref 加入interfaces
            if (this.isInterface(schema)) {
              var flat = this.getFlatInterfaceSchema(schema);
              flat.properties.forEach(function (v) {
                unionProperties.binaryInsert(v.name, true);
              });
              if (flat.indexSignature) {
                var key = "[[".concat(flat.indexSignature.keyType, "]]");
                unionProperties.binaryInsert(key, true);
              }
            }
            // Intersection/Union 递归合并unionProperties
            else if (schema.type === SchemaType.Intersection || schema.type === SchemaType.Union) {
              this._addUnionProperties(unionProperties, schema.members.map(function (v) {
                return v.type;
              }));
            } else if (this.isMappedType(schema)) {
              this._addUnionProperties(unionProperties, [this.parseMappedType(schema)]);
            }
          }
          return unionProperties;
        };
        /**
         * 将unionProperties 扩展到 InterfaceTypeSchema中（optional的any类型）
         * 以此来跳过对它们的检查（用于Intersection/Union）
         */
        ProtoHelper.prototype.applyUnionProperties = function (schema, unionProperties) {
          var newSchema = _assign(_assign({}, schema), {
            properties: schema.properties.slice()
          });
          var _loop_1 = function _loop_1(prop) {
            if (prop === '[[String]]') {
              newSchema.indexSignature = newSchema.indexSignature || {
                keyType: SchemaType.String,
                type: {
                  type: SchemaType.Any
                }
              };
            } else if (prop === '[[Number]]') {
              newSchema.indexSignature = newSchema.indexSignature || {
                keyType: SchemaType.Number,
                type: {
                  type: SchemaType.Any
                }
              };
            } else if (!schema.properties.find(function (v) {
              return v.name === prop;
            })) {
              newSchema.properties.push({
                id: -1,
                name: prop,
                optional: true,
                type: {
                  type: SchemaType.Any
                }
              });
            }
          };
          for (var _i = 0, unionProperties_1 = unionProperties; _i < unionProperties_1.length; _i++) {
            var prop = unionProperties_1[_i];
            _loop_1(prop);
          }
          return newSchema;
        };
        /**
         * 将interface及其引用转换为展平的schema
         */
        ProtoHelper.prototype.getFlatInterfaceSchema = function (schema) {
          var uuid = this._getSchemaUuid(schema);
          // from cache
          if (this._flatInterfaceSchemaCache[uuid]) {
            return this._flatInterfaceSchemaCache[uuid];
          }
          if (this.isTypeReference(schema)) {
            var parsed = this.parseReference(schema);
            if (parsed.type !== SchemaType.Interface) {
              throw new Error("Cannot flatten non interface type: ".concat(parsed.type));
            }
            this._flatInterfaceSchemaCache[uuid] = this.getFlatInterfaceSchema(parsed);
          } else if (schema.type === SchemaType.Interface) {
            this._flatInterfaceSchemaCache[uuid] = this._flattenInterface(schema);
          } else if (this.isMappedType(schema)) {
            this._flatInterfaceSchemaCache[uuid] = this._flattenMappedType(schema);
          } else {
            // @ts-expect-error
            throw new Error('Invalid interface type: ' + schema.type);
          }
          return this._flatInterfaceSchemaCache[uuid];
        };
        /**
         * 展平interface
         */
        ProtoHelper.prototype._flattenInterface = function (schema) {
          var properties = {};
          var indexSignature;
          // 自身定义的properties和indexSignature优先级最高
          if (schema.properties) {
            for (var _i = 0, _a = schema.properties; _i < _a.length; _i++) {
              var prop = _a[_i];
              properties[prop.name] = {
                optional: prop.optional,
                type: prop.type
              };
            }
          }
          if (schema.indexSignature) {
            indexSignature = schema.indexSignature;
          }
          // extends的优先级次之，补全没有定义的字段
          if (schema["extends"]) {
            for (var _b = 0, _c = schema["extends"]; _b < _c.length; _b++) {
              var extend = _c[_b];
              // 解引用
              var parsedExtRef = this.parseReference(extend.type);
              if (this.isMappedType(parsedExtRef)) {
                parsedExtRef = this._flattenMappedType(parsedExtRef);
              }
              if (!this.isInterface(parsedExtRef)) {
                throw new Error('SchemaError: extends must from interface but from ' + parsedExtRef.type);
              }
              // 递归展平extends
              var flatenExtendsSchema = this.getFlatInterfaceSchema(parsedExtRef);
              // properties
              if (flatenExtendsSchema.properties) {
                for (var _d = 0, _e = flatenExtendsSchema.properties; _d < _e.length; _d++) {
                  var prop = _e[_d];
                  if (!properties[prop.name]) {
                    properties[prop.name] = {
                      optional: prop.optional,
                      type: prop.type
                    };
                  }
                }
              }
              // indexSignature
              if (flatenExtendsSchema.indexSignature && !indexSignature) {
                indexSignature = flatenExtendsSchema.indexSignature;
              }
            }
          }
          return {
            type: SchemaType.Interface,
            properties: Object.entries(properties).map(function (v, i) {
              return {
                id: i,
                name: v[0],
                optional: v[1].optional,
                type: v[1].type
              };
            }),
            indexSignature: indexSignature
          };
        };
        /** 将MappedTypeSchema转换为展平的Interface
         */
        ProtoHelper.prototype._flattenMappedType = function (schema) {
          // target 解引用
          var target;
          if (this.isTypeReference(schema.target)) {
            var parsed = this.parseReference(schema.target);
            target = parsed;
          } else {
            target = schema.target;
          }
          var flatTarget;
          // 内层仍然为MappedType 递归之
          if (target.type === SchemaType.Pick || target.type === SchemaType.Partial || target.type === SchemaType.Omit || target.type === SchemaType.Overwrite) {
            flatTarget = this._flattenMappedType(target);
          } else if (target.type === SchemaType.Interface) {
            flatTarget = this._flattenInterface(target);
          } else {
            throw new Error("Invalid target.type: ".concat(target.type));
          }
          // 开始执行Mapped逻辑
          if (schema.type === SchemaType.Pick) {
            var properties = [];
            var _loop_2 = function _loop_2(key) {
              var propItem = flatTarget.properties.find(function (v) {
                return v.name === key;
              });
              if (propItem) {
                properties.push({
                  id: properties.length,
                  name: key,
                  optional: propItem.optional,
                  type: propItem.type
                });
              } else if (flatTarget.indexSignature) {
                properties.push({
                  id: properties.length,
                  name: key,
                  type: flatTarget.indexSignature.type
                });
              }
            };
            for (var _i = 0, _a = schema.keys; _i < _a.length; _i++) {
              var key = _a[_i];
              _loop_2(key);
            }
            return {
              type: SchemaType.Interface,
              properties: properties
            };
          } else if (schema.type === SchemaType.Partial) {
            for (var _b = 0, _c = flatTarget.properties; _b < _c.length; _b++) {
              var v = _c[_b];
              v.optional = true;
            }
            return flatTarget;
          } else if (schema.type === SchemaType.Omit) {
            var _loop_3 = function _loop_3(key) {
              flatTarget.properties.removeOne(function (v) {
                return v.name === key;
              });
            };
            for (var _d = 0, _e = schema.keys; _d < _e.length; _d++) {
              var key = _e[_d];
              _loop_3(key);
            }
            return flatTarget;
          } else if (schema.type === SchemaType.Overwrite) {
            var overwrite = this.getFlatInterfaceSchema(schema.overwrite);
            if (overwrite.indexSignature) {
              flatTarget.indexSignature = overwrite.indexSignature;
            }
            var _loop_4 = function _loop_4(prop) {
              flatTarget.properties.removeOne(function (v) {
                return v.name === prop.name;
              });
              flatTarget.properties.push(prop);
            };
            for (var _f = 0, _g = overwrite.properties; _f < _g.length; _f++) {
              var prop = _g[_f];
              _loop_4(prop);
            }
            return flatTarget;
          } else {
            throw new Error("Unknown type: ".concat(schema.type));
          }
        };
        ProtoHelper.prototype.parseMappedType = function (schema) {
          var cache = this._parseMappedTypeCache.get(schema);
          if (cache) {
            return cache;
          }
          // 解嵌套，例如：Pick<Pick<Omit, XXX, 'a'|'b'>>>
          var parents = [];
          var child = schema;
          do {
            parents.push(child);
            child = this.parseReference(child.target);
          } while (this.isMappedType(child));
          // 最内层是 interface，直接返回（validator 会验证 key 匹配）
          if (child.type === SchemaType.Interface) {
            this._parseMappedTypeCache.set(schema, child);
            return child;
          }
          // PickOmit<A|B> === PickOmit<A> | PickOmit<B>
          else if (child.type === SchemaType.Union || child.type === SchemaType.Intersection) {
            var newSchema = {
              type: child.type,
              members: child.members.map(function (v) {
                // 从里面往外装
                var type = v.type;
                for (var i = parents.length - 1; i > -1; --i) {
                  var parent_1 = parents[i];
                  type = _assign(_assign({}, parent_1), {
                    target: type
                  });
                }
                return {
                  id: v.id,
                  type: type
                };
              })
            };
            this._parseMappedTypeCache.set(schema, newSchema);
            return newSchema;
          } else {
            throw new Error("Unsupported pattern ".concat(schema.type, "<").concat(child.type, ">"));
          }
        };
        return ProtoHelper;
      }());
      var _a;
      /** @internal */
      var ErrorType;
      (function (ErrorType) {
        ErrorType["TypeError"] = "TypeError";
        ErrorType["InvalidScalarType"] = "InvalidScalarType";
        ErrorType["TupleOverLength"] = "TupleOverLength";
        ErrorType["InvalidEnumValue"] = "InvalidEnumValue";
        ErrorType["InvalidLiteralValue"] = "InvalidLiteralValue";
        ErrorType["MissingRequiredProperty"] = "MissingRequiredProperty";
        ErrorType["ExcessProperty"] = "ExcessProperty";
        ErrorType["InvalidNumberKey"] = "InvalidNumberKey";
        ErrorType["UnionTypesNotMatch"] = "UnionTypesNotMatch";
        ErrorType["UnionMembersNotMatch"] = "UnionMembersNotMatch";
        ErrorType["CustomError"] = "CustomError";
      })(ErrorType || (ErrorType = {}));
      /** @internal */
      var ErrorMsg = (_a = {}, _a[ErrorType.TypeError] = function (expect, actual) {
        return "Expected type to be `".concat(expect, "`, actually `").concat(actual, "`.");
      }, _a[ErrorType.InvalidScalarType] = function (value, scalarType) {
        return "`".concat(value, "` is not a valid `").concat(scalarType, "`.");
      }, _a[ErrorType.TupleOverLength] = function (valueLength, schemaLength) {
        return "Value has ".concat(valueLength, " elements but schema allows only ").concat(schemaLength, ".");
      }, _a[ErrorType.InvalidEnumValue] = function (value) {
        return "`".concat(value, "` is not a valid enum member.");
      }, _a[ErrorType.InvalidLiteralValue] = function (expected, actual) {
        return "Expected to equals `".concat(stringify(expected), "`, actually `").concat(stringify(actual), "`");
      }, _a[ErrorType.MissingRequiredProperty] = function (propName) {
        return "Missing required property `".concat(propName, "`.");
      }, _a[ErrorType.ExcessProperty] = function (propName) {
        return "Excess property `".concat(propName, "` should not exists.");
      }, _a[ErrorType.InvalidNumberKey] = function (key) {
        return "`".concat(key, "` is not a valid key, the key here should be a `number`.");
      },
      // Union
      _a[ErrorType.UnionTypesNotMatch] = function (value, types) {
        return "`".concat(stringify(value), "` is not matched to `").concat(types.join(' | '), "`");
      }, _a[ErrorType.UnionMembersNotMatch] = function (memberErrors) {
        return "No union member matched, detail:\n".concat(memberErrors.map(function (v, i) {
          return "  <".concat(i, "> ").concat(v.errMsg);
        }).join('\n'));
      }, _a[ErrorType.CustomError] = function (errMsg) {
        return errMsg;
      }, _a);
      /** @internal */
      function stringify(value) {
        if (typeof value === 'string') {
          var output = JSON.stringify(value);
          return "'" + output.substr(1, output.length - 2) + "'";
        }
        return JSON.stringify(value);
      }

      /** @internal */
      var ValidateResultError = /** @class */function () {
        function ValidateResultError(error) {
          this.isSucc = false;
          this.error = error;
        }
        Object.defineProperty(ValidateResultError.prototype, "errMsg", {
          get: function get() {
            return ValidateResultError.getErrMsg(this.error);
          },
          enumerable: false,
          configurable: true
        });
        ValidateResultError.getErrMsg = function (error) {
          var _a;
          var errMsg = ErrorMsg[error.type].apply(ErrorMsg, error.params);
          if ((_a = error.inner) === null || _a === void 0 ? void 0 : _a.property.length) {
            return "Property `".concat(error.inner.property.join('.'), "`: ").concat(errMsg);
          } else {
            return errMsg;
          }
        };
        return ValidateResultError;
      }();
      /** @internal  */
      var ValidateResultUtil = /** @class */function () {
        function ValidateResultUtil() {}
        ValidateResultUtil.error = function (type) {
          var params = [];
          for (var _i = 1; _i < arguments.length; _i++) {
            params[_i - 1] = arguments[_i];
          }
          return new ValidateResultError({
            type: type,
            params: params
          });
        };
        ValidateResultUtil.innerError = function (property, value, schema, error) {
          var _a;
          if (error.error.inner) {
            if (typeof property === 'string') {
              error.error.inner.property.unshift(property);
            } else {
              (_a = error.error.inner.property).unshift.apply(_a, property);
            }
          } else {
            error.error.inner = {
              property: typeof property === 'string' ? [property] : property,
              value: value,
              schema: schema
            };
          }
          return error;
        };
        ValidateResultUtil.succ = {
          isSucc: true
        };
        return ValidateResultUtil;
      }();
      var typedArrays = {
        Int8Array: Int8Array,
        Int16Array: Int16Array,
        Int32Array: Int32Array,
        BigInt64Array: typeof BigInt64Array !== 'undefined' ? BigInt64Array : undefined,
        Uint8Array: Uint8Array,
        Uint16Array: Uint16Array,
        Uint32Array: Uint32Array,
        BigUint64Array: typeof BigUint64Array !== 'undefined' ? BigUint64Array : undefined,
        Float32Array: Float32Array,
        Float64Array: Float64Array
      };
      /**
       * TSBuffer Schema Validator
       * @public
       */
      var TSBufferValidator = exports('TSBufferValidator', /** @class */function () {
        function TSBufferValidator(proto, options) {
          /**
           * Default options
           */
          this.options = {
            excessPropertyChecks: true,
            strictNullChecks: false,
            cloneProto: true
          };
          if (options) {
            this.options = _assign(_assign({}, this.options), options);
          }
          this.proto = this.options.cloneProto ? Object.merge({}, proto) : proto;
          this.protoHelper = new ProtoHelper(this.proto);
        }
        /**
         * Validate whether the value is valid to the schema
         * @param value - Value to be validated.
         * @param schemaId - Schema or schema ID.
         * For example, the schema ID for type `Test` in `a/b.ts` may be `a/b/Test`.
         */
        TSBufferValidator.prototype.validate = function (value, schemaOrId, options) {
          var _a, _b;
          var schema;
          var schemaId;
          // Get schema
          if (typeof schemaOrId === 'string') {
            schemaId = schemaOrId;
            schema = this.proto[schemaId];
            if (!schema) {
              throw new Error("Cannot find schema: ".concat(schemaId));
            }
          } else {
            schema = schemaOrId;
          }
          // Merge default options
          return this._validate(value, schema, _assign(_assign({}, options), {
            excessPropertyChecks: (_a = options === null || options === void 0 ? void 0 : options.excessPropertyChecks) !== null && _a !== void 0 ? _a : this.options.excessPropertyChecks,
            strictNullChecks: (_b = options === null || options === void 0 ? void 0 : options.strictNullChecks) !== null && _b !== void 0 ? _b : this.options.strictNullChecks
          }));
        };
        TSBufferValidator.prototype._validate = function (value, schema, options) {
          var _a;
          var vRes;
          // Validate
          switch (schema.type) {
            case SchemaType.Boolean:
              vRes = this._validateBooleanType(value, schema);
              break;
            case SchemaType.Number:
              vRes = this._validateNumberType(value, schema);
              break;
            case SchemaType.String:
              vRes = this._validateStringType(value, schema);
              break;
            case SchemaType.Array:
              vRes = this._validateArrayType(value, schema, options);
              break;
            case SchemaType.Tuple:
              vRes = this._validateTupleType(value, schema, options);
              break;
            case SchemaType.Enum:
              vRes = this._validateEnumType(value, schema);
              break;
            case SchemaType.Any:
              vRes = this._validateAnyType(value);
              break;
            case SchemaType.Literal:
              vRes = this._validateLiteralType(value, schema, (_a = options === null || options === void 0 ? void 0 : options.strictNullChecks) !== null && _a !== void 0 ? _a : this.options.strictNullChecks);
              break;
            case SchemaType.Object:
              vRes = this._validateObjectType(value, schema);
              break;
            case SchemaType.Interface:
              vRes = this._validateInterfaceType(value, schema, options);
              break;
            case SchemaType.Buffer:
              vRes = this._validateBufferType(value, schema);
              break;
            case SchemaType.IndexedAccess:
            case SchemaType.Reference:
            case SchemaType.Keyof:
              vRes = this._validateReferenceType(value, schema, options);
              break;
            case SchemaType.Union:
              vRes = this._validateUnionType(value, schema, options);
              break;
            case SchemaType.Intersection:
              vRes = this._validateIntersectionType(value, schema, options);
              break;
            case SchemaType.Pick:
            case SchemaType.Omit:
            case SchemaType.Partial:
            case SchemaType.Overwrite:
              vRes = this._validateMappedType(value, schema, options);
              break;
            case SchemaType.Date:
              vRes = this._validateDateType(value);
              break;
            case SchemaType.NonNullable:
              vRes = this._validateNonNullableType(value, schema, options);
              break;
            case SchemaType.Custom:
              var res = schema.validate(value);
              vRes = res.isSucc ? ValidateResultUtil.succ : ValidateResultUtil.error(ErrorType.CustomError, res.errMsg);
              break;
            // 错误的type
            default:
              // @ts-expect-error
              throw new Error("Unsupported schema type: ".concat(schema.type));
          }
          // prune
          if (options === null || options === void 0 ? void 0 : options.prune) {
            // don't need prune, return original value
            if (options.prune.output === undefined) {
              options.prune.output = value;
            }
            // output to parent
            if (options.prune.parent) {
              options.prune.parent.value[options.prune.parent.key] = options.prune.output;
            }
          }
          return vRes;
        };
        /**
         * 修剪 Object，移除 Schema 中未定义的 Key
         * 需要确保 value 类型合法
         * @param value - value to be validated
         * @param schemaOrId -Schema or schema ID.
         * @returns Validate result and pruned value. if validate failed, `pruneOutput` would be undefined.
         */
        TSBufferValidator.prototype.prune = function (value, schemaOrId, options) {
          var _a;
          var schema = typeof schemaOrId === 'string' ? this.proto[schemaOrId] : schemaOrId;
          if (!schema) {
            throw new Error('Cannot find schema: ' + schemaOrId);
          }
          var prune = {};
          var vRes = this._validate(value, schema, _assign(_assign({}, options), {
            prune: prune,
            excessPropertyChecks: false,
            strictNullChecks: (_a = options === null || options === void 0 ? void 0 : options.strictNullChecks) !== null && _a !== void 0 ? _a : this.options.strictNullChecks
          }));
          if (vRes.isSucc) {
            vRes.pruneOutput = prune.output;
          }
          return vRes;
        };
        TSBufferValidator.prototype._validateBooleanType = function (value, schema) {
          var type = this._getTypeof(value);
          if (type === 'boolean') {
            return ValidateResultUtil.succ;
          } else {
            return ValidateResultUtil.error(ErrorType.TypeError, 'boolean', type);
          }
        };
        TSBufferValidator.prototype._validateNumberType = function (value, schema) {
          // 默认为double
          var scalarType = schema.scalarType || 'double';
          // Wrong Type
          var type = this._getTypeof(value);
          var rightType = scalarType.indexOf('big') > -1 ? 'bigint' : 'number';
          if (type !== rightType) {
            return ValidateResultUtil.error(ErrorType.TypeError, rightType, type);
          }
          // scalarType类型检测
          // 整形却为小数
          if (scalarType !== 'double' && type === 'number' && !Number.isInteger(value)) {
            return ValidateResultUtil.error(ErrorType.InvalidScalarType, value, scalarType);
          }
          // 无符号整形却为负数
          if (scalarType.indexOf('uint') > -1 && value < 0) {
            return ValidateResultUtil.error(ErrorType.InvalidScalarType, value, scalarType);
          }
          return ValidateResultUtil.succ;
        };
        TSBufferValidator.prototype._validateStringType = function (value, schema) {
          var type = this._getTypeof(value);
          return type === 'string' ? ValidateResultUtil.succ : ValidateResultUtil.error(ErrorType.TypeError, 'string', type);
        };
        TSBufferValidator.prototype._validateArrayType = function (value, schema, options) {
          // is Array type
          var type = this._getTypeof(value);
          if (type !== SchemaType.Array) {
            return ValidateResultUtil.error(ErrorType.TypeError, SchemaType.Array, type);
          }
          // prune output
          var prune = options.prune;
          if (prune) {
            prune.output = Array.from({
              length: value.length
            });
          }
          // validate elementType
          for (var i = 0; i < value.length; ++i) {
            var elemValidateResult = this._validate(value[i], schema.elementType, _assign(_assign({}, options), {
              prune: (prune === null || prune === void 0 ? void 0 : prune.output) ? {
                parent: {
                  value: prune.output,
                  key: i
                }
              } : undefined
            }));
            if (!elemValidateResult.isSucc) {
              return ValidateResultUtil.innerError('' + i, value[i], schema.elementType, elemValidateResult);
            }
          }
          return ValidateResultUtil.succ;
        };
        TSBufferValidator.prototype._validateTupleType = function (value, schema, options) {
          // is Array type
          var type = this._getTypeof(value);
          if (type !== SchemaType.Array) {
            return ValidateResultUtil.error(ErrorType.TypeError, SchemaType.Array, type);
          }
          var prune = options.prune;
          // validate length
          // excessPropertyChecks 与 prune互斥
          if (!prune && options.excessPropertyChecks && value.length > schema.elementTypes.length) {
            return ValidateResultUtil.error(ErrorType.TupleOverLength, value.length, schema.elementTypes.length);
          }
          // prune output
          if (prune) {
            prune.output = Array.from({
              length: Math.min(value.length, schema.elementTypes.length)
            });
          }
          // validate elementType
          for (var i = 0; i < schema.elementTypes.length; ++i) {
            // MissingRequiredProperty: NotOptional && is undefined
            if (value[i] === undefined || value[i] === null && !options.strictNullChecks) {
              var canBeNull = this._canBeNull(schema.elementTypes[i]);
              var canBeUndefined = schema.optionalStartIndex !== undefined && i >= schema.optionalStartIndex || this._canBeUndefined(schema.elementTypes[i]);
              var isOptional = canBeUndefined || !options.strictNullChecks && canBeNull;
              // skip undefined property
              if (isOptional) {
                // Prune null & undefined->null
                if (prune === null || prune === void 0 ? void 0 : prune.output) {
                  if (value[i] === null && canBeNull || value[i] === undefined && !canBeUndefined && canBeNull) {
                    prune.output[i] = null;
                  }
                }
                continue;
              } else {
                return ValidateResultUtil.error(ErrorType.MissingRequiredProperty, i);
              }
            }
            // element type check
            var elemValidateResult = this._validate(value[i], schema.elementTypes[i], {
              prune: (prune === null || prune === void 0 ? void 0 : prune.output) ? {
                parent: {
                  value: prune.output,
                  key: i
                }
              } : undefined,
              strictNullChecks: options.strictNullChecks,
              excessPropertyChecks: options.excessPropertyChecks
            });
            if (!elemValidateResult.isSucc) {
              return ValidateResultUtil.innerError('' + i, value[i], schema.elementTypes[i], elemValidateResult);
            }
          }
          return ValidateResultUtil.succ;
        };
        TSBufferValidator.prototype._canBeUndefined = function (schema) {
          var _this = this;
          if (schema.type === SchemaType.Union) {
            return schema.members.some(function (v) {
              return _this._canBeUndefined(v.type);
            });
          }
          if (schema.type === SchemaType.Literal && schema.literal === undefined) {
            return true;
          }
          return false;
        };
        TSBufferValidator.prototype._canBeNull = function (schema) {
          var _this = this;
          if (schema.type === SchemaType.Union) {
            return schema.members.some(function (v) {
              return _this._canBeNull(v.type);
            });
          }
          if (schema.type === SchemaType.Literal && schema.literal === null) {
            return true;
          }
          return false;
        };
        TSBufferValidator.prototype._validateEnumType = function (value, schema) {
          // must be string or number
          var type = this._getTypeof(value);
          if (type !== 'string' && type !== 'number') {
            return ValidateResultUtil.error(ErrorType.TypeError, 'string | number', type);
          }
          // 有值与预设相同
          if (schema.members.some(function (v) {
            return v.value === value;
          })) {
            return ValidateResultUtil.succ;
          } else {
            return ValidateResultUtil.error(ErrorType.InvalidEnumValue, value);
          }
        };
        TSBufferValidator.prototype._validateAnyType = function (value) {
          return ValidateResultUtil.succ;
        };
        TSBufferValidator.prototype._validateLiteralType = function (value, schema, strictNullChecks) {
          // 非strictNullChecks严格模式，null undefined同等对待
          if (!strictNullChecks && (schema.literal === null || schema.literal === undefined)) {
            return value === null || value === undefined ? ValidateResultUtil.succ : ValidateResultUtil.error(ErrorType.InvalidLiteralValue, schema.literal, value);
          }
          return value === schema.literal ? ValidateResultUtil.succ : ValidateResultUtil.error(ErrorType.InvalidLiteralValue, schema.literal, value);
        };
        TSBufferValidator.prototype._validateObjectType = function (value, schema) {
          var type = this._getTypeof(value);
          return type === 'Object' || type === 'Array' ? ValidateResultUtil.succ : ValidateResultUtil.error(ErrorType.TypeError, 'Object', type);
        };
        TSBufferValidator.prototype._validateInterfaceType = function (value, schema, options) {
          var type = this._getTypeof(value);
          if (type !== 'Object') {
            return ValidateResultUtil.error(ErrorType.TypeError, 'Object', type);
          }
          // 先展平
          var flatSchema = this.protoHelper.getFlatInterfaceSchema(schema);
          // From union or intersecton type
          if (options.unionProperties) {
            flatSchema = this.protoHelper.applyUnionProperties(flatSchema, options.unionProperties);
          }
          return this._validateFlatInterface(value, flatSchema, options);
        };
        TSBufferValidator.prototype._validateMappedType = function (value, schema, options) {
          var parsed = this.protoHelper.parseMappedType(schema);
          if (parsed.type === SchemaType.Interface) {
            return this._validateInterfaceType(value, schema, options);
          } else if (parsed.type === SchemaType.Union) {
            return this._validateUnionType(value, parsed, options);
          } else if (parsed.type === SchemaType.Intersection) {
            return this._validateIntersectionType(value, parsed, options);
          }
          // @ts-expect-error
          throw new Error("Invalid ".concat(schema.type, " target type: ").concat(parsed.type));
        };
        TSBufferValidator.prototype._validateFlatInterface = function (value, schema, options) {
          // interfaceSignature强制了key必须是数字的情况
          if (schema.indexSignature && schema.indexSignature.keyType === SchemaType.Number) {
            for (var key in value) {
              if (!this._isNumberKey(key)) {
                return ValidateResultUtil.error(ErrorType.InvalidNumberKey, key);
              }
            }
          }
          var prune = options.prune;
          if (prune) {
            prune.output = {};
          }
          // Excess property check (与prune互斥)
          if (!prune && options.excessPropertyChecks && !schema.indexSignature) {
            var validProperties_1 = schema.properties.map(function (v) {
              return v.name;
            });
            var firstExcessProperty = Object.keys(value).find(function (v) {
              return validProperties_1.indexOf(v) === -1;
            });
            if (firstExcessProperty) {
              return ValidateResultUtil.error(ErrorType.ExcessProperty, firstExcessProperty);
            }
          }
          // 校验properties
          if (schema.properties) {
            for (var _i = 0, _a = schema.properties; _i < _a.length; _i++) {
              var property = _a[_i];
              // MissingRequiredProperty: is undefined && !isOptional
              if (value[property.name] === undefined || value[property.name] === null && !options.strictNullChecks) {
                var canBeNull = this._canBeNull(property.type);
                var canBeUndefined = property.optional || this._canBeUndefined(property.type);
                var isOptional = canBeUndefined || !options.strictNullChecks && canBeNull;
                // skip undefined optional property
                if (isOptional) {
                  // Prune null & undefined->null
                  if (prune === null || prune === void 0 ? void 0 : prune.output) {
                    if (value[property.name] === null && canBeNull || value[property.name] === undefined && !canBeUndefined && canBeNull) {
                      prune.output[property.name] = null;
                    }
                  }
                  continue;
                } else {
                  return ValidateResultUtil.error(ErrorType.MissingRequiredProperty, property.name);
                }
              }
              // property本身验证
              var vRes = this._validate(value[property.name], property.type, {
                prune: (prune === null || prune === void 0 ? void 0 : prune.output) && property.id > -1 ? {
                  parent: {
                    value: prune.output,
                    key: property.name
                  }
                } : undefined,
                strictNullChecks: options.strictNullChecks,
                excessPropertyChecks: options.excessPropertyChecks
              });
              if (!vRes.isSucc) {
                return ValidateResultUtil.innerError(property.name, value[property.name], property.type, vRes);
              }
            }
          }
          // 检测indexSignature
          if (schema.indexSignature) {
            for (var key in value) {
              // only prune is (property is pruned already)
              // let memberPrune: ValidatePruneOptions | undefined = schema.properties.some(v => v.name === key) ? undefined : {};
              // validate each field
              var vRes = this._validate(value[key], schema.indexSignature.type, {
                prune: (prune === null || prune === void 0 ? void 0 : prune.output) ? {
                  parent: {
                    value: prune.output,
                    key: key
                  }
                } : undefined,
                strictNullChecks: options.strictNullChecks,
                excessPropertyChecks: options.excessPropertyChecks
              });
              if (!vRes.isSucc) {
                return ValidateResultUtil.innerError(key, value[key], schema.indexSignature.type, vRes);
              }
            }
          }
          return ValidateResultUtil.succ;
        };
        TSBufferValidator.prototype._validateBufferType = function (value, schema) {
          var _a, _b;
          var type = this._getTypeof(value);
          if (type !== 'Object') {
            return ValidateResultUtil.error(ErrorType.TypeError, schema.arrayType || 'ArrayBuffer', type);
          } else if (schema.arrayType) {
            var typeArrayClass = typedArrays[schema.arrayType];
            if (!typeArrayClass) {
              throw new Error("Error TypedArray type: ".concat(schema.arrayType));
            }
            return value instanceof typeArrayClass ? ValidateResultUtil.succ : ValidateResultUtil.error(ErrorType.TypeError, schema.arrayType, (_a = value === null || value === void 0 ? void 0 : value.constructor) === null || _a === void 0 ? void 0 : _a.name);
          } else {
            return value instanceof ArrayBuffer ? ValidateResultUtil.succ : ValidateResultUtil.error(ErrorType.TypeError, 'ArrayBuffer', (_b = value === null || value === void 0 ? void 0 : value.constructor) === null || _b === void 0 ? void 0 : _b.name);
          }
        };
        TSBufferValidator.prototype._validateReferenceType = function (value, schema, options) {
          return this._validate(value, this.protoHelper.parseReference(schema), options);
        };
        TSBufferValidator.prototype._validateUnionType = function (value, schema, options) {
          var _this = this;
          options.unionProperties = options.unionProperties || this.protoHelper.getUnionProperties(schema);
          var isObjectPrune = false;
          var prune = options.prune;
          if (prune && value && Object.getPrototypeOf(value) === Object.prototype) {
            isObjectPrune = true;
            prune.output = {};
          }
          // 有一成功则成功
          var isSomeSucc = false;
          var memberErrors = [];
          for (var i = 0; i < schema.members.length; ++i) {
            var member = schema.members[i];
            var memberType = this.protoHelper.isTypeReference(member.type) ? this.protoHelper.parseReference(member.type) : member.type;
            var memberPrune = prune ? {} : undefined;
            var vRes = this._validate(value, memberType, _assign(_assign({}, options), {
              prune: memberPrune
            }));
            if (vRes.isSucc) {
              isSomeSucc = true;
              // if prune object: must prune all members
              if (isObjectPrune) {
                prune.output = _assign(_assign({}, prune.output), memberPrune.output);
              }
              // not prune object: stop checking after 1st member matched
              else {
                break;
              }
            } else {
              memberErrors.push(vRes);
            }
          }
          // 有一成功则成功;
          if (isSomeSucc) {
            return ValidateResultUtil.succ;
          }
          // 全部失败，则失败
          else {
            // All member error is the same, return the first
            var msg0_1 = memberErrors[0].errMsg;
            if (memberErrors.every(function (v) {
              return v.errMsg === msg0_1;
            })) {
              return memberErrors[0];
            }
            // mutual exclusion: return the only one
            var nonLiteralErrors = memberErrors.filter(function (v) {
              return v.error.type !== ErrorType.InvalidLiteralValue;
            });
            if (nonLiteralErrors.length === 1) {
              return nonLiteralErrors[0];
            }
            // All member error without inner: show simple msg
            if (memberErrors.every(function (v) {
              return !v.error.inner && (v.error.type === ErrorType.TypeError || v.error.type === ErrorType.InvalidLiteralValue);
            })) {
              var valueType = this._getTypeof(value);
              var expectedTypes = memberErrors.map(function (v) {
                return v.error.type === ErrorType.TypeError ? v.error.params[0] : _this._getTypeof(v.error.params[0]);
              }).distinct();
              // Expected type A|B|C, actually type D
              if (expectedTypes.indexOf(valueType) === -1) {
                return ValidateResultUtil.error(ErrorType.TypeError, expectedTypes.join(' | '), this._getTypeof(value));
              }
              // `'D'` is not matched to `'A'|'B'|'C'`
              if (valueType !== 'Object' && valueType !== SchemaType.Array) {
                var types = memberErrors.map(function (v) {
                  return v.error.type === ErrorType.TypeError ? v.error.params[0] : stringify(v.error.params[0]);
                }).distinct();
                return ValidateResultUtil.error(ErrorType.UnionTypesNotMatch, value, types);
              }
            }
            // other errors
            return ValidateResultUtil.error(ErrorType.UnionMembersNotMatch, memberErrors);
          }
        };
        TSBufferValidator.prototype._validateIntersectionType = function (value, schema, options) {
          options.unionProperties = options.unionProperties || this.protoHelper.getUnionProperties(schema);
          var isObjectPrune = false;
          var prune = options.prune;
          if (prune && value && Object.getPrototypeOf(value) === Object.prototype) {
            prune.output = {};
            isObjectPrune = true;
          }
          // 有一失败则失败
          for (var i = 0, len = schema.members.length; i < len; ++i) {
            // 验证member
            var memberType = schema.members[i].type;
            memberType = this.protoHelper.isTypeReference(memberType) ? this.protoHelper.parseReference(memberType) : memberType;
            var memberPrune = prune ? {} : undefined;
            var vRes = this._validate(value, memberType, _assign(_assign({}, options), {
              prune: memberPrune
            }));
            // 有一失败则失败
            if (!vRes.isSucc) {
              return vRes;
            }
            if (isObjectPrune) {
              prune.output = _assign(_assign({}, prune.output), memberPrune.output);
            }
          }
          // 全成功则成功
          return ValidateResultUtil.succ;
        };
        TSBufferValidator.prototype._validateDateType = function (value) {
          if (value instanceof Date) {
            return ValidateResultUtil.succ;
          } else {
            return ValidateResultUtil.error(ErrorType.TypeError, 'Date', this._getTypeof(value));
          }
        };
        TSBufferValidator.prototype._validateNonNullableType = function (value, schema, options) {
          var type = this._getTypeof(value);
          if ((type === 'null' || type === 'undefined') && schema.target.type !== 'Any') {
            return ValidateResultUtil.error(ErrorType.TypeError, 'NonNullable', type);
          }
          return this._validate(value, schema.target, options);
        };
        TSBufferValidator.prototype._isNumberKey = function (key) {
          var _int = parseInt(key);
          return !(isNaN(_int) || '' + _int !== key);
        };
        TSBufferValidator.prototype._getTypeof = function (value) {
          var type = typeof value;
          if (type === 'object') {
            if (value === null) {
              return 'null';
            } else if (Array.isArray(value)) {
              return SchemaType.Array;
            } else {
              return 'Object';
            }
          }
          return type;
        };
        return TSBufferValidator;
      }());
    }
  };
});

System.register("chunks:///_virtual/indexed-object.js", ['./cjs-loader.mjs', './function-uncurry-this.js', './fails.js', './classof-raw.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var uncurryThis = require('../internals/function-uncurry-this');
        var fails = require('../internals/fails');
        var classof = require('../internals/classof-raw');
        var $Object = Object;
        var split = uncurryThis(''.split);

        // fallback for non-array-like ES3 and non-enumerable old V8 strings
        module.exports = fails(function () {
          // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
          // eslint-disable-next-line no-prototype-builtins -- safe
          return !$Object('z').propertyIsEnumerable(0);
        }) ? function (it) {
          return classof(it) === 'String' ? split(it, '') : $Object(it);
        } : $Object;

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-uncurry-this': __cjsMetaURL$1,
          '../internals/fails': __cjsMetaURL$2,
          '../internals/classof-raw': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/inherit-if-required.js", ['./cjs-loader.mjs', './is-callable.js', './is-object.js', './object-set-prototype-of.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var isCallable = require('../internals/is-callable');
        var isObject = require('../internals/is-object');
        var setPrototypeOf = require('../internals/object-set-prototype-of');

        // makes subclassing work correct for wrapped built-ins
        module.exports = function ($this, dummy, Wrapper) {
          var NewTarget, NewTargetPrototype;
          if (
          // it can work only with native `setPrototypeOf`
          setPrototypeOf &&
          // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
          isCallable(NewTarget = dummy.constructor) && NewTarget !== Wrapper && isObject(NewTargetPrototype = NewTarget.prototype) && NewTargetPrototype !== Wrapper.prototype) setPrototypeOf($this, NewTargetPrototype);
          return $this;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/is-callable': __cjsMetaURL$1,
          '../internals/is-object': __cjsMetaURL$2,
          '../internals/object-set-prototype-of': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/inspect-source.js", ['./cjs-loader.mjs', './function-uncurry-this.js', './is-callable.js', './shared-store.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var uncurryThis = require('../internals/function-uncurry-this');
        var isCallable = require('../internals/is-callable');
        var store = require('../internals/shared-store');
        var functionToString = uncurryThis(Function.toString);

        // this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
        if (!isCallable(store.inspectSource)) {
          store.inspectSource = function (it) {
            return functionToString(it);
          };
        }
        module.exports = store.inspectSource;

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-uncurry-this': __cjsMetaURL$1,
          '../internals/is-callable': __cjsMetaURL$2,
          '../internals/shared-store': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/internal-state.js", ['./cjs-loader.mjs', './weak-map-basic-detection.js', './global.js', './is-object.js', './create-non-enumerable-property.js', './has-own-property.js', './shared-store.js', './shared-key.js', './hidden-keys.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var NATIVE_WEAK_MAP = require('../internals/weak-map-basic-detection');
        var global = require('../internals/global');
        var isObject = require('../internals/is-object');
        var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');
        var hasOwn = require('../internals/has-own-property');
        var shared = require('../internals/shared-store');
        var sharedKey = require('../internals/shared-key');
        var hiddenKeys = require('../internals/hidden-keys');
        var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
        var TypeError = global.TypeError;
        var WeakMap = global.WeakMap;
        var set, get, has;
        var enforce = function enforce(it) {
          return has(it) ? get(it) : set(it, {});
        };
        var getterFor = function getterFor(TYPE) {
          return function (it) {
            var state;
            if (!isObject(it) || (state = get(it)).type !== TYPE) {
              throw TypeError('Incompatible receiver, ' + TYPE + ' required');
            }
            return state;
          };
        };
        if (NATIVE_WEAK_MAP || shared.state) {
          var store = shared.state || (shared.state = new WeakMap());
          /* eslint-disable no-self-assign -- prototype methods protection */
          store.get = store.get;
          store.has = store.has;
          store.set = store.set;
          /* eslint-enable no-self-assign -- prototype methods protection */
          set = function set(it, metadata) {
            if (store.has(it)) throw TypeError(OBJECT_ALREADY_INITIALIZED);
            metadata.facade = it;
            store.set(it, metadata);
            return metadata;
          };
          get = function get(it) {
            return store.get(it) || {};
          };
          has = function has(it) {
            return store.has(it);
          };
        } else {
          var STATE = sharedKey('state');
          hiddenKeys[STATE] = true;
          set = function set(it, metadata) {
            if (hasOwn(it, STATE)) throw TypeError(OBJECT_ALREADY_INITIALIZED);
            metadata.facade = it;
            createNonEnumerableProperty(it, STATE, metadata);
            return metadata;
          };
          get = function get(it) {
            return hasOwn(it, STATE) ? it[STATE] : {};
          };
          has = function has(it) {
            return hasOwn(it, STATE);
          };
        }
        module.exports = {
          set: set,
          get: get,
          has: has,
          enforce: enforce,
          getterFor: getterFor
        };

        // #endregion ORIGINAL CODE

        module.exports;
        module.exports.set;
        module.exports.get;
        module.exports.has;
        module.exports.enforce;
        module.exports.getterFor;
      }, function () {
        return {
          '../internals/weak-map-basic-detection': __cjsMetaURL$1,
          '../internals/global': __cjsMetaURL$2,
          '../internals/is-object': __cjsMetaURL$3,
          '../internals/create-non-enumerable-property': __cjsMetaURL$4,
          '../internals/has-own-property': __cjsMetaURL$5,
          '../internals/shared-store': __cjsMetaURL$6,
          '../internals/shared-key': __cjsMetaURL$7,
          '../internals/hidden-keys': __cjsMetaURL$8
        };
      });
    }
  };
});

System.register("chunks:///_virtual/is-array-iterator-method.js", ['./cjs-loader.mjs', './well-known-symbol.js', './iterators.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var Iterators = require('../internals/iterators');
        var ITERATOR = wellKnownSymbol('iterator');
        var ArrayPrototype = Array.prototype;

        // check on default Array iterator
        module.exports = function (it) {
          return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/well-known-symbol': __cjsMetaURL$1,
          '../internals/iterators': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/is-array.js", ['./cjs-loader.mjs', './classof-raw.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var classof = require('../internals/classof-raw');

        // `IsArray` abstract operation
        // https://tc39.es/ecma262/#sec-isarray
        // eslint-disable-next-line es/no-array-isarray -- safe
        module.exports = Array.isArray || function isArray(argument) {
          return classof(argument) === 'Array';
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/classof-raw': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/is-big-int-array.js", ['./cjs-loader.mjs', './classof.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var classof = require('../internals/classof');
        module.exports = function (it) {
          var klass = classof(it);
          return klass === 'BigInt64Array' || klass === 'BigUint64Array';
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/classof': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/is-callable.js", ['./cjs-loader.mjs', './document-all.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $documentAll = require('../internals/document-all');
        var documentAll = $documentAll.all;

        // `IsCallable` abstract operation
        // https://tc39.es/ecma262/#sec-iscallable
        module.exports = $documentAll.IS_HTMLDDA ? function (argument) {
          return typeof argument == 'function' || argument === documentAll;
        } : function (argument) {
          return typeof argument == 'function';
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/document-all': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/is-constructor.js", ['./cjs-loader.mjs', './function-uncurry-this.js', './fails.js', './is-callable.js', './classof.js', './get-built-in.js', './inspect-source.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var uncurryThis = require('../internals/function-uncurry-this');
        var fails = require('../internals/fails');
        var isCallable = require('../internals/is-callable');
        var classof = require('../internals/classof');
        var getBuiltIn = require('../internals/get-built-in');
        var inspectSource = require('../internals/inspect-source');
        var noop = function noop() {/* empty */};
        var empty = [];
        var construct = getBuiltIn('Reflect', 'construct');
        var constructorRegExp = /^\s*(?:class|function)\b/;
        var exec = uncurryThis(constructorRegExp.exec);
        var INCORRECT_TO_STRING = !constructorRegExp.exec(noop);
        var isConstructorModern = function isConstructor(argument) {
          if (!isCallable(argument)) return false;
          try {
            construct(noop, empty, argument);
            return true;
          } catch (error) {
            return false;
          }
        };
        var isConstructorLegacy = function isConstructor(argument) {
          if (!isCallable(argument)) return false;
          switch (classof(argument)) {
            case 'AsyncFunction':
            case 'GeneratorFunction':
            case 'AsyncGeneratorFunction':
              return false;
          }
          try {
            // we can't check .prototype since constructors produced by .bind haven't it
            // `Function#toString` throws on some built-it function in some legacy engines
            // (for example, `DOMQuad` and similar in FF41-)
            return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));
          } catch (error) {
            return true;
          }
        };
        isConstructorLegacy.sham = true;

        // `IsConstructor` abstract operation
        // https://tc39.es/ecma262/#sec-isconstructor
        module.exports = !construct || fails(function () {
          var called;
          return isConstructorModern(isConstructorModern.call) || !isConstructorModern(Object) || !isConstructorModern(function () {
            called = true;
          }) || called;
        }) ? isConstructorLegacy : isConstructorModern;

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-uncurry-this': __cjsMetaURL$1,
          '../internals/fails': __cjsMetaURL$2,
          '../internals/is-callable': __cjsMetaURL$3,
          '../internals/classof': __cjsMetaURL$4,
          '../internals/get-built-in': __cjsMetaURL$5,
          '../internals/inspect-source': __cjsMetaURL$6
        };
      });
    }
  };
});

System.register("chunks:///_virtual/is-forced.js", ['./cjs-loader.mjs', './fails.js', './is-callable.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var fails = require('../internals/fails');
        var isCallable = require('../internals/is-callable');
        var replacement = /#|\.prototype\./;
        var isForced = function isForced(feature, detection) {
          var value = data[normalize(feature)];
          return value === POLYFILL ? true : value === NATIVE ? false : isCallable(detection) ? fails(detection) : !!detection;
        };
        var normalize = isForced.normalize = function (string) {
          return String(string).replace(replacement, '.').toLowerCase();
        };
        var data = isForced.data = {};
        var NATIVE = isForced.NATIVE = 'N';
        var POLYFILL = isForced.POLYFILL = 'P';
        module.exports = isForced;

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/fails': __cjsMetaURL$1,
          '../internals/is-callable': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/is-integral-number.js", ['./cjs-loader.mjs', './is-object.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var isObject = require('../internals/is-object');
        var floor = Math.floor;

        // `IsIntegralNumber` abstract operation
        // https://tc39.es/ecma262/#sec-isintegralnumber
        // eslint-disable-next-line es/no-number-isinteger -- safe
        module.exports = Number.isInteger || function isInteger(it) {
          return !isObject(it) && isFinite(it) && floor(it) === it;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/is-object': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/is-null-or-undefined.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        // we can't use just `it == null` since of `document.all` special case
        // https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec
        module.exports = function (it) {
          return it === null || it === undefined;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/is-object.js", ['./cjs-loader.mjs', './is-callable.js', './document-all.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var isCallable = require('../internals/is-callable');
        var $documentAll = require('../internals/document-all');
        var documentAll = $documentAll.all;
        module.exports = $documentAll.IS_HTMLDDA ? function (it) {
          return typeof it == 'object' ? it !== null : isCallable(it) || it === documentAll;
        } : function (it) {
          return typeof it == 'object' ? it !== null : isCallable(it);
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/is-callable': __cjsMetaURL$1,
          '../internals/document-all': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/is-pure.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        module.exports = false;

        // #endregion ORIGINAL CODE

        module.exports;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/is-regexp.js", ['./cjs-loader.mjs', './is-object.js', './classof-raw.js', './well-known-symbol.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var isObject = require('../internals/is-object');
        var classof = require('../internals/classof-raw');
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var MATCH = wellKnownSymbol('match');

        // `IsRegExp` abstract operation
        // https://tc39.es/ecma262/#sec-isregexp
        module.exports = function (it) {
          var isRegExp;
          return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) === 'RegExp');
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/is-object': __cjsMetaURL$1,
          '../internals/classof-raw': __cjsMetaURL$2,
          '../internals/well-known-symbol': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/is-symbol.js", ['./cjs-loader.mjs', './get-built-in.js', './is-callable.js', './object-is-prototype-of.js', './use-symbol-as-uid.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var getBuiltIn = require('../internals/get-built-in');
        var isCallable = require('../internals/is-callable');
        var isPrototypeOf = require('../internals/object-is-prototype-of');
        var USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');
        var $Object = Object;
        module.exports = USE_SYMBOL_AS_UID ? function (it) {
          return typeof it == 'symbol';
        } : function (it) {
          var $Symbol = getBuiltIn('Symbol');
          return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/get-built-in': __cjsMetaURL$1,
          '../internals/is-callable': __cjsMetaURL$2,
          '../internals/object-is-prototype-of': __cjsMetaURL$3,
          '../internals/use-symbol-as-uid': __cjsMetaURL$4
        };
      });
    }
  };
});

System.register("chunks:///_virtual/iterate.js", ['./cjs-loader.mjs', './function-bind-context.js', './function-call.js', './an-object.js', './try-to-string.js', './is-array-iterator-method.js', './length-of-array-like.js', './object-is-prototype-of.js', './get-iterator.js', './get-iterator-method.js', './iterator-close.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8, __cjsMetaURL$9, __cjsMetaURL$a;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$9 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$a = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var bind = require('../internals/function-bind-context');
        var call = require('../internals/function-call');
        var anObject = require('../internals/an-object');
        var tryToString = require('../internals/try-to-string');
        var isArrayIteratorMethod = require('../internals/is-array-iterator-method');
        var lengthOfArrayLike = require('../internals/length-of-array-like');
        var isPrototypeOf = require('../internals/object-is-prototype-of');
        var getIterator = require('../internals/get-iterator');
        var getIteratorMethod = require('../internals/get-iterator-method');
        var iteratorClose = require('../internals/iterator-close');
        var $TypeError = TypeError;
        var Result = function Result(stopped, result) {
          this.stopped = stopped;
          this.result = result;
        };
        var ResultPrototype = Result.prototype;
        module.exports = function (iterable, unboundFunction, options) {
          var that = options && options.that;
          var AS_ENTRIES = !!(options && options.AS_ENTRIES);
          var IS_RECORD = !!(options && options.IS_RECORD);
          var IS_ITERATOR = !!(options && options.IS_ITERATOR);
          var INTERRUPTED = !!(options && options.INTERRUPTED);
          var fn = bind(unboundFunction, that);
          var iterator, iterFn, index, length, result, next, step;
          var stop = function stop(condition) {
            if (iterator) iteratorClose(iterator, 'normal', condition);
            return new Result(true, condition);
          };
          var callFn = function callFn(value) {
            if (AS_ENTRIES) {
              anObject(value);
              return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
            }
            return INTERRUPTED ? fn(value, stop) : fn(value);
          };
          if (IS_RECORD) {
            iterator = iterable.iterator;
          } else if (IS_ITERATOR) {
            iterator = iterable;
          } else {
            iterFn = getIteratorMethod(iterable);
            if (!iterFn) throw $TypeError(tryToString(iterable) + ' is not iterable');
            // optimisation for array iterators
            if (isArrayIteratorMethod(iterFn)) {
              for (index = 0, length = lengthOfArrayLike(iterable); length > index; index++) {
                result = callFn(iterable[index]);
                if (result && isPrototypeOf(ResultPrototype, result)) return result;
              }
              return new Result(false);
            }
            iterator = getIterator(iterable, iterFn);
          }
          next = IS_RECORD ? iterable.next : iterator.next;
          while (!(step = call(next, iterator)).done) {
            try {
              result = callFn(step.value);
            } catch (error) {
              iteratorClose(iterator, 'throw', error);
            }
            if (typeof result == 'object' && result && isPrototypeOf(ResultPrototype, result)) return result;
          }
          return new Result(false);
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-bind-context': __cjsMetaURL$1,
          '../internals/function-call': __cjsMetaURL$2,
          '../internals/an-object': __cjsMetaURL$3,
          '../internals/try-to-string': __cjsMetaURL$4,
          '../internals/is-array-iterator-method': __cjsMetaURL$5,
          '../internals/length-of-array-like': __cjsMetaURL$6,
          '../internals/object-is-prototype-of': __cjsMetaURL$7,
          '../internals/get-iterator': __cjsMetaURL$8,
          '../internals/get-iterator-method': __cjsMetaURL$9,
          '../internals/iterator-close': __cjsMetaURL$a
        };
      });
    }
  };
});

System.register("chunks:///_virtual/iterator-close.js", ['./cjs-loader.mjs', './function-call.js', './an-object.js', './get-method.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var call = require('../internals/function-call');
        var anObject = require('../internals/an-object');
        var getMethod = require('../internals/get-method');
        module.exports = function (iterator, kind, value) {
          var innerResult, innerError;
          anObject(iterator);
          try {
            innerResult = getMethod(iterator, 'return');
            if (!innerResult) {
              if (kind === 'throw') throw value;
              return value;
            }
            innerResult = call(innerResult, iterator);
          } catch (error) {
            innerError = true;
            innerResult = error;
          }
          if (kind === 'throw') throw value;
          if (innerError) throw innerResult;
          anObject(innerResult);
          return value;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-call': __cjsMetaURL$1,
          '../internals/an-object': __cjsMetaURL$2,
          '../internals/get-method': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/iterator-create-constructor.js", ['./cjs-loader.mjs', './iterators-core.js', './object-create.js', './create-property-descriptor.js', './set-to-string-tag.js', './iterators.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;
        var create = require('../internals/object-create');
        var createPropertyDescriptor = require('../internals/create-property-descriptor');
        var setToStringTag = require('../internals/set-to-string-tag');
        var Iterators = require('../internals/iterators');
        var returnThis = function returnThis() {
          return this;
        };
        module.exports = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
          var TO_STRING_TAG = NAME + ' Iterator';
          IteratorConstructor.prototype = create(IteratorPrototype, {
            next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next)
          });
          setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
          Iterators[TO_STRING_TAG] = returnThis;
          return IteratorConstructor;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/iterators-core': __cjsMetaURL$1,
          '../internals/object-create': __cjsMetaURL$2,
          '../internals/create-property-descriptor': __cjsMetaURL$3,
          '../internals/set-to-string-tag': __cjsMetaURL$4,
          '../internals/iterators': __cjsMetaURL$5
        };
      });
    }
  };
});

System.register("chunks:///_virtual/iterator-define.js", ['./cjs-loader.mjs', './export.js', './function-call.js', './is-pure.js', './function-name.js', './is-callable.js', './iterator-create-constructor.js', './object-get-prototype-of.js', './object-set-prototype-of.js', './set-to-string-tag.js', './create-non-enumerable-property.js', './define-built-in.js', './well-known-symbol.js', './iterators.js', './iterators-core.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8, __cjsMetaURL$9, __cjsMetaURL$a, __cjsMetaURL$b, __cjsMetaURL$c, __cjsMetaURL$d, __cjsMetaURL$e;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$9 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$a = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$b = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$c = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$d = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$e = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var call = require('../internals/function-call');
        var IS_PURE = require('../internals/is-pure');
        var FunctionName = require('../internals/function-name');
        var isCallable = require('../internals/is-callable');
        var createIteratorConstructor = require('../internals/iterator-create-constructor');
        var getPrototypeOf = require('../internals/object-get-prototype-of');
        var setPrototypeOf = require('../internals/object-set-prototype-of');
        var setToStringTag = require('../internals/set-to-string-tag');
        var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');
        var defineBuiltIn = require('../internals/define-built-in');
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var Iterators = require('../internals/iterators');
        var IteratorsCore = require('../internals/iterators-core');
        var PROPER_FUNCTION_NAME = FunctionName.PROPER;
        var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
        var IteratorPrototype = IteratorsCore.IteratorPrototype;
        var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
        var ITERATOR = wellKnownSymbol('iterator');
        var KEYS = 'keys';
        var VALUES = 'values';
        var ENTRIES = 'entries';
        var returnThis = function returnThis() {
          return this;
        };
        module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
          createIteratorConstructor(IteratorConstructor, NAME, next);
          var getIterationMethod = function getIterationMethod(KIND) {
            if (KIND === DEFAULT && defaultIterator) return defaultIterator;
            if (!BUGGY_SAFARI_ITERATORS && KIND && KIND in IterablePrototype) return IterablePrototype[KIND];
            switch (KIND) {
              case KEYS:
                return function keys() {
                  return new IteratorConstructor(this, KIND);
                };
              case VALUES:
                return function values() {
                  return new IteratorConstructor(this, KIND);
                };
              case ENTRIES:
                return function entries() {
                  return new IteratorConstructor(this, KIND);
                };
            }
            return function () {
              return new IteratorConstructor(this);
            };
          };
          var TO_STRING_TAG = NAME + ' Iterator';
          var INCORRECT_VALUES_NAME = false;
          var IterablePrototype = Iterable.prototype;
          var nativeIterator = IterablePrototype[ITERATOR] || IterablePrototype['@@iterator'] || DEFAULT && IterablePrototype[DEFAULT];
          var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
          var anyNativeIterator = NAME === 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
          var CurrentIteratorPrototype, methods, KEY;

          // fix native
          if (anyNativeIterator) {
            CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
            if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
              if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
                if (setPrototypeOf) {
                  setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
                } else if (!isCallable(CurrentIteratorPrototype[ITERATOR])) {
                  defineBuiltIn(CurrentIteratorPrototype, ITERATOR, returnThis);
                }
              }
              // Set @@toStringTag to native iterators
              setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
              if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
            }
          }

          // fix Array.prototype.{ values, @@iterator }.name in V8 / FF
          if (PROPER_FUNCTION_NAME && DEFAULT === VALUES && nativeIterator && nativeIterator.name !== VALUES) {
            if (!IS_PURE && CONFIGURABLE_FUNCTION_NAME) {
              createNonEnumerableProperty(IterablePrototype, 'name', VALUES);
            } else {
              INCORRECT_VALUES_NAME = true;
              defaultIterator = function values() {
                return call(nativeIterator, this);
              };
            }
          }

          // export additional methods
          if (DEFAULT) {
            methods = {
              values: getIterationMethod(VALUES),
              keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
              entries: getIterationMethod(ENTRIES)
            };
            if (FORCED) for (KEY in methods) {
              if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
                defineBuiltIn(IterablePrototype, KEY, methods[KEY]);
              }
            } else $({
              target: NAME,
              proto: true,
              forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME
            }, methods);
          }

          // define iterator
          if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
            defineBuiltIn(IterablePrototype, ITERATOR, defaultIterator, {
              name: DEFAULT
            });
          }
          Iterators[NAME] = defaultIterator;
          return methods;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/function-call': __cjsMetaURL$2,
          '../internals/is-pure': __cjsMetaURL$3,
          '../internals/function-name': __cjsMetaURL$4,
          '../internals/is-callable': __cjsMetaURL$5,
          '../internals/iterator-create-constructor': __cjsMetaURL$6,
          '../internals/object-get-prototype-of': __cjsMetaURL$7,
          '../internals/object-set-prototype-of': __cjsMetaURL$8,
          '../internals/set-to-string-tag': __cjsMetaURL$9,
          '../internals/create-non-enumerable-property': __cjsMetaURL$a,
          '../internals/define-built-in': __cjsMetaURL$b,
          '../internals/well-known-symbol': __cjsMetaURL$c,
          '../internals/iterators': __cjsMetaURL$d,
          '../internals/iterators-core': __cjsMetaURL$e
        };
      });
    }
  };
});

System.register("chunks:///_virtual/iterators-core.js", ['./cjs-loader.mjs', './fails.js', './is-callable.js', './is-object.js', './object-create.js', './object-get-prototype-of.js', './define-built-in.js', './well-known-symbol.js', './is-pure.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var fails = require('../internals/fails');
        var isCallable = require('../internals/is-callable');
        var isObject = require('../internals/is-object');
        var create = require('../internals/object-create');
        var getPrototypeOf = require('../internals/object-get-prototype-of');
        var defineBuiltIn = require('../internals/define-built-in');
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var IS_PURE = require('../internals/is-pure');
        var ITERATOR = wellKnownSymbol('iterator');
        var BUGGY_SAFARI_ITERATORS = false;

        // `%IteratorPrototype%` object
        // https://tc39.es/ecma262/#sec-%iteratorprototype%-object
        var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

        /* eslint-disable es/no-array-prototype-keys -- safe */
        if ([].keys) {
          arrayIterator = [].keys();
          // Safari 8 has buggy iterators w/o `next`
          if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;else {
            PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
            if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
          }
        }
        var NEW_ITERATOR_PROTOTYPE = !isObject(IteratorPrototype) || fails(function () {
          var test = {};
          // FF44- legacy iterators case
          return IteratorPrototype[ITERATOR].call(test) !== test;
        });
        if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};else if (IS_PURE) IteratorPrototype = create(IteratorPrototype);

        // `%IteratorPrototype%[@@iterator]()` method
        // https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator
        if (!isCallable(IteratorPrototype[ITERATOR])) {
          defineBuiltIn(IteratorPrototype, ITERATOR, function () {
            return this;
          });
        }
        module.exports = {
          IteratorPrototype: IteratorPrototype,
          BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
        };

        // #endregion ORIGINAL CODE

        module.exports;
        module.exports.IteratorPrototype;
        module.exports.BUGGY_SAFARI_ITERATORS;
      }, function () {
        return {
          '../internals/fails': __cjsMetaURL$1,
          '../internals/is-callable': __cjsMetaURL$2,
          '../internals/is-object': __cjsMetaURL$3,
          '../internals/object-create': __cjsMetaURL$4,
          '../internals/object-get-prototype-of': __cjsMetaURL$5,
          '../internals/define-built-in': __cjsMetaURL$6,
          '../internals/well-known-symbol': __cjsMetaURL$7,
          '../internals/is-pure': __cjsMetaURL$8
        };
      });
    }
  };
});

System.register("chunks:///_virtual/iterators.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        module.exports = {};

        // #endregion ORIGINAL CODE

        module.exports;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/jsencrypt.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      exports('default', void 0);
      var _cjsExports;
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports$1, require, module, __filename, __dirname) {
        // #region ORIGINAL CODE

        /*
         * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
         * This devtool is neither made for production nor for readable output files.
         * It uses "eval()" calls to create a separate source file in the browser devtools.
         * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
         * or disable the default devtool with "devtool: false".
         * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
         */
        (function webpackUniversalModuleDefinition(root, factory) {
          if (typeof exports$1 === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define([], factory);else if (typeof exports$1 === 'object') exports$1["JSEncrypt"] = factory();else root["JSEncrypt"] = factory();
        })(window, function () {
          return (/******/function () {
              // webpackBootstrap
              /******/
              var __webpack_modules__ = {
                /***/"./lib/JSEncrypt.js":
                /*!**************************!*\
                  !*** ./lib/JSEncrypt.js ***!
                  \**************************/
                /***/
                function libJSEncryptJs(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
                  eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"JSEncrypt\": () => (/* binding */ JSEncrypt)\n/* harmony export */ });\n/* harmony import */ var _lib_jsbn_base64__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/jsbn/base64 */ \"./lib/lib/jsbn/base64.js\");\n/* harmony import */ var _JSEncryptRSAKey__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./JSEncryptRSAKey */ \"./lib/JSEncryptRSAKey.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process/browser */ \"./node_modules/process/browser.js\");\nvar _a;\n\n\nvar version = typeof process !== 'undefined'\n    ? (_a = process.env) === null || _a === void 0 ? void 0 : \"3.3.2\"\n    : undefined;\n/**\n *\n * @param {Object} [options = {}] - An object to customize JSEncrypt behaviour\n * possible parameters are:\n * - default_key_size        {number}  default: 1024 the key size in bit\n * - default_public_exponent {string}  default: '010001' the hexadecimal representation of the public exponent\n * - log                     {boolean} default: false whether log warn/error or not\n * @constructor\n */\nvar JSEncrypt = /** @class */ (function () {\n    function JSEncrypt(options) {\n        if (options === void 0) { options = {}; }\n        options = options || {};\n        this.default_key_size = options.default_key_size\n            ? parseInt(options.default_key_size, 10)\n            : 1024;\n        this.default_public_exponent = options.default_public_exponent || \"010001\"; // 65537 default openssl public exponent for rsa key type\n        this.log = options.log || false;\n        // The private and public key.\n        this.key = null;\n    }\n    /**\n     * Method to set the rsa key parameter (one method is enough to set both the public\n     * and the private key, since the private key contains the public key paramenters)\n     * Log a warning if logs are enabled\n     * @param {Object|string} key the pem encoded string or an object (with or without header/footer)\n     * @public\n     */\n    JSEncrypt.prototype.setKey = function (key) {\n        if (this.log && this.key) {\n            console.warn(\"A key was already set, overriding existing.\");\n        }\n        this.key = new _JSEncryptRSAKey__WEBPACK_IMPORTED_MODULE_1__.JSEncryptRSAKey(key);\n    };\n    /**\n     * Proxy method for setKey, for api compatibility\n     * @see setKey\n     * @public\n     */\n    JSEncrypt.prototype.setPrivateKey = function (privkey) {\n        // Create the key.\n        this.setKey(privkey);\n    };\n    /**\n     * Proxy method for setKey, for api compatibility\n     * @see setKey\n     * @public\n     */\n    JSEncrypt.prototype.setPublicKey = function (pubkey) {\n        // Sets the public key.\n        this.setKey(pubkey);\n    };\n    /**\n     * Proxy method for RSAKey object's decrypt, decrypt the string using the private\n     * components of the rsa key object. Note that if the object was not set will be created\n     * on the fly (by the getKey method) using the parameters passed in the JSEncrypt constructor\n     * @param {string} str base64 encoded crypted string to decrypt\n     * @return {string} the decrypted string\n     * @public\n     */\n    JSEncrypt.prototype.decrypt = function (str) {\n        // Return the decrypted string.\n        try {\n            return this.getKey().decrypt((0,_lib_jsbn_base64__WEBPACK_IMPORTED_MODULE_0__.b64tohex)(str));\n        }\n        catch (ex) {\n            return false;\n        }\n    };\n    /**\n     * Proxy method for RSAKey object's encrypt, encrypt the string using the public\n     * components of the rsa key object. Note that if the object was not set will be created\n     * on the fly (by the getKey method) using the parameters passed in the JSEncrypt constructor\n     * @param {string} str the string to encrypt\n     * @return {string} the encrypted string encoded in base64\n     * @public\n     */\n    JSEncrypt.prototype.encrypt = function (str) {\n        // Return the encrypted string.\n        try {\n            return (0,_lib_jsbn_base64__WEBPACK_IMPORTED_MODULE_0__.hex2b64)(this.getKey().encrypt(str));\n        }\n        catch (ex) {\n            return false;\n        }\n    };\n    /**\n     * Proxy method for RSAKey object's sign.\n     * @param {string} str the string to sign\n     * @param {function} digestMethod hash method\n     * @param {string} digestName the name of the hash algorithm\n     * @return {string} the signature encoded in base64\n     * @public\n     */\n    JSEncrypt.prototype.sign = function (str, digestMethod, digestName) {\n        // return the RSA signature of 'str' in 'hex' format.\n        try {\n            return (0,_lib_jsbn_base64__WEBPACK_IMPORTED_MODULE_0__.hex2b64)(this.getKey().sign(str, digestMethod, digestName));\n        }\n        catch (ex) {\n            return false;\n        }\n    };\n    /**\n     * Proxy method for RSAKey object's verify.\n     * @param {string} str the string to verify\n     * @param {string} signature the signature encoded in base64 to compare the string to\n     * @param {function} digestMethod hash method\n     * @return {boolean} whether the data and signature match\n     * @public\n     */\n    JSEncrypt.prototype.verify = function (str, signature, digestMethod) {\n        // Return the decrypted 'digest' of the signature.\n        try {\n            return this.getKey().verify(str, (0,_lib_jsbn_base64__WEBPACK_IMPORTED_MODULE_0__.b64tohex)(signature), digestMethod);\n        }\n        catch (ex) {\n            return false;\n        }\n    };\n    /**\n     * Getter for the current JSEncryptRSAKey object. If it doesn't exists a new object\n     * will be created and returned\n     * @param {callback} [cb] the callback to be called if we want the key to be generated\n     * in an async fashion\n     * @returns {JSEncryptRSAKey} the JSEncryptRSAKey object\n     * @public\n     */\n    JSEncrypt.prototype.getKey = function (cb) {\n        // Only create new if it does not exist.\n        if (!this.key) {\n            // Get a new private key.\n            this.key = new _JSEncryptRSAKey__WEBPACK_IMPORTED_MODULE_1__.JSEncryptRSAKey();\n            if (cb && {}.toString.call(cb) === \"[object Function]\") {\n                this.key.generateAsync(this.default_key_size, this.default_public_exponent, cb);\n                return;\n            }\n            // Generate the key.\n            this.key.generate(this.default_key_size, this.default_public_exponent);\n        }\n        return this.key;\n    };\n    /**\n     * Returns the pem encoded representation of the private key\n     * If the key doesn't exists a new key will be created\n     * @returns {string} pem encoded representation of the private key WITH header and footer\n     * @public\n     */\n    JSEncrypt.prototype.getPrivateKey = function () {\n        // Return the private representation of this key.\n        return this.getKey().getPrivateKey();\n    };\n    /**\n     * Returns the pem encoded representation of the private key\n     * If the key doesn't exists a new key will be created\n     * @returns {string} pem encoded representation of the private key WITHOUT header and footer\n     * @public\n     */\n    JSEncrypt.prototype.getPrivateKeyB64 = function () {\n        // Return the private representation of this key.\n        return this.getKey().getPrivateBaseKeyB64();\n    };\n    /**\n     * Returns the pem encoded representation of the public key\n     * If the key doesn't exists a new key will be created\n     * @returns {string} pem encoded representation of the public key WITH header and footer\n     * @public\n     */\n    JSEncrypt.prototype.getPublicKey = function () {\n        // Return the private representation of this key.\n        return this.getKey().getPublicKey();\n    };\n    /**\n     * Returns the pem encoded representation of the public key\n     * If the key doesn't exists a new key will be created\n     * @returns {string} pem encoded representation of the public key WITHOUT header and footer\n     * @public\n     */\n    JSEncrypt.prototype.getPublicKeyB64 = function () {\n        // Return the private representation of this key.\n        return this.getKey().getPublicBaseKeyB64();\n    };\n    JSEncrypt.version = version;\n    return JSEncrypt;\n}());\n\n\n\n//# sourceURL=webpack://JSEncrypt/./lib/JSEncrypt.js?");

                  /***/
                },

                /***/"./lib/JSEncryptRSAKey.js":
                /*!********************************!*\
                  !*** ./lib/JSEncryptRSAKey.js ***!
                  \********************************/
                /***/
                function libJSEncryptRSAKeyJs(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
                  eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"JSEncryptRSAKey\": () => (/* binding */ JSEncryptRSAKey)\n/* harmony export */ });\n/* harmony import */ var _lib_jsbn_base64__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/jsbn/base64 */ \"./lib/lib/jsbn/base64.js\");\n/* harmony import */ var _lib_asn1js_hex__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/asn1js/hex */ \"./lib/lib/asn1js/hex.js\");\n/* harmony import */ var _lib_asn1js_base64__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/asn1js/base64 */ \"./lib/lib/asn1js/base64.js\");\n/* harmony import */ var _lib_asn1js_asn1__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/asn1js/asn1 */ \"./lib/lib/asn1js/asn1.js\");\n/* harmony import */ var _lib_jsbn_rsa__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/jsbn/rsa */ \"./lib/lib/jsbn/rsa.js\");\n/* harmony import */ var _lib_jsbn_jsbn__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/jsbn/jsbn */ \"./lib/lib/jsbn/jsbn.js\");\n/* harmony import */ var _lib_jsrsasign_asn1_1_0__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/jsrsasign/asn1-1.0 */ \"./lib/lib/jsrsasign/asn1-1.0.js\");\nvar __extends = (undefined && undefined.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\n\n\n\n\n\n\n/**\n * Create a new JSEncryptRSAKey that extends Tom Wu's RSA key object.\n * This object is just a decorator for parsing the key parameter\n * @param {string|Object} key - The key in string format, or an object containing\n * the parameters needed to build a RSAKey object.\n * @constructor\n */\nvar JSEncryptRSAKey = /** @class */ (function (_super) {\n    __extends(JSEncryptRSAKey, _super);\n    function JSEncryptRSAKey(key) {\n        var _this = _super.call(this) || this;\n        // Call the super constructor.\n        //  RSAKey.call(this);\n        // If a key key was provided.\n        if (key) {\n            // If this is a string...\n            if (typeof key === \"string\") {\n                _this.parseKey(key);\n            }\n            else if (JSEncryptRSAKey.hasPrivateKeyProperty(key) ||\n                JSEncryptRSAKey.hasPublicKeyProperty(key)) {\n                // Set the values for the key.\n                _this.parsePropertiesFrom(key);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Method to parse a pem encoded string containing both a public or private key.\n     * The method will translate the pem encoded string in a der encoded string and\n     * will parse private key and public key parameters. This method accepts public key\n     * in the rsaencryption pkcs #1 format (oid: 1.2.840.113549.1.1.1).\n     *\n     * @todo Check how many rsa formats use the same format of pkcs #1.\n     *\n     * The format is defined as:\n     * PublicKeyInfo ::= SEQUENCE {\n     *   algorithm       AlgorithmIdentifier,\n     *   PublicKey       BIT STRING\n     * }\n     * Where AlgorithmIdentifier is:\n     * AlgorithmIdentifier ::= SEQUENCE {\n     *   algorithm       OBJECT IDENTIFIER,     the OID of the enc algorithm\n     *   parameters      ANY DEFINED BY algorithm OPTIONAL (NULL for PKCS #1)\n     * }\n     * and PublicKey is a SEQUENCE encapsulated in a BIT STRING\n     * RSAPublicKey ::= SEQUENCE {\n     *   modulus           INTEGER,  -- n\n     *   publicExponent    INTEGER   -- e\n     * }\n     * it's possible to examine the structure of the keys obtained from openssl using\n     * an asn.1 dumper as the one used here to parse the components: http://lapo.it/asn1js/\n     * @argument {string} pem the pem encoded string, can include the BEGIN/END header/footer\n     * @private\n     */\n    JSEncryptRSAKey.prototype.parseKey = function (pem) {\n        try {\n            var modulus = 0;\n            var public_exponent = 0;\n            var reHex = /^\\s*(?:[0-9A-Fa-f][0-9A-Fa-f]\\s*)+$/;\n            var der = reHex.test(pem) ? _lib_asn1js_hex__WEBPACK_IMPORTED_MODULE_1__.Hex.decode(pem) : _lib_asn1js_base64__WEBPACK_IMPORTED_MODULE_2__.Base64.unarmor(pem);\n            var asn1 = _lib_asn1js_asn1__WEBPACK_IMPORTED_MODULE_3__.ASN1.decode(der);\n            // Fixes a bug with OpenSSL 1.0+ private keys\n            if (asn1.sub.length === 3) {\n                asn1 = asn1.sub[2].sub[0];\n            }\n            if (asn1.sub.length === 9) {\n                // Parse the private key.\n                modulus = asn1.sub[1].getHexStringValue(); // bigint\n                this.n = (0,_lib_jsbn_jsbn__WEBPACK_IMPORTED_MODULE_5__.parseBigInt)(modulus, 16);\n                public_exponent = asn1.sub[2].getHexStringValue(); // int\n                this.e = parseInt(public_exponent, 16);\n                var private_exponent = asn1.sub[3].getHexStringValue(); // bigint\n                this.d = (0,_lib_jsbn_jsbn__WEBPACK_IMPORTED_MODULE_5__.parseBigInt)(private_exponent, 16);\n                var prime1 = asn1.sub[4].getHexStringValue(); // bigint\n                this.p = (0,_lib_jsbn_jsbn__WEBPACK_IMPORTED_MODULE_5__.parseBigInt)(prime1, 16);\n                var prime2 = asn1.sub[5].getHexStringValue(); // bigint\n                this.q = (0,_lib_jsbn_jsbn__WEBPACK_IMPORTED_MODULE_5__.parseBigInt)(prime2, 16);\n                var exponent1 = asn1.sub[6].getHexStringValue(); // bigint\n                this.dmp1 = (0,_lib_jsbn_jsbn__WEBPACK_IMPORTED_MODULE_5__.parseBigInt)(exponent1, 16);\n                var exponent2 = asn1.sub[7].getHexStringValue(); // bigint\n                this.dmq1 = (0,_lib_jsbn_jsbn__WEBPACK_IMPORTED_MODULE_5__.parseBigInt)(exponent2, 16);\n                var coefficient = asn1.sub[8].getHexStringValue(); // bigint\n                this.coeff = (0,_lib_jsbn_jsbn__WEBPACK_IMPORTED_MODULE_5__.parseBigInt)(coefficient, 16);\n            }\n            else if (asn1.sub.length === 2) {\n                if (asn1.sub[0].sub) {\n                    // Parse ASN.1 SubjectPublicKeyInfo type as defined by X.509\n                    var bit_string = asn1.sub[1];\n                    var sequence = bit_string.sub[0];\n                    modulus = sequence.sub[0].getHexStringValue();\n                    this.n = (0,_lib_jsbn_jsbn__WEBPACK_IMPORTED_MODULE_5__.parseBigInt)(modulus, 16);\n                    public_exponent = sequence.sub[1].getHexStringValue();\n                    this.e = parseInt(public_exponent, 16);\n                }\n                else {\n                    // Parse ASN.1 RSAPublicKey type as defined by PKCS #1\n                    modulus = asn1.sub[0].getHexStringValue();\n                    this.n = (0,_lib_jsbn_jsbn__WEBPACK_IMPORTED_MODULE_5__.parseBigInt)(modulus, 16);\n                    public_exponent = asn1.sub[1].getHexStringValue();\n                    this.e = parseInt(public_exponent, 16);\n                }\n            }\n            else {\n                return false;\n            }\n            return true;\n        }\n        catch (ex) {\n            return false;\n        }\n    };\n    /**\n     * Translate rsa parameters in a hex encoded string representing the rsa key.\n     *\n     * The translation follow the ASN.1 notation :\n     * RSAPrivateKey ::= SEQUENCE {\n     *   version           Version,\n     *   modulus           INTEGER,  -- n\n     *   publicExponent    INTEGER,  -- e\n     *   privateExponent   INTEGER,  -- d\n     *   prime1            INTEGER,  -- p\n     *   prime2            INTEGER,  -- q\n     *   exponent1         INTEGER,  -- d mod (p1)\n     *   exponent2         INTEGER,  -- d mod (q-1)\n     *   coefficient       INTEGER,  -- (inverse of q) mod p\n     * }\n     * @returns {string}  DER Encoded String representing the rsa private key\n     * @private\n     */\n    JSEncryptRSAKey.prototype.getPrivateBaseKey = function () {\n        var options = {\n            array: [\n                new _lib_jsrsasign_asn1_1_0__WEBPACK_IMPORTED_MODULE_6__.KJUR.asn1.DERInteger({ int: 0 }),\n                new _lib_jsrsasign_asn1_1_0__WEBPACK_IMPORTED_MODULE_6__.KJUR.asn1.DERInteger({ bigint: this.n }),\n                new _lib_jsrsasign_asn1_1_0__WEBPACK_IMPORTED_MODULE_6__.KJUR.asn1.DERInteger({ int: this.e }),\n                new _lib_jsrsasign_asn1_1_0__WEBPACK_IMPORTED_MODULE_6__.KJUR.asn1.DERInteger({ bigint: this.d }),\n                new _lib_jsrsasign_asn1_1_0__WEBPACK_IMPORTED_MODULE_6__.KJUR.asn1.DERInteger({ bigint: this.p }),\n                new _lib_jsrsasign_asn1_1_0__WEBPACK_IMPORTED_MODULE_6__.KJUR.asn1.DERInteger({ bigint: this.q }),\n                new _lib_jsrsasign_asn1_1_0__WEBPACK_IMPORTED_MODULE_6__.KJUR.asn1.DERInteger({ bigint: this.dmp1 }),\n                new _lib_jsrsasign_asn1_1_0__WEBPACK_IMPORTED_MODULE_6__.KJUR.asn1.DERInteger({ bigint: this.dmq1 }),\n                new _lib_jsrsasign_asn1_1_0__WEBPACK_IMPORTED_MODULE_6__.KJUR.asn1.DERInteger({ bigint: this.coeff }),\n            ],\n        };\n        var seq = new _lib_jsrsasign_asn1_1_0__WEBPACK_IMPORTED_MODULE_6__.KJUR.asn1.DERSequence(options);\n        return seq.getEncodedHex();\n    };\n    /**\n     * base64 (pem) encoded version of the DER encoded representation\n     * @returns {string} pem encoded representation without header and footer\n     * @public\n     */\n    JSEncryptRSAKey.prototype.getPrivateBaseKeyB64 = function () {\n        return (0,_lib_jsbn_base64__WEBPACK_IMPORTED_MODULE_0__.hex2b64)(this.getPrivateBaseKey());\n    };\n    /**\n     * Translate rsa parameters in a hex encoded string representing the rsa public key.\n     * The representation follow the ASN.1 notation :\n     * PublicKeyInfo ::= SEQUENCE {\n     *   algorithm       AlgorithmIdentifier,\n     *   PublicKey       BIT STRING\n     * }\n     * Where AlgorithmIdentifier is:\n     * AlgorithmIdentifier ::= SEQUENCE {\n     *   algorithm       OBJECT IDENTIFIER,     the OID of the enc algorithm\n     *   parameters      ANY DEFINED BY algorithm OPTIONAL (NULL for PKCS #1)\n     * }\n     * and PublicKey is a SEQUENCE encapsulated in a BIT STRING\n     * RSAPublicKey ::= SEQUENCE {\n     *   modulus           INTEGER,  -- n\n     *   publicExponent    INTEGER   -- e\n     * }\n     * @returns {string} DER Encoded String representing the rsa public key\n     * @private\n     */\n    JSEncryptRSAKey.prototype.getPublicBaseKey = function () {\n        var first_sequence = new _lib_jsrsasign_asn1_1_0__WEBPACK_IMPORTED_MODULE_6__.KJUR.asn1.DERSequence({\n            array: [\n                new _lib_jsrsasign_asn1_1_0__WEBPACK_IMPORTED_MODULE_6__.KJUR.asn1.DERObjectIdentifier({ oid: \"1.2.840.113549.1.1.1\" }),\n                new _lib_jsrsasign_asn1_1_0__WEBPACK_IMPORTED_MODULE_6__.KJUR.asn1.DERNull(),\n            ],\n        });\n        var second_sequence = new _lib_jsrsasign_asn1_1_0__WEBPACK_IMPORTED_MODULE_6__.KJUR.asn1.DERSequence({\n            array: [\n                new _lib_jsrsasign_asn1_1_0__WEBPACK_IMPORTED_MODULE_6__.KJUR.asn1.DERInteger({ bigint: this.n }),\n                new _lib_jsrsasign_asn1_1_0__WEBPACK_IMPORTED_MODULE_6__.KJUR.asn1.DERInteger({ int: this.e }),\n            ],\n        });\n        var bit_string = new _lib_jsrsasign_asn1_1_0__WEBPACK_IMPORTED_MODULE_6__.KJUR.asn1.DERBitString({\n            hex: \"00\" + second_sequence.getEncodedHex(),\n        });\n        var seq = new _lib_jsrsasign_asn1_1_0__WEBPACK_IMPORTED_MODULE_6__.KJUR.asn1.DERSequence({\n            array: [first_sequence, bit_string],\n        });\n        return seq.getEncodedHex();\n    };\n    /**\n     * base64 (pem) encoded version of the DER encoded representation\n     * @returns {string} pem encoded representation without header and footer\n     * @public\n     */\n    JSEncryptRSAKey.prototype.getPublicBaseKeyB64 = function () {\n        return (0,_lib_jsbn_base64__WEBPACK_IMPORTED_MODULE_0__.hex2b64)(this.getPublicBaseKey());\n    };\n    /**\n     * wrap the string in block of width chars. The default value for rsa keys is 64\n     * characters.\n     * @param {string} str the pem encoded string without header and footer\n     * @param {Number} [width=64] - the length the string has to be wrapped at\n     * @returns {string}\n     * @private\n     */\n    JSEncryptRSAKey.wordwrap = function (str, width) {\n        width = width || 64;\n        if (!str) {\n            return str;\n        }\n        var regex = \"(.{1,\" + width + \"})( +|$\\n?)|(.{1,\" + width + \"})\";\n        return str.match(RegExp(regex, \"g\")).join(\"\\n\");\n    };\n    /**\n     * Retrieve the pem encoded private key\n     * @returns {string} the pem encoded private key with header/footer\n     * @public\n     */\n    JSEncryptRSAKey.prototype.getPrivateKey = function () {\n        var key = \"-----BEGIN RSA PRIVATE KEY-----\\n\";\n        key += JSEncryptRSAKey.wordwrap(this.getPrivateBaseKeyB64()) + \"\\n\";\n        key += \"-----END RSA PRIVATE KEY-----\";\n        return key;\n    };\n    /**\n     * Retrieve the pem encoded public key\n     * @returns {string} the pem encoded public key with header/footer\n     * @public\n     */\n    JSEncryptRSAKey.prototype.getPublicKey = function () {\n        var key = \"-----BEGIN PUBLIC KEY-----\\n\";\n        key += JSEncryptRSAKey.wordwrap(this.getPublicBaseKeyB64()) + \"\\n\";\n        key += \"-----END PUBLIC KEY-----\";\n        return key;\n    };\n    /**\n     * Check if the object contains the necessary parameters to populate the rsa modulus\n     * and public exponent parameters.\n     * @param {Object} [obj={}] - An object that may contain the two public key\n     * parameters\n     * @returns {boolean} true if the object contains both the modulus and the public exponent\n     * properties (n and e)\n     * @todo check for types of n and e. N should be a parseable bigInt object, E should\n     * be a parseable integer number\n     * @private\n     */\n    JSEncryptRSAKey.hasPublicKeyProperty = function (obj) {\n        obj = obj || {};\n        return obj.hasOwnProperty(\"n\") && obj.hasOwnProperty(\"e\");\n    };\n    /**\n     * Check if the object contains ALL the parameters of an RSA key.\n     * @param {Object} [obj={}] - An object that may contain nine rsa key\n     * parameters\n     * @returns {boolean} true if the object contains all the parameters needed\n     * @todo check for types of the parameters all the parameters but the public exponent\n     * should be parseable bigint objects, the public exponent should be a parseable integer number\n     * @private\n     */\n    JSEncryptRSAKey.hasPrivateKeyProperty = function (obj) {\n        obj = obj || {};\n        return (obj.hasOwnProperty(\"n\") &&\n            obj.hasOwnProperty(\"e\") &&\n            obj.hasOwnProperty(\"d\") &&\n            obj.hasOwnProperty(\"p\") &&\n            obj.hasOwnProperty(\"q\") &&\n            obj.hasOwnProperty(\"dmp1\") &&\n            obj.hasOwnProperty(\"dmq1\") &&\n            obj.hasOwnProperty(\"coeff\"));\n    };\n    /**\n     * Parse the properties of obj in the current rsa object. Obj should AT LEAST\n     * include the modulus and public exponent (n, e) parameters.\n     * @param {Object} obj - the object containing rsa parameters\n     * @private\n     */\n    JSEncryptRSAKey.prototype.parsePropertiesFrom = function (obj) {\n        this.n = obj.n;\n        this.e = obj.e;\n        if (obj.hasOwnProperty(\"d\")) {\n            this.d = obj.d;\n            this.p = obj.p;\n            this.q = obj.q;\n            this.dmp1 = obj.dmp1;\n            this.dmq1 = obj.dmq1;\n            this.coeff = obj.coeff;\n        }\n    };\n    return JSEncryptRSAKey;\n}(_lib_jsbn_rsa__WEBPACK_IMPORTED_MODULE_4__.RSAKey));\n\n\n\n//# sourceURL=webpack://JSEncrypt/./lib/JSEncryptRSAKey.js?");

                  /***/
                },

                /***/"./lib/index.js":
                /*!**********************!*\
                  !*** ./lib/index.js ***!
                  \**********************/
                /***/
                function libIndexJs(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
                  eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"JSEncrypt\": () => (/* reexport safe */ _JSEncrypt__WEBPACK_IMPORTED_MODULE_0__.JSEncrypt),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _JSEncrypt__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./JSEncrypt */ \"./lib/JSEncrypt.js\");\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_JSEncrypt__WEBPACK_IMPORTED_MODULE_0__.JSEncrypt);\n\n\n//# sourceURL=webpack://JSEncrypt/./lib/index.js?");

                  /***/
                },

                /***/"./lib/lib/asn1js/asn1.js":
                /*!********************************!*\
                  !*** ./lib/lib/asn1js/asn1.js ***!
                  \********************************/
                /***/
                function libLibAsn1jsAsn1Js(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
                  eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ASN1\": () => (/* binding */ ASN1),\n/* harmony export */   \"ASN1Tag\": () => (/* binding */ ASN1Tag),\n/* harmony export */   \"Stream\": () => (/* binding */ Stream)\n/* harmony export */ });\n/* harmony import */ var _int10__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./int10 */ \"./lib/lib/asn1js/int10.js\");\n// ASN.1 JavaScript decoder\n// Copyright (c) 2008-2014 Lapo Luchini <lapo@lapo.it>\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n/*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */\n/*global oids */\n\nvar ellipsis = \"\\u2026\";\nvar reTimeS = /^(\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/;\nvar reTimeL = /^(\\d\\d\\d\\d)(0[1-9]|1[0-2])(0[1-9]|[12]\\d|3[01])([01]\\d|2[0-3])(?:([0-5]\\d)(?:([0-5]\\d)(?:[.,](\\d{1,3}))?)?)?(Z|[-+](?:[0]\\d|1[0-2])([0-5]\\d)?)?$/;\nfunction stringCut(str, len) {\n    if (str.length > len) {\n        str = str.substring(0, len) + ellipsis;\n    }\n    return str;\n}\nvar Stream = /** @class */ (function () {\n    function Stream(enc, pos) {\n        this.hexDigits = \"0123456789ABCDEF\";\n        if (enc instanceof Stream) {\n            this.enc = enc.enc;\n            this.pos = enc.pos;\n        }\n        else {\n            // enc should be an array or a binary string\n            this.enc = enc;\n            this.pos = pos;\n        }\n    }\n    Stream.prototype.get = function (pos) {\n        if (pos === undefined) {\n            pos = this.pos++;\n        }\n        if (pos >= this.enc.length) {\n            throw new Error(\"Requesting byte offset \".concat(pos, \" on a stream of length \").concat(this.enc.length));\n        }\n        return (\"string\" === typeof this.enc) ? this.enc.charCodeAt(pos) : this.enc[pos];\n    };\n    Stream.prototype.hexByte = function (b) {\n        return this.hexDigits.charAt((b >> 4) & 0xF) + this.hexDigits.charAt(b & 0xF);\n    };\n    Stream.prototype.hexDump = function (start, end, raw) {\n        var s = \"\";\n        for (var i = start; i < end; ++i) {\n            s += this.hexByte(this.get(i));\n            if (raw !== true) {\n                switch (i & 0xF) {\n                    case 0x7:\n                        s += \"  \";\n                        break;\n                    case 0xF:\n                        s += \"\\n\";\n                        break;\n                    default:\n                        s += \" \";\n                }\n            }\n        }\n        return s;\n    };\n    Stream.prototype.isASCII = function (start, end) {\n        for (var i = start; i < end; ++i) {\n            var c = this.get(i);\n            if (c < 32 || c > 176) {\n                return false;\n            }\n        }\n        return true;\n    };\n    Stream.prototype.parseStringISO = function (start, end) {\n        var s = \"\";\n        for (var i = start; i < end; ++i) {\n            s += String.fromCharCode(this.get(i));\n        }\n        return s;\n    };\n    Stream.prototype.parseStringUTF = function (start, end) {\n        var s = \"\";\n        for (var i = start; i < end;) {\n            var c = this.get(i++);\n            if (c < 128) {\n                s += String.fromCharCode(c);\n            }\n            else if ((c > 191) && (c < 224)) {\n                s += String.fromCharCode(((c & 0x1F) << 6) | (this.get(i++) & 0x3F));\n            }\n            else {\n                s += String.fromCharCode(((c & 0x0F) << 12) | ((this.get(i++) & 0x3F) << 6) | (this.get(i++) & 0x3F));\n            }\n        }\n        return s;\n    };\n    Stream.prototype.parseStringBMP = function (start, end) {\n        var str = \"\";\n        var hi;\n        var lo;\n        for (var i = start; i < end;) {\n            hi = this.get(i++);\n            lo = this.get(i++);\n            str += String.fromCharCode((hi << 8) | lo);\n        }\n        return str;\n    };\n    Stream.prototype.parseTime = function (start, end, shortYear) {\n        var s = this.parseStringISO(start, end);\n        var m = (shortYear ? reTimeS : reTimeL).exec(s);\n        if (!m) {\n            return \"Unrecognized time: \" + s;\n        }\n        if (shortYear) {\n            // to avoid querying the timer, use the fixed range [1970, 2069]\n            // it will conform with ITU X.400 [-10, +40] sliding window until 2030\n            m[1] = +m[1];\n            m[1] += (+m[1] < 70) ? 2000 : 1900;\n        }\n        s = m[1] + \"-\" + m[2] + \"-\" + m[3] + \" \" + m[4];\n        if (m[5]) {\n            s += \":\" + m[5];\n            if (m[6]) {\n                s += \":\" + m[6];\n                if (m[7]) {\n                    s += \".\" + m[7];\n                }\n            }\n        }\n        if (m[8]) {\n            s += \" UTC\";\n            if (m[8] != \"Z\") {\n                s += m[8];\n                if (m[9]) {\n                    s += \":\" + m[9];\n                }\n            }\n        }\n        return s;\n    };\n    Stream.prototype.parseInteger = function (start, end) {\n        var v = this.get(start);\n        var neg = (v > 127);\n        var pad = neg ? 255 : 0;\n        var len;\n        var s = \"\";\n        // skip unuseful bits (not allowed in DER)\n        while (v == pad && ++start < end) {\n            v = this.get(start);\n        }\n        len = end - start;\n        if (len === 0) {\n            return neg ? -1 : 0;\n        }\n        // show bit length of huge integers\n        if (len > 4) {\n            s = v;\n            len <<= 3;\n            while (((+s ^ pad) & 0x80) == 0) {\n                s = +s << 1;\n                --len;\n            }\n            s = \"(\" + len + \" bit)\\n\";\n        }\n        // decode the integer\n        if (neg) {\n            v = v - 256;\n        }\n        var n = new _int10__WEBPACK_IMPORTED_MODULE_0__.Int10(v);\n        for (var i = start + 1; i < end; ++i) {\n            n.mulAdd(256, this.get(i));\n        }\n        return s + n.toString();\n    };\n    Stream.prototype.parseBitString = function (start, end, maxLength) {\n        var unusedBit = this.get(start);\n        var lenBit = ((end - start - 1) << 3) - unusedBit;\n        var intro = \"(\" + lenBit + \" bit)\\n\";\n        var s = \"\";\n        for (var i = start + 1; i < end; ++i) {\n            var b = this.get(i);\n            var skip = (i == end - 1) ? unusedBit : 0;\n            for (var j = 7; j >= skip; --j) {\n                s += (b >> j) & 1 ? \"1\" : \"0\";\n            }\n            if (s.length > maxLength) {\n                return intro + stringCut(s, maxLength);\n            }\n        }\n        return intro + s;\n    };\n    Stream.prototype.parseOctetString = function (start, end, maxLength) {\n        if (this.isASCII(start, end)) {\n            return stringCut(this.parseStringISO(start, end), maxLength);\n        }\n        var len = end - start;\n        var s = \"(\" + len + \" byte)\\n\";\n        maxLength /= 2; // we work in bytes\n        if (len > maxLength) {\n            end = start + maxLength;\n        }\n        for (var i = start; i < end; ++i) {\n            s += this.hexByte(this.get(i));\n        }\n        if (len > maxLength) {\n            s += ellipsis;\n        }\n        return s;\n    };\n    Stream.prototype.parseOID = function (start, end, maxLength) {\n        var s = \"\";\n        var n = new _int10__WEBPACK_IMPORTED_MODULE_0__.Int10();\n        var bits = 0;\n        for (var i = start; i < end; ++i) {\n            var v = this.get(i);\n            n.mulAdd(128, v & 0x7F);\n            bits += 7;\n            if (!(v & 0x80)) { // finished\n                if (s === \"\") {\n                    n = n.simplify();\n                    if (n instanceof _int10__WEBPACK_IMPORTED_MODULE_0__.Int10) {\n                        n.sub(80);\n                        s = \"2.\" + n.toString();\n                    }\n                    else {\n                        var m = n < 80 ? n < 40 ? 0 : 1 : 2;\n                        s = m + \".\" + (n - m * 40);\n                    }\n                }\n                else {\n                    s += \".\" + n.toString();\n                }\n                if (s.length > maxLength) {\n                    return stringCut(s, maxLength);\n                }\n                n = new _int10__WEBPACK_IMPORTED_MODULE_0__.Int10();\n                bits = 0;\n            }\n        }\n        if (bits > 0) {\n            s += \".incomplete\";\n        }\n        return s;\n    };\n    return Stream;\n}());\n\nvar ASN1 = /** @class */ (function () {\n    function ASN1(stream, header, length, tag, sub) {\n        if (!(tag instanceof ASN1Tag)) {\n            throw new Error(\"Invalid tag value.\");\n        }\n        this.stream = stream;\n        this.header = header;\n        this.length = length;\n        this.tag = tag;\n        this.sub = sub;\n    }\n    ASN1.prototype.typeName = function () {\n        switch (this.tag.tagClass) {\n            case 0: // universal\n                switch (this.tag.tagNumber) {\n                    case 0x00:\n                        return \"EOC\";\n                    case 0x01:\n                        return \"BOOLEAN\";\n                    case 0x02:\n                        return \"INTEGER\";\n                    case 0x03:\n                        return \"BIT_STRING\";\n                    case 0x04:\n                        return \"OCTET_STRING\";\n                    case 0x05:\n                        return \"NULL\";\n                    case 0x06:\n                        return \"OBJECT_IDENTIFIER\";\n                    case 0x07:\n                        return \"ObjectDescriptor\";\n                    case 0x08:\n                        return \"EXTERNAL\";\n                    case 0x09:\n                        return \"REAL\";\n                    case 0x0A:\n                        return \"ENUMERATED\";\n                    case 0x0B:\n                        return \"EMBEDDED_PDV\";\n                    case 0x0C:\n                        return \"UTF8String\";\n                    case 0x10:\n                        return \"SEQUENCE\";\n                    case 0x11:\n                        return \"SET\";\n                    case 0x12:\n                        return \"NumericString\";\n                    case 0x13:\n                        return \"PrintableString\"; // ASCII subset\n                    case 0x14:\n                        return \"TeletexString\"; // aka T61String\n                    case 0x15:\n                        return \"VideotexString\";\n                    case 0x16:\n                        return \"IA5String\"; // ASCII\n                    case 0x17:\n                        return \"UTCTime\";\n                    case 0x18:\n                        return \"GeneralizedTime\";\n                    case 0x19:\n                        return \"GraphicString\";\n                    case 0x1A:\n                        return \"VisibleString\"; // ASCII subset\n                    case 0x1B:\n                        return \"GeneralString\";\n                    case 0x1C:\n                        return \"UniversalString\";\n                    case 0x1E:\n                        return \"BMPString\";\n                }\n                return \"Universal_\" + this.tag.tagNumber.toString();\n            case 1:\n                return \"Application_\" + this.tag.tagNumber.toString();\n            case 2:\n                return \"[\" + this.tag.tagNumber.toString() + \"]\"; // Context\n            case 3:\n                return \"Private_\" + this.tag.tagNumber.toString();\n        }\n    };\n    ASN1.prototype.content = function (maxLength) {\n        if (this.tag === undefined) {\n            return null;\n        }\n        if (maxLength === undefined) {\n            maxLength = Infinity;\n        }\n        var content = this.posContent();\n        var len = Math.abs(this.length);\n        if (!this.tag.isUniversal()) {\n            if (this.sub !== null) {\n                return \"(\" + this.sub.length + \" elem)\";\n            }\n            return this.stream.parseOctetString(content, content + len, maxLength);\n        }\n        switch (this.tag.tagNumber) {\n            case 0x01: // BOOLEAN\n                return (this.stream.get(content) === 0) ? \"false\" : \"true\";\n            case 0x02: // INTEGER\n                return this.stream.parseInteger(content, content + len);\n            case 0x03: // BIT_STRING\n                return this.sub ? \"(\" + this.sub.length + \" elem)\" :\n                    this.stream.parseBitString(content, content + len, maxLength);\n            case 0x04: // OCTET_STRING\n                return this.sub ? \"(\" + this.sub.length + \" elem)\" :\n                    this.stream.parseOctetString(content, content + len, maxLength);\n            // case 0x05: // NULL\n            case 0x06: // OBJECT_IDENTIFIER\n                return this.stream.parseOID(content, content + len, maxLength);\n            // case 0x07: // ObjectDescriptor\n            // case 0x08: // EXTERNAL\n            // case 0x09: // REAL\n            // case 0x0A: // ENUMERATED\n            // case 0x0B: // EMBEDDED_PDV\n            case 0x10: // SEQUENCE\n            case 0x11: // SET\n                if (this.sub !== null) {\n                    return \"(\" + this.sub.length + \" elem)\";\n                }\n                else {\n                    return \"(no elem)\";\n                }\n            case 0x0C: // UTF8String\n                return stringCut(this.stream.parseStringUTF(content, content + len), maxLength);\n            case 0x12: // NumericString\n            case 0x13: // PrintableString\n            case 0x14: // TeletexString\n            case 0x15: // VideotexString\n            case 0x16: // IA5String\n            // case 0x19: // GraphicString\n            case 0x1A: // VisibleString\n                // case 0x1B: // GeneralString\n                // case 0x1C: // UniversalString\n                return stringCut(this.stream.parseStringISO(content, content + len), maxLength);\n            case 0x1E: // BMPString\n                return stringCut(this.stream.parseStringBMP(content, content + len), maxLength);\n            case 0x17: // UTCTime\n            case 0x18: // GeneralizedTime\n                return this.stream.parseTime(content, content + len, (this.tag.tagNumber == 0x17));\n        }\n        return null;\n    };\n    ASN1.prototype.toString = function () {\n        return this.typeName() + \"@\" + this.stream.pos + \"[header:\" + this.header + \",length:\" + this.length + \",sub:\" + ((this.sub === null) ? \"null\" : this.sub.length) + \"]\";\n    };\n    ASN1.prototype.toPrettyString = function (indent) {\n        if (indent === undefined) {\n            indent = \"\";\n        }\n        var s = indent + this.typeName() + \" @\" + this.stream.pos;\n        if (this.length >= 0) {\n            s += \"+\";\n        }\n        s += this.length;\n        if (this.tag.tagConstructed) {\n            s += \" (constructed)\";\n        }\n        else if ((this.tag.isUniversal() && ((this.tag.tagNumber == 0x03) || (this.tag.tagNumber == 0x04))) && (this.sub !== null)) {\n            s += \" (encapsulates)\";\n        }\n        s += \"\\n\";\n        if (this.sub !== null) {\n            indent += \"  \";\n            for (var i = 0, max = this.sub.length; i < max; ++i) {\n                s += this.sub[i].toPrettyString(indent);\n            }\n        }\n        return s;\n    };\n    ASN1.prototype.posStart = function () {\n        return this.stream.pos;\n    };\n    ASN1.prototype.posContent = function () {\n        return this.stream.pos + this.header;\n    };\n    ASN1.prototype.posEnd = function () {\n        return this.stream.pos + this.header + Math.abs(this.length);\n    };\n    ASN1.prototype.toHexString = function () {\n        return this.stream.hexDump(this.posStart(), this.posEnd(), true);\n    };\n    ASN1.decodeLength = function (stream) {\n        var buf = stream.get();\n        var len = buf & 0x7F;\n        if (len == buf) {\n            return len;\n        }\n        // no reason to use Int10, as it would be a huge buffer anyways\n        if (len > 6) {\n            throw new Error(\"Length over 48 bits not supported at position \" + (stream.pos - 1));\n        }\n        if (len === 0) {\n            return null;\n        } // undefined\n        buf = 0;\n        for (var i = 0; i < len; ++i) {\n            buf = (buf * 256) + stream.get();\n        }\n        return buf;\n    };\n    /**\n     * Retrieve the hexadecimal value (as a string) of the current ASN.1 element\n     * @returns {string}\n     * @public\n     */\n    ASN1.prototype.getHexStringValue = function () {\n        var hexString = this.toHexString();\n        var offset = this.header * 2;\n        var length = this.length * 2;\n        return hexString.substr(offset, length);\n    };\n    ASN1.decode = function (str) {\n        var stream;\n        if (!(str instanceof Stream)) {\n            stream = new Stream(str, 0);\n        }\n        else {\n            stream = str;\n        }\n        var streamStart = new Stream(stream);\n        var tag = new ASN1Tag(stream);\n        var len = ASN1.decodeLength(stream);\n        var start = stream.pos;\n        var header = start - streamStart.pos;\n        var sub = null;\n        var getSub = function () {\n            var ret = [];\n            if (len !== null) {\n                // definite length\n                var end = start + len;\n                while (stream.pos < end) {\n                    ret[ret.length] = ASN1.decode(stream);\n                }\n                if (stream.pos != end) {\n                    throw new Error(\"Content size is not correct for container starting at offset \" + start);\n                }\n            }\n            else {\n                // undefined length\n                try {\n                    for (;;) {\n                        var s = ASN1.decode(stream);\n                        if (s.tag.isEOC()) {\n                            break;\n                        }\n                        ret[ret.length] = s;\n                    }\n                    len = start - stream.pos; // undefined lengths are represented as negative values\n                }\n                catch (e) {\n                    throw new Error(\"Exception while decoding undefined length content: \" + e);\n                }\n            }\n            return ret;\n        };\n        if (tag.tagConstructed) {\n            // must have valid content\n            sub = getSub();\n        }\n        else if (tag.isUniversal() && ((tag.tagNumber == 0x03) || (tag.tagNumber == 0x04))) {\n            // sometimes BitString and OctetString are used to encapsulate ASN.1\n            try {\n                if (tag.tagNumber == 0x03) {\n                    if (stream.get() != 0) {\n                        throw new Error(\"BIT STRINGs with unused bits cannot encapsulate.\");\n                    }\n                }\n                sub = getSub();\n                for (var i = 0; i < sub.length; ++i) {\n                    if (sub[i].tag.isEOC()) {\n                        throw new Error(\"EOC is not supposed to be actual content.\");\n                    }\n                }\n            }\n            catch (e) {\n                // but silently ignore when they don't\n                sub = null;\n            }\n        }\n        if (sub === null) {\n            if (len === null) {\n                throw new Error(\"We can't skip over an invalid tag with undefined length at offset \" + start);\n            }\n            stream.pos = start + Math.abs(len);\n        }\n        return new ASN1(streamStart, header, len, tag, sub);\n    };\n    return ASN1;\n}());\n\nvar ASN1Tag = /** @class */ (function () {\n    function ASN1Tag(stream) {\n        var buf = stream.get();\n        this.tagClass = buf >> 6;\n        this.tagConstructed = ((buf & 0x20) !== 0);\n        this.tagNumber = buf & 0x1F;\n        if (this.tagNumber == 0x1F) { // long tag\n            var n = new _int10__WEBPACK_IMPORTED_MODULE_0__.Int10();\n            do {\n                buf = stream.get();\n                n.mulAdd(128, buf & 0x7F);\n            } while (buf & 0x80);\n            this.tagNumber = n.simplify();\n        }\n    }\n    ASN1Tag.prototype.isUniversal = function () {\n        return this.tagClass === 0x00;\n    };\n    ASN1Tag.prototype.isEOC = function () {\n        return this.tagClass === 0x00 && this.tagNumber === 0x00;\n    };\n    return ASN1Tag;\n}());\n\n\n\n//# sourceURL=webpack://JSEncrypt/./lib/lib/asn1js/asn1.js?");

                  /***/
                },

                /***/"./lib/lib/asn1js/base64.js":
                /*!**********************************!*\
                  !*** ./lib/lib/asn1js/base64.js ***!
                  \**********************************/
                /***/
                function libLibAsn1jsBase64Js(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
                  eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Base64\": () => (/* binding */ Base64)\n/* harmony export */ });\n// Base64 JavaScript decoder\n// Copyright (c) 2008-2013 Lapo Luchini <lapo@lapo.it>\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n/*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */\nvar decoder;\nvar Base64 = {\n    decode: function (a) {\n        var i;\n        if (decoder === undefined) {\n            var b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n            var ignore = \"= \\f\\n\\r\\t\\u00A0\\u2028\\u2029\";\n            decoder = Object.create(null);\n            for (i = 0; i < 64; ++i) {\n                decoder[b64.charAt(i)] = i;\n            }\n            decoder['-'] = 62; //+\n            decoder['_'] = 63; //-\n            for (i = 0; i < ignore.length; ++i) {\n                decoder[ignore.charAt(i)] = -1;\n            }\n        }\n        var out = [];\n        var bits = 0;\n        var char_count = 0;\n        for (i = 0; i < a.length; ++i) {\n            var c = a.charAt(i);\n            if (c == \"=\") {\n                break;\n            }\n            c = decoder[c];\n            if (c == -1) {\n                continue;\n            }\n            if (c === undefined) {\n                throw new Error(\"Illegal character at offset \" + i);\n            }\n            bits |= c;\n            if (++char_count >= 4) {\n                out[out.length] = (bits >> 16);\n                out[out.length] = (bits >> 8) & 0xFF;\n                out[out.length] = bits & 0xFF;\n                bits = 0;\n                char_count = 0;\n            }\n            else {\n                bits <<= 6;\n            }\n        }\n        switch (char_count) {\n            case 1:\n                throw new Error(\"Base64 encoding incomplete: at least 2 bits missing\");\n            case 2:\n                out[out.length] = (bits >> 10);\n                break;\n            case 3:\n                out[out.length] = (bits >> 16);\n                out[out.length] = (bits >> 8) & 0xFF;\n                break;\n        }\n        return out;\n    },\n    re: /-----BEGIN [^-]+-----([A-Za-z0-9+\\/=\\s]+)-----END [^-]+-----|begin-base64[^\\n]+\\n([A-Za-z0-9+\\/=\\s]+)====/,\n    unarmor: function (a) {\n        var m = Base64.re.exec(a);\n        if (m) {\n            if (m[1]) {\n                a = m[1];\n            }\n            else if (m[2]) {\n                a = m[2];\n            }\n            else {\n                throw new Error(\"RegExp out of sync\");\n            }\n        }\n        return Base64.decode(a);\n    }\n};\n\n\n//# sourceURL=webpack://JSEncrypt/./lib/lib/asn1js/base64.js?");

                  /***/
                },

                /***/"./lib/lib/asn1js/hex.js":
                /*!*******************************!*\
                  !*** ./lib/lib/asn1js/hex.js ***!
                  \*******************************/
                /***/
                function libLibAsn1jsHexJs(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
                  eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Hex\": () => (/* binding */ Hex)\n/* harmony export */ });\n// Hex JavaScript decoder\n// Copyright (c) 2008-2013 Lapo Luchini <lapo@lapo.it>\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n/*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */\nvar decoder;\nvar Hex = {\n    decode: function (a) {\n        var i;\n        if (decoder === undefined) {\n            var hex = \"0123456789ABCDEF\";\n            var ignore = \" \\f\\n\\r\\t\\u00A0\\u2028\\u2029\";\n            decoder = {};\n            for (i = 0; i < 16; ++i) {\n                decoder[hex.charAt(i)] = i;\n            }\n            hex = hex.toLowerCase();\n            for (i = 10; i < 16; ++i) {\n                decoder[hex.charAt(i)] = i;\n            }\n            for (i = 0; i < ignore.length; ++i) {\n                decoder[ignore.charAt(i)] = -1;\n            }\n        }\n        var out = [];\n        var bits = 0;\n        var char_count = 0;\n        for (i = 0; i < a.length; ++i) {\n            var c = a.charAt(i);\n            if (c == \"=\") {\n                break;\n            }\n            c = decoder[c];\n            if (c == -1) {\n                continue;\n            }\n            if (c === undefined) {\n                throw new Error(\"Illegal character at offset \" + i);\n            }\n            bits |= c;\n            if (++char_count >= 2) {\n                out[out.length] = bits;\n                bits = 0;\n                char_count = 0;\n            }\n            else {\n                bits <<= 4;\n            }\n        }\n        if (char_count) {\n            throw new Error(\"Hex encoding incomplete: 4 bits missing\");\n        }\n        return out;\n    }\n};\n\n\n//# sourceURL=webpack://JSEncrypt/./lib/lib/asn1js/hex.js?");

                  /***/
                },

                /***/"./lib/lib/asn1js/int10.js":
                /*!*********************************!*\
                  !*** ./lib/lib/asn1js/int10.js ***!
                  \*********************************/
                /***/
                function libLibAsn1jsInt10Js(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
                  eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Int10\": () => (/* binding */ Int10)\n/* harmony export */ });\n// Big integer base-10 printing library\n// Copyright (c) 2014 Lapo Luchini <lapo@lapo.it>\n// Permission to use, copy, modify, and/or distribute this software for any\n// purpose with or without fee is hereby granted, provided that the above\n// copyright notice and this permission notice appear in all copies.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n/*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */\nvar max = 10000000000000; // biggest integer that can still fit 2^53 when multiplied by 256\nvar Int10 = /** @class */ (function () {\n    function Int10(value) {\n        this.buf = [+value || 0];\n    }\n    Int10.prototype.mulAdd = function (m, c) {\n        // assert(m <= 256)\n        var b = this.buf;\n        var l = b.length;\n        var i;\n        var t;\n        for (i = 0; i < l; ++i) {\n            t = b[i] * m + c;\n            if (t < max) {\n                c = 0;\n            }\n            else {\n                c = 0 | (t / max);\n                t -= c * max;\n            }\n            b[i] = t;\n        }\n        if (c > 0) {\n            b[i] = c;\n        }\n    };\n    Int10.prototype.sub = function (c) {\n        // assert(m <= 256)\n        var b = this.buf;\n        var l = b.length;\n        var i;\n        var t;\n        for (i = 0; i < l; ++i) {\n            t = b[i] - c;\n            if (t < 0) {\n                t += max;\n                c = 1;\n            }\n            else {\n                c = 0;\n            }\n            b[i] = t;\n        }\n        while (b[b.length - 1] === 0) {\n            b.pop();\n        }\n    };\n    Int10.prototype.toString = function (base) {\n        if ((base || 10) != 10) {\n            throw new Error(\"only base 10 is supported\");\n        }\n        var b = this.buf;\n        var s = b[b.length - 1].toString();\n        for (var i = b.length - 2; i >= 0; --i) {\n            s += (max + b[i]).toString().substring(1);\n        }\n        return s;\n    };\n    Int10.prototype.valueOf = function () {\n        var b = this.buf;\n        var v = 0;\n        for (var i = b.length - 1; i >= 0; --i) {\n            v = v * max + b[i];\n        }\n        return v;\n    };\n    Int10.prototype.simplify = function () {\n        var b = this.buf;\n        return (b.length == 1) ? b[0] : this;\n    };\n    return Int10;\n}());\n\n\n\n//# sourceURL=webpack://JSEncrypt/./lib/lib/asn1js/int10.js?");

                  /***/
                },

                /***/"./lib/lib/jsbn/base64.js":
                /*!********************************!*\
                  !*** ./lib/lib/jsbn/base64.js ***!
                  \********************************/
                /***/
                function libLibJsbnBase64Js(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
                  eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"b64toBA\": () => (/* binding */ b64toBA),\n/* harmony export */   \"b64tohex\": () => (/* binding */ b64tohex),\n/* harmony export */   \"hex2b64\": () => (/* binding */ hex2b64)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./lib/lib/jsbn/util.js\");\n\nvar b64map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nvar b64pad = \"=\";\nfunction hex2b64(h) {\n    var i;\n    var c;\n    var ret = \"\";\n    for (i = 0; i + 3 <= h.length; i += 3) {\n        c = parseInt(h.substring(i, i + 3), 16);\n        ret += b64map.charAt(c >> 6) + b64map.charAt(c & 63);\n    }\n    if (i + 1 == h.length) {\n        c = parseInt(h.substring(i, i + 1), 16);\n        ret += b64map.charAt(c << 2);\n    }\n    else if (i + 2 == h.length) {\n        c = parseInt(h.substring(i, i + 2), 16);\n        ret += b64map.charAt(c >> 2) + b64map.charAt((c & 3) << 4);\n    }\n    while ((ret.length & 3) > 0) {\n        ret += b64pad;\n    }\n    return ret;\n}\n// convert a base64 string to hex\nfunction b64tohex(s) {\n    var ret = \"\";\n    var i;\n    var k = 0; // b64 state, 0-3\n    var slop = 0;\n    for (i = 0; i < s.length; ++i) {\n        if (s.charAt(i) == b64pad) {\n            break;\n        }\n        var v = b64map.indexOf(s.charAt(i));\n        if (v < 0) {\n            continue;\n        }\n        if (k == 0) {\n            ret += (0,_util__WEBPACK_IMPORTED_MODULE_0__.int2char)(v >> 2);\n            slop = v & 3;\n            k = 1;\n        }\n        else if (k == 1) {\n            ret += (0,_util__WEBPACK_IMPORTED_MODULE_0__.int2char)((slop << 2) | (v >> 4));\n            slop = v & 0xf;\n            k = 2;\n        }\n        else if (k == 2) {\n            ret += (0,_util__WEBPACK_IMPORTED_MODULE_0__.int2char)(slop);\n            ret += (0,_util__WEBPACK_IMPORTED_MODULE_0__.int2char)(v >> 2);\n            slop = v & 3;\n            k = 3;\n        }\n        else {\n            ret += (0,_util__WEBPACK_IMPORTED_MODULE_0__.int2char)((slop << 2) | (v >> 4));\n            ret += (0,_util__WEBPACK_IMPORTED_MODULE_0__.int2char)(v & 0xf);\n            k = 0;\n        }\n    }\n    if (k == 1) {\n        ret += (0,_util__WEBPACK_IMPORTED_MODULE_0__.int2char)(slop << 2);\n    }\n    return ret;\n}\n// convert a base64 string to a byte/number array\nfunction b64toBA(s) {\n    // piggyback on b64tohex for now, optimize later\n    var h = b64tohex(s);\n    var i;\n    var a = [];\n    for (i = 0; 2 * i < h.length; ++i) {\n        a[i] = parseInt(h.substring(2 * i, 2 * i + 2), 16);\n    }\n    return a;\n}\n\n\n//# sourceURL=webpack://JSEncrypt/./lib/lib/jsbn/base64.js?");

                  /***/
                },

                /***/"./lib/lib/jsbn/jsbn.js":
                /*!******************************!*\
                  !*** ./lib/lib/jsbn/jsbn.js ***!
                  \******************************/
                /***/
                function libLibJsbnJsbnJs(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
                  eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BigInteger\": () => (/* binding */ BigInteger),\n/* harmony export */   \"intAt\": () => (/* binding */ intAt),\n/* harmony export */   \"nbi\": () => (/* binding */ nbi),\n/* harmony export */   \"nbits\": () => (/* binding */ nbits),\n/* harmony export */   \"nbv\": () => (/* binding */ nbv),\n/* harmony export */   \"parseBigInt\": () => (/* binding */ parseBigInt)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./lib/lib/jsbn/util.js\");\n// Copyright (c) 2005  Tom Wu\n// All Rights Reserved.\n// See \"LICENSE\" for details.\n// Basic JavaScript BN library - subset useful for RSA encryption.\n\n// Bits per digit\nvar dbits;\n// JavaScript engine analysis\nvar canary = 0xdeadbeefcafe;\nvar j_lm = ((canary & 0xffffff) == 0xefcafe);\n//#region\nvar lowprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997];\nvar lplim = (1 << 26) / lowprimes[lowprimes.length - 1];\n//#endregion\n// (public) Constructor\nvar BigInteger = /** @class */ (function () {\n    function BigInteger(a, b, c) {\n        if (a != null) {\n            if (\"number\" == typeof a) {\n                this.fromNumber(a, b, c);\n            }\n            else if (b == null && \"string\" != typeof a) {\n                this.fromString(a, 256);\n            }\n            else {\n                this.fromString(a, b);\n            }\n        }\n    }\n    //#region PUBLIC\n    // BigInteger.prototype.toString = bnToString;\n    // (public) return string representation in given radix\n    BigInteger.prototype.toString = function (b) {\n        if (this.s < 0) {\n            return \"-\" + this.negate().toString(b);\n        }\n        var k;\n        if (b == 16) {\n            k = 4;\n        }\n        else if (b == 8) {\n            k = 3;\n        }\n        else if (b == 2) {\n            k = 1;\n        }\n        else if (b == 32) {\n            k = 5;\n        }\n        else if (b == 4) {\n            k = 2;\n        }\n        else {\n            return this.toRadix(b);\n        }\n        var km = (1 << k) - 1;\n        var d;\n        var m = false;\n        var r = \"\";\n        var i = this.t;\n        var p = this.DB - (i * this.DB) % k;\n        if (i-- > 0) {\n            if (p < this.DB && (d = this[i] >> p) > 0) {\n                m = true;\n                r = (0,_util__WEBPACK_IMPORTED_MODULE_0__.int2char)(d);\n            }\n            while (i >= 0) {\n                if (p < k) {\n                    d = (this[i] & ((1 << p) - 1)) << (k - p);\n                    d |= this[--i] >> (p += this.DB - k);\n                }\n                else {\n                    d = (this[i] >> (p -= k)) & km;\n                    if (p <= 0) {\n                        p += this.DB;\n                        --i;\n                    }\n                }\n                if (d > 0) {\n                    m = true;\n                }\n                if (m) {\n                    r += (0,_util__WEBPACK_IMPORTED_MODULE_0__.int2char)(d);\n                }\n            }\n        }\n        return m ? r : \"0\";\n    };\n    // BigInteger.prototype.negate = bnNegate;\n    // (public) -this\n    BigInteger.prototype.negate = function () {\n        var r = nbi();\n        BigInteger.ZERO.subTo(this, r);\n        return r;\n    };\n    // BigInteger.prototype.abs = bnAbs;\n    // (public) |this|\n    BigInteger.prototype.abs = function () {\n        return (this.s < 0) ? this.negate() : this;\n    };\n    // BigInteger.prototype.compareTo = bnCompareTo;\n    // (public) return + if this > a, - if this < a, 0 if equal\n    BigInteger.prototype.compareTo = function (a) {\n        var r = this.s - a.s;\n        if (r != 0) {\n            return r;\n        }\n        var i = this.t;\n        r = i - a.t;\n        if (r != 0) {\n            return (this.s < 0) ? -r : r;\n        }\n        while (--i >= 0) {\n            if ((r = this[i] - a[i]) != 0) {\n                return r;\n            }\n        }\n        return 0;\n    };\n    // BigInteger.prototype.bitLength = bnBitLength;\n    // (public) return the number of bits in \"this\"\n    BigInteger.prototype.bitLength = function () {\n        if (this.t <= 0) {\n            return 0;\n        }\n        return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ (this.s & this.DM));\n    };\n    // BigInteger.prototype.mod = bnMod;\n    // (public) this mod a\n    BigInteger.prototype.mod = function (a) {\n        var r = nbi();\n        this.abs().divRemTo(a, null, r);\n        if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) {\n            a.subTo(r, r);\n        }\n        return r;\n    };\n    // BigInteger.prototype.modPowInt = bnModPowInt;\n    // (public) this^e % m, 0 <= e < 2^32\n    BigInteger.prototype.modPowInt = function (e, m) {\n        var z;\n        if (e < 256 || m.isEven()) {\n            z = new Classic(m);\n        }\n        else {\n            z = new Montgomery(m);\n        }\n        return this.exp(e, z);\n    };\n    // BigInteger.prototype.clone = bnClone;\n    // (public)\n    BigInteger.prototype.clone = function () {\n        var r = nbi();\n        this.copyTo(r);\n        return r;\n    };\n    // BigInteger.prototype.intValue = bnIntValue;\n    // (public) return value as integer\n    BigInteger.prototype.intValue = function () {\n        if (this.s < 0) {\n            if (this.t == 1) {\n                return this[0] - this.DV;\n            }\n            else if (this.t == 0) {\n                return -1;\n            }\n        }\n        else if (this.t == 1) {\n            return this[0];\n        }\n        else if (this.t == 0) {\n            return 0;\n        }\n        // assumes 16 < DB < 32\n        return ((this[1] & ((1 << (32 - this.DB)) - 1)) << this.DB) | this[0];\n    };\n    // BigInteger.prototype.byteValue = bnByteValue;\n    // (public) return value as byte\n    BigInteger.prototype.byteValue = function () {\n        return (this.t == 0) ? this.s : (this[0] << 24) >> 24;\n    };\n    // BigInteger.prototype.shortValue = bnShortValue;\n    // (public) return value as short (assumes DB>=16)\n    BigInteger.prototype.shortValue = function () {\n        return (this.t == 0) ? this.s : (this[0] << 16) >> 16;\n    };\n    // BigInteger.prototype.signum = bnSigNum;\n    // (public) 0 if this == 0, 1 if this > 0\n    BigInteger.prototype.signum = function () {\n        if (this.s < 0) {\n            return -1;\n        }\n        else if (this.t <= 0 || (this.t == 1 && this[0] <= 0)) {\n            return 0;\n        }\n        else {\n            return 1;\n        }\n    };\n    // BigInteger.prototype.toByteArray = bnToByteArray;\n    // (public) convert to bigendian byte array\n    BigInteger.prototype.toByteArray = function () {\n        var i = this.t;\n        var r = [];\n        r[0] = this.s;\n        var p = this.DB - (i * this.DB) % 8;\n        var d;\n        var k = 0;\n        if (i-- > 0) {\n            if (p < this.DB && (d = this[i] >> p) != (this.s & this.DM) >> p) {\n                r[k++] = d | (this.s << (this.DB - p));\n            }\n            while (i >= 0) {\n                if (p < 8) {\n                    d = (this[i] & ((1 << p) - 1)) << (8 - p);\n                    d |= this[--i] >> (p += this.DB - 8);\n                }\n                else {\n                    d = (this[i] >> (p -= 8)) & 0xff;\n                    if (p <= 0) {\n                        p += this.DB;\n                        --i;\n                    }\n                }\n                if ((d & 0x80) != 0) {\n                    d |= -256;\n                }\n                if (k == 0 && (this.s & 0x80) != (d & 0x80)) {\n                    ++k;\n                }\n                if (k > 0 || d != this.s) {\n                    r[k++] = d;\n                }\n            }\n        }\n        return r;\n    };\n    // BigInteger.prototype.equals = bnEquals;\n    BigInteger.prototype.equals = function (a) {\n        return (this.compareTo(a) == 0);\n    };\n    // BigInteger.prototype.min = bnMin;\n    BigInteger.prototype.min = function (a) {\n        return (this.compareTo(a) < 0) ? this : a;\n    };\n    // BigInteger.prototype.max = bnMax;\n    BigInteger.prototype.max = function (a) {\n        return (this.compareTo(a) > 0) ? this : a;\n    };\n    // BigInteger.prototype.and = bnAnd;\n    BigInteger.prototype.and = function (a) {\n        var r = nbi();\n        this.bitwiseTo(a, _util__WEBPACK_IMPORTED_MODULE_0__.op_and, r);\n        return r;\n    };\n    // BigInteger.prototype.or = bnOr;\n    BigInteger.prototype.or = function (a) {\n        var r = nbi();\n        this.bitwiseTo(a, _util__WEBPACK_IMPORTED_MODULE_0__.op_or, r);\n        return r;\n    };\n    // BigInteger.prototype.xor = bnXor;\n    BigInteger.prototype.xor = function (a) {\n        var r = nbi();\n        this.bitwiseTo(a, _util__WEBPACK_IMPORTED_MODULE_0__.op_xor, r);\n        return r;\n    };\n    // BigInteger.prototype.andNot = bnAndNot;\n    BigInteger.prototype.andNot = function (a) {\n        var r = nbi();\n        this.bitwiseTo(a, _util__WEBPACK_IMPORTED_MODULE_0__.op_andnot, r);\n        return r;\n    };\n    // BigInteger.prototype.not = bnNot;\n    // (public) ~this\n    BigInteger.prototype.not = function () {\n        var r = nbi();\n        for (var i = 0; i < this.t; ++i) {\n            r[i] = this.DM & ~this[i];\n        }\n        r.t = this.t;\n        r.s = ~this.s;\n        return r;\n    };\n    // BigInteger.prototype.shiftLeft = bnShiftLeft;\n    // (public) this << n\n    BigInteger.prototype.shiftLeft = function (n) {\n        var r = nbi();\n        if (n < 0) {\n            this.rShiftTo(-n, r);\n        }\n        else {\n            this.lShiftTo(n, r);\n        }\n        return r;\n    };\n    // BigInteger.prototype.shiftRight = bnShiftRight;\n    // (public) this >> n\n    BigInteger.prototype.shiftRight = function (n) {\n        var r = nbi();\n        if (n < 0) {\n            this.lShiftTo(-n, r);\n        }\n        else {\n            this.rShiftTo(n, r);\n        }\n        return r;\n    };\n    // BigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\n    // (public) returns index of lowest 1-bit (or -1 if none)\n    BigInteger.prototype.getLowestSetBit = function () {\n        for (var i = 0; i < this.t; ++i) {\n            if (this[i] != 0) {\n                return i * this.DB + (0,_util__WEBPACK_IMPORTED_MODULE_0__.lbit)(this[i]);\n            }\n        }\n        if (this.s < 0) {\n            return this.t * this.DB;\n        }\n        return -1;\n    };\n    // BigInteger.prototype.bitCount = bnBitCount;\n    // (public) return number of set bits\n    BigInteger.prototype.bitCount = function () {\n        var r = 0;\n        var x = this.s & this.DM;\n        for (var i = 0; i < this.t; ++i) {\n            r += (0,_util__WEBPACK_IMPORTED_MODULE_0__.cbit)(this[i] ^ x);\n        }\n        return r;\n    };\n    // BigInteger.prototype.testBit = bnTestBit;\n    // (public) true iff nth bit is set\n    BigInteger.prototype.testBit = function (n) {\n        var j = Math.floor(n / this.DB);\n        if (j >= this.t) {\n            return (this.s != 0);\n        }\n        return ((this[j] & (1 << (n % this.DB))) != 0);\n    };\n    // BigInteger.prototype.setBit = bnSetBit;\n    // (public) this | (1<<n)\n    BigInteger.prototype.setBit = function (n) {\n        return this.changeBit(n, _util__WEBPACK_IMPORTED_MODULE_0__.op_or);\n    };\n    // BigInteger.prototype.clearBit = bnClearBit;\n    // (public) this & ~(1<<n)\n    BigInteger.prototype.clearBit = function (n) {\n        return this.changeBit(n, _util__WEBPACK_IMPORTED_MODULE_0__.op_andnot);\n    };\n    // BigInteger.prototype.flipBit = bnFlipBit;\n    // (public) this ^ (1<<n)\n    BigInteger.prototype.flipBit = function (n) {\n        return this.changeBit(n, _util__WEBPACK_IMPORTED_MODULE_0__.op_xor);\n    };\n    // BigInteger.prototype.add = bnAdd;\n    // (public) this + a\n    BigInteger.prototype.add = function (a) {\n        var r = nbi();\n        this.addTo(a, r);\n        return r;\n    };\n    // BigInteger.prototype.subtract = bnSubtract;\n    // (public) this - a\n    BigInteger.prototype.subtract = function (a) {\n        var r = nbi();\n        this.subTo(a, r);\n        return r;\n    };\n    // BigInteger.prototype.multiply = bnMultiply;\n    // (public) this * a\n    BigInteger.prototype.multiply = function (a) {\n        var r = nbi();\n        this.multiplyTo(a, r);\n        return r;\n    };\n    // BigInteger.prototype.divide = bnDivide;\n    // (public) this / a\n    BigInteger.prototype.divide = function (a) {\n        var r = nbi();\n        this.divRemTo(a, r, null);\n        return r;\n    };\n    // BigInteger.prototype.remainder = bnRemainder;\n    // (public) this % a\n    BigInteger.prototype.remainder = function (a) {\n        var r = nbi();\n        this.divRemTo(a, null, r);\n        return r;\n    };\n    // BigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\n    // (public) [this/a,this%a]\n    BigInteger.prototype.divideAndRemainder = function (a) {\n        var q = nbi();\n        var r = nbi();\n        this.divRemTo(a, q, r);\n        return [q, r];\n    };\n    // BigInteger.prototype.modPow = bnModPow;\n    // (public) this^e % m (HAC 14.85)\n    BigInteger.prototype.modPow = function (e, m) {\n        var i = e.bitLength();\n        var k;\n        var r = nbv(1);\n        var z;\n        if (i <= 0) {\n            return r;\n        }\n        else if (i < 18) {\n            k = 1;\n        }\n        else if (i < 48) {\n            k = 3;\n        }\n        else if (i < 144) {\n            k = 4;\n        }\n        else if (i < 768) {\n            k = 5;\n        }\n        else {\n            k = 6;\n        }\n        if (i < 8) {\n            z = new Classic(m);\n        }\n        else if (m.isEven()) {\n            z = new Barrett(m);\n        }\n        else {\n            z = new Montgomery(m);\n        }\n        // precomputation\n        var g = [];\n        var n = 3;\n        var k1 = k - 1;\n        var km = (1 << k) - 1;\n        g[1] = z.convert(this);\n        if (k > 1) {\n            var g2 = nbi();\n            z.sqrTo(g[1], g2);\n            while (n <= km) {\n                g[n] = nbi();\n                z.mulTo(g2, g[n - 2], g[n]);\n                n += 2;\n            }\n        }\n        var j = e.t - 1;\n        var w;\n        var is1 = true;\n        var r2 = nbi();\n        var t;\n        i = nbits(e[j]) - 1;\n        while (j >= 0) {\n            if (i >= k1) {\n                w = (e[j] >> (i - k1)) & km;\n            }\n            else {\n                w = (e[j] & ((1 << (i + 1)) - 1)) << (k1 - i);\n                if (j > 0) {\n                    w |= e[j - 1] >> (this.DB + i - k1);\n                }\n            }\n            n = k;\n            while ((w & 1) == 0) {\n                w >>= 1;\n                --n;\n            }\n            if ((i -= n) < 0) {\n                i += this.DB;\n                --j;\n            }\n            if (is1) { // ret == 1, don't bother squaring or multiplying it\n                g[w].copyTo(r);\n                is1 = false;\n            }\n            else {\n                while (n > 1) {\n                    z.sqrTo(r, r2);\n                    z.sqrTo(r2, r);\n                    n -= 2;\n                }\n                if (n > 0) {\n                    z.sqrTo(r, r2);\n                }\n                else {\n                    t = r;\n                    r = r2;\n                    r2 = t;\n                }\n                z.mulTo(r2, g[w], r);\n            }\n            while (j >= 0 && (e[j] & (1 << i)) == 0) {\n                z.sqrTo(r, r2);\n                t = r;\n                r = r2;\n                r2 = t;\n                if (--i < 0) {\n                    i = this.DB - 1;\n                    --j;\n                }\n            }\n        }\n        return z.revert(r);\n    };\n    // BigInteger.prototype.modInverse = bnModInverse;\n    // (public) 1/this % m (HAC 14.61)\n    BigInteger.prototype.modInverse = function (m) {\n        var ac = m.isEven();\n        if ((this.isEven() && ac) || m.signum() == 0) {\n            return BigInteger.ZERO;\n        }\n        var u = m.clone();\n        var v = this.clone();\n        var a = nbv(1);\n        var b = nbv(0);\n        var c = nbv(0);\n        var d = nbv(1);\n        while (u.signum() != 0) {\n            while (u.isEven()) {\n                u.rShiftTo(1, u);\n                if (ac) {\n                    if (!a.isEven() || !b.isEven()) {\n                        a.addTo(this, a);\n                        b.subTo(m, b);\n                    }\n                    a.rShiftTo(1, a);\n                }\n                else if (!b.isEven()) {\n                    b.subTo(m, b);\n                }\n                b.rShiftTo(1, b);\n            }\n            while (v.isEven()) {\n                v.rShiftTo(1, v);\n                if (ac) {\n                    if (!c.isEven() || !d.isEven()) {\n                        c.addTo(this, c);\n                        d.subTo(m, d);\n                    }\n                    c.rShiftTo(1, c);\n                }\n                else if (!d.isEven()) {\n                    d.subTo(m, d);\n                }\n                d.rShiftTo(1, d);\n            }\n            if (u.compareTo(v) >= 0) {\n                u.subTo(v, u);\n                if (ac) {\n                    a.subTo(c, a);\n                }\n                b.subTo(d, b);\n            }\n            else {\n                v.subTo(u, v);\n                if (ac) {\n                    c.subTo(a, c);\n                }\n                d.subTo(b, d);\n            }\n        }\n        if (v.compareTo(BigInteger.ONE) != 0) {\n            return BigInteger.ZERO;\n        }\n        if (d.compareTo(m) >= 0) {\n            return d.subtract(m);\n        }\n        if (d.signum() < 0) {\n            d.addTo(m, d);\n        }\n        else {\n            return d;\n        }\n        if (d.signum() < 0) {\n            return d.add(m);\n        }\n        else {\n            return d;\n        }\n    };\n    // BigInteger.prototype.pow = bnPow;\n    // (public) this^e\n    BigInteger.prototype.pow = function (e) {\n        return this.exp(e, new NullExp());\n    };\n    // BigInteger.prototype.gcd = bnGCD;\n    // (public) gcd(this,a) (HAC 14.54)\n    BigInteger.prototype.gcd = function (a) {\n        var x = (this.s < 0) ? this.negate() : this.clone();\n        var y = (a.s < 0) ? a.negate() : a.clone();\n        if (x.compareTo(y) < 0) {\n            var t = x;\n            x = y;\n            y = t;\n        }\n        var i = x.getLowestSetBit();\n        var g = y.getLowestSetBit();\n        if (g < 0) {\n            return x;\n        }\n        if (i < g) {\n            g = i;\n        }\n        if (g > 0) {\n            x.rShiftTo(g, x);\n            y.rShiftTo(g, y);\n        }\n        while (x.signum() > 0) {\n            if ((i = x.getLowestSetBit()) > 0) {\n                x.rShiftTo(i, x);\n            }\n            if ((i = y.getLowestSetBit()) > 0) {\n                y.rShiftTo(i, y);\n            }\n            if (x.compareTo(y) >= 0) {\n                x.subTo(y, x);\n                x.rShiftTo(1, x);\n            }\n            else {\n                y.subTo(x, y);\n                y.rShiftTo(1, y);\n            }\n        }\n        if (g > 0) {\n            y.lShiftTo(g, y);\n        }\n        return y;\n    };\n    // BigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n    // (public) test primality with certainty >= 1-.5^t\n    BigInteger.prototype.isProbablePrime = function (t) {\n        var i;\n        var x = this.abs();\n        if (x.t == 1 && x[0] <= lowprimes[lowprimes.length - 1]) {\n            for (i = 0; i < lowprimes.length; ++i) {\n                if (x[0] == lowprimes[i]) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        if (x.isEven()) {\n            return false;\n        }\n        i = 1;\n        while (i < lowprimes.length) {\n            var m = lowprimes[i];\n            var j = i + 1;\n            while (j < lowprimes.length && m < lplim) {\n                m *= lowprimes[j++];\n            }\n            m = x.modInt(m);\n            while (i < j) {\n                if (m % lowprimes[i++] == 0) {\n                    return false;\n                }\n            }\n        }\n        return x.millerRabin(t);\n    };\n    //#endregion PUBLIC\n    //#region PROTECTED\n    // BigInteger.prototype.copyTo = bnpCopyTo;\n    // (protected) copy this to r\n    BigInteger.prototype.copyTo = function (r) {\n        for (var i = this.t - 1; i >= 0; --i) {\n            r[i] = this[i];\n        }\n        r.t = this.t;\n        r.s = this.s;\n    };\n    // BigInteger.prototype.fromInt = bnpFromInt;\n    // (protected) set from integer value x, -DV <= x < DV\n    BigInteger.prototype.fromInt = function (x) {\n        this.t = 1;\n        this.s = (x < 0) ? -1 : 0;\n        if (x > 0) {\n            this[0] = x;\n        }\n        else if (x < -1) {\n            this[0] = x + this.DV;\n        }\n        else {\n            this.t = 0;\n        }\n    };\n    // BigInteger.prototype.fromString = bnpFromString;\n    // (protected) set from string and radix\n    BigInteger.prototype.fromString = function (s, b) {\n        var k;\n        if (b == 16) {\n            k = 4;\n        }\n        else if (b == 8) {\n            k = 3;\n        }\n        else if (b == 256) {\n            k = 8;\n            /* byte array */\n        }\n        else if (b == 2) {\n            k = 1;\n        }\n        else if (b == 32) {\n            k = 5;\n        }\n        else if (b == 4) {\n            k = 2;\n        }\n        else {\n            this.fromRadix(s, b);\n            return;\n        }\n        this.t = 0;\n        this.s = 0;\n        var i = s.length;\n        var mi = false;\n        var sh = 0;\n        while (--i >= 0) {\n            var x = (k == 8) ? (+s[i]) & 0xff : intAt(s, i);\n            if (x < 0) {\n                if (s.charAt(i) == \"-\") {\n                    mi = true;\n                }\n                continue;\n            }\n            mi = false;\n            if (sh == 0) {\n                this[this.t++] = x;\n            }\n            else if (sh + k > this.DB) {\n                this[this.t - 1] |= (x & ((1 << (this.DB - sh)) - 1)) << sh;\n                this[this.t++] = (x >> (this.DB - sh));\n            }\n            else {\n                this[this.t - 1] |= x << sh;\n            }\n            sh += k;\n            if (sh >= this.DB) {\n                sh -= this.DB;\n            }\n        }\n        if (k == 8 && ((+s[0]) & 0x80) != 0) {\n            this.s = -1;\n            if (sh > 0) {\n                this[this.t - 1] |= ((1 << (this.DB - sh)) - 1) << sh;\n            }\n        }\n        this.clamp();\n        if (mi) {\n            BigInteger.ZERO.subTo(this, this);\n        }\n    };\n    // BigInteger.prototype.clamp = bnpClamp;\n    // (protected) clamp off excess high words\n    BigInteger.prototype.clamp = function () {\n        var c = this.s & this.DM;\n        while (this.t > 0 && this[this.t - 1] == c) {\n            --this.t;\n        }\n    };\n    // BigInteger.prototype.dlShiftTo = bnpDLShiftTo;\n    // (protected) r = this << n*DB\n    BigInteger.prototype.dlShiftTo = function (n, r) {\n        var i;\n        for (i = this.t - 1; i >= 0; --i) {\n            r[i + n] = this[i];\n        }\n        for (i = n - 1; i >= 0; --i) {\n            r[i] = 0;\n        }\n        r.t = this.t + n;\n        r.s = this.s;\n    };\n    // BigInteger.prototype.drShiftTo = bnpDRShiftTo;\n    // (protected) r = this >> n*DB\n    BigInteger.prototype.drShiftTo = function (n, r) {\n        for (var i = n; i < this.t; ++i) {\n            r[i - n] = this[i];\n        }\n        r.t = Math.max(this.t - n, 0);\n        r.s = this.s;\n    };\n    // BigInteger.prototype.lShiftTo = bnpLShiftTo;\n    // (protected) r = this << n\n    BigInteger.prototype.lShiftTo = function (n, r) {\n        var bs = n % this.DB;\n        var cbs = this.DB - bs;\n        var bm = (1 << cbs) - 1;\n        var ds = Math.floor(n / this.DB);\n        var c = (this.s << bs) & this.DM;\n        for (var i = this.t - 1; i >= 0; --i) {\n            r[i + ds + 1] = (this[i] >> cbs) | c;\n            c = (this[i] & bm) << bs;\n        }\n        for (var i = ds - 1; i >= 0; --i) {\n            r[i] = 0;\n        }\n        r[ds] = c;\n        r.t = this.t + ds + 1;\n        r.s = this.s;\n        r.clamp();\n    };\n    // BigInteger.prototype.rShiftTo = bnpRShiftTo;\n    // (protected) r = this >> n\n    BigInteger.prototype.rShiftTo = function (n, r) {\n        r.s = this.s;\n        var ds = Math.floor(n / this.DB);\n        if (ds >= this.t) {\n            r.t = 0;\n            return;\n        }\n        var bs = n % this.DB;\n        var cbs = this.DB - bs;\n        var bm = (1 << bs) - 1;\n        r[0] = this[ds] >> bs;\n        for (var i = ds + 1; i < this.t; ++i) {\n            r[i - ds - 1] |= (this[i] & bm) << cbs;\n            r[i - ds] = this[i] >> bs;\n        }\n        if (bs > 0) {\n            r[this.t - ds - 1] |= (this.s & bm) << cbs;\n        }\n        r.t = this.t - ds;\n        r.clamp();\n    };\n    // BigInteger.prototype.subTo = bnpSubTo;\n    // (protected) r = this - a\n    BigInteger.prototype.subTo = function (a, r) {\n        var i = 0;\n        var c = 0;\n        var m = Math.min(a.t, this.t);\n        while (i < m) {\n            c += this[i] - a[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        if (a.t < this.t) {\n            c -= a.s;\n            while (i < this.t) {\n                c += this[i];\n                r[i++] = c & this.DM;\n                c >>= this.DB;\n            }\n            c += this.s;\n        }\n        else {\n            c += this.s;\n            while (i < a.t) {\n                c -= a[i];\n                r[i++] = c & this.DM;\n                c >>= this.DB;\n            }\n            c -= a.s;\n        }\n        r.s = (c < 0) ? -1 : 0;\n        if (c < -1) {\n            r[i++] = this.DV + c;\n        }\n        else if (c > 0) {\n            r[i++] = c;\n        }\n        r.t = i;\n        r.clamp();\n    };\n    // BigInteger.prototype.multiplyTo = bnpMultiplyTo;\n    // (protected) r = this * a, r != this,a (HAC 14.12)\n    // \"this\" should be the larger one if appropriate.\n    BigInteger.prototype.multiplyTo = function (a, r) {\n        var x = this.abs();\n        var y = a.abs();\n        var i = x.t;\n        r.t = i + y.t;\n        while (--i >= 0) {\n            r[i] = 0;\n        }\n        for (i = 0; i < y.t; ++i) {\n            r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);\n        }\n        r.s = 0;\n        r.clamp();\n        if (this.s != a.s) {\n            BigInteger.ZERO.subTo(r, r);\n        }\n    };\n    // BigInteger.prototype.squareTo = bnpSquareTo;\n    // (protected) r = this^2, r != this (HAC 14.16)\n    BigInteger.prototype.squareTo = function (r) {\n        var x = this.abs();\n        var i = r.t = 2 * x.t;\n        while (--i >= 0) {\n            r[i] = 0;\n        }\n        for (i = 0; i < x.t - 1; ++i) {\n            var c = x.am(i, x[i], r, 2 * i, 0, 1);\n            if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {\n                r[i + x.t] -= x.DV;\n                r[i + x.t + 1] = 1;\n            }\n        }\n        if (r.t > 0) {\n            r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);\n        }\n        r.s = 0;\n        r.clamp();\n    };\n    // BigInteger.prototype.divRemTo = bnpDivRemTo;\n    // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n    // r != q, this != m.  q or r may be null.\n    BigInteger.prototype.divRemTo = function (m, q, r) {\n        var pm = m.abs();\n        if (pm.t <= 0) {\n            return;\n        }\n        var pt = this.abs();\n        if (pt.t < pm.t) {\n            if (q != null) {\n                q.fromInt(0);\n            }\n            if (r != null) {\n                this.copyTo(r);\n            }\n            return;\n        }\n        if (r == null) {\n            r = nbi();\n        }\n        var y = nbi();\n        var ts = this.s;\n        var ms = m.s;\n        var nsh = this.DB - nbits(pm[pm.t - 1]); // normalize modulus\n        if (nsh > 0) {\n            pm.lShiftTo(nsh, y);\n            pt.lShiftTo(nsh, r);\n        }\n        else {\n            pm.copyTo(y);\n            pt.copyTo(r);\n        }\n        var ys = y.t;\n        var y0 = y[ys - 1];\n        if (y0 == 0) {\n            return;\n        }\n        var yt = y0 * (1 << this.F1) + ((ys > 1) ? y[ys - 2] >> this.F2 : 0);\n        var d1 = this.FV / yt;\n        var d2 = (1 << this.F1) / yt;\n        var e = 1 << this.F2;\n        var i = r.t;\n        var j = i - ys;\n        var t = (q == null) ? nbi() : q;\n        y.dlShiftTo(j, t);\n        if (r.compareTo(t) >= 0) {\n            r[r.t++] = 1;\n            r.subTo(t, r);\n        }\n        BigInteger.ONE.dlShiftTo(ys, t);\n        t.subTo(y, y); // \"negative\" y so we can replace sub with am later\n        while (y.t < ys) {\n            y[y.t++] = 0;\n        }\n        while (--j >= 0) {\n            // Estimate quotient digit\n            var qd = (r[--i] == y0) ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);\n            if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) { // Try it out\n                y.dlShiftTo(j, t);\n                r.subTo(t, r);\n                while (r[i] < --qd) {\n                    r.subTo(t, r);\n                }\n            }\n        }\n        if (q != null) {\n            r.drShiftTo(ys, q);\n            if (ts != ms) {\n                BigInteger.ZERO.subTo(q, q);\n            }\n        }\n        r.t = ys;\n        r.clamp();\n        if (nsh > 0) {\n            r.rShiftTo(nsh, r);\n        } // Denormalize remainder\n        if (ts < 0) {\n            BigInteger.ZERO.subTo(r, r);\n        }\n    };\n    // BigInteger.prototype.invDigit = bnpInvDigit;\n    // (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n    // justification:\n    //         xy == 1 (mod m)\n    //         xy =  1+km\n    //   xy(2-xy) = (1+km)(1-km)\n    // x[y(2-xy)] = 1-k^2m^2\n    // x[y(2-xy)] == 1 (mod m^2)\n    // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n    // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n    // JS multiply \"overflows\" differently from C/C++, so care is needed here.\n    BigInteger.prototype.invDigit = function () {\n        if (this.t < 1) {\n            return 0;\n        }\n        var x = this[0];\n        if ((x & 1) == 0) {\n            return 0;\n        }\n        var y = x & 3; // y == 1/x mod 2^2\n        y = (y * (2 - (x & 0xf) * y)) & 0xf; // y == 1/x mod 2^4\n        y = (y * (2 - (x & 0xff) * y)) & 0xff; // y == 1/x mod 2^8\n        y = (y * (2 - (((x & 0xffff) * y) & 0xffff))) & 0xffff; // y == 1/x mod 2^16\n        // last step - calculate inverse mod DV directly;\n        // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n        y = (y * (2 - x * y % this.DV)) % this.DV; // y == 1/x mod 2^dbits\n        // we really want the negative inverse, and -DV < y < DV\n        return (y > 0) ? this.DV - y : -y;\n    };\n    // BigInteger.prototype.isEven = bnpIsEven;\n    // (protected) true iff this is even\n    BigInteger.prototype.isEven = function () {\n        return ((this.t > 0) ? (this[0] & 1) : this.s) == 0;\n    };\n    // BigInteger.prototype.exp = bnpExp;\n    // (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\n    BigInteger.prototype.exp = function (e, z) {\n        if (e > 0xffffffff || e < 1) {\n            return BigInteger.ONE;\n        }\n        var r = nbi();\n        var r2 = nbi();\n        var g = z.convert(this);\n        var i = nbits(e) - 1;\n        g.copyTo(r);\n        while (--i >= 0) {\n            z.sqrTo(r, r2);\n            if ((e & (1 << i)) > 0) {\n                z.mulTo(r2, g, r);\n            }\n            else {\n                var t = r;\n                r = r2;\n                r2 = t;\n            }\n        }\n        return z.revert(r);\n    };\n    // BigInteger.prototype.chunkSize = bnpChunkSize;\n    // (protected) return x s.t. r^x < DV\n    BigInteger.prototype.chunkSize = function (r) {\n        return Math.floor(Math.LN2 * this.DB / Math.log(r));\n    };\n    // BigInteger.prototype.toRadix = bnpToRadix;\n    // (protected) convert to radix string\n    BigInteger.prototype.toRadix = function (b) {\n        if (b == null) {\n            b = 10;\n        }\n        if (this.signum() == 0 || b < 2 || b > 36) {\n            return \"0\";\n        }\n        var cs = this.chunkSize(b);\n        var a = Math.pow(b, cs);\n        var d = nbv(a);\n        var y = nbi();\n        var z = nbi();\n        var r = \"\";\n        this.divRemTo(d, y, z);\n        while (y.signum() > 0) {\n            r = (a + z.intValue()).toString(b).substr(1) + r;\n            y.divRemTo(d, y, z);\n        }\n        return z.intValue().toString(b) + r;\n    };\n    // BigInteger.prototype.fromRadix = bnpFromRadix;\n    // (protected) convert from radix string\n    BigInteger.prototype.fromRadix = function (s, b) {\n        this.fromInt(0);\n        if (b == null) {\n            b = 10;\n        }\n        var cs = this.chunkSize(b);\n        var d = Math.pow(b, cs);\n        var mi = false;\n        var j = 0;\n        var w = 0;\n        for (var i = 0; i < s.length; ++i) {\n            var x = intAt(s, i);\n            if (x < 0) {\n                if (s.charAt(i) == \"-\" && this.signum() == 0) {\n                    mi = true;\n                }\n                continue;\n            }\n            w = b * w + x;\n            if (++j >= cs) {\n                this.dMultiply(d);\n                this.dAddOffset(w, 0);\n                j = 0;\n                w = 0;\n            }\n        }\n        if (j > 0) {\n            this.dMultiply(Math.pow(b, j));\n            this.dAddOffset(w, 0);\n        }\n        if (mi) {\n            BigInteger.ZERO.subTo(this, this);\n        }\n    };\n    // BigInteger.prototype.fromNumber = bnpFromNumber;\n    // (protected) alternate constructor\n    BigInteger.prototype.fromNumber = function (a, b, c) {\n        if (\"number\" == typeof b) {\n            // new BigInteger(int,int,RNG)\n            if (a < 2) {\n                this.fromInt(1);\n            }\n            else {\n                this.fromNumber(a, c);\n                if (!this.testBit(a - 1)) {\n                    // force MSB set\n                    this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), _util__WEBPACK_IMPORTED_MODULE_0__.op_or, this);\n                }\n                if (this.isEven()) {\n                    this.dAddOffset(1, 0);\n                } // force odd\n                while (!this.isProbablePrime(b)) {\n                    this.dAddOffset(2, 0);\n                    if (this.bitLength() > a) {\n                        this.subTo(BigInteger.ONE.shiftLeft(a - 1), this);\n                    }\n                }\n            }\n        }\n        else {\n            // new BigInteger(int,RNG)\n            var x = [];\n            var t = a & 7;\n            x.length = (a >> 3) + 1;\n            b.nextBytes(x);\n            if (t > 0) {\n                x[0] &= ((1 << t) - 1);\n            }\n            else {\n                x[0] = 0;\n            }\n            this.fromString(x, 256);\n        }\n    };\n    // BigInteger.prototype.bitwiseTo = bnpBitwiseTo;\n    // (protected) r = this op a (bitwise)\n    BigInteger.prototype.bitwiseTo = function (a, op, r) {\n        var i;\n        var f;\n        var m = Math.min(a.t, this.t);\n        for (i = 0; i < m; ++i) {\n            r[i] = op(this[i], a[i]);\n        }\n        if (a.t < this.t) {\n            f = a.s & this.DM;\n            for (i = m; i < this.t; ++i) {\n                r[i] = op(this[i], f);\n            }\n            r.t = this.t;\n        }\n        else {\n            f = this.s & this.DM;\n            for (i = m; i < a.t; ++i) {\n                r[i] = op(f, a[i]);\n            }\n            r.t = a.t;\n        }\n        r.s = op(this.s, a.s);\n        r.clamp();\n    };\n    // BigInteger.prototype.changeBit = bnpChangeBit;\n    // (protected) this op (1<<n)\n    BigInteger.prototype.changeBit = function (n, op) {\n        var r = BigInteger.ONE.shiftLeft(n);\n        this.bitwiseTo(r, op, r);\n        return r;\n    };\n    // BigInteger.prototype.addTo = bnpAddTo;\n    // (protected) r = this + a\n    BigInteger.prototype.addTo = function (a, r) {\n        var i = 0;\n        var c = 0;\n        var m = Math.min(a.t, this.t);\n        while (i < m) {\n            c += this[i] + a[i];\n            r[i++] = c & this.DM;\n            c >>= this.DB;\n        }\n        if (a.t < this.t) {\n            c += a.s;\n            while (i < this.t) {\n                c += this[i];\n                r[i++] = c & this.DM;\n                c >>= this.DB;\n            }\n            c += this.s;\n        }\n        else {\n            c += this.s;\n            while (i < a.t) {\n                c += a[i];\n                r[i++] = c & this.DM;\n                c >>= this.DB;\n            }\n            c += a.s;\n        }\n        r.s = (c < 0) ? -1 : 0;\n        if (c > 0) {\n            r[i++] = c;\n        }\n        else if (c < -1) {\n            r[i++] = this.DV + c;\n        }\n        r.t = i;\n        r.clamp();\n    };\n    // BigInteger.prototype.dMultiply = bnpDMultiply;\n    // (protected) this *= n, this >= 0, 1 < n < DV\n    BigInteger.prototype.dMultiply = function (n) {\n        this[this.t] = this.am(0, n - 1, this, 0, 0, this.t);\n        ++this.t;\n        this.clamp();\n    };\n    // BigInteger.prototype.dAddOffset = bnpDAddOffset;\n    // (protected) this += n << w words, this >= 0\n    BigInteger.prototype.dAddOffset = function (n, w) {\n        if (n == 0) {\n            return;\n        }\n        while (this.t <= w) {\n            this[this.t++] = 0;\n        }\n        this[w] += n;\n        while (this[w] >= this.DV) {\n            this[w] -= this.DV;\n            if (++w >= this.t) {\n                this[this.t++] = 0;\n            }\n            ++this[w];\n        }\n    };\n    // BigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\n    // (protected) r = lower n words of \"this * a\", a.t <= n\n    // \"this\" should be the larger one if appropriate.\n    BigInteger.prototype.multiplyLowerTo = function (a, n, r) {\n        var i = Math.min(this.t + a.t, n);\n        r.s = 0; // assumes a,this >= 0\n        r.t = i;\n        while (i > 0) {\n            r[--i] = 0;\n        }\n        for (var j = r.t - this.t; i < j; ++i) {\n            r[i + this.t] = this.am(0, a[i], r, i, 0, this.t);\n        }\n        for (var j = Math.min(a.t, n); i < j; ++i) {\n            this.am(0, a[i], r, i, 0, n - i);\n        }\n        r.clamp();\n    };\n    // BigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\n    // (protected) r = \"this * a\" without lower n words, n > 0\n    // \"this\" should be the larger one if appropriate.\n    BigInteger.prototype.multiplyUpperTo = function (a, n, r) {\n        --n;\n        var i = r.t = this.t + a.t - n;\n        r.s = 0; // assumes a,this >= 0\n        while (--i >= 0) {\n            r[i] = 0;\n        }\n        for (i = Math.max(n - this.t, 0); i < a.t; ++i) {\n            r[this.t + i - n] = this.am(n - i, a[i], r, 0, 0, this.t + i - n);\n        }\n        r.clamp();\n        r.drShiftTo(1, r);\n    };\n    // BigInteger.prototype.modInt = bnpModInt;\n    // (protected) this % n, n < 2^26\n    BigInteger.prototype.modInt = function (n) {\n        if (n <= 0) {\n            return 0;\n        }\n        var d = this.DV % n;\n        var r = (this.s < 0) ? n - 1 : 0;\n        if (this.t > 0) {\n            if (d == 0) {\n                r = this[0] % n;\n            }\n            else {\n                for (var i = this.t - 1; i >= 0; --i) {\n                    r = (d * r + this[i]) % n;\n                }\n            }\n        }\n        return r;\n    };\n    // BigInteger.prototype.millerRabin = bnpMillerRabin;\n    // (protected) true if probably prime (HAC 4.24, Miller-Rabin)\n    BigInteger.prototype.millerRabin = function (t) {\n        var n1 = this.subtract(BigInteger.ONE);\n        var k = n1.getLowestSetBit();\n        if (k <= 0) {\n            return false;\n        }\n        var r = n1.shiftRight(k);\n        t = (t + 1) >> 1;\n        if (t > lowprimes.length) {\n            t = lowprimes.length;\n        }\n        var a = nbi();\n        for (var i = 0; i < t; ++i) {\n            // Pick bases at random, instead of starting at 2\n            a.fromInt(lowprimes[Math.floor(Math.random() * lowprimes.length)]);\n            var y = a.modPow(r, this);\n            if (y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n                var j = 1;\n                while (j++ < k && y.compareTo(n1) != 0) {\n                    y = y.modPowInt(2, this);\n                    if (y.compareTo(BigInteger.ONE) == 0) {\n                        return false;\n                    }\n                }\n                if (y.compareTo(n1) != 0) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n    // BigInteger.prototype.square = bnSquare;\n    // (public) this^2\n    BigInteger.prototype.square = function () {\n        var r = nbi();\n        this.squareTo(r);\n        return r;\n    };\n    //#region ASYNC\n    // Public API method\n    BigInteger.prototype.gcda = function (a, callback) {\n        var x = (this.s < 0) ? this.negate() : this.clone();\n        var y = (a.s < 0) ? a.negate() : a.clone();\n        if (x.compareTo(y) < 0) {\n            var t = x;\n            x = y;\n            y = t;\n        }\n        var i = x.getLowestSetBit();\n        var g = y.getLowestSetBit();\n        if (g < 0) {\n            callback(x);\n            return;\n        }\n        if (i < g) {\n            g = i;\n        }\n        if (g > 0) {\n            x.rShiftTo(g, x);\n            y.rShiftTo(g, y);\n        }\n        // Workhorse of the algorithm, gets called 200 - 800 times per 512 bit keygen.\n        var gcda1 = function () {\n            if ((i = x.getLowestSetBit()) > 0) {\n                x.rShiftTo(i, x);\n            }\n            if ((i = y.getLowestSetBit()) > 0) {\n                y.rShiftTo(i, y);\n            }\n            if (x.compareTo(y) >= 0) {\n                x.subTo(y, x);\n                x.rShiftTo(1, x);\n            }\n            else {\n                y.subTo(x, y);\n                y.rShiftTo(1, y);\n            }\n            if (!(x.signum() > 0)) {\n                if (g > 0) {\n                    y.lShiftTo(g, y);\n                }\n                setTimeout(function () { callback(y); }, 0); // escape\n            }\n            else {\n                setTimeout(gcda1, 0);\n            }\n        };\n        setTimeout(gcda1, 10);\n    };\n    // (protected) alternate constructor\n    BigInteger.prototype.fromNumberAsync = function (a, b, c, callback) {\n        if (\"number\" == typeof b) {\n            if (a < 2) {\n                this.fromInt(1);\n            }\n            else {\n                this.fromNumber(a, c);\n                if (!this.testBit(a - 1)) {\n                    this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), _util__WEBPACK_IMPORTED_MODULE_0__.op_or, this);\n                }\n                if (this.isEven()) {\n                    this.dAddOffset(1, 0);\n                }\n                var bnp_1 = this;\n                var bnpfn1_1 = function () {\n                    bnp_1.dAddOffset(2, 0);\n                    if (bnp_1.bitLength() > a) {\n                        bnp_1.subTo(BigInteger.ONE.shiftLeft(a - 1), bnp_1);\n                    }\n                    if (bnp_1.isProbablePrime(b)) {\n                        setTimeout(function () { callback(); }, 0); // escape\n                    }\n                    else {\n                        setTimeout(bnpfn1_1, 0);\n                    }\n                };\n                setTimeout(bnpfn1_1, 0);\n            }\n        }\n        else {\n            var x = [];\n            var t = a & 7;\n            x.length = (a >> 3) + 1;\n            b.nextBytes(x);\n            if (t > 0) {\n                x[0] &= ((1 << t) - 1);\n            }\n            else {\n                x[0] = 0;\n            }\n            this.fromString(x, 256);\n        }\n    };\n    return BigInteger;\n}());\n\n//#region REDUCERS\n//#region NullExp\nvar NullExp = /** @class */ (function () {\n    function NullExp() {\n    }\n    // NullExp.prototype.convert = nNop;\n    NullExp.prototype.convert = function (x) {\n        return x;\n    };\n    // NullExp.prototype.revert = nNop;\n    NullExp.prototype.revert = function (x) {\n        return x;\n    };\n    // NullExp.prototype.mulTo = nMulTo;\n    NullExp.prototype.mulTo = function (x, y, r) {\n        x.multiplyTo(y, r);\n    };\n    // NullExp.prototype.sqrTo = nSqrTo;\n    NullExp.prototype.sqrTo = function (x, r) {\n        x.squareTo(r);\n    };\n    return NullExp;\n}());\n// Modular reduction using \"classic\" algorithm\nvar Classic = /** @class */ (function () {\n    function Classic(m) {\n        this.m = m;\n    }\n    // Classic.prototype.convert = cConvert;\n    Classic.prototype.convert = function (x) {\n        if (x.s < 0 || x.compareTo(this.m) >= 0) {\n            return x.mod(this.m);\n        }\n        else {\n            return x;\n        }\n    };\n    // Classic.prototype.revert = cRevert;\n    Classic.prototype.revert = function (x) {\n        return x;\n    };\n    // Classic.prototype.reduce = cReduce;\n    Classic.prototype.reduce = function (x) {\n        x.divRemTo(this.m, null, x);\n    };\n    // Classic.prototype.mulTo = cMulTo;\n    Classic.prototype.mulTo = function (x, y, r) {\n        x.multiplyTo(y, r);\n        this.reduce(r);\n    };\n    // Classic.prototype.sqrTo = cSqrTo;\n    Classic.prototype.sqrTo = function (x, r) {\n        x.squareTo(r);\n        this.reduce(r);\n    };\n    return Classic;\n}());\n//#endregion\n//#region Montgomery\n// Montgomery reduction\nvar Montgomery = /** @class */ (function () {\n    function Montgomery(m) {\n        this.m = m;\n        this.mp = m.invDigit();\n        this.mpl = this.mp & 0x7fff;\n        this.mph = this.mp >> 15;\n        this.um = (1 << (m.DB - 15)) - 1;\n        this.mt2 = 2 * m.t;\n    }\n    // Montgomery.prototype.convert = montConvert;\n    // xR mod m\n    Montgomery.prototype.convert = function (x) {\n        var r = nbi();\n        x.abs().dlShiftTo(this.m.t, r);\n        r.divRemTo(this.m, null, r);\n        if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) {\n            this.m.subTo(r, r);\n        }\n        return r;\n    };\n    // Montgomery.prototype.revert = montRevert;\n    // x/R mod m\n    Montgomery.prototype.revert = function (x) {\n        var r = nbi();\n        x.copyTo(r);\n        this.reduce(r);\n        return r;\n    };\n    // Montgomery.prototype.reduce = montReduce;\n    // x = x/R mod m (HAC 14.32)\n    Montgomery.prototype.reduce = function (x) {\n        while (x.t <= this.mt2) {\n            // pad x so am has enough room later\n            x[x.t++] = 0;\n        }\n        for (var i = 0; i < this.m.t; ++i) {\n            // faster way of calculating u0 = x[i]*mp mod DV\n            var j = x[i] & 0x7fff;\n            var u0 = (j * this.mpl + (((j * this.mph + (x[i] >> 15) * this.mpl) & this.um) << 15)) & x.DM;\n            // use am to combine the multiply-shift-add into one call\n            j = i + this.m.t;\n            x[j] += this.m.am(0, u0, x, i, 0, this.m.t);\n            // propagate carry\n            while (x[j] >= x.DV) {\n                x[j] -= x.DV;\n                x[++j]++;\n            }\n        }\n        x.clamp();\n        x.drShiftTo(this.m.t, x);\n        if (x.compareTo(this.m) >= 0) {\n            x.subTo(this.m, x);\n        }\n    };\n    // Montgomery.prototype.mulTo = montMulTo;\n    // r = \"xy/R mod m\"; x,y != r\n    Montgomery.prototype.mulTo = function (x, y, r) {\n        x.multiplyTo(y, r);\n        this.reduce(r);\n    };\n    // Montgomery.prototype.sqrTo = montSqrTo;\n    // r = \"x^2/R mod m\"; x != r\n    Montgomery.prototype.sqrTo = function (x, r) {\n        x.squareTo(r);\n        this.reduce(r);\n    };\n    return Montgomery;\n}());\n//#endregion Montgomery\n//#region Barrett\n// Barrett modular reduction\nvar Barrett = /** @class */ (function () {\n    function Barrett(m) {\n        this.m = m;\n        // setup Barrett\n        this.r2 = nbi();\n        this.q3 = nbi();\n        BigInteger.ONE.dlShiftTo(2 * m.t, this.r2);\n        this.mu = this.r2.divide(m);\n    }\n    // Barrett.prototype.convert = barrettConvert;\n    Barrett.prototype.convert = function (x) {\n        if (x.s < 0 || x.t > 2 * this.m.t) {\n            return x.mod(this.m);\n        }\n        else if (x.compareTo(this.m) < 0) {\n            return x;\n        }\n        else {\n            var r = nbi();\n            x.copyTo(r);\n            this.reduce(r);\n            return r;\n        }\n    };\n    // Barrett.prototype.revert = barrettRevert;\n    Barrett.prototype.revert = function (x) {\n        return x;\n    };\n    // Barrett.prototype.reduce = barrettReduce;\n    // x = x mod m (HAC 14.42)\n    Barrett.prototype.reduce = function (x) {\n        x.drShiftTo(this.m.t - 1, this.r2);\n        if (x.t > this.m.t + 1) {\n            x.t = this.m.t + 1;\n            x.clamp();\n        }\n        this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3);\n        this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2);\n        while (x.compareTo(this.r2) < 0) {\n            x.dAddOffset(1, this.m.t + 1);\n        }\n        x.subTo(this.r2, x);\n        while (x.compareTo(this.m) >= 0) {\n            x.subTo(this.m, x);\n        }\n    };\n    // Barrett.prototype.mulTo = barrettMulTo;\n    // r = x*y mod m; x,y != r\n    Barrett.prototype.mulTo = function (x, y, r) {\n        x.multiplyTo(y, r);\n        this.reduce(r);\n    };\n    // Barrett.prototype.sqrTo = barrettSqrTo;\n    // r = x^2 mod m; x != r\n    Barrett.prototype.sqrTo = function (x, r) {\n        x.squareTo(r);\n        this.reduce(r);\n    };\n    return Barrett;\n}());\n//#endregion\n//#endregion REDUCERS\n// return new, unset BigInteger\nfunction nbi() { return new BigInteger(null); }\nfunction parseBigInt(str, r) {\n    return new BigInteger(str, r);\n}\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\nvar inBrowser = typeof navigator !== \"undefined\";\nif (inBrowser && j_lm && (navigator.appName == \"Microsoft Internet Explorer\")) {\n    // am2 avoids a big mult-and-extract completely.\n    // Max digit bits should be <= 30 because we do bitwise ops\n    // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\n    BigInteger.prototype.am = function am2(i, x, w, j, c, n) {\n        var xl = x & 0x7fff;\n        var xh = x >> 15;\n        while (--n >= 0) {\n            var l = this[i] & 0x7fff;\n            var h = this[i++] >> 15;\n            var m = xh * l + h * xl;\n            l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);\n            c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);\n            w[j++] = l & 0x3fffffff;\n        }\n        return c;\n    };\n    dbits = 30;\n}\nelse if (inBrowser && j_lm && (navigator.appName != \"Netscape\")) {\n    // am1: use a single mult and divide to get the high bits,\n    // max digit bits should be 26 because\n    // max internal value = 2*dvalue^2-2*dvalue (< 2^53)\n    BigInteger.prototype.am = function am1(i, x, w, j, c, n) {\n        while (--n >= 0) {\n            var v = x * this[i++] + w[j] + c;\n            c = Math.floor(v / 0x4000000);\n            w[j++] = v & 0x3ffffff;\n        }\n        return c;\n    };\n    dbits = 26;\n}\nelse { // Mozilla/Netscape seems to prefer am3\n    // Alternately, set max digit bits to 28 since some\n    // browsers slow down when dealing with 32-bit numbers.\n    BigInteger.prototype.am = function am3(i, x, w, j, c, n) {\n        var xl = x & 0x3fff;\n        var xh = x >> 14;\n        while (--n >= 0) {\n            var l = this[i] & 0x3fff;\n            var h = this[i++] >> 14;\n            var m = xh * l + h * xl;\n            l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;\n            c = (l >> 28) + (m >> 14) + xh * h;\n            w[j++] = l & 0xfffffff;\n        }\n        return c;\n    };\n    dbits = 28;\n}\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = ((1 << dbits) - 1);\nBigInteger.prototype.DV = (1 << dbits);\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2, BI_FP);\nBigInteger.prototype.F1 = BI_FP - dbits;\nBigInteger.prototype.F2 = 2 * dbits - BI_FP;\n// Digit conversions\nvar BI_RC = [];\nvar rr;\nvar vv;\nrr = \"0\".charCodeAt(0);\nfor (vv = 0; vv <= 9; ++vv) {\n    BI_RC[rr++] = vv;\n}\nrr = \"a\".charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv) {\n    BI_RC[rr++] = vv;\n}\nrr = \"A\".charCodeAt(0);\nfor (vv = 10; vv < 36; ++vv) {\n    BI_RC[rr++] = vv;\n}\nfunction intAt(s, i) {\n    var c = BI_RC[s.charCodeAt(i)];\n    return (c == null) ? -1 : c;\n}\n// return bigint initialized to value\nfunction nbv(i) {\n    var r = nbi();\n    r.fromInt(i);\n    return r;\n}\n// returns bit length of the integer x\nfunction nbits(x) {\n    var r = 1;\n    var t;\n    if ((t = x >>> 16) != 0) {\n        x = t;\n        r += 16;\n    }\n    if ((t = x >> 8) != 0) {\n        x = t;\n        r += 8;\n    }\n    if ((t = x >> 4) != 0) {\n        x = t;\n        r += 4;\n    }\n    if ((t = x >> 2) != 0) {\n        x = t;\n        r += 2;\n    }\n    if ((t = x >> 1) != 0) {\n        x = t;\n        r += 1;\n    }\n    return r;\n}\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n\n\n//# sourceURL=webpack://JSEncrypt/./lib/lib/jsbn/jsbn.js?");

                  /***/
                },

                /***/"./lib/lib/jsbn/prng4.js":
                /*!*******************************!*\
                  !*** ./lib/lib/jsbn/prng4.js ***!
                  \*******************************/
                /***/
                function libLibJsbnPrng4Js(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
                  eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Arcfour\": () => (/* binding */ Arcfour),\n/* harmony export */   \"prng_newstate\": () => (/* binding */ prng_newstate),\n/* harmony export */   \"rng_psize\": () => (/* binding */ rng_psize)\n/* harmony export */ });\n// prng4.js - uses Arcfour as a PRNG\nvar Arcfour = /** @class */ (function () {\n    function Arcfour() {\n        this.i = 0;\n        this.j = 0;\n        this.S = [];\n    }\n    // Arcfour.prototype.init = ARC4init;\n    // Initialize arcfour context from key, an array of ints, each from [0..255]\n    Arcfour.prototype.init = function (key) {\n        var i;\n        var j;\n        var t;\n        for (i = 0; i < 256; ++i) {\n            this.S[i] = i;\n        }\n        j = 0;\n        for (i = 0; i < 256; ++i) {\n            j = (j + this.S[i] + key[i % key.length]) & 255;\n            t = this.S[i];\n            this.S[i] = this.S[j];\n            this.S[j] = t;\n        }\n        this.i = 0;\n        this.j = 0;\n    };\n    // Arcfour.prototype.next = ARC4next;\n    Arcfour.prototype.next = function () {\n        var t;\n        this.i = (this.i + 1) & 255;\n        this.j = (this.j + this.S[this.i]) & 255;\n        t = this.S[this.i];\n        this.S[this.i] = this.S[this.j];\n        this.S[this.j] = t;\n        return this.S[(t + this.S[this.i]) & 255];\n    };\n    return Arcfour;\n}());\n\n// Plug in your RNG constructor here\nfunction prng_newstate() {\n    return new Arcfour();\n}\n// Pool size must be a multiple of 4 and greater than 32.\n// An array of bytes the size of the pool will be passed to init()\nvar rng_psize = 256;\n\n\n//# sourceURL=webpack://JSEncrypt/./lib/lib/jsbn/prng4.js?");

                  /***/
                },

                /***/"./lib/lib/jsbn/rng.js":
                /*!*****************************!*\
                  !*** ./lib/lib/jsbn/rng.js ***!
                  \*****************************/
                /***/
                function libLibJsbnRngJs(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
                  eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SecureRandom\": () => (/* binding */ SecureRandom)\n/* harmony export */ });\n/* harmony import */ var _prng4__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./prng4 */ \"./lib/lib/jsbn/prng4.js\");\n// Random number generator - requires a PRNG backend, e.g. prng4.js\n\nvar rng_state;\nvar rng_pool = null;\nvar rng_pptr;\n// Initialize the pool with junk if needed.\nif (rng_pool == null) {\n    rng_pool = [];\n    rng_pptr = 0;\n    var t = void 0;\n    if (typeof window !== 'undefined' && window.crypto && window.crypto.getRandomValues) {\n        // Extract entropy (2048 bits) from RNG if available\n        var z = new Uint32Array(256);\n        window.crypto.getRandomValues(z);\n        for (t = 0; t < z.length; ++t) {\n            rng_pool[rng_pptr++] = z[t] & 255;\n        }\n    }\n    // Use mouse events for entropy, if we do not have enough entropy by the time\n    // we need it, entropy will be generated by Math.random.\n    var count = 0;\n    var onMouseMoveListener_1 = function (ev) {\n        count = count || 0;\n        if (count >= 256 || rng_pptr >= _prng4__WEBPACK_IMPORTED_MODULE_0__.rng_psize) {\n            if (window.removeEventListener) {\n                window.removeEventListener(\"mousemove\", onMouseMoveListener_1, false);\n            }\n            else if (window.detachEvent) {\n                window.detachEvent(\"onmousemove\", onMouseMoveListener_1);\n            }\n            return;\n        }\n        try {\n            var mouseCoordinates = ev.x + ev.y;\n            rng_pool[rng_pptr++] = mouseCoordinates & 255;\n            count += 1;\n        }\n        catch (e) {\n            // Sometimes Firefox will deny permission to access event properties for some reason. Ignore.\n        }\n    };\n    if (typeof window !== 'undefined') {\n        if (window.addEventListener) {\n            window.addEventListener(\"mousemove\", onMouseMoveListener_1, false);\n        }\n        else if (window.attachEvent) {\n            window.attachEvent(\"onmousemove\", onMouseMoveListener_1);\n        }\n    }\n}\nfunction rng_get_byte() {\n    if (rng_state == null) {\n        rng_state = (0,_prng4__WEBPACK_IMPORTED_MODULE_0__.prng_newstate)();\n        // At this point, we may not have collected enough entropy.  If not, fall back to Math.random\n        while (rng_pptr < _prng4__WEBPACK_IMPORTED_MODULE_0__.rng_psize) {\n            var random = Math.floor(65536 * Math.random());\n            rng_pool[rng_pptr++] = random & 255;\n        }\n        rng_state.init(rng_pool);\n        for (rng_pptr = 0; rng_pptr < rng_pool.length; ++rng_pptr) {\n            rng_pool[rng_pptr] = 0;\n        }\n        rng_pptr = 0;\n    }\n    // TODO: allow reseeding after first request\n    return rng_state.next();\n}\nvar SecureRandom = /** @class */ (function () {\n    function SecureRandom() {\n    }\n    SecureRandom.prototype.nextBytes = function (ba) {\n        for (var i = 0; i < ba.length; ++i) {\n            ba[i] = rng_get_byte();\n        }\n    };\n    return SecureRandom;\n}());\n\n\n\n//# sourceURL=webpack://JSEncrypt/./lib/lib/jsbn/rng.js?");

                  /***/
                },

                /***/"./lib/lib/jsbn/rsa.js":
                /*!*****************************!*\
                  !*** ./lib/lib/jsbn/rsa.js ***!
                  \*****************************/
                /***/
                function libLibJsbnRsaJs(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
                  eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"RSAKey\": () => (/* binding */ RSAKey)\n/* harmony export */ });\n/* harmony import */ var _jsbn__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./jsbn */ \"./lib/lib/jsbn/jsbn.js\");\n/* harmony import */ var _rng__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rng */ \"./lib/lib/jsbn/rng.js\");\n// Depends on jsbn.js and rng.js\n// Version 1.1: support utf-8 encoding in pkcs1pad2\n// convert a (hex) string to a bignum object\n\n\n// function linebrk(s,n) {\n//   var ret = \"\";\n//   var i = 0;\n//   while(i + n < s.length) {\n//     ret += s.substring(i,i+n) + \"\\n\";\n//     i += n;\n//   }\n//   return ret + s.substring(i,s.length);\n// }\n// function byte2Hex(b) {\n//   if(b < 0x10)\n//     return \"0\" + b.toString(16);\n//   else\n//     return b.toString(16);\n// }\nfunction pkcs1pad1(s, n) {\n    if (n < s.length + 22) {\n        console.error(\"Message too long for RSA\");\n        return null;\n    }\n    var len = n - s.length - 6;\n    var filler = \"\";\n    for (var f = 0; f < len; f += 2) {\n        filler += \"ff\";\n    }\n    var m = \"0001\" + filler + \"00\" + s;\n    return (0,_jsbn__WEBPACK_IMPORTED_MODULE_0__.parseBigInt)(m, 16);\n}\n// PKCS#1 (type 2, random) pad input string s to n bytes, and return a bigint\nfunction pkcs1pad2(s, n) {\n    if (n < s.length + 11) { // TODO: fix for utf-8\n        console.error(\"Message too long for RSA\");\n        return null;\n    }\n    var ba = [];\n    var i = s.length - 1;\n    while (i >= 0 && n > 0) {\n        var c = s.charCodeAt(i--);\n        if (c < 128) { // encode using utf-8\n            ba[--n] = c;\n        }\n        else if ((c > 127) && (c < 2048)) {\n            ba[--n] = (c & 63) | 128;\n            ba[--n] = (c >> 6) | 192;\n        }\n        else {\n            ba[--n] = (c & 63) | 128;\n            ba[--n] = ((c >> 6) & 63) | 128;\n            ba[--n] = (c >> 12) | 224;\n        }\n    }\n    ba[--n] = 0;\n    var rng = new _rng__WEBPACK_IMPORTED_MODULE_1__.SecureRandom();\n    var x = [];\n    while (n > 2) { // random non-zero pad\n        x[0] = 0;\n        while (x[0] == 0) {\n            rng.nextBytes(x);\n        }\n        ba[--n] = x[0];\n    }\n    ba[--n] = 2;\n    ba[--n] = 0;\n    return new _jsbn__WEBPACK_IMPORTED_MODULE_0__.BigInteger(ba);\n}\n// \"empty\" RSA key constructor\nvar RSAKey = /** @class */ (function () {\n    function RSAKey() {\n        this.n = null;\n        this.e = 0;\n        this.d = null;\n        this.p = null;\n        this.q = null;\n        this.dmp1 = null;\n        this.dmq1 = null;\n        this.coeff = null;\n    }\n    //#region PROTECTED\n    // protected\n    // RSAKey.prototype.doPublic = RSADoPublic;\n    // Perform raw public operation on \"x\": return x^e (mod n)\n    RSAKey.prototype.doPublic = function (x) {\n        return x.modPowInt(this.e, this.n);\n    };\n    // RSAKey.prototype.doPrivate = RSADoPrivate;\n    // Perform raw private operation on \"x\": return x^d (mod n)\n    RSAKey.prototype.doPrivate = function (x) {\n        if (this.p == null || this.q == null) {\n            return x.modPow(this.d, this.n);\n        }\n        // TODO: re-calculate any missing CRT params\n        var xp = x.mod(this.p).modPow(this.dmp1, this.p);\n        var xq = x.mod(this.q).modPow(this.dmq1, this.q);\n        while (xp.compareTo(xq) < 0) {\n            xp = xp.add(this.p);\n        }\n        return xp.subtract(xq).multiply(this.coeff).mod(this.p).multiply(this.q).add(xq);\n    };\n    //#endregion PROTECTED\n    //#region PUBLIC\n    // RSAKey.prototype.setPublic = RSASetPublic;\n    // Set the public key fields N and e from hex strings\n    RSAKey.prototype.setPublic = function (N, E) {\n        if (N != null && E != null && N.length > 0 && E.length > 0) {\n            this.n = (0,_jsbn__WEBPACK_IMPORTED_MODULE_0__.parseBigInt)(N, 16);\n            this.e = parseInt(E, 16);\n        }\n        else {\n            console.error(\"Invalid RSA public key\");\n        }\n    };\n    // RSAKey.prototype.encrypt = RSAEncrypt;\n    // Return the PKCS#1 RSA encryption of \"text\" as an even-length hex string\n    RSAKey.prototype.encrypt = function (text) {\n        var maxLength = (this.n.bitLength() + 7) >> 3;\n        var m = pkcs1pad2(text, maxLength);\n        if (m == null) {\n            return null;\n        }\n        var c = this.doPublic(m);\n        if (c == null) {\n            return null;\n        }\n        var h = c.toString(16);\n        var length = h.length;\n        // fix zero before result\n        for (var i = 0; i < maxLength * 2 - length; i++) {\n            h = \"0\" + h;\n        }\n        return h;\n    };\n    // RSAKey.prototype.setPrivate = RSASetPrivate;\n    // Set the private key fields N, e, and d from hex strings\n    RSAKey.prototype.setPrivate = function (N, E, D) {\n        if (N != null && E != null && N.length > 0 && E.length > 0) {\n            this.n = (0,_jsbn__WEBPACK_IMPORTED_MODULE_0__.parseBigInt)(N, 16);\n            this.e = parseInt(E, 16);\n            this.d = (0,_jsbn__WEBPACK_IMPORTED_MODULE_0__.parseBigInt)(D, 16);\n        }\n        else {\n            console.error(\"Invalid RSA private key\");\n        }\n    };\n    // RSAKey.prototype.setPrivateEx = RSASetPrivateEx;\n    // Set the private key fields N, e, d and CRT params from hex strings\n    RSAKey.prototype.setPrivateEx = function (N, E, D, P, Q, DP, DQ, C) {\n        if (N != null && E != null && N.length > 0 && E.length > 0) {\n            this.n = (0,_jsbn__WEBPACK_IMPORTED_MODULE_0__.parseBigInt)(N, 16);\n            this.e = parseInt(E, 16);\n            this.d = (0,_jsbn__WEBPACK_IMPORTED_MODULE_0__.parseBigInt)(D, 16);\n            this.p = (0,_jsbn__WEBPACK_IMPORTED_MODULE_0__.parseBigInt)(P, 16);\n            this.q = (0,_jsbn__WEBPACK_IMPORTED_MODULE_0__.parseBigInt)(Q, 16);\n            this.dmp1 = (0,_jsbn__WEBPACK_IMPORTED_MODULE_0__.parseBigInt)(DP, 16);\n            this.dmq1 = (0,_jsbn__WEBPACK_IMPORTED_MODULE_0__.parseBigInt)(DQ, 16);\n            this.coeff = (0,_jsbn__WEBPACK_IMPORTED_MODULE_0__.parseBigInt)(C, 16);\n        }\n        else {\n            console.error(\"Invalid RSA private key\");\n        }\n    };\n    // RSAKey.prototype.generate = RSAGenerate;\n    // Generate a new random private key B bits long, using public expt E\n    RSAKey.prototype.generate = function (B, E) {\n        var rng = new _rng__WEBPACK_IMPORTED_MODULE_1__.SecureRandom();\n        var qs = B >> 1;\n        this.e = parseInt(E, 16);\n        var ee = new _jsbn__WEBPACK_IMPORTED_MODULE_0__.BigInteger(E, 16);\n        for (;;) {\n            for (;;) {\n                this.p = new _jsbn__WEBPACK_IMPORTED_MODULE_0__.BigInteger(B - qs, 1, rng);\n                if (this.p.subtract(_jsbn__WEBPACK_IMPORTED_MODULE_0__.BigInteger.ONE).gcd(ee).compareTo(_jsbn__WEBPACK_IMPORTED_MODULE_0__.BigInteger.ONE) == 0 && this.p.isProbablePrime(10)) {\n                    break;\n                }\n            }\n            for (;;) {\n                this.q = new _jsbn__WEBPACK_IMPORTED_MODULE_0__.BigInteger(qs, 1, rng);\n                if (this.q.subtract(_jsbn__WEBPACK_IMPORTED_MODULE_0__.BigInteger.ONE).gcd(ee).compareTo(_jsbn__WEBPACK_IMPORTED_MODULE_0__.BigInteger.ONE) == 0 && this.q.isProbablePrime(10)) {\n                    break;\n                }\n            }\n            if (this.p.compareTo(this.q) <= 0) {\n                var t = this.p;\n                this.p = this.q;\n                this.q = t;\n            }\n            var p1 = this.p.subtract(_jsbn__WEBPACK_IMPORTED_MODULE_0__.BigInteger.ONE);\n            var q1 = this.q.subtract(_jsbn__WEBPACK_IMPORTED_MODULE_0__.BigInteger.ONE);\n            var phi = p1.multiply(q1);\n            if (phi.gcd(ee).compareTo(_jsbn__WEBPACK_IMPORTED_MODULE_0__.BigInteger.ONE) == 0) {\n                this.n = this.p.multiply(this.q);\n                this.d = ee.modInverse(phi);\n                this.dmp1 = this.d.mod(p1);\n                this.dmq1 = this.d.mod(q1);\n                this.coeff = this.q.modInverse(this.p);\n                break;\n            }\n        }\n    };\n    // RSAKey.prototype.decrypt = RSADecrypt;\n    // Return the PKCS#1 RSA decryption of \"ctext\".\n    // \"ctext\" is an even-length hex string and the output is a plain string.\n    RSAKey.prototype.decrypt = function (ctext) {\n        var c = (0,_jsbn__WEBPACK_IMPORTED_MODULE_0__.parseBigInt)(ctext, 16);\n        var m = this.doPrivate(c);\n        if (m == null) {\n            return null;\n        }\n        return pkcs1unpad2(m, (this.n.bitLength() + 7) >> 3);\n    };\n    // Generate a new random private key B bits long, using public expt E\n    RSAKey.prototype.generateAsync = function (B, E, callback) {\n        var rng = new _rng__WEBPACK_IMPORTED_MODULE_1__.SecureRandom();\n        var qs = B >> 1;\n        this.e = parseInt(E, 16);\n        var ee = new _jsbn__WEBPACK_IMPORTED_MODULE_0__.BigInteger(E, 16);\n        var rsa = this;\n        // These functions have non-descript names because they were originally for(;;) loops.\n        // I don't know about cryptography to give them better names than loop1-4.\n        var loop1 = function () {\n            var loop4 = function () {\n                if (rsa.p.compareTo(rsa.q) <= 0) {\n                    var t = rsa.p;\n                    rsa.p = rsa.q;\n                    rsa.q = t;\n                }\n                var p1 = rsa.p.subtract(_jsbn__WEBPACK_IMPORTED_MODULE_0__.BigInteger.ONE);\n                var q1 = rsa.q.subtract(_jsbn__WEBPACK_IMPORTED_MODULE_0__.BigInteger.ONE);\n                var phi = p1.multiply(q1);\n                if (phi.gcd(ee).compareTo(_jsbn__WEBPACK_IMPORTED_MODULE_0__.BigInteger.ONE) == 0) {\n                    rsa.n = rsa.p.multiply(rsa.q);\n                    rsa.d = ee.modInverse(phi);\n                    rsa.dmp1 = rsa.d.mod(p1);\n                    rsa.dmq1 = rsa.d.mod(q1);\n                    rsa.coeff = rsa.q.modInverse(rsa.p);\n                    setTimeout(function () { callback(); }, 0); // escape\n                }\n                else {\n                    setTimeout(loop1, 0);\n                }\n            };\n            var loop3 = function () {\n                rsa.q = (0,_jsbn__WEBPACK_IMPORTED_MODULE_0__.nbi)();\n                rsa.q.fromNumberAsync(qs, 1, rng, function () {\n                    rsa.q.subtract(_jsbn__WEBPACK_IMPORTED_MODULE_0__.BigInteger.ONE).gcda(ee, function (r) {\n                        if (r.compareTo(_jsbn__WEBPACK_IMPORTED_MODULE_0__.BigInteger.ONE) == 0 && rsa.q.isProbablePrime(10)) {\n                            setTimeout(loop4, 0);\n                        }\n                        else {\n                            setTimeout(loop3, 0);\n                        }\n                    });\n                });\n            };\n            var loop2 = function () {\n                rsa.p = (0,_jsbn__WEBPACK_IMPORTED_MODULE_0__.nbi)();\n                rsa.p.fromNumberAsync(B - qs, 1, rng, function () {\n                    rsa.p.subtract(_jsbn__WEBPACK_IMPORTED_MODULE_0__.BigInteger.ONE).gcda(ee, function (r) {\n                        if (r.compareTo(_jsbn__WEBPACK_IMPORTED_MODULE_0__.BigInteger.ONE) == 0 && rsa.p.isProbablePrime(10)) {\n                            setTimeout(loop3, 0);\n                        }\n                        else {\n                            setTimeout(loop2, 0);\n                        }\n                    });\n                });\n            };\n            setTimeout(loop2, 0);\n        };\n        setTimeout(loop1, 0);\n    };\n    RSAKey.prototype.sign = function (text, digestMethod, digestName) {\n        var header = getDigestHeader(digestName);\n        var digest = header + digestMethod(text).toString();\n        var m = pkcs1pad1(digest, this.n.bitLength() / 4);\n        if (m == null) {\n            return null;\n        }\n        var c = this.doPrivate(m);\n        if (c == null) {\n            return null;\n        }\n        var h = c.toString(16);\n        if ((h.length & 1) == 0) {\n            return h;\n        }\n        else {\n            return \"0\" + h;\n        }\n    };\n    RSAKey.prototype.verify = function (text, signature, digestMethod) {\n        var c = (0,_jsbn__WEBPACK_IMPORTED_MODULE_0__.parseBigInt)(signature, 16);\n        var m = this.doPublic(c);\n        if (m == null) {\n            return null;\n        }\n        var unpadded = m.toString(16).replace(/^1f+00/, \"\");\n        var digest = removeDigestHeader(unpadded);\n        return digest == digestMethod(text).toString();\n    };\n    return RSAKey;\n}());\n\n// Undo PKCS#1 (type 2, random) padding and, if valid, return the plaintext\nfunction pkcs1unpad2(d, n) {\n    var b = d.toByteArray();\n    var i = 0;\n    while (i < b.length && b[i] == 0) {\n        ++i;\n    }\n    if (b.length - i != n - 1 || b[i] != 2) {\n        return null;\n    }\n    ++i;\n    while (b[i] != 0) {\n        if (++i >= b.length) {\n            return null;\n        }\n    }\n    var ret = \"\";\n    while (++i < b.length) {\n        var c = b[i] & 255;\n        if (c < 128) { // utf-8 decode\n            ret += String.fromCharCode(c);\n        }\n        else if ((c > 191) && (c < 224)) {\n            ret += String.fromCharCode(((c & 31) << 6) | (b[i + 1] & 63));\n            ++i;\n        }\n        else {\n            ret += String.fromCharCode(((c & 15) << 12) | ((b[i + 1] & 63) << 6) | (b[i + 2] & 63));\n            i += 2;\n        }\n    }\n    return ret;\n}\n// https://tools.ietf.org/html/rfc3447#page-43\nvar DIGEST_HEADERS = {\n    md2: \"3020300c06082a864886f70d020205000410\",\n    md5: \"3020300c06082a864886f70d020505000410\",\n    sha1: \"3021300906052b0e03021a05000414\",\n    sha224: \"302d300d06096086480165030402040500041c\",\n    sha256: \"3031300d060960864801650304020105000420\",\n    sha384: \"3041300d060960864801650304020205000430\",\n    sha512: \"3051300d060960864801650304020305000440\",\n    ripemd160: \"3021300906052b2403020105000414\"\n};\nfunction getDigestHeader(name) {\n    return DIGEST_HEADERS[name] || \"\";\n}\nfunction removeDigestHeader(str) {\n    for (var name_1 in DIGEST_HEADERS) {\n        if (DIGEST_HEADERS.hasOwnProperty(name_1)) {\n            var header = DIGEST_HEADERS[name_1];\n            var len = header.length;\n            if (str.substr(0, len) == header) {\n                return str.substr(len);\n            }\n        }\n    }\n    return str;\n}\n// Return the PKCS#1 RSA encryption of \"text\" as a Base64-encoded string\n// function RSAEncryptB64(text) {\n//  var h = this.encrypt(text);\n//  if(h) return hex2b64(h); else return null;\n// }\n// public\n// RSAKey.prototype.encrypt_b64 = RSAEncryptB64;\n\n\n//# sourceURL=webpack://JSEncrypt/./lib/lib/jsbn/rsa.js?");

                  /***/
                },

                /***/"./lib/lib/jsbn/util.js":
                /*!******************************!*\
                  !*** ./lib/lib/jsbn/util.js ***!
                  \******************************/
                /***/
                function libLibJsbnUtilJs(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
                  eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cbit\": () => (/* binding */ cbit),\n/* harmony export */   \"int2char\": () => (/* binding */ int2char),\n/* harmony export */   \"lbit\": () => (/* binding */ lbit),\n/* harmony export */   \"op_and\": () => (/* binding */ op_and),\n/* harmony export */   \"op_andnot\": () => (/* binding */ op_andnot),\n/* harmony export */   \"op_or\": () => (/* binding */ op_or),\n/* harmony export */   \"op_xor\": () => (/* binding */ op_xor)\n/* harmony export */ });\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nfunction int2char(n) {\n    return BI_RM.charAt(n);\n}\n//#region BIT_OPERATIONS\n// (public) this & a\nfunction op_and(x, y) {\n    return x & y;\n}\n// (public) this | a\nfunction op_or(x, y) {\n    return x | y;\n}\n// (public) this ^ a\nfunction op_xor(x, y) {\n    return x ^ y;\n}\n// (public) this & ~a\nfunction op_andnot(x, y) {\n    return x & ~y;\n}\n// return index of lowest 1-bit in x, x < 2^31\nfunction lbit(x) {\n    if (x == 0) {\n        return -1;\n    }\n    var r = 0;\n    if ((x & 0xffff) == 0) {\n        x >>= 16;\n        r += 16;\n    }\n    if ((x & 0xff) == 0) {\n        x >>= 8;\n        r += 8;\n    }\n    if ((x & 0xf) == 0) {\n        x >>= 4;\n        r += 4;\n    }\n    if ((x & 3) == 0) {\n        x >>= 2;\n        r += 2;\n    }\n    if ((x & 1) == 0) {\n        ++r;\n    }\n    return r;\n}\n// return number of 1 bits in x\nfunction cbit(x) {\n    var r = 0;\n    while (x != 0) {\n        x &= x - 1;\n        ++r;\n    }\n    return r;\n}\n//#endregion BIT_OPERATIONS\n\n\n//# sourceURL=webpack://JSEncrypt/./lib/lib/jsbn/util.js?");

                  /***/
                },

                /***/"./lib/lib/jsrsasign/asn1-1.0.js":
                /*!***************************************!*\
                  !*** ./lib/lib/jsrsasign/asn1-1.0.js ***!
                  \***************************************/
                /***/
                function libLibJsrsasignAsn110Js(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
                  eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"KJUR\": () => (/* binding */ KJUR)\n/* harmony export */ });\n/* harmony import */ var _jsbn_jsbn__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../jsbn/jsbn */ \"./lib/lib/jsbn/jsbn.js\");\n/* harmony import */ var _yahoo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./yahoo */ \"./lib/lib/jsrsasign/yahoo.js\");\n/* asn1-1.0.13.js (c) 2013-2017 Kenji Urushima | kjur.github.com/jsrsasign/license\n */\n/*\n * asn1.js - ASN.1 DER encoder classes\n *\n * Copyright (c) 2013-2017 Kenji Urushima (kenji.urushima@gmail.com)\n *\n * This software is licensed under the terms of the MIT License.\n * https://kjur.github.io/jsrsasign/license\n *\n * The above copyright and license notice shall be\n * included in all copies or substantial portions of the Software.\n */\n\n\n/**\n * @fileOverview\n * @name asn1-1.0.js\n * @author Kenji Urushima kenji.urushima@gmail.com\n * @version asn1 1.0.13 (2017-Jun-02)\n * @since jsrsasign 2.1\n * @license <a href=\"https://kjur.github.io/jsrsasign/license/\">MIT License</a>\n */\n/**\n * kjur's class library name space\n * <p>\n * This name space provides following name spaces:\n * <ul>\n * <li>{@link KJUR.asn1} - ASN.1 primitive hexadecimal encoder</li>\n * <li>{@link KJUR.asn1.x509} - ASN.1 structure for X.509 certificate and CRL</li>\n * <li>{@link KJUR.crypto} - Java Cryptographic Extension(JCE) style MessageDigest/Signature\n * class and utilities</li>\n * </ul>\n * </p>\n * NOTE: Please ignore method summary and document of this namespace. This caused by a bug of jsdoc2.\n * @name KJUR\n * @namespace kjur's class library name space\n */\nvar KJUR = {};\n/**\n * kjur's ASN.1 class library name space\n * <p>\n * This is ITU-T X.690 ASN.1 DER encoder class library and\n * class structure and methods is very similar to\n * org.bouncycastle.asn1 package of\n * well known BouncyCaslte Cryptography Library.\n * <h4>PROVIDING ASN.1 PRIMITIVES</h4>\n * Here are ASN.1 DER primitive classes.\n * <ul>\n * <li>0x01 {@link KJUR.asn1.DERBoolean}</li>\n * <li>0x02 {@link KJUR.asn1.DERInteger}</li>\n * <li>0x03 {@link KJUR.asn1.DERBitString}</li>\n * <li>0x04 {@link KJUR.asn1.DEROctetString}</li>\n * <li>0x05 {@link KJUR.asn1.DERNull}</li>\n * <li>0x06 {@link KJUR.asn1.DERObjectIdentifier}</li>\n * <li>0x0a {@link KJUR.asn1.DEREnumerated}</li>\n * <li>0x0c {@link KJUR.asn1.DERUTF8String}</li>\n * <li>0x12 {@link KJUR.asn1.DERNumericString}</li>\n * <li>0x13 {@link KJUR.asn1.DERPrintableString}</li>\n * <li>0x14 {@link KJUR.asn1.DERTeletexString}</li>\n * <li>0x16 {@link KJUR.asn1.DERIA5String}</li>\n * <li>0x17 {@link KJUR.asn1.DERUTCTime}</li>\n * <li>0x18 {@link KJUR.asn1.DERGeneralizedTime}</li>\n * <li>0x30 {@link KJUR.asn1.DERSequence}</li>\n * <li>0x31 {@link KJUR.asn1.DERSet}</li>\n * </ul>\n * <h4>OTHER ASN.1 CLASSES</h4>\n * <ul>\n * <li>{@link KJUR.asn1.ASN1Object}</li>\n * <li>{@link KJUR.asn1.DERAbstractString}</li>\n * <li>{@link KJUR.asn1.DERAbstractTime}</li>\n * <li>{@link KJUR.asn1.DERAbstractStructured}</li>\n * <li>{@link KJUR.asn1.DERTaggedObject}</li>\n * </ul>\n * <h4>SUB NAME SPACES</h4>\n * <ul>\n * <li>{@link KJUR.asn1.cades} - CAdES long term signature format</li>\n * <li>{@link KJUR.asn1.cms} - Cryptographic Message Syntax</li>\n * <li>{@link KJUR.asn1.csr} - Certificate Signing Request (CSR/PKCS#10)</li>\n * <li>{@link KJUR.asn1.tsp} - RFC 3161 Timestamping Protocol Format</li>\n * <li>{@link KJUR.asn1.x509} - RFC 5280 X.509 certificate and CRL</li>\n * </ul>\n * </p>\n * NOTE: Please ignore method summary and document of this namespace.\n * This caused by a bug of jsdoc2.\n * @name KJUR.asn1\n * @namespace\n */\nif (typeof KJUR.asn1 == \"undefined\" || !KJUR.asn1)\n    KJUR.asn1 = {};\n/**\n * ASN1 utilities class\n * @name KJUR.asn1.ASN1Util\n * @class ASN1 utilities class\n * @since asn1 1.0.2\n */\nKJUR.asn1.ASN1Util = new function () {\n    this.integerToByteHex = function (i) {\n        var h = i.toString(16);\n        if ((h.length % 2) == 1)\n            h = '0' + h;\n        return h;\n    };\n    this.bigIntToMinTwosComplementsHex = function (bigIntegerValue) {\n        var h = bigIntegerValue.toString(16);\n        if (h.substr(0, 1) != '-') {\n            if (h.length % 2 == 1) {\n                h = '0' + h;\n            }\n            else {\n                if (!h.match(/^[0-7]/)) {\n                    h = '00' + h;\n                }\n            }\n        }\n        else {\n            var hPos = h.substr(1);\n            var xorLen = hPos.length;\n            if (xorLen % 2 == 1) {\n                xorLen += 1;\n            }\n            else {\n                if (!h.match(/^[0-7]/)) {\n                    xorLen += 2;\n                }\n            }\n            var hMask = '';\n            for (var i = 0; i < xorLen; i++) {\n                hMask += 'f';\n            }\n            var biMask = new _jsbn_jsbn__WEBPACK_IMPORTED_MODULE_0__.BigInteger(hMask, 16);\n            var biNeg = biMask.xor(bigIntegerValue).add(_jsbn_jsbn__WEBPACK_IMPORTED_MODULE_0__.BigInteger.ONE);\n            h = biNeg.toString(16).replace(/^-/, '');\n        }\n        return h;\n    };\n    /**\n     * get PEM string from hexadecimal data and header string\n     * @name getPEMStringFromHex\n     * @memberOf KJUR.asn1.ASN1Util\n     * @function\n     * @param {String} dataHex hexadecimal string of PEM body\n     * @param {String} pemHeader PEM header string (ex. 'RSA PRIVATE KEY')\n     * @return {String} PEM formatted string of input data\n     * @description\n     * This method converts a hexadecimal string to a PEM string with\n     * a specified header. Its line break will be CRLF(\"\\r\\n\").\n     * @example\n     * var pem  = KJUR.asn1.ASN1Util.getPEMStringFromHex('616161', 'RSA PRIVATE KEY');\n     * // value of pem will be:\n     * -----BEGIN PRIVATE KEY-----\n     * YWFh\n     * -----END PRIVATE KEY-----\n     */\n    this.getPEMStringFromHex = function (dataHex, pemHeader) {\n        return hextopem(dataHex, pemHeader);\n    };\n    /**\n     * generate ASN1Object specifed by JSON parameters\n     * @name newObject\n     * @memberOf KJUR.asn1.ASN1Util\n     * @function\n     * @param {Array} param JSON parameter to generate ASN1Object\n     * @return {KJUR.asn1.ASN1Object} generated object\n     * @since asn1 1.0.3\n     * @description\n     * generate any ASN1Object specified by JSON param\n     * including ASN.1 primitive or structured.\n     * Generally 'param' can be described as follows:\n     * <blockquote>\n     * {TYPE-OF-ASNOBJ: ASN1OBJ-PARAMETER}\n     * </blockquote>\n     * 'TYPE-OF-ASN1OBJ' can be one of following symbols:\n     * <ul>\n     * <li>'bool' - DERBoolean</li>\n     * <li>'int' - DERInteger</li>\n     * <li>'bitstr' - DERBitString</li>\n     * <li>'octstr' - DEROctetString</li>\n     * <li>'null' - DERNull</li>\n     * <li>'oid' - DERObjectIdentifier</li>\n     * <li>'enum' - DEREnumerated</li>\n     * <li>'utf8str' - DERUTF8String</li>\n     * <li>'numstr' - DERNumericString</li>\n     * <li>'prnstr' - DERPrintableString</li>\n     * <li>'telstr' - DERTeletexString</li>\n     * <li>'ia5str' - DERIA5String</li>\n     * <li>'utctime' - DERUTCTime</li>\n     * <li>'gentime' - DERGeneralizedTime</li>\n     * <li>'seq' - DERSequence</li>\n     * <li>'set' - DERSet</li>\n     * <li>'tag' - DERTaggedObject</li>\n     * </ul>\n     * @example\n     * newObject({'prnstr': 'aaa'});\n     * newObject({'seq': [{'int': 3}, {'prnstr': 'aaa'}]})\n     * // ASN.1 Tagged Object\n     * newObject({'tag': {'tag': 'a1',\n     *                    'explicit': true,\n     *                    'obj': {'seq': [{'int': 3}, {'prnstr': 'aaa'}]}}});\n     * // more simple representation of ASN.1 Tagged Object\n     * newObject({'tag': ['a1',\n     *                    true,\n     *                    {'seq': [\n     *                      {'int': 3},\n     *                      {'prnstr': 'aaa'}]}\n     *                   ]});\n     */\n    this.newObject = function (param) {\n        var _KJUR = KJUR, _KJUR_asn1 = _KJUR.asn1, _DERBoolean = _KJUR_asn1.DERBoolean, _DERInteger = _KJUR_asn1.DERInteger, _DERBitString = _KJUR_asn1.DERBitString, _DEROctetString = _KJUR_asn1.DEROctetString, _DERNull = _KJUR_asn1.DERNull, _DERObjectIdentifier = _KJUR_asn1.DERObjectIdentifier, _DEREnumerated = _KJUR_asn1.DEREnumerated, _DERUTF8String = _KJUR_asn1.DERUTF8String, _DERNumericString = _KJUR_asn1.DERNumericString, _DERPrintableString = _KJUR_asn1.DERPrintableString, _DERTeletexString = _KJUR_asn1.DERTeletexString, _DERIA5String = _KJUR_asn1.DERIA5String, _DERUTCTime = _KJUR_asn1.DERUTCTime, _DERGeneralizedTime = _KJUR_asn1.DERGeneralizedTime, _DERSequence = _KJUR_asn1.DERSequence, _DERSet = _KJUR_asn1.DERSet, _DERTaggedObject = _KJUR_asn1.DERTaggedObject, _newObject = _KJUR_asn1.ASN1Util.newObject;\n        var keys = Object.keys(param);\n        if (keys.length != 1)\n            throw \"key of param shall be only one.\";\n        var key = keys[0];\n        if (\":bool:int:bitstr:octstr:null:oid:enum:utf8str:numstr:prnstr:telstr:ia5str:utctime:gentime:seq:set:tag:\".indexOf(\":\" + key + \":\") == -1)\n            throw \"undefined key: \" + key;\n        if (key == \"bool\")\n            return new _DERBoolean(param[key]);\n        if (key == \"int\")\n            return new _DERInteger(param[key]);\n        if (key == \"bitstr\")\n            return new _DERBitString(param[key]);\n        if (key == \"octstr\")\n            return new _DEROctetString(param[key]);\n        if (key == \"null\")\n            return new _DERNull(param[key]);\n        if (key == \"oid\")\n            return new _DERObjectIdentifier(param[key]);\n        if (key == \"enum\")\n            return new _DEREnumerated(param[key]);\n        if (key == \"utf8str\")\n            return new _DERUTF8String(param[key]);\n        if (key == \"numstr\")\n            return new _DERNumericString(param[key]);\n        if (key == \"prnstr\")\n            return new _DERPrintableString(param[key]);\n        if (key == \"telstr\")\n            return new _DERTeletexString(param[key]);\n        if (key == \"ia5str\")\n            return new _DERIA5String(param[key]);\n        if (key == \"utctime\")\n            return new _DERUTCTime(param[key]);\n        if (key == \"gentime\")\n            return new _DERGeneralizedTime(param[key]);\n        if (key == \"seq\") {\n            var paramList = param[key];\n            var a = [];\n            for (var i = 0; i < paramList.length; i++) {\n                var asn1Obj = _newObject(paramList[i]);\n                a.push(asn1Obj);\n            }\n            return new _DERSequence({ 'array': a });\n        }\n        if (key == \"set\") {\n            var paramList = param[key];\n            var a = [];\n            for (var i = 0; i < paramList.length; i++) {\n                var asn1Obj = _newObject(paramList[i]);\n                a.push(asn1Obj);\n            }\n            return new _DERSet({ 'array': a });\n        }\n        if (key == \"tag\") {\n            var tagParam = param[key];\n            if (Object.prototype.toString.call(tagParam) === '[object Array]' &&\n                tagParam.length == 3) {\n                var obj = _newObject(tagParam[2]);\n                return new _DERTaggedObject({ tag: tagParam[0],\n                    explicit: tagParam[1],\n                    obj: obj });\n            }\n            else {\n                var newParam = {};\n                if (tagParam.explicit !== undefined)\n                    newParam.explicit = tagParam.explicit;\n                if (tagParam.tag !== undefined)\n                    newParam.tag = tagParam.tag;\n                if (tagParam.obj === undefined)\n                    throw \"obj shall be specified for 'tag'.\";\n                newParam.obj = _newObject(tagParam.obj);\n                return new _DERTaggedObject(newParam);\n            }\n        }\n    };\n    /**\n     * get encoded hexadecimal string of ASN1Object specifed by JSON parameters\n     * @name jsonToASN1HEX\n     * @memberOf KJUR.asn1.ASN1Util\n     * @function\n     * @param {Array} param JSON parameter to generate ASN1Object\n     * @return hexadecimal string of ASN1Object\n     * @since asn1 1.0.4\n     * @description\n     * As for ASN.1 object representation of JSON object,\n     * please see {@link newObject}.\n     * @example\n     * jsonToASN1HEX({'prnstr': 'aaa'});\n     */\n    this.jsonToASN1HEX = function (param) {\n        var asn1Obj = this.newObject(param);\n        return asn1Obj.getEncodedHex();\n    };\n};\n/**\n * get dot noted oid number string from hexadecimal value of OID\n * @name oidHexToInt\n * @memberOf KJUR.asn1.ASN1Util\n * @function\n * @param {String} hex hexadecimal value of object identifier\n * @return {String} dot noted string of object identifier\n * @since jsrsasign 4.8.3 asn1 1.0.7\n * @description\n * This static method converts from hexadecimal string representation of\n * ASN.1 value of object identifier to oid number string.\n * @example\n * KJUR.asn1.ASN1Util.oidHexToInt('550406') &rarr; \"2.5.4.6\"\n */\nKJUR.asn1.ASN1Util.oidHexToInt = function (hex) {\n    var s = \"\";\n    var i01 = parseInt(hex.substr(0, 2), 16);\n    var i0 = Math.floor(i01 / 40);\n    var i1 = i01 % 40;\n    var s = i0 + \".\" + i1;\n    var binbuf = \"\";\n    for (var i = 2; i < hex.length; i += 2) {\n        var value = parseInt(hex.substr(i, 2), 16);\n        var bin = (\"00000000\" + value.toString(2)).slice(-8);\n        binbuf = binbuf + bin.substr(1, 7);\n        if (bin.substr(0, 1) == \"0\") {\n            var bi = new _jsbn_jsbn__WEBPACK_IMPORTED_MODULE_0__.BigInteger(binbuf, 2);\n            s = s + \".\" + bi.toString(10);\n            binbuf = \"\";\n        }\n    }\n    ;\n    return s;\n};\n/**\n * get hexadecimal value of object identifier from dot noted oid value\n * @name oidIntToHex\n * @memberOf KJUR.asn1.ASN1Util\n * @function\n * @param {String} oidString dot noted string of object identifier\n * @return {String} hexadecimal value of object identifier\n * @since jsrsasign 4.8.3 asn1 1.0.7\n * @description\n * This static method converts from object identifier value string.\n * to hexadecimal string representation of it.\n * @example\n * KJUR.asn1.ASN1Util.oidIntToHex(\"2.5.4.6\") &rarr; \"550406\"\n */\nKJUR.asn1.ASN1Util.oidIntToHex = function (oidString) {\n    var itox = function (i) {\n        var h = i.toString(16);\n        if (h.length == 1)\n            h = '0' + h;\n        return h;\n    };\n    var roidtox = function (roid) {\n        var h = '';\n        var bi = new _jsbn_jsbn__WEBPACK_IMPORTED_MODULE_0__.BigInteger(roid, 10);\n        var b = bi.toString(2);\n        var padLen = 7 - b.length % 7;\n        if (padLen == 7)\n            padLen = 0;\n        var bPad = '';\n        for (var i = 0; i < padLen; i++)\n            bPad += '0';\n        b = bPad + b;\n        for (var i = 0; i < b.length - 1; i += 7) {\n            var b8 = b.substr(i, 7);\n            if (i != b.length - 7)\n                b8 = '1' + b8;\n            h += itox(parseInt(b8, 2));\n        }\n        return h;\n    };\n    if (!oidString.match(/^[0-9.]+$/)) {\n        throw \"malformed oid string: \" + oidString;\n    }\n    var h = '';\n    var a = oidString.split('.');\n    var i0 = parseInt(a[0]) * 40 + parseInt(a[1]);\n    h += itox(i0);\n    a.splice(0, 2);\n    for (var i = 0; i < a.length; i++) {\n        h += roidtox(a[i]);\n    }\n    return h;\n};\n// ********************************************************************\n//  Abstract ASN.1 Classes\n// ********************************************************************\n// ********************************************************************\n/**\n * base class for ASN.1 DER encoder object\n * @name KJUR.asn1.ASN1Object\n * @class base class for ASN.1 DER encoder object\n * @property {Boolean} isModified flag whether internal data was changed\n * @property {String} hTLV hexadecimal string of ASN.1 TLV\n * @property {String} hT hexadecimal string of ASN.1 TLV tag(T)\n * @property {String} hL hexadecimal string of ASN.1 TLV length(L)\n * @property {String} hV hexadecimal string of ASN.1 TLV value(V)\n * @description\n */\nKJUR.asn1.ASN1Object = function () {\n    var isModified = true;\n    var hTLV = null;\n    var hT = '00';\n    var hL = '00';\n    var hV = '';\n    /**\n     * get hexadecimal ASN.1 TLV length(L) bytes from TLV value(V)\n     * @name getLengthHexFromValue\n     * @memberOf KJUR.asn1.ASN1Object#\n     * @function\n     * @return {String} hexadecimal string of ASN.1 TLV length(L)\n     */\n    this.getLengthHexFromValue = function () {\n        if (typeof this.hV == \"undefined\" || this.hV == null) {\n            throw \"this.hV is null or undefined.\";\n        }\n        if (this.hV.length % 2 == 1) {\n            throw \"value hex must be even length: n=\" + hV.length + \",v=\" + this.hV;\n        }\n        var n = this.hV.length / 2;\n        var hN = n.toString(16);\n        if (hN.length % 2 == 1) {\n            hN = \"0\" + hN;\n        }\n        if (n < 128) {\n            return hN;\n        }\n        else {\n            var hNlen = hN.length / 2;\n            if (hNlen > 15) {\n                throw \"ASN.1 length too long to represent by 8x: n = \" + n.toString(16);\n            }\n            var head = 128 + hNlen;\n            return head.toString(16) + hN;\n        }\n    };\n    /**\n     * get hexadecimal string of ASN.1 TLV bytes\n     * @name getEncodedHex\n     * @memberOf KJUR.asn1.ASN1Object#\n     * @function\n     * @return {String} hexadecimal string of ASN.1 TLV\n     */\n    this.getEncodedHex = function () {\n        if (this.hTLV == null || this.isModified) {\n            this.hV = this.getFreshValueHex();\n            this.hL = this.getLengthHexFromValue();\n            this.hTLV = this.hT + this.hL + this.hV;\n            this.isModified = false;\n            //alert(\"first time: \" + this.hTLV);\n        }\n        return this.hTLV;\n    };\n    /**\n     * get hexadecimal string of ASN.1 TLV value(V) bytes\n     * @name getValueHex\n     * @memberOf KJUR.asn1.ASN1Object#\n     * @function\n     * @return {String} hexadecimal string of ASN.1 TLV value(V) bytes\n     */\n    this.getValueHex = function () {\n        this.getEncodedHex();\n        return this.hV;\n    };\n    this.getFreshValueHex = function () {\n        return '';\n    };\n};\n// == BEGIN DERAbstractString ================================================\n/**\n * base class for ASN.1 DER string classes\n * @name KJUR.asn1.DERAbstractString\n * @class base class for ASN.1 DER string classes\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\n * @property {String} s internal string of value\n * @extends KJUR.asn1.ASN1Object\n * @description\n * <br/>\n * As for argument 'params' for constructor, you can specify one of\n * following properties:\n * <ul>\n * <li>str - specify initial ASN.1 value(V) by a string</li>\n * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>\n * </ul>\n * NOTE: 'params' can be omitted.\n */\nKJUR.asn1.DERAbstractString = function (params) {\n    KJUR.asn1.DERAbstractString.superclass.constructor.call(this);\n    var s = null;\n    var hV = null;\n    /**\n     * get string value of this string object\n     * @name getString\n     * @memberOf KJUR.asn1.DERAbstractString#\n     * @function\n     * @return {String} string value of this string object\n     */\n    this.getString = function () {\n        return this.s;\n    };\n    /**\n     * set value by a string\n     * @name setString\n     * @memberOf KJUR.asn1.DERAbstractString#\n     * @function\n     * @param {String} newS value by a string to set\n     */\n    this.setString = function (newS) {\n        this.hTLV = null;\n        this.isModified = true;\n        this.s = newS;\n        this.hV = stohex(this.s);\n    };\n    /**\n     * set value by a hexadecimal string\n     * @name setStringHex\n     * @memberOf KJUR.asn1.DERAbstractString#\n     * @function\n     * @param {String} newHexString value by a hexadecimal string to set\n     */\n    this.setStringHex = function (newHexString) {\n        this.hTLV = null;\n        this.isModified = true;\n        this.s = null;\n        this.hV = newHexString;\n    };\n    this.getFreshValueHex = function () {\n        return this.hV;\n    };\n    if (typeof params != \"undefined\") {\n        if (typeof params == \"string\") {\n            this.setString(params);\n        }\n        else if (typeof params['str'] != \"undefined\") {\n            this.setString(params['str']);\n        }\n        else if (typeof params['hex'] != \"undefined\") {\n            this.setStringHex(params['hex']);\n        }\n    }\n};\n_yahoo__WEBPACK_IMPORTED_MODULE_1__.YAHOO.lang.extend(KJUR.asn1.DERAbstractString, KJUR.asn1.ASN1Object);\n// == END   DERAbstractString ================================================\n// == BEGIN DERAbstractTime ==================================================\n/**\n * base class for ASN.1 DER Generalized/UTCTime class\n * @name KJUR.asn1.DERAbstractTime\n * @class base class for ASN.1 DER Generalized/UTCTime class\n * @param {Array} params associative array of parameters (ex. {'str': '130430235959Z'})\n * @extends KJUR.asn1.ASN1Object\n * @description\n * @see KJUR.asn1.ASN1Object - superclass\n */\nKJUR.asn1.DERAbstractTime = function (params) {\n    KJUR.asn1.DERAbstractTime.superclass.constructor.call(this);\n    var s = null;\n    var date = null;\n    // --- PRIVATE METHODS --------------------\n    this.localDateToUTC = function (d) {\n        utc = d.getTime() + (d.getTimezoneOffset() * 60000);\n        var utcDate = new Date(utc);\n        return utcDate;\n    };\n    /*\n     * format date string by Data object\n     * @name formatDate\n     * @memberOf KJUR.asn1.AbstractTime;\n     * @param {Date} dateObject\n     * @param {string} type 'utc' or 'gen'\n     * @param {boolean} withMillis flag for with millisections or not\n     * @description\n     * 'withMillis' flag is supported from asn1 1.0.6.\n     */\n    this.formatDate = function (dateObject, type, withMillis) {\n        var pad = this.zeroPadding;\n        var d = this.localDateToUTC(dateObject);\n        var year = String(d.getFullYear());\n        if (type == 'utc')\n            year = year.substr(2, 2);\n        var month = pad(String(d.getMonth() + 1), 2);\n        var day = pad(String(d.getDate()), 2);\n        var hour = pad(String(d.getHours()), 2);\n        var min = pad(String(d.getMinutes()), 2);\n        var sec = pad(String(d.getSeconds()), 2);\n        var s = year + month + day + hour + min + sec;\n        if (withMillis === true) {\n            var millis = d.getMilliseconds();\n            if (millis != 0) {\n                var sMillis = pad(String(millis), 3);\n                sMillis = sMillis.replace(/[0]+$/, \"\");\n                s = s + \".\" + sMillis;\n            }\n        }\n        return s + \"Z\";\n    };\n    this.zeroPadding = function (s, len) {\n        if (s.length >= len)\n            return s;\n        return new Array(len - s.length + 1).join('0') + s;\n    };\n    // --- PUBLIC METHODS --------------------\n    /**\n     * get string value of this string object\n     * @name getString\n     * @memberOf KJUR.asn1.DERAbstractTime#\n     * @function\n     * @return {String} string value of this time object\n     */\n    this.getString = function () {\n        return this.s;\n    };\n    /**\n     * set value by a string\n     * @name setString\n     * @memberOf KJUR.asn1.DERAbstractTime#\n     * @function\n     * @param {String} newS value by a string to set such like \"130430235959Z\"\n     */\n    this.setString = function (newS) {\n        this.hTLV = null;\n        this.isModified = true;\n        this.s = newS;\n        this.hV = stohex(newS);\n    };\n    /**\n     * set value by a Date object\n     * @name setByDateValue\n     * @memberOf KJUR.asn1.DERAbstractTime#\n     * @function\n     * @param {Integer} year year of date (ex. 2013)\n     * @param {Integer} month month of date between 1 and 12 (ex. 12)\n     * @param {Integer} day day of month\n     * @param {Integer} hour hours of date\n     * @param {Integer} min minutes of date\n     * @param {Integer} sec seconds of date\n     */\n    this.setByDateValue = function (year, month, day, hour, min, sec) {\n        var dateObject = new Date(Date.UTC(year, month - 1, day, hour, min, sec, 0));\n        this.setByDate(dateObject);\n    };\n    this.getFreshValueHex = function () {\n        return this.hV;\n    };\n};\n_yahoo__WEBPACK_IMPORTED_MODULE_1__.YAHOO.lang.extend(KJUR.asn1.DERAbstractTime, KJUR.asn1.ASN1Object);\n// == END   DERAbstractTime ==================================================\n// == BEGIN DERAbstractStructured ============================================\n/**\n * base class for ASN.1 DER structured class\n * @name KJUR.asn1.DERAbstractStructured\n * @class base class for ASN.1 DER structured class\n * @property {Array} asn1Array internal array of ASN1Object\n * @extends KJUR.asn1.ASN1Object\n * @description\n * @see KJUR.asn1.ASN1Object - superclass\n */\nKJUR.asn1.DERAbstractStructured = function (params) {\n    KJUR.asn1.DERAbstractString.superclass.constructor.call(this);\n    var asn1Array = null;\n    /**\n     * set value by array of ASN1Object\n     * @name setByASN1ObjectArray\n     * @memberOf KJUR.asn1.DERAbstractStructured#\n     * @function\n     * @param {array} asn1ObjectArray array of ASN1Object to set\n     */\n    this.setByASN1ObjectArray = function (asn1ObjectArray) {\n        this.hTLV = null;\n        this.isModified = true;\n        this.asn1Array = asn1ObjectArray;\n    };\n    /**\n     * append an ASN1Object to internal array\n     * @name appendASN1Object\n     * @memberOf KJUR.asn1.DERAbstractStructured#\n     * @function\n     * @param {ASN1Object} asn1Object to add\n     */\n    this.appendASN1Object = function (asn1Object) {\n        this.hTLV = null;\n        this.isModified = true;\n        this.asn1Array.push(asn1Object);\n    };\n    this.asn1Array = new Array();\n    if (typeof params != \"undefined\") {\n        if (typeof params['array'] != \"undefined\") {\n            this.asn1Array = params['array'];\n        }\n    }\n};\n_yahoo__WEBPACK_IMPORTED_MODULE_1__.YAHOO.lang.extend(KJUR.asn1.DERAbstractStructured, KJUR.asn1.ASN1Object);\n// ********************************************************************\n//  ASN.1 Object Classes\n// ********************************************************************\n// ********************************************************************\n/**\n * class for ASN.1 DER Boolean\n * @name KJUR.asn1.DERBoolean\n * @class class for ASN.1 DER Boolean\n * @extends KJUR.asn1.ASN1Object\n * @description\n * @see KJUR.asn1.ASN1Object - superclass\n */\nKJUR.asn1.DERBoolean = function () {\n    KJUR.asn1.DERBoolean.superclass.constructor.call(this);\n    this.hT = \"01\";\n    this.hTLV = \"0101ff\";\n};\n_yahoo__WEBPACK_IMPORTED_MODULE_1__.YAHOO.lang.extend(KJUR.asn1.DERBoolean, KJUR.asn1.ASN1Object);\n// ********************************************************************\n/**\n * class for ASN.1 DER Integer\n * @name KJUR.asn1.DERInteger\n * @class class for ASN.1 DER Integer\n * @extends KJUR.asn1.ASN1Object\n * @description\n * <br/>\n * As for argument 'params' for constructor, you can specify one of\n * following properties:\n * <ul>\n * <li>int - specify initial ASN.1 value(V) by integer value</li>\n * <li>bigint - specify initial ASN.1 value(V) by BigInteger object</li>\n * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>\n * </ul>\n * NOTE: 'params' can be omitted.\n */\nKJUR.asn1.DERInteger = function (params) {\n    KJUR.asn1.DERInteger.superclass.constructor.call(this);\n    this.hT = \"02\";\n    /**\n     * set value by Tom Wu's BigInteger object\n     * @name setByBigInteger\n     * @memberOf KJUR.asn1.DERInteger#\n     * @function\n     * @param {BigInteger} bigIntegerValue to set\n     */\n    this.setByBigInteger = function (bigIntegerValue) {\n        this.hTLV = null;\n        this.isModified = true;\n        this.hV = KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(bigIntegerValue);\n    };\n    /**\n     * set value by integer value\n     * @name setByInteger\n     * @memberOf KJUR.asn1.DERInteger\n     * @function\n     * @param {Integer} integer value to set\n     */\n    this.setByInteger = function (intValue) {\n        var bi = new _jsbn_jsbn__WEBPACK_IMPORTED_MODULE_0__.BigInteger(String(intValue), 10);\n        this.setByBigInteger(bi);\n    };\n    /**\n     * set value by integer value\n     * @name setValueHex\n     * @memberOf KJUR.asn1.DERInteger#\n     * @function\n     * @param {String} hexadecimal string of integer value\n     * @description\n     * <br/>\n     * NOTE: Value shall be represented by minimum octet length of\n     * two's complement representation.\n     * @example\n     * new KJUR.asn1.DERInteger(123);\n     * new KJUR.asn1.DERInteger({'int': 123});\n     * new KJUR.asn1.DERInteger({'hex': '1fad'});\n     */\n    this.setValueHex = function (newHexString) {\n        this.hV = newHexString;\n    };\n    this.getFreshValueHex = function () {\n        return this.hV;\n    };\n    if (typeof params != \"undefined\") {\n        if (typeof params['bigint'] != \"undefined\") {\n            this.setByBigInteger(params['bigint']);\n        }\n        else if (typeof params['int'] != \"undefined\") {\n            this.setByInteger(params['int']);\n        }\n        else if (typeof params == \"number\") {\n            this.setByInteger(params);\n        }\n        else if (typeof params['hex'] != \"undefined\") {\n            this.setValueHex(params['hex']);\n        }\n    }\n};\n_yahoo__WEBPACK_IMPORTED_MODULE_1__.YAHOO.lang.extend(KJUR.asn1.DERInteger, KJUR.asn1.ASN1Object);\n// ********************************************************************\n/**\n * class for ASN.1 DER encoded BitString primitive\n * @name KJUR.asn1.DERBitString\n * @class class for ASN.1 DER encoded BitString primitive\n * @extends KJUR.asn1.ASN1Object\n * @description\n * <br/>\n * As for argument 'params' for constructor, you can specify one of\n * following properties:\n * <ul>\n * <li>bin - specify binary string (ex. '10111')</li>\n * <li>array - specify array of boolean (ex. [true,false,true,true])</li>\n * <li>hex - specify hexadecimal string of ASN.1 value(V) including unused bits</li>\n * <li>obj - specify {@link KJUR.asn1.ASN1Util.newObject}\n * argument for \"BitString encapsulates\" structure.</li>\n * </ul>\n * NOTE1: 'params' can be omitted.<br/>\n * NOTE2: 'obj' parameter have been supported since\n * asn1 1.0.11, jsrsasign 6.1.1 (2016-Sep-25).<br/>\n * @example\n * // default constructor\n * o = new KJUR.asn1.DERBitString();\n * // initialize with binary string\n * o = new KJUR.asn1.DERBitString({bin: \"1011\"});\n * // initialize with boolean array\n * o = new KJUR.asn1.DERBitString({array: [true,false,true,true]});\n * // initialize with hexadecimal string (04 is unused bits)\n * o = new KJUR.asn1.DEROctetString({hex: \"04bac0\"});\n * // initialize with ASN1Util.newObject argument for encapsulated\n * o = new KJUR.asn1.DERBitString({obj: {seq: [{int: 3}, {prnstr: 'aaa'}]}});\n * // above generates a ASN.1 data like this:\n * // BIT STRING, encapsulates {\n * //   SEQUENCE {\n * //     INTEGER 3\n * //     PrintableString 'aaa'\n * //     }\n * //   }\n */\nKJUR.asn1.DERBitString = function (params) {\n    if (params !== undefined && typeof params.obj !== \"undefined\") {\n        var o = KJUR.asn1.ASN1Util.newObject(params.obj);\n        params.hex = \"00\" + o.getEncodedHex();\n    }\n    KJUR.asn1.DERBitString.superclass.constructor.call(this);\n    this.hT = \"03\";\n    /**\n     * set ASN.1 value(V) by a hexadecimal string including unused bits\n     * @name setHexValueIncludingUnusedBits\n     * @memberOf KJUR.asn1.DERBitString#\n     * @function\n     * @param {String} newHexStringIncludingUnusedBits\n     */\n    this.setHexValueIncludingUnusedBits = function (newHexStringIncludingUnusedBits) {\n        this.hTLV = null;\n        this.isModified = true;\n        this.hV = newHexStringIncludingUnusedBits;\n    };\n    /**\n     * set ASN.1 value(V) by unused bit and hexadecimal string of value\n     * @name setUnusedBitsAndHexValue\n     * @memberOf KJUR.asn1.DERBitString#\n     * @function\n     * @param {Integer} unusedBits\n     * @param {String} hValue\n     */\n    this.setUnusedBitsAndHexValue = function (unusedBits, hValue) {\n        if (unusedBits < 0 || 7 < unusedBits) {\n            throw \"unused bits shall be from 0 to 7: u = \" + unusedBits;\n        }\n        var hUnusedBits = \"0\" + unusedBits;\n        this.hTLV = null;\n        this.isModified = true;\n        this.hV = hUnusedBits + hValue;\n    };\n    /**\n     * set ASN.1 DER BitString by binary string<br/>\n     * @name setByBinaryString\n     * @memberOf KJUR.asn1.DERBitString#\n     * @function\n     * @param {String} binaryString binary value string (i.e. '10111')\n     * @description\n     * Its unused bits will be calculated automatically by length of\n     * 'binaryValue'. <br/>\n     * NOTE: Trailing zeros '0' will be ignored.\n     * @example\n     * o = new KJUR.asn1.DERBitString();\n     * o.setByBooleanArray(\"01011\");\n     */\n    this.setByBinaryString = function (binaryString) {\n        binaryString = binaryString.replace(/0+$/, '');\n        var unusedBits = 8 - binaryString.length % 8;\n        if (unusedBits == 8)\n            unusedBits = 0;\n        for (var i = 0; i <= unusedBits; i++) {\n            binaryString += '0';\n        }\n        var h = '';\n        for (var i = 0; i < binaryString.length - 1; i += 8) {\n            var b = binaryString.substr(i, 8);\n            var x = parseInt(b, 2).toString(16);\n            if (x.length == 1)\n                x = '0' + x;\n            h += x;\n        }\n        this.hTLV = null;\n        this.isModified = true;\n        this.hV = '0' + unusedBits + h;\n    };\n    /**\n     * set ASN.1 TLV value(V) by an array of boolean<br/>\n     * @name setByBooleanArray\n     * @memberOf KJUR.asn1.DERBitString#\n     * @function\n     * @param {array} booleanArray array of boolean (ex. [true, false, true])\n     * @description\n     * NOTE: Trailing falses will be ignored in the ASN.1 DER Object.\n     * @example\n     * o = new KJUR.asn1.DERBitString();\n     * o.setByBooleanArray([false, true, false, true, true]);\n     */\n    this.setByBooleanArray = function (booleanArray) {\n        var s = '';\n        for (var i = 0; i < booleanArray.length; i++) {\n            if (booleanArray[i] == true) {\n                s += '1';\n            }\n            else {\n                s += '0';\n            }\n        }\n        this.setByBinaryString(s);\n    };\n    /**\n     * generate an array of falses with specified length<br/>\n     * @name newFalseArray\n     * @memberOf KJUR.asn1.DERBitString\n     * @function\n     * @param {Integer} nLength length of array to generate\n     * @return {array} array of boolean falses\n     * @description\n     * This static method may be useful to initialize boolean array.\n     * @example\n     * o = new KJUR.asn1.DERBitString();\n     * o.newFalseArray(3) &rarr; [false, false, false]\n     */\n    this.newFalseArray = function (nLength) {\n        var a = new Array(nLength);\n        for (var i = 0; i < nLength; i++) {\n            a[i] = false;\n        }\n        return a;\n    };\n    this.getFreshValueHex = function () {\n        return this.hV;\n    };\n    if (typeof params != \"undefined\") {\n        if (typeof params == \"string\" && params.toLowerCase().match(/^[0-9a-f]+$/)) {\n            this.setHexValueIncludingUnusedBits(params);\n        }\n        else if (typeof params['hex'] != \"undefined\") {\n            this.setHexValueIncludingUnusedBits(params['hex']);\n        }\n        else if (typeof params['bin'] != \"undefined\") {\n            this.setByBinaryString(params['bin']);\n        }\n        else if (typeof params['array'] != \"undefined\") {\n            this.setByBooleanArray(params['array']);\n        }\n    }\n};\n_yahoo__WEBPACK_IMPORTED_MODULE_1__.YAHOO.lang.extend(KJUR.asn1.DERBitString, KJUR.asn1.ASN1Object);\n// ********************************************************************\n/**\n * class for ASN.1 DER OctetString<br/>\n * @name KJUR.asn1.DEROctetString\n * @class class for ASN.1 DER OctetString\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\n * @extends KJUR.asn1.DERAbstractString\n * @description\n * This class provides ASN.1 OctetString simple type.<br/>\n * Supported \"params\" attributes are:\n * <ul>\n * <li>str - to set a string as a value</li>\n * <li>hex - to set a hexadecimal string as a value</li>\n * <li>obj - to set a encapsulated ASN.1 value by JSON object\n * which is defined in {@link KJUR.asn1.ASN1Util.newObject}</li>\n * </ul>\n * NOTE: A parameter 'obj' have been supported\n * for \"OCTET STRING, encapsulates\" structure.\n * since asn1 1.0.11, jsrsasign 6.1.1 (2016-Sep-25).\n * @see KJUR.asn1.DERAbstractString - superclass\n * @example\n * // default constructor\n * o = new KJUR.asn1.DEROctetString();\n * // initialize with string\n * o = new KJUR.asn1.DEROctetString({str: \"aaa\"});\n * // initialize with hexadecimal string\n * o = new KJUR.asn1.DEROctetString({hex: \"616161\"});\n * // initialize with ASN1Util.newObject argument\n * o = new KJUR.asn1.DEROctetString({obj: {seq: [{int: 3}, {prnstr: 'aaa'}]}});\n * // above generates a ASN.1 data like this:\n * // OCTET STRING, encapsulates {\n * //   SEQUENCE {\n * //     INTEGER 3\n * //     PrintableString 'aaa'\n * //     }\n * //   }\n */\nKJUR.asn1.DEROctetString = function (params) {\n    if (params !== undefined && typeof params.obj !== \"undefined\") {\n        var o = KJUR.asn1.ASN1Util.newObject(params.obj);\n        params.hex = o.getEncodedHex();\n    }\n    KJUR.asn1.DEROctetString.superclass.constructor.call(this, params);\n    this.hT = \"04\";\n};\n_yahoo__WEBPACK_IMPORTED_MODULE_1__.YAHOO.lang.extend(KJUR.asn1.DEROctetString, KJUR.asn1.DERAbstractString);\n// ********************************************************************\n/**\n * class for ASN.1 DER Null\n * @name KJUR.asn1.DERNull\n * @class class for ASN.1 DER Null\n * @extends KJUR.asn1.ASN1Object\n * @description\n * @see KJUR.asn1.ASN1Object - superclass\n */\nKJUR.asn1.DERNull = function () {\n    KJUR.asn1.DERNull.superclass.constructor.call(this);\n    this.hT = \"05\";\n    this.hTLV = \"0500\";\n};\n_yahoo__WEBPACK_IMPORTED_MODULE_1__.YAHOO.lang.extend(KJUR.asn1.DERNull, KJUR.asn1.ASN1Object);\n// ********************************************************************\n/**\n * class for ASN.1 DER ObjectIdentifier\n * @name KJUR.asn1.DERObjectIdentifier\n * @class class for ASN.1 DER ObjectIdentifier\n * @param {Array} params associative array of parameters (ex. {'oid': '2.5.4.5'})\n * @extends KJUR.asn1.ASN1Object\n * @description\n * <br/>\n * As for argument 'params' for constructor, you can specify one of\n * following properties:\n * <ul>\n * <li>oid - specify initial ASN.1 value(V) by a oid string (ex. 2.5.4.13)</li>\n * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>\n * </ul>\n * NOTE: 'params' can be omitted.\n */\nKJUR.asn1.DERObjectIdentifier = function (params) {\n    var itox = function (i) {\n        var h = i.toString(16);\n        if (h.length == 1)\n            h = '0' + h;\n        return h;\n    };\n    var roidtox = function (roid) {\n        var h = '';\n        var bi = new _jsbn_jsbn__WEBPACK_IMPORTED_MODULE_0__.BigInteger(roid, 10);\n        var b = bi.toString(2);\n        var padLen = 7 - b.length % 7;\n        if (padLen == 7)\n            padLen = 0;\n        var bPad = '';\n        for (var i = 0; i < padLen; i++)\n            bPad += '0';\n        b = bPad + b;\n        for (var i = 0; i < b.length - 1; i += 7) {\n            var b8 = b.substr(i, 7);\n            if (i != b.length - 7)\n                b8 = '1' + b8;\n            h += itox(parseInt(b8, 2));\n        }\n        return h;\n    };\n    KJUR.asn1.DERObjectIdentifier.superclass.constructor.call(this);\n    this.hT = \"06\";\n    /**\n     * set value by a hexadecimal string\n     * @name setValueHex\n     * @memberOf KJUR.asn1.DERObjectIdentifier#\n     * @function\n     * @param {String} newHexString hexadecimal value of OID bytes\n     */\n    this.setValueHex = function (newHexString) {\n        this.hTLV = null;\n        this.isModified = true;\n        this.s = null;\n        this.hV = newHexString;\n    };\n    /**\n     * set value by a OID string<br/>\n     * @name setValueOidString\n     * @memberOf KJUR.asn1.DERObjectIdentifier#\n     * @function\n     * @param {String} oidString OID string (ex. 2.5.4.13)\n     * @example\n     * o = new KJUR.asn1.DERObjectIdentifier();\n     * o.setValueOidString(\"2.5.4.13\");\n     */\n    this.setValueOidString = function (oidString) {\n        if (!oidString.match(/^[0-9.]+$/)) {\n            throw \"malformed oid string: \" + oidString;\n        }\n        var h = '';\n        var a = oidString.split('.');\n        var i0 = parseInt(a[0]) * 40 + parseInt(a[1]);\n        h += itox(i0);\n        a.splice(0, 2);\n        for (var i = 0; i < a.length; i++) {\n            h += roidtox(a[i]);\n        }\n        this.hTLV = null;\n        this.isModified = true;\n        this.s = null;\n        this.hV = h;\n    };\n    /**\n     * set value by a OID name\n     * @name setValueName\n     * @memberOf KJUR.asn1.DERObjectIdentifier#\n     * @function\n     * @param {String} oidName OID name (ex. 'serverAuth')\n     * @since 1.0.1\n     * @description\n     * OID name shall be defined in 'KJUR.asn1.x509.OID.name2oidList'.\n     * Otherwise raise error.\n     * @example\n     * o = new KJUR.asn1.DERObjectIdentifier();\n     * o.setValueName(\"serverAuth\");\n     */\n    this.setValueName = function (oidName) {\n        var oid = KJUR.asn1.x509.OID.name2oid(oidName);\n        if (oid !== '') {\n            this.setValueOidString(oid);\n        }\n        else {\n            throw \"DERObjectIdentifier oidName undefined: \" + oidName;\n        }\n    };\n    this.getFreshValueHex = function () {\n        return this.hV;\n    };\n    if (params !== undefined) {\n        if (typeof params === \"string\") {\n            if (params.match(/^[0-2].[0-9.]+$/)) {\n                this.setValueOidString(params);\n            }\n            else {\n                this.setValueName(params);\n            }\n        }\n        else if (params.oid !== undefined) {\n            this.setValueOidString(params.oid);\n        }\n        else if (params.hex !== undefined) {\n            this.setValueHex(params.hex);\n        }\n        else if (params.name !== undefined) {\n            this.setValueName(params.name);\n        }\n    }\n};\n_yahoo__WEBPACK_IMPORTED_MODULE_1__.YAHOO.lang.extend(KJUR.asn1.DERObjectIdentifier, KJUR.asn1.ASN1Object);\n// ********************************************************************\n/**\n * class for ASN.1 DER Enumerated\n * @name KJUR.asn1.DEREnumerated\n * @class class for ASN.1 DER Enumerated\n * @extends KJUR.asn1.ASN1Object\n * @description\n * <br/>\n * As for argument 'params' for constructor, you can specify one of\n * following properties:\n * <ul>\n * <li>int - specify initial ASN.1 value(V) by integer value</li>\n * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>\n * </ul>\n * NOTE: 'params' can be omitted.\n * @example\n * new KJUR.asn1.DEREnumerated(123);\n * new KJUR.asn1.DEREnumerated({int: 123});\n * new KJUR.asn1.DEREnumerated({hex: '1fad'});\n */\nKJUR.asn1.DEREnumerated = function (params) {\n    KJUR.asn1.DEREnumerated.superclass.constructor.call(this);\n    this.hT = \"0a\";\n    /**\n     * set value by Tom Wu's BigInteger object\n     * @name setByBigInteger\n     * @memberOf KJUR.asn1.DEREnumerated#\n     * @function\n     * @param {BigInteger} bigIntegerValue to set\n     */\n    this.setByBigInteger = function (bigIntegerValue) {\n        this.hTLV = null;\n        this.isModified = true;\n        this.hV = KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(bigIntegerValue);\n    };\n    /**\n     * set value by integer value\n     * @name setByInteger\n     * @memberOf KJUR.asn1.DEREnumerated#\n     * @function\n     * @param {Integer} integer value to set\n     */\n    this.setByInteger = function (intValue) {\n        var bi = new _jsbn_jsbn__WEBPACK_IMPORTED_MODULE_0__.BigInteger(String(intValue), 10);\n        this.setByBigInteger(bi);\n    };\n    /**\n     * set value by integer value\n     * @name setValueHex\n     * @memberOf KJUR.asn1.DEREnumerated#\n     * @function\n     * @param {String} hexadecimal string of integer value\n     * @description\n     * <br/>\n     * NOTE: Value shall be represented by minimum octet length of\n     * two's complement representation.\n     */\n    this.setValueHex = function (newHexString) {\n        this.hV = newHexString;\n    };\n    this.getFreshValueHex = function () {\n        return this.hV;\n    };\n    if (typeof params != \"undefined\") {\n        if (typeof params['int'] != \"undefined\") {\n            this.setByInteger(params['int']);\n        }\n        else if (typeof params == \"number\") {\n            this.setByInteger(params);\n        }\n        else if (typeof params['hex'] != \"undefined\") {\n            this.setValueHex(params['hex']);\n        }\n    }\n};\n_yahoo__WEBPACK_IMPORTED_MODULE_1__.YAHOO.lang.extend(KJUR.asn1.DEREnumerated, KJUR.asn1.ASN1Object);\n// ********************************************************************\n/**\n * class for ASN.1 DER UTF8String\n * @name KJUR.asn1.DERUTF8String\n * @class class for ASN.1 DER UTF8String\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\n * @extends KJUR.asn1.DERAbstractString\n * @description\n * @see KJUR.asn1.DERAbstractString - superclass\n */\nKJUR.asn1.DERUTF8String = function (params) {\n    KJUR.asn1.DERUTF8String.superclass.constructor.call(this, params);\n    this.hT = \"0c\";\n};\n_yahoo__WEBPACK_IMPORTED_MODULE_1__.YAHOO.lang.extend(KJUR.asn1.DERUTF8String, KJUR.asn1.DERAbstractString);\n// ********************************************************************\n/**\n * class for ASN.1 DER NumericString\n * @name KJUR.asn1.DERNumericString\n * @class class for ASN.1 DER NumericString\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\n * @extends KJUR.asn1.DERAbstractString\n * @description\n * @see KJUR.asn1.DERAbstractString - superclass\n */\nKJUR.asn1.DERNumericString = function (params) {\n    KJUR.asn1.DERNumericString.superclass.constructor.call(this, params);\n    this.hT = \"12\";\n};\n_yahoo__WEBPACK_IMPORTED_MODULE_1__.YAHOO.lang.extend(KJUR.asn1.DERNumericString, KJUR.asn1.DERAbstractString);\n// ********************************************************************\n/**\n * class for ASN.1 DER PrintableString\n * @name KJUR.asn1.DERPrintableString\n * @class class for ASN.1 DER PrintableString\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\n * @extends KJUR.asn1.DERAbstractString\n * @description\n * @see KJUR.asn1.DERAbstractString - superclass\n */\nKJUR.asn1.DERPrintableString = function (params) {\n    KJUR.asn1.DERPrintableString.superclass.constructor.call(this, params);\n    this.hT = \"13\";\n};\n_yahoo__WEBPACK_IMPORTED_MODULE_1__.YAHOO.lang.extend(KJUR.asn1.DERPrintableString, KJUR.asn1.DERAbstractString);\n// ********************************************************************\n/**\n * class for ASN.1 DER TeletexString\n * @name KJUR.asn1.DERTeletexString\n * @class class for ASN.1 DER TeletexString\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\n * @extends KJUR.asn1.DERAbstractString\n * @description\n * @see KJUR.asn1.DERAbstractString - superclass\n */\nKJUR.asn1.DERTeletexString = function (params) {\n    KJUR.asn1.DERTeletexString.superclass.constructor.call(this, params);\n    this.hT = \"14\";\n};\n_yahoo__WEBPACK_IMPORTED_MODULE_1__.YAHOO.lang.extend(KJUR.asn1.DERTeletexString, KJUR.asn1.DERAbstractString);\n// ********************************************************************\n/**\n * class for ASN.1 DER IA5String\n * @name KJUR.asn1.DERIA5String\n * @class class for ASN.1 DER IA5String\n * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})\n * @extends KJUR.asn1.DERAbstractString\n * @description\n * @see KJUR.asn1.DERAbstractString - superclass\n */\nKJUR.asn1.DERIA5String = function (params) {\n    KJUR.asn1.DERIA5String.superclass.constructor.call(this, params);\n    this.hT = \"16\";\n};\n_yahoo__WEBPACK_IMPORTED_MODULE_1__.YAHOO.lang.extend(KJUR.asn1.DERIA5String, KJUR.asn1.DERAbstractString);\n// ********************************************************************\n/**\n * class for ASN.1 DER UTCTime\n * @name KJUR.asn1.DERUTCTime\n * @class class for ASN.1 DER UTCTime\n * @param {Array} params associative array of parameters (ex. {'str': '130430235959Z'})\n * @extends KJUR.asn1.DERAbstractTime\n * @description\n * <br/>\n * As for argument 'params' for constructor, you can specify one of\n * following properties:\n * <ul>\n * <li>str - specify initial ASN.1 value(V) by a string (ex.'130430235959Z')</li>\n * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>\n * <li>date - specify Date object.</li>\n * </ul>\n * NOTE: 'params' can be omitted.\n * <h4>EXAMPLES</h4>\n * @example\n * d1 = new KJUR.asn1.DERUTCTime();\n * d1.setString('130430125959Z');\n *\n * d2 = new KJUR.asn1.DERUTCTime({'str': '130430125959Z'});\n * d3 = new KJUR.asn1.DERUTCTime({'date': new Date(Date.UTC(2015, 0, 31, 0, 0, 0, 0))});\n * d4 = new KJUR.asn1.DERUTCTime('130430125959Z');\n */\nKJUR.asn1.DERUTCTime = function (params) {\n    KJUR.asn1.DERUTCTime.superclass.constructor.call(this, params);\n    this.hT = \"17\";\n    /**\n     * set value by a Date object<br/>\n     * @name setByDate\n     * @memberOf KJUR.asn1.DERUTCTime#\n     * @function\n     * @param {Date} dateObject Date object to set ASN.1 value(V)\n     * @example\n     * o = new KJUR.asn1.DERUTCTime();\n     * o.setByDate(new Date(\"2016/12/31\"));\n     */\n    this.setByDate = function (dateObject) {\n        this.hTLV = null;\n        this.isModified = true;\n        this.date = dateObject;\n        this.s = this.formatDate(this.date, 'utc');\n        this.hV = stohex(this.s);\n    };\n    this.getFreshValueHex = function () {\n        if (typeof this.date == \"undefined\" && typeof this.s == \"undefined\") {\n            this.date = new Date();\n            this.s = this.formatDate(this.date, 'utc');\n            this.hV = stohex(this.s);\n        }\n        return this.hV;\n    };\n    if (params !== undefined) {\n        if (params.str !== undefined) {\n            this.setString(params.str);\n        }\n        else if (typeof params == \"string\" && params.match(/^[0-9]{12}Z$/)) {\n            this.setString(params);\n        }\n        else if (params.hex !== undefined) {\n            this.setStringHex(params.hex);\n        }\n        else if (params.date !== undefined) {\n            this.setByDate(params.date);\n        }\n    }\n};\n_yahoo__WEBPACK_IMPORTED_MODULE_1__.YAHOO.lang.extend(KJUR.asn1.DERUTCTime, KJUR.asn1.DERAbstractTime);\n// ********************************************************************\n/**\n * class for ASN.1 DER GeneralizedTime\n * @name KJUR.asn1.DERGeneralizedTime\n * @class class for ASN.1 DER GeneralizedTime\n * @param {Array} params associative array of parameters (ex. {'str': '20130430235959Z'})\n * @property {Boolean} withMillis flag to show milliseconds or not\n * @extends KJUR.asn1.DERAbstractTime\n * @description\n * <br/>\n * As for argument 'params' for constructor, you can specify one of\n * following properties:\n * <ul>\n * <li>str - specify initial ASN.1 value(V) by a string (ex.'20130430235959Z')</li>\n * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>\n * <li>date - specify Date object.</li>\n * <li>millis - specify flag to show milliseconds (from 1.0.6)</li>\n * </ul>\n * NOTE1: 'params' can be omitted.\n * NOTE2: 'withMillis' property is supported from asn1 1.0.6.\n */\nKJUR.asn1.DERGeneralizedTime = function (params) {\n    KJUR.asn1.DERGeneralizedTime.superclass.constructor.call(this, params);\n    this.hT = \"18\";\n    this.withMillis = false;\n    /**\n     * set value by a Date object\n     * @name setByDate\n     * @memberOf KJUR.asn1.DERGeneralizedTime#\n     * @function\n     * @param {Date} dateObject Date object to set ASN.1 value(V)\n     * @example\n     * When you specify UTC time, use 'Date.UTC' method like this:<br/>\n     * o1 = new DERUTCTime();\n     * o1.setByDate(date);\n     *\n     * date = new Date(Date.UTC(2015, 0, 31, 23, 59, 59, 0)); #2015JAN31 23:59:59\n     */\n    this.setByDate = function (dateObject) {\n        this.hTLV = null;\n        this.isModified = true;\n        this.date = dateObject;\n        this.s = this.formatDate(this.date, 'gen', this.withMillis);\n        this.hV = stohex(this.s);\n    };\n    this.getFreshValueHex = function () {\n        if (this.date === undefined && this.s === undefined) {\n            this.date = new Date();\n            this.s = this.formatDate(this.date, 'gen', this.withMillis);\n            this.hV = stohex(this.s);\n        }\n        return this.hV;\n    };\n    if (params !== undefined) {\n        if (params.str !== undefined) {\n            this.setString(params.str);\n        }\n        else if (typeof params == \"string\" && params.match(/^[0-9]{14}Z$/)) {\n            this.setString(params);\n        }\n        else if (params.hex !== undefined) {\n            this.setStringHex(params.hex);\n        }\n        else if (params.date !== undefined) {\n            this.setByDate(params.date);\n        }\n        if (params.millis === true) {\n            this.withMillis = true;\n        }\n    }\n};\n_yahoo__WEBPACK_IMPORTED_MODULE_1__.YAHOO.lang.extend(KJUR.asn1.DERGeneralizedTime, KJUR.asn1.DERAbstractTime);\n// ********************************************************************\n/**\n * class for ASN.1 DER Sequence\n * @name KJUR.asn1.DERSequence\n * @class class for ASN.1 DER Sequence\n * @extends KJUR.asn1.DERAbstractStructured\n * @description\n * <br/>\n * As for argument 'params' for constructor, you can specify one of\n * following properties:\n * <ul>\n * <li>array - specify array of ASN1Object to set elements of content</li>\n * </ul>\n * NOTE: 'params' can be omitted.\n */\nKJUR.asn1.DERSequence = function (params) {\n    KJUR.asn1.DERSequence.superclass.constructor.call(this, params);\n    this.hT = \"30\";\n    this.getFreshValueHex = function () {\n        var h = '';\n        for (var i = 0; i < this.asn1Array.length; i++) {\n            var asn1Obj = this.asn1Array[i];\n            h += asn1Obj.getEncodedHex();\n        }\n        this.hV = h;\n        return this.hV;\n    };\n};\n_yahoo__WEBPACK_IMPORTED_MODULE_1__.YAHOO.lang.extend(KJUR.asn1.DERSequence, KJUR.asn1.DERAbstractStructured);\n// ********************************************************************\n/**\n * class for ASN.1 DER Set\n * @name KJUR.asn1.DERSet\n * @class class for ASN.1 DER Set\n * @extends KJUR.asn1.DERAbstractStructured\n * @description\n * <br/>\n * As for argument 'params' for constructor, you can specify one of\n * following properties:\n * <ul>\n * <li>array - specify array of ASN1Object to set elements of content</li>\n * <li>sortflag - flag for sort (default: true). ASN.1 BER is not sorted in 'SET OF'.</li>\n * </ul>\n * NOTE1: 'params' can be omitted.<br/>\n * NOTE2: sortflag is supported since 1.0.5.\n */\nKJUR.asn1.DERSet = function (params) {\n    KJUR.asn1.DERSet.superclass.constructor.call(this, params);\n    this.hT = \"31\";\n    this.sortFlag = true; // item shall be sorted only in ASN.1 DER\n    this.getFreshValueHex = function () {\n        var a = new Array();\n        for (var i = 0; i < this.asn1Array.length; i++) {\n            var asn1Obj = this.asn1Array[i];\n            a.push(asn1Obj.getEncodedHex());\n        }\n        if (this.sortFlag == true)\n            a.sort();\n        this.hV = a.join('');\n        return this.hV;\n    };\n    if (typeof params != \"undefined\") {\n        if (typeof params.sortflag != \"undefined\" &&\n            params.sortflag == false)\n            this.sortFlag = false;\n    }\n};\n_yahoo__WEBPACK_IMPORTED_MODULE_1__.YAHOO.lang.extend(KJUR.asn1.DERSet, KJUR.asn1.DERAbstractStructured);\n// ********************************************************************\n/**\n * class for ASN.1 DER TaggedObject\n * @name KJUR.asn1.DERTaggedObject\n * @class class for ASN.1 DER TaggedObject\n * @extends KJUR.asn1.ASN1Object\n * @description\n * <br/>\n * Parameter 'tagNoNex' is ASN.1 tag(T) value for this object.\n * For example, if you find '[1]' tag in a ASN.1 dump,\n * 'tagNoHex' will be 'a1'.\n * <br/>\n * As for optional argument 'params' for constructor, you can specify *ANY* of\n * following properties:\n * <ul>\n * <li>explicit - specify true if this is explicit tag otherwise false\n *     (default is 'true').</li>\n * <li>tag - specify tag (default is 'a0' which means [0])</li>\n * <li>obj - specify ASN1Object which is tagged</li>\n * </ul>\n * @example\n * d1 = new KJUR.asn1.DERUTF8String({'str':'a'});\n * d2 = new KJUR.asn1.DERTaggedObject({'obj': d1});\n * hex = d2.getEncodedHex();\n */\nKJUR.asn1.DERTaggedObject = function (params) {\n    KJUR.asn1.DERTaggedObject.superclass.constructor.call(this);\n    this.hT = \"a0\";\n    this.hV = '';\n    this.isExplicit = true;\n    this.asn1Object = null;\n    /**\n     * set value by an ASN1Object\n     * @name setString\n     * @memberOf KJUR.asn1.DERTaggedObject#\n     * @function\n     * @param {Boolean} isExplicitFlag flag for explicit/implicit tag\n     * @param {Integer} tagNoHex hexadecimal string of ASN.1 tag\n     * @param {ASN1Object} asn1Object ASN.1 to encapsulate\n     */\n    this.setASN1Object = function (isExplicitFlag, tagNoHex, asn1Object) {\n        this.hT = tagNoHex;\n        this.isExplicit = isExplicitFlag;\n        this.asn1Object = asn1Object;\n        if (this.isExplicit) {\n            this.hV = this.asn1Object.getEncodedHex();\n            this.hTLV = null;\n            this.isModified = true;\n        }\n        else {\n            this.hV = null;\n            this.hTLV = asn1Object.getEncodedHex();\n            this.hTLV = this.hTLV.replace(/^../, tagNoHex);\n            this.isModified = false;\n        }\n    };\n    this.getFreshValueHex = function () {\n        return this.hV;\n    };\n    if (typeof params != \"undefined\") {\n        if (typeof params['tag'] != \"undefined\") {\n            this.hT = params['tag'];\n        }\n        if (typeof params['explicit'] != \"undefined\") {\n            this.isExplicit = params['explicit'];\n        }\n        if (typeof params['obj'] != \"undefined\") {\n            this.asn1Object = params['obj'];\n            this.setASN1Object(this.isExplicit, this.hT, this.asn1Object);\n        }\n    }\n};\n_yahoo__WEBPACK_IMPORTED_MODULE_1__.YAHOO.lang.extend(KJUR.asn1.DERTaggedObject, KJUR.asn1.ASN1Object);\n\n\n//# sourceURL=webpack://JSEncrypt/./lib/lib/jsrsasign/asn1-1.0.js?");

                  /***/
                },

                /***/"./lib/lib/jsrsasign/yahoo.js":
                /*!************************************!*\
                  !*** ./lib/lib/jsrsasign/yahoo.js ***!
                  \************************************/
                /***/
                function libLibJsrsasignYahooJs(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
                  eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"YAHOO\": () => (/* binding */ YAHOO)\n/* harmony export */ });\n/*!\nCopyright (c) 2011, Yahoo! Inc. All rights reserved.\nCode licensed under the BSD License:\nhttp://developer.yahoo.com/yui/license.html\nversion: 2.9.0\n*/\nvar YAHOO = {};\nYAHOO.lang = {\n    /**\n     * Utility to set up the prototype, constructor and superclass properties to\n     * support an inheritance strategy that can chain constructors and methods.\n     * Static members will not be inherited.\n     *\n     * @method extend\n     * @static\n     * @param {Function} subc   the object to modify\n     * @param {Function} superc the object to inherit\n     * @param {Object} overrides  additional properties/methods to add to the\n     *                              subclass prototype.  These will override the\n     *                              matching items obtained from the superclass\n     *                              if present.\n     */\n    extend: function (subc, superc, overrides) {\n        if (!superc || !subc) {\n            throw new Error(\"YAHOO.lang.extend failed, please check that \" +\n                \"all dependencies are included.\");\n        }\n        var F = function () { };\n        F.prototype = superc.prototype;\n        subc.prototype = new F();\n        subc.prototype.constructor = subc;\n        subc.superclass = superc.prototype;\n        if (superc.prototype.constructor == Object.prototype.constructor) {\n            superc.prototype.constructor = superc;\n        }\n        if (overrides) {\n            var i;\n            for (i in overrides) {\n                subc.prototype[i] = overrides[i];\n            }\n            /*\n             * IE will not enumerate native functions in a derived object even if the\n             * function was overridden.  This is a workaround for specific functions\n             * we care about on the Object prototype.\n             * @property _IEEnumFix\n             * @param {Function} r  the object to receive the augmentation\n             * @param {Function} s  the object that supplies the properties to augment\n             * @static\n             * @private\n             */\n            var _IEEnumFix = function () { }, ADD = [\"toString\", \"valueOf\"];\n            try {\n                if (/MSIE/.test(navigator.userAgent)) {\n                    _IEEnumFix = function (r, s) {\n                        for (i = 0; i < ADD.length; i = i + 1) {\n                            var fname = ADD[i], f = s[fname];\n                            if (typeof f === 'function' && f != Object.prototype[fname]) {\n                                r[fname] = f;\n                            }\n                        }\n                    };\n                }\n            }\n            catch (ex) { }\n            ;\n            _IEEnumFix(subc.prototype, overrides);\n        }\n    }\n};\n\n\n//# sourceURL=webpack://JSEncrypt/./lib/lib/jsrsasign/yahoo.js?");

                  /***/
                },

                /***/"./node_modules/process/browser.js":
                /*!*****************************************!*\
                  !*** ./node_modules/process/browser.js ***!
                  \*****************************************/
                /***/
                function node_modulesProcessBrowserJs(module) {
                  eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack://JSEncrypt/./node_modules/process/browser.js?");

                  /***/
                }

                /******/
              };
              /************************************************************************/
              /******/ // The module cache
              /******/
              var __webpack_module_cache__ = {};
              /******/
              /******/ // The require function
              /******/
              function __webpack_require__(moduleId) {
                /******/ // Check if module is in cache
                /******/var cachedModule = __webpack_module_cache__[moduleId];
                /******/
                if (cachedModule !== undefined) {
                  /******/return cachedModule.exports;
                  /******/
                }
                /******/ // Create a new module (and put it into the cache)
                /******/
                var module = __webpack_module_cache__[moduleId] = {
                  /******/ // no module.id needed
                  /******/ // no module.loaded needed
                  /******/exports: {}
                  /******/
                };
                /******/
                /******/ // Execute the module function
                /******/
                __webpack_modules__[moduleId](module, module.exports, __webpack_require__);
                /******/
                /******/ // Return the exports of the module
                /******/
                return module.exports;
                /******/
              }
              /******/
              /************************************************************************/
              /******/ /* webpack/runtime/define property getters */
              /******/
              (function () {
                /******/ // define getter functions for harmony exports
                /******/__webpack_require__.d = function (exports, definition) {
                  /******/for (var key in definition) {
                    /******/if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
                      /******/Object.defineProperty(exports, key, {
                        enumerable: true,
                        get: definition[key]
                      });
                      /******/
                    }
                    /******/
                  }
                  /******/
                };
                /******/
              })();
              /******/
              /******/ /* webpack/runtime/hasOwnProperty shorthand */
              /******/
              (function () {
                /******/__webpack_require__.o = function (obj, prop) {
                  return Object.prototype.hasOwnProperty.call(obj, prop);
                };
                /******/
              })();
              /******/
              /******/ /* webpack/runtime/make namespace object */
              /******/
              (function () {
                /******/ // define __esModule on exports
                /******/__webpack_require__.r = function (exports) {
                  /******/if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {
                    /******/Object.defineProperty(exports, Symbol.toStringTag, {
                      value: 'Module'
                    });
                    /******/
                  }
                  /******/
                  Object.defineProperty(exports, '__esModule', {
                    value: true
                  });
                  /******/
                };
                /******/
              })();
              /******/
              /************************************************************************/
              /******/
              /******/ // startup
              /******/ // Load entry module and return exports
              /******/ // This entry module can't be inlined because the eval devtool is used.
              /******/
              var __webpack_exports__ = __webpack_require__("./lib/index.js");
              /******/
              __webpack_exports__ = __webpack_exports__["default"];
              /******/
              /******/
              return __webpack_exports__;
              /******/
            }()
          );
        });

        // #endregion ORIGINAL CODE

        _cjsExports = exports('default', module.exports);
        module.exports.JSEncrypt;
        module.exports.__esModule;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/jsencrypt.mjs_cjs=&original=.js", ['./jsencrypt.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      var _setter = {};
      _setter.__cjsMetaURL = module.__cjsMetaURL;
      _setter.default = module.default;
      exports(_setter);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './jsencrypt.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./jsencrypt.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/length-of-array-like.js", ['./cjs-loader.mjs', './to-length.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var toLength = require('../internals/to-length');

        // `LengthOfArrayLike` abstract operation
        // https://tc39.es/ecma262/#sec-lengthofarraylike
        module.exports = function (obj) {
          return toLength(obj.length);
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/to-length': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/make-built-in.js", ['./cjs-loader.mjs', './function-uncurry-this.js', './fails.js', './is-callable.js', './has-own-property.js', './descriptors.js', './function-name.js', './inspect-source.js', './internal-state.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var uncurryThis = require('../internals/function-uncurry-this');
        var fails = require('../internals/fails');
        var isCallable = require('../internals/is-callable');
        var hasOwn = require('../internals/has-own-property');
        var DESCRIPTORS = require('../internals/descriptors');
        var CONFIGURABLE_FUNCTION_NAME = require('../internals/function-name').CONFIGURABLE;
        var inspectSource = require('../internals/inspect-source');
        var InternalStateModule = require('../internals/internal-state');
        var enforceInternalState = InternalStateModule.enforce;
        var getInternalState = InternalStateModule.get;
        var $String = String;
        // eslint-disable-next-line es/no-object-defineproperty -- safe
        var defineProperty = Object.defineProperty;
        var stringSlice = uncurryThis(''.slice);
        var replace = uncurryThis(''.replace);
        var join = uncurryThis([].join);
        var CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function () {
          return defineProperty(function () {/* empty */}, 'length', {
            value: 8
          }).length !== 8;
        });
        var TEMPLATE = String(String).split('String');
        var makeBuiltIn = module.exports = function (value, name, options) {
          if (stringSlice($String(name), 0, 7) === 'Symbol(') {
            name = '[' + replace($String(name), /^Symbol\(([^)]*)\)/, '$1') + ']';
          }
          if (options && options.getter) name = 'get ' + name;
          if (options && options.setter) name = 'set ' + name;
          if (!hasOwn(value, 'name') || CONFIGURABLE_FUNCTION_NAME && value.name !== name) {
            if (DESCRIPTORS) defineProperty(value, 'name', {
              value: name,
              configurable: true
            });else value.name = name;
          }
          if (CONFIGURABLE_LENGTH && options && hasOwn(options, 'arity') && value.length !== options.arity) {
            defineProperty(value, 'length', {
              value: options.arity
            });
          }
          try {
            if (options && hasOwn(options, 'constructor') && options.constructor) {
              if (DESCRIPTORS) defineProperty(value, 'prototype', {
                writable: false
              });
              // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable
            } else if (value.prototype) value.prototype = undefined;
          } catch (error) {/* empty */}
          var state = enforceInternalState(value);
          if (!hasOwn(state, 'source')) {
            state.source = join(TEMPLATE, typeof name == 'string' ? name : '');
          }
          return value;
        };

        // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
        // eslint-disable-next-line no-extend-native -- required
        Function.prototype.toString = makeBuiltIn(function toString() {
          return isCallable(this) && getInternalState(this).source || inspectSource(this);
        }, 'toString');

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-uncurry-this': __cjsMetaURL$1,
          '../internals/fails': __cjsMetaURL$2,
          '../internals/is-callable': __cjsMetaURL$3,
          '../internals/has-own-property': __cjsMetaURL$4,
          '../internals/descriptors': __cjsMetaURL$5,
          '../internals/function-name': __cjsMetaURL$6,
          '../internals/inspect-source': __cjsMetaURL$7,
          '../internals/internal-state': __cjsMetaURL$8
        };
      });
    }
  };
});

System.register("chunks:///_virtual/math-sign.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        // `Math.sign` method implementation
        // https://tc39.es/ecma262/#sec-math.sign
        // eslint-disable-next-line es/no-math-sign -- safe
        module.exports = Math.sign || function sign(x) {
          var n = +x;
          // eslint-disable-next-line no-self-compare -- NaN check
          return n === 0 || n !== n ? n : n < 0 ? -1 : 1;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/math-trunc.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var ceil = Math.ceil;
        var floor = Math.floor;

        // `Math.trunc` method
        // https://tc39.es/ecma262/#sec-math.trunc
        // eslint-disable-next-line es/no-math-trunc -- safe
        module.exports = Math.trunc || function trunc(x) {
          var n = +x;
          return (n > 0 ? floor : ceil)(n);
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/md5.js", ['./rollupPluginModLoBabelHelpers.js', './core.js'], function (exports) {
  var _inheritsLoose, Hasher, WordArray;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      Hasher = module.Hasher;
      WordArray = module.WordArray;
    }],
    execute: function () {
      // Constants table
      var T = [];

      // Compute constants
      for (var i = 0; i < 64; i += 1) {
        T[i] = Math.abs(Math.sin(i + 1)) * 0x100000000 | 0;
      }
      var FF = function FF(a, b, c, d, x, s, t) {
        var n = a + (b & c | ~b & d) + x + t;
        return (n << s | n >>> 32 - s) + b;
      };
      var GG = function GG(a, b, c, d, x, s, t) {
        var n = a + (b & d | c & ~d) + x + t;
        return (n << s | n >>> 32 - s) + b;
      };
      var HH = function HH(a, b, c, d, x, s, t) {
        var n = a + (b ^ c ^ d) + x + t;
        return (n << s | n >>> 32 - s) + b;
      };
      var II = function II(a, b, c, d, x, s, t) {
        var n = a + (c ^ (b | ~d)) + x + t;
        return (n << s | n >>> 32 - s) + b;
      };

      /**
       * MD5 hash algorithm.
       */
      var MD5Algo = exports('MD5Algo', /*#__PURE__*/function (_Hasher) {
        _inheritsLoose(MD5Algo, _Hasher);
        function MD5Algo() {
          return _Hasher.apply(this, arguments) || this;
        }
        var _proto = MD5Algo.prototype;
        _proto._doReset = function _doReset() {
          this._hash = new WordArray([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476]);
        };
        _proto._doProcessBlock = function _doProcessBlock(M, offset) {
          var _M = M;

          // Swap endian
          for (var _i = 0; _i < 16; _i += 1) {
            // Shortcuts
            var offset_i = offset + _i;
            var M_offset_i = M[offset_i];
            _M[offset_i] = (M_offset_i << 8 | M_offset_i >>> 24) & 0x00ff00ff | (M_offset_i << 24 | M_offset_i >>> 8) & 0xff00ff00;
          }

          // Shortcuts
          var H = this._hash.words;
          var M_offset_0 = _M[offset + 0];
          var M_offset_1 = _M[offset + 1];
          var M_offset_2 = _M[offset + 2];
          var M_offset_3 = _M[offset + 3];
          var M_offset_4 = _M[offset + 4];
          var M_offset_5 = _M[offset + 5];
          var M_offset_6 = _M[offset + 6];
          var M_offset_7 = _M[offset + 7];
          var M_offset_8 = _M[offset + 8];
          var M_offset_9 = _M[offset + 9];
          var M_offset_10 = _M[offset + 10];
          var M_offset_11 = _M[offset + 11];
          var M_offset_12 = _M[offset + 12];
          var M_offset_13 = _M[offset + 13];
          var M_offset_14 = _M[offset + 14];
          var M_offset_15 = _M[offset + 15];

          // Working varialbes
          var a = H[0];
          var b = H[1];
          var c = H[2];
          var d = H[3];

          // Computation
          a = FF(a, b, c, d, M_offset_0, 7, T[0]);
          d = FF(d, a, b, c, M_offset_1, 12, T[1]);
          c = FF(c, d, a, b, M_offset_2, 17, T[2]);
          b = FF(b, c, d, a, M_offset_3, 22, T[3]);
          a = FF(a, b, c, d, M_offset_4, 7, T[4]);
          d = FF(d, a, b, c, M_offset_5, 12, T[5]);
          c = FF(c, d, a, b, M_offset_6, 17, T[6]);
          b = FF(b, c, d, a, M_offset_7, 22, T[7]);
          a = FF(a, b, c, d, M_offset_8, 7, T[8]);
          d = FF(d, a, b, c, M_offset_9, 12, T[9]);
          c = FF(c, d, a, b, M_offset_10, 17, T[10]);
          b = FF(b, c, d, a, M_offset_11, 22, T[11]);
          a = FF(a, b, c, d, M_offset_12, 7, T[12]);
          d = FF(d, a, b, c, M_offset_13, 12, T[13]);
          c = FF(c, d, a, b, M_offset_14, 17, T[14]);
          b = FF(b, c, d, a, M_offset_15, 22, T[15]);
          a = GG(a, b, c, d, M_offset_1, 5, T[16]);
          d = GG(d, a, b, c, M_offset_6, 9, T[17]);
          c = GG(c, d, a, b, M_offset_11, 14, T[18]);
          b = GG(b, c, d, a, M_offset_0, 20, T[19]);
          a = GG(a, b, c, d, M_offset_5, 5, T[20]);
          d = GG(d, a, b, c, M_offset_10, 9, T[21]);
          c = GG(c, d, a, b, M_offset_15, 14, T[22]);
          b = GG(b, c, d, a, M_offset_4, 20, T[23]);
          a = GG(a, b, c, d, M_offset_9, 5, T[24]);
          d = GG(d, a, b, c, M_offset_14, 9, T[25]);
          c = GG(c, d, a, b, M_offset_3, 14, T[26]);
          b = GG(b, c, d, a, M_offset_8, 20, T[27]);
          a = GG(a, b, c, d, M_offset_13, 5, T[28]);
          d = GG(d, a, b, c, M_offset_2, 9, T[29]);
          c = GG(c, d, a, b, M_offset_7, 14, T[30]);
          b = GG(b, c, d, a, M_offset_12, 20, T[31]);
          a = HH(a, b, c, d, M_offset_5, 4, T[32]);
          d = HH(d, a, b, c, M_offset_8, 11, T[33]);
          c = HH(c, d, a, b, M_offset_11, 16, T[34]);
          b = HH(b, c, d, a, M_offset_14, 23, T[35]);
          a = HH(a, b, c, d, M_offset_1, 4, T[36]);
          d = HH(d, a, b, c, M_offset_4, 11, T[37]);
          c = HH(c, d, a, b, M_offset_7, 16, T[38]);
          b = HH(b, c, d, a, M_offset_10, 23, T[39]);
          a = HH(a, b, c, d, M_offset_13, 4, T[40]);
          d = HH(d, a, b, c, M_offset_0, 11, T[41]);
          c = HH(c, d, a, b, M_offset_3, 16, T[42]);
          b = HH(b, c, d, a, M_offset_6, 23, T[43]);
          a = HH(a, b, c, d, M_offset_9, 4, T[44]);
          d = HH(d, a, b, c, M_offset_12, 11, T[45]);
          c = HH(c, d, a, b, M_offset_15, 16, T[46]);
          b = HH(b, c, d, a, M_offset_2, 23, T[47]);
          a = II(a, b, c, d, M_offset_0, 6, T[48]);
          d = II(d, a, b, c, M_offset_7, 10, T[49]);
          c = II(c, d, a, b, M_offset_14, 15, T[50]);
          b = II(b, c, d, a, M_offset_5, 21, T[51]);
          a = II(a, b, c, d, M_offset_12, 6, T[52]);
          d = II(d, a, b, c, M_offset_3, 10, T[53]);
          c = II(c, d, a, b, M_offset_10, 15, T[54]);
          b = II(b, c, d, a, M_offset_1, 21, T[55]);
          a = II(a, b, c, d, M_offset_8, 6, T[56]);
          d = II(d, a, b, c, M_offset_15, 10, T[57]);
          c = II(c, d, a, b, M_offset_6, 15, T[58]);
          b = II(b, c, d, a, M_offset_13, 21, T[59]);
          a = II(a, b, c, d, M_offset_4, 6, T[60]);
          d = II(d, a, b, c, M_offset_11, 10, T[61]);
          c = II(c, d, a, b, M_offset_2, 15, T[62]);
          b = II(b, c, d, a, M_offset_9, 21, T[63]);

          // Intermediate hash value
          H[0] = H[0] + a | 0;
          H[1] = H[1] + b | 0;
          H[2] = H[2] + c | 0;
          H[3] = H[3] + d | 0;
        }
        /* eslint-ensable no-param-reassign */;
        _proto._doFinalize = function _doFinalize() {
          // Shortcuts
          var data = this._data;
          var dataWords = data.words;
          var nBitsTotal = this._nDataBytes * 8;
          var nBitsLeft = data.sigBytes * 8;

          // Add padding
          dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
          var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);
          var nBitsTotalL = nBitsTotal;
          dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = (nBitsTotalH << 8 | nBitsTotalH >>> 24) & 0x00ff00ff | (nBitsTotalH << 24 | nBitsTotalH >>> 8) & 0xff00ff00;
          dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = (nBitsTotalL << 8 | nBitsTotalL >>> 24) & 0x00ff00ff | (nBitsTotalL << 24 | nBitsTotalL >>> 8) & 0xff00ff00;
          data.sigBytes = (dataWords.length + 1) * 4;

          // Hash final blocks
          this._process();

          // Shortcuts
          var hash = this._hash;
          var H = hash.words;

          // Swap endian
          for (var _i2 = 0; _i2 < 4; _i2 += 1) {
            // Shortcut
            var H_i = H[_i2];
            H[_i2] = (H_i << 8 | H_i >>> 24) & 0x00ff00ff | (H_i << 24 | H_i >>> 8) & 0xff00ff00;
          }

          // Return final computed hash
          return hash;
        };
        _proto.clone = function clone() {
          var clone = _Hasher.prototype.clone.call(this);
          clone._hash = this._hash.clone();
          return clone;
        };
        return MD5Algo;
      }(Hasher));

      /**
       * Shortcut function to the hasher's object interface.
       *
       * @param {WordArray|string} message The message to hash.
       *
       * @return {WordArray} The hash.
       *
       * @static
       *
       * @example
       *
       *     var hash = CryptoJS.MD5('message');
       *     var hash = CryptoJS.MD5(wordArray);
       */
      var MD5 = exports('MD5', Hasher._createHelper(MD5Algo));

      /**
       * Shortcut function to the HMAC's object interface.
       *
       * @param {WordArray|string} message The message to hash.
       * @param {WordArray|string} key The secret key.
       *
       * @return {WordArray} The HMAC.
       *
       * @static
       *
       * @example
       *
       *     var hmac = CryptoJS.HmacMD5(message, key);
       */
      var HmacMD5 = exports('HmacMD5', Hasher._createHmacHelper(MD5Algo));
    }
  };
});

System.register("chunks:///_virtual/microtask.js", ['./cjs-loader.mjs', './global.js', './function-bind-context.js', './object-get-own-property-descriptor.js', './task.js', './queue.js', './engine-is-ios.js', './engine-is-ios-pebble.js', './engine-is-webos-webkit.js', './engine-is-node.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8, __cjsMetaURL$9;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$9 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var global = require('../internals/global');
        var bind = require('../internals/function-bind-context');
        var getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;
        var macrotask = require('../internals/task').set;
        var Queue = require('../internals/queue');
        var IS_IOS = require('../internals/engine-is-ios');
        var IS_IOS_PEBBLE = require('../internals/engine-is-ios-pebble');
        var IS_WEBOS_WEBKIT = require('../internals/engine-is-webos-webkit');
        var IS_NODE = require('../internals/engine-is-node');
        var MutationObserver = global.MutationObserver || global.WebKitMutationObserver;
        var document = global.document;
        var process = global.process;
        var Promise = global.Promise;
        // Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`
        var queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');
        var microtask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;
        var notify, toggle, node, promise, then;

        // modern engines have queueMicrotask method
        if (!microtask) {
          var queue = new Queue();
          var flush = function flush() {
            var parent, fn;
            if (IS_NODE && (parent = process.domain)) parent.exit();
            while (fn = queue.get()) try {
              fn();
            } catch (error) {
              if (queue.head) notify();
              throw error;
            }
            if (parent) parent.enter();
          };

          // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
          // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898
          if (!IS_IOS && !IS_NODE && !IS_WEBOS_WEBKIT && MutationObserver && document) {
            toggle = true;
            node = document.createTextNode('');
            new MutationObserver(flush).observe(node, {
              characterData: true
            });
            notify = function notify() {
              node.data = toggle = !toggle;
            };
            // environments with maybe non-completely correct, but existent Promise
          } else if (!IS_IOS_PEBBLE && Promise && Promise.resolve) {
            // Promise.resolve without an argument throws an error in LG WebOS 2
            promise = Promise.resolve(undefined);
            // workaround of WebKit ~ iOS Safari 10.1 bug
            promise.constructor = Promise;
            then = bind(promise.then, promise);
            notify = function notify() {
              then(flush);
            };
            // Node.js without promises
          } else if (IS_NODE) {
            notify = function notify() {
              process.nextTick(flush);
            };
            // for other environments - macrotask based on:
            // - setImmediate
            // - MessageChannel
            // - window.postMessage
            // - onreadystatechange
            // - setTimeout
          } else {
            // `webpack` dev server bug on IE global methods - use bind(fn, global)
            macrotask = bind(macrotask, global);
            notify = function notify() {
              macrotask(flush);
            };
          }
          microtask = function microtask(fn) {
            if (!queue.head) notify();
            queue.add(fn);
          };
        }
        module.exports = microtask;

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/global': __cjsMetaURL$1,
          '../internals/function-bind-context': __cjsMetaURL$2,
          '../internals/object-get-own-property-descriptor': __cjsMetaURL$3,
          '../internals/task': __cjsMetaURL$4,
          '../internals/queue': __cjsMetaURL$5,
          '../internals/engine-is-ios': __cjsMetaURL$6,
          '../internals/engine-is-ios-pebble': __cjsMetaURL$7,
          '../internals/engine-is-webos-webkit': __cjsMetaURL$8,
          '../internals/engine-is-node': __cjsMetaURL$9
        };
      });
    }
  };
});

System.register("chunks:///_virtual/mode-cfb.js", ['./rollupPluginModLoBabelHelpers.js', './cipher-core.js'], function (exports) {
  var _inheritsLoose, BlockCipherMode;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      BlockCipherMode = module.BlockCipherMode;
    }],
    execute: function () {
      function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {
        var _words = words;
        var keystream;

        // Shortcut
        var iv = this._iv;

        // Generate keystream
        if (iv) {
          keystream = iv.slice(0);

          // Remove IV for subsequent blocks
          this._iv = undefined;
        } else {
          keystream = this._prevBlock;
        }
        cipher.encryptBlock(keystream, 0);

        // Encrypt
        for (var i = 0; i < blockSize; i += 1) {
          _words[offset + i] ^= keystream[i];
        }
      }

      /**
       * Cipher Feedback block mode.
       */
      var CFB = exports('CFB', /*#__PURE__*/function (_BlockCipherMode) {
        _inheritsLoose(CFB, _BlockCipherMode);
        function CFB() {
          return _BlockCipherMode.apply(this, arguments) || this;
        }
        return CFB;
      }(BlockCipherMode));
      CFB.Encryptor = /*#__PURE__*/function (_CFB) {
        _inheritsLoose(_class, _CFB);
        function _class() {
          return _CFB.apply(this, arguments) || this;
        }
        var _proto = _class.prototype;
        _proto.processBlock = function processBlock(words, offset) {
          // Shortcuts
          var cipher = this._cipher;
          var blockSize = cipher.blockSize;
          generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);

          // Remember this block to use with next block
          this._prevBlock = words.slice(offset, offset + blockSize);
        };
        return _class;
      }(CFB);
      CFB.Decryptor = /*#__PURE__*/function (_CFB2) {
        _inheritsLoose(_class2, _CFB2);
        function _class2() {
          return _CFB2.apply(this, arguments) || this;
        }
        var _proto2 = _class2.prototype;
        _proto2.processBlock = function processBlock(words, offset) {
          // Shortcuts
          var cipher = this._cipher;
          var blockSize = cipher.blockSize;

          // Remember this block to use with next block
          var thisBlock = words.slice(offset, offset + blockSize);
          generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);

          // This block becomes the previous block
          this._prevBlock = thisBlock;
        };
        return _class2;
      }(CFB);
    }
  };
});

System.register("chunks:///_virtual/mode-ctr-gladman.js", ['./rollupPluginModLoBabelHelpers.js', './cipher-core.js'], function (exports) {
  var _inheritsLoose, BlockCipherMode;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      BlockCipherMode = module.BlockCipherMode;
    }],
    execute: function () {
      var incWord = function incWord(word) {
        var _word = word;
        if ((word >> 24 & 0xff) === 0xff) {
          // overflow
          var b1 = word >> 16 & 0xff;
          var b2 = word >> 8 & 0xff;
          var b3 = word & 0xff;
          if (b1 === 0xff) {
            // overflow b1
            b1 = 0;
            if (b2 === 0xff) {
              b2 = 0;
              if (b3 === 0xff) {
                b3 = 0;
              } else {
                b3 += 1;
              }
            } else {
              b2 += 1;
            }
          } else {
            b1 += 1;
          }
          _word = 0;
          _word += b1 << 16;
          _word += b2 << 8;
          _word += b3;
        } else {
          _word += 0x01 << 24;
        }
        return _word;
      };
      var incCounter = function incCounter(counter) {
        var _counter = counter;
        _counter[0] = incWord(_counter[0]);
        if (_counter[0] === 0) {
          // encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8
          _counter[1] = incWord(_counter[1]);
        }
        return _counter;
      };

      /** @preserve
       * Counter block mode compatible with  Dr Brian Gladman fileenc.c
       * derived from CryptoJS.mode.CTR
       * Jan Hruby jhruby.web@gmail.com
       */
      var CTRGladman = exports('CTRGladman', /*#__PURE__*/function (_BlockCipherMode) {
        _inheritsLoose(CTRGladman, _BlockCipherMode);
        function CTRGladman() {
          return _BlockCipherMode.apply(this, arguments) || this;
        }
        return CTRGladman;
      }(BlockCipherMode));
      CTRGladman.Encryptor = /*#__PURE__*/function (_CTRGladman) {
        _inheritsLoose(_class, _CTRGladman);
        function _class() {
          return _CTRGladman.apply(this, arguments) || this;
        }
        var _proto = _class.prototype;
        _proto.processBlock = function processBlock(words, offset) {
          var _words = words;

          // Shortcuts
          var cipher = this._cipher;
          var blockSize = cipher.blockSize;
          var iv = this._iv;
          var counter = this._counter;

          // Generate keystream
          if (iv) {
            this._counter = iv.slice(0);
            counter = this._counter;

            // Remove IV for subsequent blocks
            this._iv = undefined;
          }
          incCounter(counter);
          var keystream = counter.slice(0);
          cipher.encryptBlock(keystream, 0);

          // Encrypt
          for (var i = 0; i < blockSize; i += 1) {
            _words[offset + i] ^= keystream[i];
          }
        };
        return _class;
      }(CTRGladman);
      CTRGladman.Decryptor = CTRGladman.Encryptor;
    }
  };
});

System.register("chunks:///_virtual/mode-ctr.js", ['./rollupPluginModLoBabelHelpers.js', './cipher-core.js'], function (exports) {
  var _inheritsLoose, BlockCipherMode;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      BlockCipherMode = module.BlockCipherMode;
    }],
    execute: function () {
      /**
       * Counter block mode.
       */
      var CTR = exports('CTR', /*#__PURE__*/function (_BlockCipherMode) {
        _inheritsLoose(CTR, _BlockCipherMode);
        function CTR() {
          return _BlockCipherMode.apply(this, arguments) || this;
        }
        return CTR;
      }(BlockCipherMode));
      CTR.Encryptor = /*#__PURE__*/function (_CTR) {
        _inheritsLoose(_class, _CTR);
        function _class() {
          return _CTR.apply(this, arguments) || this;
        }
        var _proto = _class.prototype;
        _proto.processBlock = function processBlock(words, offset) {
          var _words = words;

          // Shortcuts
          var cipher = this._cipher;
          var blockSize = cipher.blockSize;
          var iv = this._iv;
          var counter = this._counter;

          // Generate keystream
          if (iv) {
            this._counter = iv.slice(0);
            counter = this._counter;

            // Remove IV for subsequent blocks
            this._iv = undefined;
          }
          var keystream = counter.slice(0);
          cipher.encryptBlock(keystream, 0);

          // Increment counter
          counter[blockSize - 1] = counter[blockSize - 1] + 1 | 0;

          // Encrypt
          for (var i = 0; i < blockSize; i += 1) {
            _words[offset + i] ^= keystream[i];
          }
        };
        return _class;
      }(CTR);
      CTR.Decryptor = CTR.Encryptor;
    }
  };
});

System.register("chunks:///_virtual/mode-ecb.js", ['./rollupPluginModLoBabelHelpers.js', './cipher-core.js'], function (exports) {
  var _inheritsLoose, BlockCipherMode;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      BlockCipherMode = module.BlockCipherMode;
    }],
    execute: function () {
      /**
       * Electronic Codebook block mode.
       */
      var ECB = exports('ECB', /*#__PURE__*/function (_BlockCipherMode) {
        _inheritsLoose(ECB, _BlockCipherMode);
        function ECB() {
          return _BlockCipherMode.apply(this, arguments) || this;
        }
        return ECB;
      }(BlockCipherMode));
      ECB.Encryptor = /*#__PURE__*/function (_ECB) {
        _inheritsLoose(_class, _ECB);
        function _class() {
          return _ECB.apply(this, arguments) || this;
        }
        var _proto = _class.prototype;
        _proto.processBlock = function processBlock(words, offset) {
          this._cipher.encryptBlock(words, offset);
        };
        return _class;
      }(ECB);
      ECB.Decryptor = /*#__PURE__*/function (_ECB2) {
        _inheritsLoose(_class2, _ECB2);
        function _class2() {
          return _ECB2.apply(this, arguments) || this;
        }
        var _proto2 = _class2.prototype;
        _proto2.processBlock = function processBlock(words, offset) {
          this._cipher.decryptBlock(words, offset);
        };
        return _class2;
      }(ECB);
    }
  };
});

System.register("chunks:///_virtual/mode-ofb.js", ['./rollupPluginModLoBabelHelpers.js', './cipher-core.js'], function (exports) {
  var _inheritsLoose, BlockCipherMode;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      BlockCipherMode = module.BlockCipherMode;
    }],
    execute: function () {
      /**
       * Output Feedback block mode.
       */
      var OFB = exports('OFB', /*#__PURE__*/function (_BlockCipherMode) {
        _inheritsLoose(OFB, _BlockCipherMode);
        function OFB() {
          return _BlockCipherMode.apply(this, arguments) || this;
        }
        return OFB;
      }(BlockCipherMode));
      OFB.Encryptor = /*#__PURE__*/function (_OFB) {
        _inheritsLoose(_class, _OFB);
        function _class() {
          return _OFB.apply(this, arguments) || this;
        }
        var _proto = _class.prototype;
        _proto.processBlock = function processBlock(words, offset) {
          var _words = words;

          // Shortcuts
          var cipher = this._cipher;
          var blockSize = cipher.blockSize;
          var iv = this._iv;
          var keystream = this._keystream;

          // Generate keystream
          if (iv) {
            this._keystream = iv.slice(0);
            keystream = this._keystream;

            // Remove IV for subsequent blocks
            this._iv = undefined;
          }
          cipher.encryptBlock(keystream, 0);

          // Encrypt
          for (var i = 0; i < blockSize; i += 1) {
            _words[offset + i] ^= keystream[i];
          }
        };
        return _class;
      }(OFB);
      OFB.Decryptor = OFB.Encryptor;
    }
  };
});

System.register("chunks:///_virtual/new-promise-capability.js", ['./cjs-loader.mjs', './a-callable.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var aCallable = require('../internals/a-callable');
        var $TypeError = TypeError;
        var PromiseCapability = function PromiseCapability(C) {
          var resolve, reject;
          this.promise = new C(function ($$resolve, $$reject) {
            if (resolve !== undefined || reject !== undefined) throw $TypeError('Bad Promise constructor');
            resolve = $$resolve;
            reject = $$reject;
          });
          this.resolve = aCallable(resolve);
          this.reject = aCallable(reject);
        };

        // `NewPromiseCapability` abstract operation
        // https://tc39.es/ecma262/#sec-newpromisecapability
        module.exports.f = function (C) {
          return new PromiseCapability(C);
        };

        // #endregion ORIGINAL CODE

        module.exports;
        module.exports.f;
      }, function () {
        return {
          '../internals/a-callable': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/not-a-regexp.js", ['./cjs-loader.mjs', './is-regexp.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var isRegExp = require('../internals/is-regexp');
        var $TypeError = TypeError;
        module.exports = function (it) {
          if (isRegExp(it)) {
            throw $TypeError("The method doesn't accept regular expressions");
          }
          return it;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/is-regexp': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/number-parse-int.js", ['./cjs-loader.mjs', './global.js', './fails.js', './function-uncurry-this.js', './to-string.js', './string-trim.js', './whitespaces.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var global = require('../internals/global');
        var fails = require('../internals/fails');
        var uncurryThis = require('../internals/function-uncurry-this');
        var toString = require('../internals/to-string');
        var trim = require('../internals/string-trim').trim;
        var whitespaces = require('../internals/whitespaces');
        var $parseInt = global.parseInt;
        var Symbol = global.Symbol;
        var ITERATOR = Symbol && Symbol.iterator;
        var hex = /^[+-]?0x/i;
        var exec = uncurryThis(hex.exec);
        var FORCED = $parseInt(whitespaces + '08') !== 8 || $parseInt(whitespaces + '0x16') !== 22
        // MS Edge 18- broken with boxed symbols
        || ITERATOR && !fails(function () {
          $parseInt(Object(ITERATOR));
        });

        // `parseInt` method
        // https://tc39.es/ecma262/#sec-parseint-string-radix
        module.exports = FORCED ? function parseInt(string, radix) {
          var S = trim(toString(string));
          return $parseInt(S, radix >>> 0 || (exec(hex, S) ? 16 : 10));
        } : $parseInt;

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/global': __cjsMetaURL$1,
          '../internals/fails': __cjsMetaURL$2,
          '../internals/function-uncurry-this': __cjsMetaURL$3,
          '../internals/to-string': __cjsMetaURL$4,
          '../internals/string-trim': __cjsMetaURL$5,
          '../internals/whitespaces': __cjsMetaURL$6
        };
      });
    }
  };
});

System.register("chunks:///_virtual/object-assign.js", ['./cjs-loader.mjs', './descriptors.js', './function-uncurry-this.js', './function-call.js', './fails.js', './object-keys.js', './object-get-own-property-symbols.js', './object-property-is-enumerable.js', './to-object.js', './indexed-object.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8, __cjsMetaURL$9;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$9 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var DESCRIPTORS = require('../internals/descriptors');
        var uncurryThis = require('../internals/function-uncurry-this');
        var call = require('../internals/function-call');
        var fails = require('../internals/fails');
        var objectKeys = require('../internals/object-keys');
        var getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');
        var propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');
        var toObject = require('../internals/to-object');
        var IndexedObject = require('../internals/indexed-object');

        // eslint-disable-next-line es/no-object-assign -- safe
        var $assign = Object.assign;
        // eslint-disable-next-line es/no-object-defineproperty -- required for testing
        var defineProperty = Object.defineProperty;
        var concat = uncurryThis([].concat);

        // `Object.assign` method
        // https://tc39.es/ecma262/#sec-object.assign
        module.exports = !$assign || fails(function () {
          // should have correct order of operations (Edge bug)
          if (DESCRIPTORS && $assign({
            b: 1
          }, $assign(defineProperty({}, 'a', {
            enumerable: true,
            get: function get() {
              defineProperty(this, 'b', {
                value: 3,
                enumerable: false
              });
            }
          }), {
            b: 2
          })).b !== 1) return true;
          // should work with symbols and should have deterministic property order (V8 bug)
          var A = {};
          var B = {};
          // eslint-disable-next-line es/no-symbol -- safe
          var symbol = Symbol('assign detection');
          var alphabet = 'abcdefghijklmnopqrst';
          A[symbol] = 7;
          alphabet.split('').forEach(function (chr) {
            B[chr] = chr;
          });
          return $assign({}, A)[symbol] !== 7 || objectKeys($assign({}, B)).join('') !== alphabet;
        }) ? function assign(target, source) {
          // eslint-disable-line no-unused-vars -- required for `.length`
          var T = toObject(target);
          var argumentsLength = arguments.length;
          var index = 1;
          var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
          var propertyIsEnumerable = propertyIsEnumerableModule.f;
          while (argumentsLength > index) {
            var S = IndexedObject(arguments[index++]);
            var keys = getOwnPropertySymbols ? concat(objectKeys(S), getOwnPropertySymbols(S)) : objectKeys(S);
            var length = keys.length;
            var j = 0;
            var key;
            while (length > j) {
              key = keys[j++];
              if (!DESCRIPTORS || call(propertyIsEnumerable, S, key)) T[key] = S[key];
            }
          }
          return T;
        } : $assign;

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/descriptors': __cjsMetaURL$1,
          '../internals/function-uncurry-this': __cjsMetaURL$2,
          '../internals/function-call': __cjsMetaURL$3,
          '../internals/fails': __cjsMetaURL$4,
          '../internals/object-keys': __cjsMetaURL$5,
          '../internals/object-get-own-property-symbols': __cjsMetaURL$6,
          '../internals/object-property-is-enumerable': __cjsMetaURL$7,
          '../internals/to-object': __cjsMetaURL$8,
          '../internals/indexed-object': __cjsMetaURL$9
        };
      });
    }
  };
});

System.register("chunks:///_virtual/object-create.js", ['./cjs-loader.mjs', './an-object.js', './object-define-properties.js', './enum-bug-keys.js', './hidden-keys.js', './html.js', './document-create-element.js', './shared-key.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        /* global ActiveXObject -- old IE, WSH */
        var anObject = require('../internals/an-object');
        var definePropertiesModule = require('../internals/object-define-properties');
        var enumBugKeys = require('../internals/enum-bug-keys');
        var hiddenKeys = require('../internals/hidden-keys');
        var html = require('../internals/html');
        var documentCreateElement = require('../internals/document-create-element');
        var sharedKey = require('../internals/shared-key');
        var GT = '>';
        var LT = '<';
        var PROTOTYPE = 'prototype';
        var SCRIPT = 'script';
        var IE_PROTO = sharedKey('IE_PROTO');
        var EmptyConstructor = function EmptyConstructor() {/* empty */};
        var scriptTag = function scriptTag(content) {
          return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
        };

        // Create object with fake `null` prototype: use ActiveX Object with cleared prototype
        var NullProtoObjectViaActiveX = function NullProtoObjectViaActiveX(activeXDocument) {
          activeXDocument.write(scriptTag(''));
          activeXDocument.close();
          var temp = activeXDocument.parentWindow.Object;
          activeXDocument = null; // avoid memory leak
          return temp;
        };

        // Create object with fake `null` prototype: use iframe Object with cleared prototype
        var NullProtoObjectViaIFrame = function NullProtoObjectViaIFrame() {
          // Thrash, waste and sodomy: IE GC bug
          var iframe = documentCreateElement('iframe');
          var JS = 'java' + SCRIPT + ':';
          var iframeDocument;
          iframe.style.display = 'none';
          html.appendChild(iframe);
          // https://github.com/zloirock/core-js/issues/475
          iframe.src = String(JS);
          iframeDocument = iframe.contentWindow.document;
          iframeDocument.open();
          iframeDocument.write(scriptTag('document.F=Object'));
          iframeDocument.close();
          return iframeDocument.F;
        };

        // Check for document.domain and active x support
        // No need to use active x approach when document.domain is not set
        // see https://github.com/es-shims/es5-shim/issues/150
        // variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
        // avoid IE GC bug
        var activeXDocument;
        var _NullProtoObject = function NullProtoObject() {
          try {
            activeXDocument = new ActiveXObject('htmlfile');
          } catch (error) {/* ignore */}
          _NullProtoObject = typeof document != 'undefined' ? document.domain && activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) // old IE
          : NullProtoObjectViaIFrame() : NullProtoObjectViaActiveX(activeXDocument); // WSH
          var length = enumBugKeys.length;
          while (length--) delete _NullProtoObject[PROTOTYPE][enumBugKeys[length]];
          return _NullProtoObject();
        };
        hiddenKeys[IE_PROTO] = true;

        // `Object.create` method
        // https://tc39.es/ecma262/#sec-object.create
        // eslint-disable-next-line es/no-object-create -- safe
        module.exports = Object.create || function create(O, Properties) {
          var result;
          if (O !== null) {
            EmptyConstructor[PROTOTYPE] = anObject(O);
            result = new EmptyConstructor();
            EmptyConstructor[PROTOTYPE] = null;
            // add "__proto__" for Object.getPrototypeOf polyfill
            result[IE_PROTO] = O;
          } else result = _NullProtoObject();
          return Properties === undefined ? result : definePropertiesModule.f(result, Properties);
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/an-object': __cjsMetaURL$1,
          '../internals/object-define-properties': __cjsMetaURL$2,
          '../internals/enum-bug-keys': __cjsMetaURL$3,
          '../internals/hidden-keys': __cjsMetaURL$4,
          '../internals/html': __cjsMetaURL$5,
          '../internals/document-create-element': __cjsMetaURL$6,
          '../internals/shared-key': __cjsMetaURL$7
        };
      });
    }
  };
});

System.register("chunks:///_virtual/object-define-properties.js", ['./cjs-loader.mjs', './descriptors.js', './v8-prototype-define-bug.js', './object-define-property.js', './an-object.js', './to-indexed-object.js', './object-keys.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var DESCRIPTORS = require('../internals/descriptors');
        var V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');
        var definePropertyModule = require('../internals/object-define-property');
        var anObject = require('../internals/an-object');
        var toIndexedObject = require('../internals/to-indexed-object');
        var objectKeys = require('../internals/object-keys');

        // `Object.defineProperties` method
        // https://tc39.es/ecma262/#sec-object.defineproperties
        // eslint-disable-next-line es/no-object-defineproperties -- safe
        exports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {
          anObject(O);
          var props = toIndexedObject(Properties);
          var keys = objectKeys(Properties);
          var length = keys.length;
          var index = 0;
          var key;
          while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);
          return O;
        };

        // #endregion ORIGINAL CODE

        module.exports;
        module.exports.f;
      }, function () {
        return {
          '../internals/descriptors': __cjsMetaURL$1,
          '../internals/v8-prototype-define-bug': __cjsMetaURL$2,
          '../internals/object-define-property': __cjsMetaURL$3,
          '../internals/an-object': __cjsMetaURL$4,
          '../internals/to-indexed-object': __cjsMetaURL$5,
          '../internals/object-keys': __cjsMetaURL$6
        };
      });
    }
  };
});

System.register("chunks:///_virtual/object-define-property.js", ['./cjs-loader.mjs', './descriptors.js', './ie8-dom-define.js', './v8-prototype-define-bug.js', './an-object.js', './to-property-key.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var DESCRIPTORS = require('../internals/descriptors');
        var IE8_DOM_DEFINE = require('../internals/ie8-dom-define');
        var V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');
        var anObject = require('../internals/an-object');
        var toPropertyKey = require('../internals/to-property-key');
        var $TypeError = TypeError;
        // eslint-disable-next-line es/no-object-defineproperty -- safe
        var $defineProperty = Object.defineProperty;
        // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
        var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
        var ENUMERABLE = 'enumerable';
        var CONFIGURABLE = 'configurable';
        var WRITABLE = 'writable';

        // `Object.defineProperty` method
        // https://tc39.es/ecma262/#sec-object.defineproperty
        exports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {
          anObject(O);
          P = toPropertyKey(P);
          anObject(Attributes);
          if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
            var current = $getOwnPropertyDescriptor(O, P);
            if (current && current[WRITABLE]) {
              O[P] = Attributes.value;
              Attributes = {
                configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],
                enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
                writable: false
              };
            }
          }
          return $defineProperty(O, P, Attributes);
        } : $defineProperty : function defineProperty(O, P, Attributes) {
          anObject(O);
          P = toPropertyKey(P);
          anObject(Attributes);
          if (IE8_DOM_DEFINE) try {
            return $defineProperty(O, P, Attributes);
          } catch (error) {/* empty */}
          if ('get' in Attributes || 'set' in Attributes) throw $TypeError('Accessors not supported');
          if ('value' in Attributes) O[P] = Attributes.value;
          return O;
        };

        // #endregion ORIGINAL CODE

        module.exports;
        module.exports.f;
      }, function () {
        return {
          '../internals/descriptors': __cjsMetaURL$1,
          '../internals/ie8-dom-define': __cjsMetaURL$2,
          '../internals/v8-prototype-define-bug': __cjsMetaURL$3,
          '../internals/an-object': __cjsMetaURL$4,
          '../internals/to-property-key': __cjsMetaURL$5
        };
      });
    }
  };
});

System.register("chunks:///_virtual/object-get-own-property-descriptor.js", ['./cjs-loader.mjs', './descriptors.js', './function-call.js', './object-property-is-enumerable.js', './create-property-descriptor.js', './to-indexed-object.js', './to-property-key.js', './has-own-property.js', './ie8-dom-define.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var DESCRIPTORS = require('../internals/descriptors');
        var call = require('../internals/function-call');
        var propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');
        var createPropertyDescriptor = require('../internals/create-property-descriptor');
        var toIndexedObject = require('../internals/to-indexed-object');
        var toPropertyKey = require('../internals/to-property-key');
        var hasOwn = require('../internals/has-own-property');
        var IE8_DOM_DEFINE = require('../internals/ie8-dom-define');

        // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
        var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

        // `Object.getOwnPropertyDescriptor` method
        // https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
        exports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
          O = toIndexedObject(O);
          P = toPropertyKey(P);
          if (IE8_DOM_DEFINE) try {
            return $getOwnPropertyDescriptor(O, P);
          } catch (error) {/* empty */}
          if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);
        };

        // #endregion ORIGINAL CODE

        module.exports;
        module.exports.f;
      }, function () {
        return {
          '../internals/descriptors': __cjsMetaURL$1,
          '../internals/function-call': __cjsMetaURL$2,
          '../internals/object-property-is-enumerable': __cjsMetaURL$3,
          '../internals/create-property-descriptor': __cjsMetaURL$4,
          '../internals/to-indexed-object': __cjsMetaURL$5,
          '../internals/to-property-key': __cjsMetaURL$6,
          '../internals/has-own-property': __cjsMetaURL$7,
          '../internals/ie8-dom-define': __cjsMetaURL$8
        };
      });
    }
  };
});

System.register("chunks:///_virtual/object-get-own-property-names.js", ['./cjs-loader.mjs', './object-keys-internal.js', './enum-bug-keys.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var internalObjectKeys = require('../internals/object-keys-internal');
        var enumBugKeys = require('../internals/enum-bug-keys');
        var hiddenKeys = enumBugKeys.concat('length', 'prototype');

        // `Object.getOwnPropertyNames` method
        // https://tc39.es/ecma262/#sec-object.getownpropertynames
        // eslint-disable-next-line es/no-object-getownpropertynames -- safe
        exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
          return internalObjectKeys(O, hiddenKeys);
        };

        // #endregion ORIGINAL CODE

        module.exports;
        module.exports.f;
      }, function () {
        return {
          '../internals/object-keys-internal': __cjsMetaURL$1,
          '../internals/enum-bug-keys': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/object-get-own-property-symbols.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        // eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
        exports.f = Object.getOwnPropertySymbols;

        // #endregion ORIGINAL CODE

        module.exports;
        module.exports.f;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/object-get-prototype-of.js", ['./cjs-loader.mjs', './has-own-property.js', './is-callable.js', './to-object.js', './shared-key.js', './correct-prototype-getter.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var hasOwn = require('../internals/has-own-property');
        var isCallable = require('../internals/is-callable');
        var toObject = require('../internals/to-object');
        var sharedKey = require('../internals/shared-key');
        var CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');
        var IE_PROTO = sharedKey('IE_PROTO');
        var $Object = Object;
        var ObjectPrototype = $Object.prototype;

        // `Object.getPrototypeOf` method
        // https://tc39.es/ecma262/#sec-object.getprototypeof
        // eslint-disable-next-line es/no-object-getprototypeof -- safe
        module.exports = CORRECT_PROTOTYPE_GETTER ? $Object.getPrototypeOf : function (O) {
          var object = toObject(O);
          if (hasOwn(object, IE_PROTO)) return object[IE_PROTO];
          var constructor = object.constructor;
          if (isCallable(constructor) && object instanceof constructor) {
            return constructor.prototype;
          }
          return object instanceof $Object ? ObjectPrototype : null;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/has-own-property': __cjsMetaURL$1,
          '../internals/is-callable': __cjsMetaURL$2,
          '../internals/to-object': __cjsMetaURL$3,
          '../internals/shared-key': __cjsMetaURL$4,
          '../internals/correct-prototype-getter': __cjsMetaURL$5
        };
      });
    }
  };
});

System.register("chunks:///_virtual/object-is-prototype-of.js", ['./cjs-loader.mjs', './function-uncurry-this.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var uncurryThis = require('../internals/function-uncurry-this');
        module.exports = uncurryThis({}.isPrototypeOf);

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-uncurry-this': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/object-keys-internal.js", ['./cjs-loader.mjs', './function-uncurry-this.js', './has-own-property.js', './to-indexed-object.js', './array-includes.js', './hidden-keys.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var uncurryThis = require('../internals/function-uncurry-this');
        var hasOwn = require('../internals/has-own-property');
        var toIndexedObject = require('../internals/to-indexed-object');
        var indexOf = require('../internals/array-includes').indexOf;
        var hiddenKeys = require('../internals/hidden-keys');
        var push = uncurryThis([].push);
        module.exports = function (object, names) {
          var O = toIndexedObject(object);
          var i = 0;
          var result = [];
          var key;
          for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);
          // Don't enum bug & hidden keys
          while (names.length > i) if (hasOwn(O, key = names[i++])) {
            ~indexOf(result, key) || push(result, key);
          }
          return result;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-uncurry-this': __cjsMetaURL$1,
          '../internals/has-own-property': __cjsMetaURL$2,
          '../internals/to-indexed-object': __cjsMetaURL$3,
          '../internals/array-includes': __cjsMetaURL$4,
          '../internals/hidden-keys': __cjsMetaURL$5
        };
      });
    }
  };
});

System.register("chunks:///_virtual/object-keys.js", ['./cjs-loader.mjs', './object-keys-internal.js', './enum-bug-keys.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var internalObjectKeys = require('../internals/object-keys-internal');
        var enumBugKeys = require('../internals/enum-bug-keys');

        // `Object.keys` method
        // https://tc39.es/ecma262/#sec-object.keys
        // eslint-disable-next-line es/no-object-keys -- safe
        module.exports = Object.keys || function keys(O) {
          return internalObjectKeys(O, enumBugKeys);
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/object-keys-internal': __cjsMetaURL$1,
          '../internals/enum-bug-keys': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/object-property-is-enumerable.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $propertyIsEnumerable = {}.propertyIsEnumerable;
        // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
        var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

        // Nashorn ~ JDK8 bug
        var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({
          1: 2
        }, 1);

        // `Object.prototype.propertyIsEnumerable` method implementation
        // https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
        exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
          var descriptor = getOwnPropertyDescriptor(this, V);
          return !!descriptor && descriptor.enumerable;
        } : $propertyIsEnumerable;

        // #endregion ORIGINAL CODE

        module.exports;
        module.exports.f;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/object-set-prototype-of.js", ['./cjs-loader.mjs', './function-uncurry-this-accessor.js', './an-object.js', './a-possible-prototype.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        /* eslint-disable no-proto -- safe */
        var uncurryThisAccessor = require('../internals/function-uncurry-this-accessor');
        var anObject = require('../internals/an-object');
        var aPossiblePrototype = require('../internals/a-possible-prototype');

        // `Object.setPrototypeOf` method
        // https://tc39.es/ecma262/#sec-object.setprototypeof
        // Works with __proto__ only. Old v8 can't work with null proto objects.
        // eslint-disable-next-line es/no-object-setprototypeof -- safe
        module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {
          var CORRECT_SETTER = false;
          var test = {};
          var setter;
          try {
            setter = uncurryThisAccessor(Object.prototype, '__proto__', 'set');
            setter(test, []);
            CORRECT_SETTER = test instanceof Array;
          } catch (error) {/* empty */}
          return function setPrototypeOf(O, proto) {
            anObject(O);
            aPossiblePrototype(proto);
            if (CORRECT_SETTER) setter(O, proto);else O.__proto__ = proto;
            return O;
          };
        }() : undefined);

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-uncurry-this-accessor': __cjsMetaURL$1,
          '../internals/an-object': __cjsMetaURL$2,
          '../internals/a-possible-prototype': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/object-to-array.js", ['./cjs-loader.mjs', './descriptors.js', './fails.js', './function-uncurry-this.js', './object-get-prototype-of.js', './object-keys.js', './to-indexed-object.js', './object-property-is-enumerable.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var DESCRIPTORS = require('../internals/descriptors');
        var fails = require('../internals/fails');
        var uncurryThis = require('../internals/function-uncurry-this');
        var objectGetPrototypeOf = require('../internals/object-get-prototype-of');
        var objectKeys = require('../internals/object-keys');
        var toIndexedObject = require('../internals/to-indexed-object');
        var $propertyIsEnumerable = require('../internals/object-property-is-enumerable').f;
        var propertyIsEnumerable = uncurryThis($propertyIsEnumerable);
        var push = uncurryThis([].push);

        // in some IE versions, `propertyIsEnumerable` returns incorrect result on integer keys
        // of `null` prototype objects
        var IE_BUG = DESCRIPTORS && fails(function () {
          // eslint-disable-next-line es/no-object-create -- safe
          var O = Object.create(null);
          O[2] = 2;
          return !propertyIsEnumerable(O, 2);
        });

        // `Object.{ entries, values }` methods implementation
        var createMethod = function createMethod(TO_ENTRIES) {
          return function (it) {
            var O = toIndexedObject(it);
            var keys = objectKeys(O);
            var IE_WORKAROUND = IE_BUG && objectGetPrototypeOf(O) === null;
            var length = keys.length;
            var i = 0;
            var result = [];
            var key;
            while (length > i) {
              key = keys[i++];
              if (!DESCRIPTORS || (IE_WORKAROUND ? key in O : propertyIsEnumerable(O, key))) {
                push(result, TO_ENTRIES ? [key, O[key]] : O[key]);
              }
            }
            return result;
          };
        };
        module.exports = {
          // `Object.entries` method
          // https://tc39.es/ecma262/#sec-object.entries
          entries: createMethod(true),
          // `Object.values` method
          // https://tc39.es/ecma262/#sec-object.values
          values: createMethod(false)
        };

        // #endregion ORIGINAL CODE

        module.exports;
        module.exports.entries;
      }, function () {
        return {
          '../internals/descriptors': __cjsMetaURL$1,
          '../internals/fails': __cjsMetaURL$2,
          '../internals/function-uncurry-this': __cjsMetaURL$3,
          '../internals/object-get-prototype-of': __cjsMetaURL$4,
          '../internals/object-keys': __cjsMetaURL$5,
          '../internals/to-indexed-object': __cjsMetaURL$6,
          '../internals/object-property-is-enumerable': __cjsMetaURL$7
        };
      });
    }
  };
});

System.register("chunks:///_virtual/object-to-string.js", ['./cjs-loader.mjs', './to-string-tag-support.js', './classof.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');
        var classof = require('../internals/classof');

        // `Object.prototype.toString` method implementation
        // https://tc39.es/ecma262/#sec-object.prototype.tostring
        module.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {
          return '[object ' + classof(this) + ']';
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/to-string-tag-support': __cjsMetaURL$1,
          '../internals/classof': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/ordinary-to-primitive.js", ['./cjs-loader.mjs', './function-call.js', './is-callable.js', './is-object.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var call = require('../internals/function-call');
        var isCallable = require('../internals/is-callable');
        var isObject = require('../internals/is-object');
        var $TypeError = TypeError;

        // `OrdinaryToPrimitive` abstract operation
        // https://tc39.es/ecma262/#sec-ordinarytoprimitive
        module.exports = function (input, pref) {
          var fn, val;
          if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
          if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;
          if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
          throw $TypeError("Can't convert object to primitive value");
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-call': __cjsMetaURL$1,
          '../internals/is-callable': __cjsMetaURL$2,
          '../internals/is-object': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/own-keys.js", ['./cjs-loader.mjs', './get-built-in.js', './function-uncurry-this.js', './object-get-own-property-names.js', './object-get-own-property-symbols.js', './an-object.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var getBuiltIn = require('../internals/get-built-in');
        var uncurryThis = require('../internals/function-uncurry-this');
        var getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');
        var getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');
        var anObject = require('../internals/an-object');
        var concat = uncurryThis([].concat);

        // all object keys, includes non-enumerable and symbols
        module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
          var keys = getOwnPropertyNamesModule.f(anObject(it));
          var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
          return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/get-built-in': __cjsMetaURL$1,
          '../internals/function-uncurry-this': __cjsMetaURL$2,
          '../internals/object-get-own-property-names': __cjsMetaURL$3,
          '../internals/object-get-own-property-symbols': __cjsMetaURL$4,
          '../internals/an-object': __cjsMetaURL$5
        };
      });
    }
  };
});

System.register("chunks:///_virtual/pad-ansix923.js", [], function (exports) {
  return {
    execute: function () {
      /**
       * ANSI X.923 padding strategy.
       */
      var AnsiX923 = exports('AnsiX923', {
        pad: function pad(data, blockSize) {
          var _data = data;

          // Shortcuts
          var dataSigBytes = _data.sigBytes;
          var blockSizeBytes = blockSize * 4;

          // Count padding bytes
          var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;

          // Compute last byte position
          var lastBytePos = dataSigBytes + nPaddingBytes - 1;

          // Pad
          _data.clamp();
          _data.words[lastBytePos >>> 2] |= nPaddingBytes << 24 - lastBytePos % 4 * 8;
          _data.sigBytes += nPaddingBytes;
        },
        unpad: function unpad(data) {
          var _data = data;

          // Get number of padding bytes from last byte
          var nPaddingBytes = _data.words[_data.sigBytes - 1 >>> 2] & 0xff;

          // Remove padding
          _data.sigBytes -= nPaddingBytes;
        }
      });
    }
  };
});

System.register("chunks:///_virtual/pad-iso10126.js", ['./core.js'], function (exports) {
  var WordArray;
  return {
    setters: [function (module) {
      WordArray = module.WordArray;
    }],
    execute: function () {
      /**
       * ISO 10126 padding strategy.
       */
      var Iso10126 = exports('Iso10126', {
        pad: function pad(data, blockSize) {
          // Shortcut
          var blockSizeBytes = blockSize * 4;

          // Count padding bytes
          var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;

          // Pad
          data.concat(WordArray.random(nPaddingBytes - 1)).concat(WordArray.create([nPaddingBytes << 24], 1));
        },
        unpad: function unpad(data) {
          var _data = data;
          // Get number of padding bytes from last byte
          var nPaddingBytes = _data.words[_data.sigBytes - 1 >>> 2] & 0xff;

          // Remove padding
          _data.sigBytes -= nPaddingBytes;
        }
      });
    }
  };
});

System.register("chunks:///_virtual/pad-iso97971.js", ['./core.js', './pad-zeropadding.js'], function (exports) {
  var WordArray, ZeroPadding;
  return {
    setters: [function (module) {
      WordArray = module.WordArray;
    }, function (module) {
      ZeroPadding = module.ZeroPadding;
    }],
    execute: function () {
      /**
       * ISO/IEC 9797-1 Padding Method 2.
       */
      var Iso97971 = exports('Iso97971', {
        pad: function pad(data, blockSize) {
          // Add 0x80 byte
          data.concat(WordArray.create([0x80000000], 1));

          // Zero pad the rest
          ZeroPadding.pad(data, blockSize);
        },
        unpad: function unpad(data) {
          var _data = data;

          // Remove zero padding
          ZeroPadding.unpad(_data);

          // Remove one more byte -- the 0x80 byte
          _data.sigBytes -= 1;
        }
      });
    }
  };
});

System.register("chunks:///_virtual/pad-nopadding.js", [], function (exports) {
  return {
    execute: function () {
      /**
       * A noop padding strategy.
       */
      var NoPadding = exports('NoPadding', {
        pad: function pad() {},
        unpad: function unpad() {}
      });
    }
  };
});

System.register("chunks:///_virtual/pad-zeropadding.js", [], function (exports) {
  return {
    execute: function () {
      /**
       * Zero padding strategy.
       */
      var ZeroPadding = exports('ZeroPadding', {
        pad: function pad(data, blockSize) {
          var _data = data;

          // Shortcut
          var blockSizeBytes = blockSize * 4;

          // Pad
          _data.clamp();
          _data.sigBytes += blockSizeBytes - (data.sigBytes % blockSizeBytes || blockSizeBytes);
        },
        unpad: function unpad(data) {
          var _data = data;

          // Shortcut
          var dataWords = _data.words;

          // Unpad
          for (var i = _data.sigBytes - 1; i >= 0; i -= 1) {
            if (dataWords[i >>> 2] >>> 24 - i % 4 * 8 & 0xff) {
              _data.sigBytes = i + 1;
              break;
            }
          }
        }
      });
    }
  };
});

System.register("chunks:///_virtual/path.js", ['./cjs-loader.mjs', './global.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var global = require('../internals/global');
        module.exports = global;

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/global': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/pbkdf2.js", ['./rollupPluginModLoBabelHelpers.js', './core.js', './sha256.js'], function (exports) {
  var _inheritsLoose, Base, HMAC, WordArray, SHA256Algo;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      Base = module.Base;
      HMAC = module.HMAC;
      WordArray = module.WordArray;
    }, function (module) {
      SHA256Algo = module.SHA256Algo;
    }],
    execute: function () {
      /**
       * Password-Based Key Derivation Function 2 algorithm.
       */
      var PBKDF2Algo = exports('PBKDF2Algo', /*#__PURE__*/function (_Base) {
        _inheritsLoose(PBKDF2Algo, _Base);
        /**
         * Initializes a newly created key derivation function.
         *
         * @param {Object} cfg (Optional) The configuration options to use for the derivation.
         *
         * @example
         *
         *     const kdf = CryptoJS.algo.PBKDF2.create();
         *     const kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });
         *     const kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });
         */
        function PBKDF2Algo(cfg) {
          var _this;
          _this = _Base.call(this) || this;

          /**
           * Configuration options.
           * 
           * The default `hasher` and `interations` is different from CryptoJs to enhance security:
           * https://github.com/entronad/crypto-es/security/advisories/GHSA-mpj8-q39x-wq5h
           *
           * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
           * @property {Hasher} hasher The hasher to use. Default: SHA256
           * @property {number} iterations The number of iterations to perform. Default: 250000
           */
          _this.cfg = Object.assign(new Base(), {
            keySize: 128 / 32,
            hasher: SHA256Algo,
            iterations: 250000
          }, cfg);
          return _this;
        }

        /**
         * Computes the Password-Based Key Derivation Function 2.
         *
         * @param {WordArray|string} password The password.
         * @param {WordArray|string} salt A salt.
         *
         * @return {WordArray} The derived key.
         *
         * @example
         *
         *     const key = kdf.compute(password, salt);
         */
        var _proto = PBKDF2Algo.prototype;
        _proto.compute = function compute(password, salt) {
          // Shortcut
          var cfg = this.cfg;

          // Init HMAC
          var hmac = HMAC.create(cfg.hasher, password);

          // Initial values
          var derivedKey = WordArray.create();
          var blockIndex = WordArray.create([0x00000001]);

          // Shortcuts
          var derivedKeyWords = derivedKey.words;
          var blockIndexWords = blockIndex.words;
          var keySize = cfg.keySize,
            iterations = cfg.iterations;

          // Generate key
          while (derivedKeyWords.length < keySize) {
            var block = hmac.update(salt).finalize(blockIndex);
            hmac.reset();

            // Shortcuts
            var blockWords = block.words;
            var blockWordsLength = blockWords.length;

            // Iterations
            var intermediate = block;
            for (var i = 1; i < iterations; i += 1) {
              intermediate = hmac.finalize(intermediate);
              hmac.reset();

              // Shortcut
              var intermediateWords = intermediate.words;

              // XOR intermediate with block
              for (var j = 0; j < blockWordsLength; j += 1) {
                blockWords[j] ^= intermediateWords[j];
              }
            }
            derivedKey.concat(block);
            blockIndexWords[0] += 1;
          }
          derivedKey.sigBytes = keySize * 4;
          return derivedKey;
        };
        return PBKDF2Algo;
      }(Base));

      /**
       * Computes the Password-Based Key Derivation Function 2.
       *
       * @param {WordArray|string} password The password.
       * @param {WordArray|string} salt A salt.
       * @param {Object} cfg (Optional) The configuration options to use for this computation.
       *
       * @return {WordArray} The derived key.
       *
       * @static
       *
       * @example
       *
       *     var key = CryptoJS.PBKDF2(password, salt);
       *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });
       *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });
       */
      var PBKDF2 = exports('PBKDF2', function PBKDF2(password, salt, cfg) {
        return PBKDF2Algo.create(cfg).compute(password, salt);
      });
    }
  };
});

System.register("chunks:///_virtual/perform.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        module.exports = function (exec) {
          try {
            return {
              error: false,
              value: exec()
            };
          } catch (error) {
            return {
              error: true,
              value: error
            };
          }
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/promise-constructor-detection.js", ['./cjs-loader.mjs', './global.js', './promise-native-constructor.js', './is-callable.js', './is-forced.js', './inspect-source.js', './well-known-symbol.js', './engine-is-browser.js', './engine-is-deno.js', './is-pure.js', './engine-v8-version.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8, __cjsMetaURL$9, __cjsMetaURL$a;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$9 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$a = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var global = require('../internals/global');
        var NativePromiseConstructor = require('../internals/promise-native-constructor');
        var isCallable = require('../internals/is-callable');
        var isForced = require('../internals/is-forced');
        var inspectSource = require('../internals/inspect-source');
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var IS_BROWSER = require('../internals/engine-is-browser');
        var IS_DENO = require('../internals/engine-is-deno');
        var IS_PURE = require('../internals/is-pure');
        var V8_VERSION = require('../internals/engine-v8-version');
        var NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;
        var SPECIES = wellKnownSymbol('species');
        var SUBCLASSING = false;
        var NATIVE_PROMISE_REJECTION_EVENT = isCallable(global.PromiseRejectionEvent);
        var FORCED_PROMISE_CONSTRUCTOR = isForced('Promise', function () {
          var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(NativePromiseConstructor);
          var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(NativePromiseConstructor);
          // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
          // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
          // We can't detect it synchronously, so just check versions
          if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION === 66) return true;
          // We need Promise#{ catch, finally } in the pure version for preventing prototype pollution
          if (IS_PURE && !(NativePromisePrototype['catch'] && NativePromisePrototype['finally'])) return true;
          // We can't use @@species feature detection in V8 since it causes
          // deoptimization and performance degradation
          // https://github.com/zloirock/core-js/issues/679
          if (!V8_VERSION || V8_VERSION < 51 || !/native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) {
            // Detect correctness of subclassing with @@species support
            var promise = new NativePromiseConstructor(function (resolve) {
              resolve(1);
            });
            var FakePromise = function FakePromise(exec) {
              exec(function () {/* empty */}, function () {/* empty */});
            };
            var constructor = promise.constructor = {};
            constructor[SPECIES] = FakePromise;
            SUBCLASSING = promise.then(function () {/* empty */}) instanceof FakePromise;
            if (!SUBCLASSING) return true;
            // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
          }

          return !GLOBAL_CORE_JS_PROMISE && (IS_BROWSER || IS_DENO) && !NATIVE_PROMISE_REJECTION_EVENT;
        });
        module.exports = {
          CONSTRUCTOR: FORCED_PROMISE_CONSTRUCTOR,
          REJECTION_EVENT: NATIVE_PROMISE_REJECTION_EVENT,
          SUBCLASSING: SUBCLASSING
        };

        // #endregion ORIGINAL CODE

        module.exports;
        module.exports.CONSTRUCTOR;
        module.exports.REJECTION_EVENT;
        module.exports.SUBCLASSING;
      }, function () {
        return {
          '../internals/global': __cjsMetaURL$1,
          '../internals/promise-native-constructor': __cjsMetaURL$2,
          '../internals/is-callable': __cjsMetaURL$3,
          '../internals/is-forced': __cjsMetaURL$4,
          '../internals/inspect-source': __cjsMetaURL$5,
          '../internals/well-known-symbol': __cjsMetaURL$6,
          '../internals/engine-is-browser': __cjsMetaURL$7,
          '../internals/engine-is-deno': __cjsMetaURL$8,
          '../internals/is-pure': __cjsMetaURL$9,
          '../internals/engine-v8-version': __cjsMetaURL$a
        };
      });
    }
  };
});

System.register("chunks:///_virtual/promise-native-constructor.js", ['./cjs-loader.mjs', './global.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var global = require('../internals/global');
        module.exports = global.Promise;

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/global': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/promise-resolve.js", ['./cjs-loader.mjs', './an-object.js', './is-object.js', './new-promise-capability.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var anObject = require('../internals/an-object');
        var isObject = require('../internals/is-object');
        var newPromiseCapability = require('../internals/new-promise-capability');
        module.exports = function (C, x) {
          anObject(C);
          if (isObject(x) && x.constructor === C) return x;
          var promiseCapability = newPromiseCapability.f(C);
          var resolve = promiseCapability.resolve;
          resolve(x);
          return promiseCapability.promise;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/an-object': __cjsMetaURL$1,
          '../internals/is-object': __cjsMetaURL$2,
          '../internals/new-promise-capability': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/promise-statics-incorrect-iteration.js", ['./cjs-loader.mjs', './promise-native-constructor.js', './check-correctness-of-iteration.js', './promise-constructor-detection.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var NativePromiseConstructor = require('../internals/promise-native-constructor');
        var checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');
        var FORCED_PROMISE_CONSTRUCTOR = require('../internals/promise-constructor-detection').CONSTRUCTOR;
        module.exports = FORCED_PROMISE_CONSTRUCTOR || !checkCorrectnessOfIteration(function (iterable) {
          NativePromiseConstructor.all(iterable).then(undefined, function () {/* empty */});
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/promise-native-constructor': __cjsMetaURL$1,
          '../internals/check-correctness-of-iteration': __cjsMetaURL$2,
          '../internals/promise-constructor-detection': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/proxy-accessor.js", ['./cjs-loader.mjs', './object-define-property.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var defineProperty = require('../internals/object-define-property').f;
        module.exports = function (Target, Source, key) {
          key in Target || defineProperty(Target, key, {
            configurable: true,
            get: function get() {
              return Source[key];
            },
            set: function set(it) {
              Source[key] = it;
            }
          });
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/object-define-property': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/queue.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var Queue = function Queue() {
          this.head = null;
          this.tail = null;
        };
        Queue.prototype = {
          add: function add(item) {
            var entry = {
              item: item,
              next: null
            };
            var tail = this.tail;
            if (tail) tail.next = entry;else this.head = entry;
            this.tail = entry;
          },
          get: function get() {
            var entry = this.head;
            if (entry) {
              var next = this.head = entry.next;
              if (next === null) this.tail = null;
              return entry.item;
            }
          }
        };
        module.exports = Queue;

        // #endregion ORIGINAL CODE

        module.exports;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/rabbit-legacy.js", ['./rollupPluginModLoBabelHelpers.js', './cipher-core.js'], function (exports) {
  var _inheritsLoose, StreamCipher;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      StreamCipher = module.StreamCipher;
    }],
    execute: function () {
      // Reusable objects
      var S = [];
      var C_ = [];
      var G = [];
      function nextState() {
        // Shortcuts
        var X = this._X;
        var C = this._C;

        // Save old counter values
        for (var i = 0; i < 8; i += 1) {
          C_[i] = C[i];
        }

        // Calculate new counter values
        C[0] = C[0] + 0x4d34d34d + this._b | 0;
        C[1] = C[1] + 0xd34d34d3 + (C[0] >>> 0 < C_[0] >>> 0 ? 1 : 0) | 0;
        C[2] = C[2] + 0x34d34d34 + (C[1] >>> 0 < C_[1] >>> 0 ? 1 : 0) | 0;
        C[3] = C[3] + 0x4d34d34d + (C[2] >>> 0 < C_[2] >>> 0 ? 1 : 0) | 0;
        C[4] = C[4] + 0xd34d34d3 + (C[3] >>> 0 < C_[3] >>> 0 ? 1 : 0) | 0;
        C[5] = C[5] + 0x34d34d34 + (C[4] >>> 0 < C_[4] >>> 0 ? 1 : 0) | 0;
        C[6] = C[6] + 0x4d34d34d + (C[5] >>> 0 < C_[5] >>> 0 ? 1 : 0) | 0;
        C[7] = C[7] + 0xd34d34d3 + (C[6] >>> 0 < C_[6] >>> 0 ? 1 : 0) | 0;
        this._b = C[7] >>> 0 < C_[7] >>> 0 ? 1 : 0;

        // Calculate the g-values
        for (var _i = 0; _i < 8; _i += 1) {
          var gx = X[_i] + C[_i];

          // Construct high and low argument for squaring
          var ga = gx & 0xffff;
          var gb = gx >>> 16;

          // Calculate high and low result of squaring
          var gh = ((ga * ga >>> 17) + ga * gb >>> 15) + gb * gb;
          var gl = ((gx & 0xffff0000) * gx | 0) + ((gx & 0x0000ffff) * gx | 0);

          // High XOR low
          G[_i] = gh ^ gl;
        }

        // Calculate new state values
        X[0] = G[0] + (G[7] << 16 | G[7] >>> 16) + (G[6] << 16 | G[6] >>> 16) | 0;
        X[1] = G[1] + (G[0] << 8 | G[0] >>> 24) + G[7] | 0;
        X[2] = G[2] + (G[1] << 16 | G[1] >>> 16) + (G[0] << 16 | G[0] >>> 16) | 0;
        X[3] = G[3] + (G[2] << 8 | G[2] >>> 24) + G[1] | 0;
        X[4] = G[4] + (G[3] << 16 | G[3] >>> 16) + (G[2] << 16 | G[2] >>> 16) | 0;
        X[5] = G[5] + (G[4] << 8 | G[4] >>> 24) + G[3] | 0;
        X[6] = G[6] + (G[5] << 16 | G[5] >>> 16) + (G[4] << 16 | G[4] >>> 16) | 0;
        X[7] = G[7] + (G[6] << 8 | G[6] >>> 24) + G[5] | 0;
      }

      /**
       * Rabbit stream cipher algorithm.
       *
       * This is a legacy version that neglected to convert the key to little-endian.
       * This error doesn't affect the cipher's security,
       * but it does affect its compatibility with other implementations.
       */
      var RabbitLegacyAlgo = exports('RabbitLegacyAlgo', /*#__PURE__*/function (_StreamCipher) {
        _inheritsLoose(RabbitLegacyAlgo, _StreamCipher);
        function RabbitLegacyAlgo() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _StreamCipher.call.apply(_StreamCipher, [this].concat(args)) || this;
          _this.blockSize = 128 / 32;
          _this.ivSize = 64 / 32;
          return _this;
        }
        var _proto = RabbitLegacyAlgo.prototype;
        _proto._doReset = function _doReset() {
          // Shortcuts
          var K = this._key.words;
          var iv = this.cfg.iv;

          // Generate initial state values
          this._X = [K[0], K[3] << 16 | K[2] >>> 16, K[1], K[0] << 16 | K[3] >>> 16, K[2], K[1] << 16 | K[0] >>> 16, K[3], K[2] << 16 | K[1] >>> 16];
          var X = this._X;

          // Generate initial counter values
          this._C = [K[2] << 16 | K[2] >>> 16, K[0] & 0xffff0000 | K[1] & 0x0000ffff, K[3] << 16 | K[3] >>> 16, K[1] & 0xffff0000 | K[2] & 0x0000ffff, K[0] << 16 | K[0] >>> 16, K[2] & 0xffff0000 | K[3] & 0x0000ffff, K[1] << 16 | K[1] >>> 16, K[3] & 0xffff0000 | K[0] & 0x0000ffff];
          var C = this._C;

          // Carry bit
          this._b = 0;

          // Iterate the system four times
          for (var i = 0; i < 4; i += 1) {
            nextState.call(this);
          }

          // Modify the counters
          for (var _i2 = 0; _i2 < 8; _i2 += 1) {
            C[_i2] ^= X[_i2 + 4 & 7];
          }

          // IV setup
          if (iv) {
            // Shortcuts
            var IV = iv.words;
            var IV_0 = IV[0];
            var IV_1 = IV[1];

            // Generate four subvectors
            var i0 = (IV_0 << 8 | IV_0 >>> 24) & 0x00ff00ff | (IV_0 << 24 | IV_0 >>> 8) & 0xff00ff00;
            var i2 = (IV_1 << 8 | IV_1 >>> 24) & 0x00ff00ff | (IV_1 << 24 | IV_1 >>> 8) & 0xff00ff00;
            var i1 = i0 >>> 16 | i2 & 0xffff0000;
            var i3 = i2 << 16 | i0 & 0x0000ffff;

            // Modify counter values
            C[0] ^= i0;
            C[1] ^= i1;
            C[2] ^= i2;
            C[3] ^= i3;
            C[4] ^= i0;
            C[5] ^= i1;
            C[6] ^= i2;
            C[7] ^= i3;

            // Iterate the system four times
            for (var _i3 = 0; _i3 < 4; _i3 += 1) {
              nextState.call(this);
            }
          }
        };
        _proto._doProcessBlock = function _doProcessBlock(M, offset) {
          var _M = M;

          // Shortcut
          var X = this._X;

          // Iterate the system
          nextState.call(this);

          // Generate four keystream words
          S[0] = X[0] ^ X[5] >>> 16 ^ X[3] << 16;
          S[1] = X[2] ^ X[7] >>> 16 ^ X[5] << 16;
          S[2] = X[4] ^ X[1] >>> 16 ^ X[7] << 16;
          S[3] = X[6] ^ X[3] >>> 16 ^ X[1] << 16;
          for (var i = 0; i < 4; i += 1) {
            // Swap endian
            S[i] = (S[i] << 8 | S[i] >>> 24) & 0x00ff00ff | (S[i] << 24 | S[i] >>> 8) & 0xff00ff00;

            // Encrypt
            _M[offset + i] ^= S[i];
          }
        };
        return RabbitLegacyAlgo;
      }(StreamCipher));

      /**
       * Shortcut functions to the cipher's object interface.
       *
       * @example
       *
       *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);
       *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);
       */
      var RabbitLegacy = exports('RabbitLegacy', StreamCipher._createHelper(RabbitLegacyAlgo));
    }
  };
});

System.register("chunks:///_virtual/rabbit.js", ['./rollupPluginModLoBabelHelpers.js', './cipher-core.js'], function (exports) {
  var _inheritsLoose, StreamCipher;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      StreamCipher = module.StreamCipher;
    }],
    execute: function () {
      // Reusable objects
      var S = [];
      var C_ = [];
      var G = [];
      function nextState() {
        // Shortcuts
        var X = this._X;
        var C = this._C;

        // Save old counter values
        for (var i = 0; i < 8; i += 1) {
          C_[i] = C[i];
        }

        // Calculate new counter values
        C[0] = C[0] + 0x4d34d34d + this._b | 0;
        C[1] = C[1] + 0xd34d34d3 + (C[0] >>> 0 < C_[0] >>> 0 ? 1 : 0) | 0;
        C[2] = C[2] + 0x34d34d34 + (C[1] >>> 0 < C_[1] >>> 0 ? 1 : 0) | 0;
        C[3] = C[3] + 0x4d34d34d + (C[2] >>> 0 < C_[2] >>> 0 ? 1 : 0) | 0;
        C[4] = C[4] + 0xd34d34d3 + (C[3] >>> 0 < C_[3] >>> 0 ? 1 : 0) | 0;
        C[5] = C[5] + 0x34d34d34 + (C[4] >>> 0 < C_[4] >>> 0 ? 1 : 0) | 0;
        C[6] = C[6] + 0x4d34d34d + (C[5] >>> 0 < C_[5] >>> 0 ? 1 : 0) | 0;
        C[7] = C[7] + 0xd34d34d3 + (C[6] >>> 0 < C_[6] >>> 0 ? 1 : 0) | 0;
        this._b = C[7] >>> 0 < C_[7] >>> 0 ? 1 : 0;

        // Calculate the g-values
        for (var _i = 0; _i < 8; _i += 1) {
          var gx = X[_i] + C[_i];

          // Construct high and low argument for squaring
          var ga = gx & 0xffff;
          var gb = gx >>> 16;

          // Calculate high and low result of squaring
          var gh = ((ga * ga >>> 17) + ga * gb >>> 15) + gb * gb;
          var gl = ((gx & 0xffff0000) * gx | 0) + ((gx & 0x0000ffff) * gx | 0);

          // High XOR low
          G[_i] = gh ^ gl;
        }

        // Calculate new state values
        X[0] = G[0] + (G[7] << 16 | G[7] >>> 16) + (G[6] << 16 | G[6] >>> 16) | 0;
        X[1] = G[1] + (G[0] << 8 | G[0] >>> 24) + G[7] | 0;
        X[2] = G[2] + (G[1] << 16 | G[1] >>> 16) + (G[0] << 16 | G[0] >>> 16) | 0;
        X[3] = G[3] + (G[2] << 8 | G[2] >>> 24) + G[1] | 0;
        X[4] = G[4] + (G[3] << 16 | G[3] >>> 16) + (G[2] << 16 | G[2] >>> 16) | 0;
        X[5] = G[5] + (G[4] << 8 | G[4] >>> 24) + G[3] | 0;
        X[6] = G[6] + (G[5] << 16 | G[5] >>> 16) + (G[4] << 16 | G[4] >>> 16) | 0;
        X[7] = G[7] + (G[6] << 8 | G[6] >>> 24) + G[5] | 0;
      }

      /**
       * Rabbit stream cipher algorithm
       */
      var RabbitAlgo = exports('RabbitAlgo', /*#__PURE__*/function (_StreamCipher) {
        _inheritsLoose(RabbitAlgo, _StreamCipher);
        function RabbitAlgo() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _StreamCipher.call.apply(_StreamCipher, [this].concat(args)) || this;
          _this.blockSize = 128 / 32;
          _this.ivSize = 64 / 32;
          return _this;
        }
        var _proto = RabbitAlgo.prototype;
        _proto._doReset = function _doReset() {
          // Shortcuts
          var K = this._key.words;
          var iv = this.cfg.iv;

          // Swap endian
          for (var i = 0; i < 4; i += 1) {
            K[i] = (K[i] << 8 | K[i] >>> 24) & 0x00ff00ff | (K[i] << 24 | K[i] >>> 8) & 0xff00ff00;
          }

          // Generate initial state values
          this._X = [K[0], K[3] << 16 | K[2] >>> 16, K[1], K[0] << 16 | K[3] >>> 16, K[2], K[1] << 16 | K[0] >>> 16, K[3], K[2] << 16 | K[1] >>> 16];
          var X = this._X;

          // Generate initial counter values
          this._C = [K[2] << 16 | K[2] >>> 16, K[0] & 0xffff0000 | K[1] & 0x0000ffff, K[3] << 16 | K[3] >>> 16, K[1] & 0xffff0000 | K[2] & 0x0000ffff, K[0] << 16 | K[0] >>> 16, K[2] & 0xffff0000 | K[3] & 0x0000ffff, K[1] << 16 | K[1] >>> 16, K[3] & 0xffff0000 | K[0] & 0x0000ffff];
          var C = this._C;

          // Carry bit
          this._b = 0;

          // Iterate the system four times
          for (var _i2 = 0; _i2 < 4; _i2 += 1) {
            nextState.call(this);
          }

          // Modify the counters
          for (var _i3 = 0; _i3 < 8; _i3 += 1) {
            C[_i3] ^= X[_i3 + 4 & 7];
          }

          // IV setup
          if (iv) {
            // Shortcuts
            var IV = iv.words;
            var IV_0 = IV[0];
            var IV_1 = IV[1];

            // Generate four subvectors
            var i0 = (IV_0 << 8 | IV_0 >>> 24) & 0x00ff00ff | (IV_0 << 24 | IV_0 >>> 8) & 0xff00ff00;
            var i2 = (IV_1 << 8 | IV_1 >>> 24) & 0x00ff00ff | (IV_1 << 24 | IV_1 >>> 8) & 0xff00ff00;
            var i1 = i0 >>> 16 | i2 & 0xffff0000;
            var i3 = i2 << 16 | i0 & 0x0000ffff;

            // Modify counter values
            C[0] ^= i0;
            C[1] ^= i1;
            C[2] ^= i2;
            C[3] ^= i3;
            C[4] ^= i0;
            C[5] ^= i1;
            C[6] ^= i2;
            C[7] ^= i3;

            // Iterate the system four times
            for (var _i4 = 0; _i4 < 4; _i4 += 1) {
              nextState.call(this);
            }
          }
        };
        _proto._doProcessBlock = function _doProcessBlock(M, offset) {
          var _M = M;

          // Shortcut
          var X = this._X;

          // Iterate the system
          nextState.call(this);

          // Generate four keystream words
          S[0] = X[0] ^ X[5] >>> 16 ^ X[3] << 16;
          S[1] = X[2] ^ X[7] >>> 16 ^ X[5] << 16;
          S[2] = X[4] ^ X[1] >>> 16 ^ X[7] << 16;
          S[3] = X[6] ^ X[3] >>> 16 ^ X[1] << 16;
          for (var i = 0; i < 4; i += 1) {
            // Swap endian
            S[i] = (S[i] << 8 | S[i] >>> 24) & 0x00ff00ff | (S[i] << 24 | S[i] >>> 8) & 0xff00ff00;

            // Encrypt
            _M[offset + i] ^= S[i];
          }
        };
        return RabbitAlgo;
      }(StreamCipher));

      /**
       * Shortcut functions to the cipher's object interface.
       *
       * @example
       *
       *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);
       *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);
       */
      var Rabbit = exports('Rabbit', StreamCipher._createHelper(RabbitAlgo));
    }
  };
});

System.register("chunks:///_virtual/rc4.js", ['./rollupPluginModLoBabelHelpers.js', './cipher-core.js'], function (exports) {
  var _inheritsLoose, StreamCipher;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      StreamCipher = module.StreamCipher;
    }],
    execute: function () {
      function generateKeystreamWord() {
        // Shortcuts
        var S = this._S;
        var i = this._i;
        var j = this._j;

        // Generate keystream word
        var keystreamWord = 0;
        for (var n = 0; n < 4; n += 1) {
          i = (i + 1) % 256;
          j = (j + S[i]) % 256;

          // Swap
          var t = S[i];
          S[i] = S[j];
          S[j] = t;
          keystreamWord |= S[(S[i] + S[j]) % 256] << 24 - n * 8;
        }

        // Update counters
        this._i = i;
        this._j = j;
        return keystreamWord;
      }

      /**
       * RC4 stream cipher algorithm.
       */
      var RC4Algo = exports('RC4Algo', /*#__PURE__*/function (_StreamCipher) {
        _inheritsLoose(RC4Algo, _StreamCipher);
        function RC4Algo() {
          return _StreamCipher.apply(this, arguments) || this;
        }
        var _proto = RC4Algo.prototype;
        _proto._doReset = function _doReset() {
          // Shortcuts
          var key = this._key;
          var keyWords = key.words;
          var keySigBytes = key.sigBytes;

          // Init sbox
          this._S = [];
          var S = this._S;
          for (var i = 0; i < 256; i += 1) {
            S[i] = i;
          }

          // Key setup
          for (var _i = 0, j = 0; _i < 256; _i += 1) {
            var keyByteIndex = _i % keySigBytes;
            var keyByte = keyWords[keyByteIndex >>> 2] >>> 24 - keyByteIndex % 4 * 8 & 0xff;
            j = (j + S[_i] + keyByte) % 256;

            // Swap
            var t = S[_i];
            S[_i] = S[j];
            S[j] = t;
          }

          // Counters
          this._j = 0;
          this._i = this._j;
        };
        _proto._doProcessBlock = function _doProcessBlock(M, offset) {
          var _M = M;
          _M[offset] ^= generateKeystreamWord.call(this);
        };
        return RC4Algo;
      }(StreamCipher));
      RC4Algo.keySize = 256 / 32;
      RC4Algo.ivSize = 0;

      /**
       * Shortcut functions to the cipher's object interface.
       *
       * @example
       *
       *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);
       *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);
       */
      var RC4 = exports('RC4', StreamCipher._createHelper(RC4Algo));

      /**
       * Modified RC4 stream cipher algorithm.
       */
      var RC4DropAlgo = exports('RC4DropAlgo', /*#__PURE__*/function (_RC4Algo) {
        _inheritsLoose(RC4DropAlgo, _RC4Algo);
        function RC4DropAlgo() {
          var _this;
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          _this = _RC4Algo.call.apply(_RC4Algo, [this].concat(args)) || this;

          /**
           * Configuration options.
           *
           * @property {number} drop The number of keystream words to drop. Default 192
           */
          Object.assign(_this.cfg, {
            drop: 192
          });
          return _this;
        }
        var _proto2 = RC4DropAlgo.prototype;
        _proto2._doReset = function _doReset() {
          _RC4Algo.prototype._doReset.call(this);

          // Drop
          for (var i = this.cfg.drop; i > 0; i -= 1) {
            generateKeystreamWord.call(this);
          }
        };
        return RC4DropAlgo;
      }(RC4Algo));

      /**
       * Shortcut functions to the cipher's object interface.
       *
       * @example
       *
       *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);
       *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);
       */
      var RC4Drop = exports('RC4Drop', StreamCipher._createHelper(RC4DropAlgo));
    }
  };
});

System.register("chunks:///_virtual/regexp-exec-abstract.js", ['./cjs-loader.mjs', './function-call.js', './an-object.js', './is-callable.js', './classof-raw.js', './regexp-exec.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var call = require('../internals/function-call');
        var anObject = require('../internals/an-object');
        var isCallable = require('../internals/is-callable');
        var classof = require('../internals/classof-raw');
        var regexpExec = require('../internals/regexp-exec');
        var $TypeError = TypeError;

        // `RegExpExec` abstract operation
        // https://tc39.es/ecma262/#sec-regexpexec
        module.exports = function (R, S) {
          var exec = R.exec;
          if (isCallable(exec)) {
            var result = call(exec, R, S);
            if (result !== null) anObject(result);
            return result;
          }
          if (classof(R) === 'RegExp') return call(regexpExec, R, S);
          throw $TypeError('RegExp#exec called on incompatible receiver');
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-call': __cjsMetaURL$1,
          '../internals/an-object': __cjsMetaURL$2,
          '../internals/is-callable': __cjsMetaURL$3,
          '../internals/classof-raw': __cjsMetaURL$4,
          '../internals/regexp-exec': __cjsMetaURL$5
        };
      });
    }
  };
});

System.register("chunks:///_virtual/regexp-exec.js", ['./cjs-loader.mjs', './function-call.js', './function-uncurry-this.js', './to-string.js', './regexp-flags.js', './regexp-sticky-helpers.js', './shared.js', './object-create.js', './internal-state.js', './regexp-unsupported-dot-all.js', './regexp-unsupported-ncg.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8, __cjsMetaURL$9, __cjsMetaURL$a;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$9 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$a = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        /* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */
        /* eslint-disable regexp/no-useless-quantifier -- testing */
        var call = require('../internals/function-call');
        var uncurryThis = require('../internals/function-uncurry-this');
        var toString = require('../internals/to-string');
        var regexpFlags = require('../internals/regexp-flags');
        var stickyHelpers = require('../internals/regexp-sticky-helpers');
        var shared = require('../internals/shared');
        var create = require('../internals/object-create');
        var getInternalState = require('../internals/internal-state').get;
        var UNSUPPORTED_DOT_ALL = require('../internals/regexp-unsupported-dot-all');
        var UNSUPPORTED_NCG = require('../internals/regexp-unsupported-ncg');
        var nativeReplace = shared('native-string-replace', String.prototype.replace);
        var nativeExec = RegExp.prototype.exec;
        var patchedExec = nativeExec;
        var charAt = uncurryThis(''.charAt);
        var indexOf = uncurryThis(''.indexOf);
        var replace = uncurryThis(''.replace);
        var stringSlice = uncurryThis(''.slice);
        var UPDATES_LAST_INDEX_WRONG = function () {
          var re1 = /a/;
          var re2 = /b*/g;
          call(nativeExec, re1, 'a');
          call(nativeExec, re2, 'a');
          return re1.lastIndex !== 0 || re2.lastIndex !== 0;
        }();
        var UNSUPPORTED_Y = stickyHelpers.BROKEN_CARET;

        // nonparticipating capturing group, copied from es5-shim's String#split patch.
        var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;
        var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;
        if (PATCH) {
          patchedExec = function exec(string) {
            var re = this;
            var state = getInternalState(re);
            var str = toString(string);
            var raw = state.raw;
            var result, reCopy, lastIndex, match, i, object, group;
            if (raw) {
              raw.lastIndex = re.lastIndex;
              result = call(patchedExec, raw, str);
              re.lastIndex = raw.lastIndex;
              return result;
            }
            var groups = state.groups;
            var sticky = UNSUPPORTED_Y && re.sticky;
            var flags = call(regexpFlags, re);
            var source = re.source;
            var charsAdded = 0;
            var strCopy = str;
            if (sticky) {
              flags = replace(flags, 'y', '');
              if (indexOf(flags, 'g') === -1) {
                flags += 'g';
              }
              strCopy = stringSlice(str, re.lastIndex);
              // Support anchored sticky behavior.
              if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt(str, re.lastIndex - 1) !== '\n')) {
                source = '(?: ' + source + ')';
                strCopy = ' ' + strCopy;
                charsAdded++;
              }
              // ^(? + rx + ) is needed, in combination with some str slicing, to
              // simulate the 'y' flag.
              reCopy = new RegExp('^(?:' + source + ')', flags);
            }
            if (NPCG_INCLUDED) {
              reCopy = new RegExp('^' + source + '$(?!\\s)', flags);
            }
            if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;
            match = call(nativeExec, sticky ? reCopy : re, strCopy);
            if (sticky) {
              if (match) {
                match.input = stringSlice(match.input, charsAdded);
                match[0] = stringSlice(match[0], charsAdded);
                match.index = re.lastIndex;
                re.lastIndex += match[0].length;
              } else re.lastIndex = 0;
            } else if (UPDATES_LAST_INDEX_WRONG && match) {
              re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
            }
            if (NPCG_INCLUDED && match && match.length > 1) {
              // Fix browsers whose `exec` methods don't consistently return `undefined`
              // for NPCG, like IE8. NOTE: This doesn't work for /(.?)?/
              call(nativeReplace, match[0], reCopy, function () {
                for (i = 1; i < arguments.length - 2; i++) {
                  if (arguments[i] === undefined) match[i] = undefined;
                }
              });
            }
            if (match && groups) {
              match.groups = object = create(null);
              for (i = 0; i < groups.length; i++) {
                group = groups[i];
                object[group[0]] = match[group[1]];
              }
            }
            return match;
          };
        }
        module.exports = patchedExec;

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-call': __cjsMetaURL$1,
          '../internals/function-uncurry-this': __cjsMetaURL$2,
          '../internals/to-string': __cjsMetaURL$3,
          '../internals/regexp-flags': __cjsMetaURL$4,
          '../internals/regexp-sticky-helpers': __cjsMetaURL$5,
          '../internals/shared': __cjsMetaURL$6,
          '../internals/object-create': __cjsMetaURL$7,
          '../internals/internal-state': __cjsMetaURL$8,
          '../internals/regexp-unsupported-dot-all': __cjsMetaURL$9,
          '../internals/regexp-unsupported-ncg': __cjsMetaURL$a
        };
      });
    }
  };
});

System.register("chunks:///_virtual/regexp-flags.js", ['./cjs-loader.mjs', './an-object.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var anObject = require('../internals/an-object');

        // `RegExp.prototype.flags` getter implementation
        // https://tc39.es/ecma262/#sec-get-regexp.prototype.flags
        module.exports = function () {
          var that = anObject(this);
          var result = '';
          if (that.hasIndices) result += 'd';
          if (that.global) result += 'g';
          if (that.ignoreCase) result += 'i';
          if (that.multiline) result += 'm';
          if (that.dotAll) result += 's';
          if (that.unicode) result += 'u';
          if (that.unicodeSets) result += 'v';
          if (that.sticky) result += 'y';
          return result;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/an-object': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/regexp-get-flags.js", ['./cjs-loader.mjs', './function-call.js', './has-own-property.js', './object-is-prototype-of.js', './regexp-flags.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var call = require('../internals/function-call');
        var hasOwn = require('../internals/has-own-property');
        var isPrototypeOf = require('../internals/object-is-prototype-of');
        var regExpFlags = require('../internals/regexp-flags');
        var RegExpPrototype = RegExp.prototype;
        module.exports = function (R) {
          var flags = R.flags;
          return flags === undefined && !('flags' in RegExpPrototype) && !hasOwn(R, 'flags') && isPrototypeOf(RegExpPrototype, R) ? call(regExpFlags, R) : flags;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-call': __cjsMetaURL$1,
          '../internals/has-own-property': __cjsMetaURL$2,
          '../internals/object-is-prototype-of': __cjsMetaURL$3,
          '../internals/regexp-flags': __cjsMetaURL$4
        };
      });
    }
  };
});

System.register("chunks:///_virtual/regexp-sticky-helpers.js", ['./cjs-loader.mjs', './fails.js', './global.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var fails = require('../internals/fails');
        var global = require('../internals/global');

        // babel-minify and Closure Compiler transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
        var $RegExp = global.RegExp;
        var UNSUPPORTED_Y = fails(function () {
          var re = $RegExp('a', 'y');
          re.lastIndex = 2;
          return re.exec('abcd') !== null;
        });

        // UC Browser bug
        // https://github.com/zloirock/core-js/issues/1008
        var MISSED_STICKY = UNSUPPORTED_Y || fails(function () {
          return !$RegExp('a', 'y').sticky;
        });
        var BROKEN_CARET = UNSUPPORTED_Y || fails(function () {
          // https://bugzilla.mozilla.org/show_bug.cgi?id=773687
          var re = $RegExp('^r', 'gy');
          re.lastIndex = 2;
          return re.exec('str') !== null;
        });
        module.exports = {
          BROKEN_CARET: BROKEN_CARET,
          MISSED_STICKY: MISSED_STICKY,
          UNSUPPORTED_Y: UNSUPPORTED_Y
        };

        // #endregion ORIGINAL CODE

        module.exports;
        module.exports.BROKEN_CARET;
        module.exports.MISSED_STICKY;
        module.exports.UNSUPPORTED_Y;
      }, function () {
        return {
          '../internals/fails': __cjsMetaURL$1,
          '../internals/global': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/regexp-unsupported-dot-all.js", ['./cjs-loader.mjs', './fails.js', './global.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var fails = require('../internals/fails');
        var global = require('../internals/global');

        // babel-minify and Closure Compiler transpiles RegExp('.', 's') -> /./s and it causes SyntaxError
        var $RegExp = global.RegExp;
        module.exports = fails(function () {
          var re = $RegExp('.', 's');
          return !(re.dotAll && re.exec('\n') && re.flags === 's');
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/fails': __cjsMetaURL$1,
          '../internals/global': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/regexp-unsupported-ncg.js", ['./cjs-loader.mjs', './fails.js', './global.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var fails = require('../internals/fails');
        var global = require('../internals/global');

        // babel-minify and Closure Compiler transpiles RegExp('(?<a>b)', 'g') -> /(?<a>b)/g and it causes SyntaxError
        var $RegExp = global.RegExp;
        module.exports = fails(function () {
          var re = $RegExp('(?<a>b)', 'g');
          return re.exec('b').groups.a !== 'b' || 'b'.replace(re, '$<a>c') !== 'bc';
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/fails': __cjsMetaURL$1,
          '../internals/global': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/require-object-coercible.js", ['./cjs-loader.mjs', './is-null-or-undefined.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var isNullOrUndefined = require('../internals/is-null-or-undefined');
        var $TypeError = TypeError;

        // `RequireObjectCoercible` abstract operation
        // https://tc39.es/ecma262/#sec-requireobjectcoercible
        module.exports = function (it) {
          if (isNullOrUndefined(it)) throw $TypeError("Can't call method on " + it);
          return it;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/is-null-or-undefined': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/ripemd160.js", ['./rollupPluginModLoBabelHelpers.js', './core.js'], function (exports) {
  var _inheritsLoose, WordArray, Hasher;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      WordArray = module.WordArray;
      Hasher = module.Hasher;
    }],
    execute: function () {
      // Constants table
      var _zl = WordArray.create([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]);
      var _zr = WordArray.create([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]);
      var _sl = WordArray.create([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]);
      var _sr = WordArray.create([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]);
      var _hl = WordArray.create([0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);
      var _hr = WordArray.create([0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);
      var f1 = function f1(x, y, z) {
        return x ^ y ^ z;
      };
      var f2 = function f2(x, y, z) {
        return x & y | ~x & z;
      };
      var f3 = function f3(x, y, z) {
        return (x | ~y) ^ z;
      };
      var f4 = function f4(x, y, z) {
        return x & z | y & ~z;
      };
      var f5 = function f5(x, y, z) {
        return x ^ (y | ~z);
      };
      var rotl = function rotl(x, n) {
        return x << n | x >>> 32 - n;
      };

      /**
       * RIPEMD160 hash algorithm.
       */
      var RIPEMD160Algo = exports('RIPEMD160Algo', /*#__PURE__*/function (_Hasher) {
        _inheritsLoose(RIPEMD160Algo, _Hasher);
        function RIPEMD160Algo() {
          return _Hasher.apply(this, arguments) || this;
        }
        var _proto = RIPEMD160Algo.prototype;
        _proto._doReset = function _doReset() {
          this._hash = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);
        };
        _proto._doProcessBlock = function _doProcessBlock(M, offset) {
          var _M = M;

          // Swap endian
          for (var i = 0; i < 16; i += 1) {
            // Shortcuts
            var offset_i = offset + i;
            var M_offset_i = _M[offset_i];

            // Swap
            _M[offset_i] = (M_offset_i << 8 | M_offset_i >>> 24) & 0x00ff00ff | (M_offset_i << 24 | M_offset_i >>> 8) & 0xff00ff00;
          }
          // Shortcut
          var H = this._hash.words;
          var hl = _hl.words;
          var hr = _hr.words;
          var zl = _zl.words;
          var zr = _zr.words;
          var sl = _sl.words;
          var sr = _sr.words;

          // Working variables
          var al = H[0];
          var bl = H[1];
          var cl = H[2];
          var dl = H[3];
          var el = H[4];
          var ar = H[0];
          var br = H[1];
          var cr = H[2];
          var dr = H[3];
          var er = H[4];

          // Computation
          var t;
          for (var _i = 0; _i < 80; _i += 1) {
            t = al + _M[offset + zl[_i]] | 0;
            if (_i < 16) {
              t += f1(bl, cl, dl) + hl[0];
            } else if (_i < 32) {
              t += f2(bl, cl, dl) + hl[1];
            } else if (_i < 48) {
              t += f3(bl, cl, dl) + hl[2];
            } else if (_i < 64) {
              t += f4(bl, cl, dl) + hl[3];
            } else {
              // if (i<80) {
              t += f5(bl, cl, dl) + hl[4];
            }
            t |= 0;
            t = rotl(t, sl[_i]);
            t = t + el | 0;
            al = el;
            el = dl;
            dl = rotl(cl, 10);
            cl = bl;
            bl = t;
            t = ar + _M[offset + zr[_i]] | 0;
            if (_i < 16) {
              t += f5(br, cr, dr) + hr[0];
            } else if (_i < 32) {
              t += f4(br, cr, dr) + hr[1];
            } else if (_i < 48) {
              t += f3(br, cr, dr) + hr[2];
            } else if (_i < 64) {
              t += f2(br, cr, dr) + hr[3];
            } else {
              // if (i<80) {
              t += f1(br, cr, dr) + hr[4];
            }
            t |= 0;
            t = rotl(t, sr[_i]);
            t = t + er | 0;
            ar = er;
            er = dr;
            dr = rotl(cr, 10);
            cr = br;
            br = t;
          }
          // Intermediate hash value
          t = H[1] + cl + dr | 0;
          H[1] = H[2] + dl + er | 0;
          H[2] = H[3] + el + ar | 0;
          H[3] = H[4] + al + br | 0;
          H[4] = H[0] + bl + cr | 0;
          H[0] = t;
        };
        _proto._doFinalize = function _doFinalize() {
          // Shortcuts
          var data = this._data;
          var dataWords = data.words;
          var nBitsTotal = this._nDataBytes * 8;
          var nBitsLeft = data.sigBytes * 8;

          // Add padding
          dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
          dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = (nBitsTotal << 8 | nBitsTotal >>> 24) & 0x00ff00ff | (nBitsTotal << 24 | nBitsTotal >>> 8) & 0xff00ff00;
          data.sigBytes = (dataWords.length + 1) * 4;

          // Hash final blocks
          this._process();

          // Shortcuts
          var hash = this._hash;
          var H = hash.words;

          // Swap endian
          for (var i = 0; i < 5; i += 1) {
            // Shortcut
            var H_i = H[i];

            // Swap
            H[i] = (H_i << 8 | H_i >>> 24) & 0x00ff00ff | (H_i << 24 | H_i >>> 8) & 0xff00ff00;
          }

          // Return final computed hash
          return hash;
        };
        _proto.clone = function clone() {
          var clone = _Hasher.prototype.clone.call(this);
          clone._hash = this._hash.clone();
          return clone;
        };
        return RIPEMD160Algo;
      }(Hasher));

      /**
       * Shortcut function to the hasher's object interface.
       *
       * @param {WordArray|string} message The message to hash.
       *
       * @return {WordArray} The hash.
       *
       * @static
       *
       * @example
       *
       *     var hash = CryptoJS.RIPEMD160('message');
       *     var hash = CryptoJS.RIPEMD160(wordArray);
       */
      var RIPEMD160 = exports('RIPEMD160', Hasher._createHelper(RIPEMD160Algo));

      /**
       * Shortcut function to the HMAC's object interface.
       *
       * @param {WordArray|string} message The message to hash.
       * @param {WordArray|string} key The secret key.
       *
       * @return {WordArray} The HMAC.
       *
       * @static
       *
       * @example
       *
       *     var hmac = CryptoJS.HmacRIPEMD160(message, key);
       */
      var HmacRIPEMD160 = exports('HmacRIPEMD160', Hasher._createHmacHelper(RIPEMD160Algo));
    }
  };
});

System.register("chunks:///_virtual/rollupPluginModLoBabelHelpers.js", [], function (exports) {
  return {
    execute: function () {
      exports({
        applyDecoratedDescriptor: _applyDecoratedDescriptor,
        arrayLikeToArray: _arrayLikeToArray,
        assertThisInitialized: _assertThisInitialized,
        asyncToGenerator: _asyncToGenerator,
        construct: _construct,
        createClass: _createClass,
        createForOfIteratorHelperLoose: _createForOfIteratorHelperLoose,
        inheritsLoose: _inheritsLoose,
        initializerDefineProperty: _initializerDefineProperty,
        isNativeReflectConstruct: _isNativeReflectConstruct,
        regeneratorRuntime: _regeneratorRuntime,
        setPrototypeOf: _setPrototypeOf,
        toPrimitive: _toPrimitive,
        toPropertyKey: _toPropertyKey,
        unsupportedIterableToArray: _unsupportedIterableToArray
      });
      function _regeneratorRuntime() {
        /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
        _regeneratorRuntime = exports('regeneratorRuntime', function () {
          return e;
        });
        var t,
          e = {},
          r = Object.prototype,
          n = r.hasOwnProperty,
          o = Object.defineProperty || function (t, e, r) {
            t[e] = r.value;
          },
          i = "function" == typeof Symbol ? Symbol : {},
          a = i.iterator || "@@iterator",
          c = i.asyncIterator || "@@asyncIterator",
          u = i.toStringTag || "@@toStringTag";
        function define(t, e, r) {
          return Object.defineProperty(t, e, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
          }), t[e];
        }
        try {
          define({}, "");
        } catch (t) {
          define = function (t, e, r) {
            return t[e] = r;
          };
        }
        function wrap(t, e, r, n) {
          var i = e && e.prototype instanceof Generator ? e : Generator,
            a = Object.create(i.prototype),
            c = new Context(n || []);
          return o(a, "_invoke", {
            value: makeInvokeMethod(t, r, c)
          }), a;
        }
        function tryCatch(t, e, r) {
          try {
            return {
              type: "normal",
              arg: t.call(e, r)
            };
          } catch (t) {
            return {
              type: "throw",
              arg: t
            };
          }
        }
        e.wrap = wrap;
        var h = "suspendedStart",
          l = "suspendedYield",
          f = "executing",
          s = "completed",
          y = {};
        function Generator() {}
        function GeneratorFunction() {}
        function GeneratorFunctionPrototype() {}
        var p = {};
        define(p, a, function () {
          return this;
        });
        var d = Object.getPrototypeOf,
          v = d && d(d(values([])));
        v && v !== r && n.call(v, a) && (p = v);
        var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
        function defineIteratorMethods(t) {
          ["next", "throw", "return"].forEach(function (e) {
            define(t, e, function (t) {
              return this._invoke(e, t);
            });
          });
        }
        function AsyncIterator(t, e) {
          function invoke(r, o, i, a) {
            var c = tryCatch(t[r], t, o);
            if ("throw" !== c.type) {
              var u = c.arg,
                h = u.value;
              return h && "object" == typeof h && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) {
                invoke("next", t, i, a);
              }, function (t) {
                invoke("throw", t, i, a);
              }) : e.resolve(h).then(function (t) {
                u.value = t, i(u);
              }, function (t) {
                return invoke("throw", t, i, a);
              });
            }
            a(c.arg);
          }
          var r;
          o(this, "_invoke", {
            value: function (t, n) {
              function callInvokeWithMethodAndArg() {
                return new e(function (e, r) {
                  invoke(t, n, e, r);
                });
              }
              return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
            }
          });
        }
        function makeInvokeMethod(e, r, n) {
          var o = h;
          return function (i, a) {
            if (o === f) throw new Error("Generator is already running");
            if (o === s) {
              if ("throw" === i) throw a;
              return {
                value: t,
                done: !0
              };
            }
            for (n.method = i, n.arg = a;;) {
              var c = n.delegate;
              if (c) {
                var u = maybeInvokeDelegate(c, n);
                if (u) {
                  if (u === y) continue;
                  return u;
                }
              }
              if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) {
                if (o === h) throw o = s, n.arg;
                n.dispatchException(n.arg);
              } else "return" === n.method && n.abrupt("return", n.arg);
              o = f;
              var p = tryCatch(e, r, n);
              if ("normal" === p.type) {
                if (o = n.done ? s : l, p.arg === y) continue;
                return {
                  value: p.arg,
                  done: n.done
                };
              }
              "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);
            }
          };
        }
        function maybeInvokeDelegate(e, r) {
          var n = r.method,
            o = e.iterator[n];
          if (o === t) return r.delegate = null, "throw" === n && e.iterator.return && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y;
          var i = tryCatch(o, e.iterator, r.arg);
          if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;
          var a = i.arg;
          return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);
        }
        function pushTryEntry(t) {
          var e = {
            tryLoc: t[0]
          };
          1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
        }
        function resetTryEntry(t) {
          var e = t.completion || {};
          e.type = "normal", delete e.arg, t.completion = e;
        }
        function Context(t) {
          this.tryEntries = [{
            tryLoc: "root"
          }], t.forEach(pushTryEntry, this), this.reset(!0);
        }
        function values(e) {
          if (e || "" === e) {
            var r = e[a];
            if (r) return r.call(e);
            if ("function" == typeof e.next) return e;
            if (!isNaN(e.length)) {
              var o = -1,
                i = function next() {
                  for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;
                  return next.value = t, next.done = !0, next;
                };
              return i.next = i;
            }
          }
          throw new TypeError(typeof e + " is not iterable");
        }
        return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {
          value: GeneratorFunctionPrototype,
          configurable: !0
        }), o(GeneratorFunctionPrototype, "constructor", {
          value: GeneratorFunction,
          configurable: !0
        }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) {
          var e = "function" == typeof t && t.constructor;
          return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));
        }, e.mark = function (t) {
          return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;
        }, e.awrap = function (t) {
          return {
            __await: t
          };
        }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {
          return this;
        }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {
          void 0 === i && (i = Promise);
          var a = new AsyncIterator(wrap(t, r, n, o), i);
          return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {
            return t.done ? t.value : a.next();
          });
        }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () {
          return this;
        }), define(g, "toString", function () {
          return "[object Generator]";
        }), e.keys = function (t) {
          var e = Object(t),
            r = [];
          for (var n in e) r.push(n);
          return r.reverse(), function next() {
            for (; r.length;) {
              var t = r.pop();
              if (t in e) return next.value = t, next.done = !1, next;
            }
            return next.done = !0, next;
          };
        }, e.values = values, Context.prototype = {
          constructor: Context,
          reset: function (e) {
            if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
          },
          stop: function () {
            this.done = !0;
            var t = this.tryEntries[0].completion;
            if ("throw" === t.type) throw t.arg;
            return this.rval;
          },
          dispatchException: function (e) {
            if (this.done) throw e;
            var r = this;
            function handle(n, o) {
              return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;
            }
            for (var o = this.tryEntries.length - 1; o >= 0; --o) {
              var i = this.tryEntries[o],
                a = i.completion;
              if ("root" === i.tryLoc) return handle("end");
              if (i.tryLoc <= this.prev) {
                var c = n.call(i, "catchLoc"),
                  u = n.call(i, "finallyLoc");
                if (c && u) {
                  if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                  if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
                } else if (c) {
                  if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
                } else {
                  if (!u) throw new Error("try statement without catch or finally");
                  if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
                }
              }
            }
          },
          abrupt: function (t, e) {
            for (var r = this.tryEntries.length - 1; r >= 0; --r) {
              var o = this.tryEntries[r];
              if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
                var i = o;
                break;
              }
            }
            i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
            var a = i ? i.completion : {};
            return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);
          },
          complete: function (t, e) {
            if ("throw" === t.type) throw t.arg;
            return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;
          },
          finish: function (t) {
            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
              var r = this.tryEntries[e];
              if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;
            }
          },
          catch: function (t) {
            for (var e = this.tryEntries.length - 1; e >= 0; --e) {
              var r = this.tryEntries[e];
              if (r.tryLoc === t) {
                var n = r.completion;
                if ("throw" === n.type) {
                  var o = n.arg;
                  resetTryEntry(r);
                }
                return o;
              }
            }
            throw new Error("illegal catch attempt");
          },
          delegateYield: function (e, r, n) {
            return this.delegate = {
              iterator: values(e),
              resultName: r,
              nextLoc: n
            }, "next" === this.method && (this.arg = t), y;
          }
        }, e;
      }
      function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
        try {
          var info = gen[key](arg);
          var value = info.value;
        } catch (error) {
          reject(error);
          return;
        }
        if (info.done) {
          resolve(value);
        } else {
          Promise.resolve(value).then(_next, _throw);
        }
      }
      function _asyncToGenerator(fn) {
        return function () {
          var self = this,
            args = arguments;
          return new Promise(function (resolve, reject) {
            var gen = fn.apply(self, args);
            function _next(value) {
              asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
            }
            function _throw(err) {
              asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
            }
            _next(undefined);
          });
        };
      }
      function _defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
        }
      }
      function _createClass(Constructor, protoProps, staticProps) {
        if (protoProps) _defineProperties(Constructor.prototype, protoProps);
        if (staticProps) _defineProperties(Constructor, staticProps);
        Object.defineProperty(Constructor, "prototype", {
          writable: false
        });
        return Constructor;
      }
      function _inheritsLoose(subClass, superClass) {
        subClass.prototype = Object.create(superClass.prototype);
        subClass.prototype.constructor = subClass;
        _setPrototypeOf(subClass, superClass);
      }
      function _setPrototypeOf(o, p) {
        _setPrototypeOf = exports('setPrototypeOf', Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
          o.__proto__ = p;
          return o;
        });
        return _setPrototypeOf(o, p);
      }
      function _isNativeReflectConstruct() {
        if (typeof Reflect === "undefined" || !Reflect.construct) return false;
        if (Reflect.construct.sham) return false;
        if (typeof Proxy === "function") return true;
        try {
          Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
          return true;
        } catch (e) {
          return false;
        }
      }
      function _construct(Parent, args, Class) {
        if (_isNativeReflectConstruct()) {
          _construct = exports('construct', Reflect.construct.bind());
        } else {
          _construct = exports('construct', function _construct(Parent, args, Class) {
            var a = [null];
            a.push.apply(a, args);
            var Constructor = Function.bind.apply(Parent, a);
            var instance = new Constructor();
            if (Class) _setPrototypeOf(instance, Class.prototype);
            return instance;
          });
        }
        return _construct.apply(null, arguments);
      }
      function _assertThisInitialized(self) {
        if (self === void 0) {
          throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        }
        return self;
      }
      function _unsupportedIterableToArray(o, minLen) {
        if (!o) return;
        if (typeof o === "string") return _arrayLikeToArray(o, minLen);
        var n = Object.prototype.toString.call(o).slice(8, -1);
        if (n === "Object" && o.constructor) n = o.constructor.name;
        if (n === "Map" || n === "Set") return Array.from(o);
        if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
      }
      function _arrayLikeToArray(arr, len) {
        if (len == null || len > arr.length) len = arr.length;
        for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
        return arr2;
      }
      function _createForOfIteratorHelperLoose(o, allowArrayLike) {
        var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
        if (it) return (it = it.call(o)).next.bind(it);
        if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
          if (it) o = it;
          var i = 0;
          return function () {
            if (i >= o.length) return {
              done: true
            };
            return {
              done: false,
              value: o[i++]
            };
          };
        }
        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
      }
      function _toPrimitive(input, hint) {
        if (typeof input !== "object" || input === null) return input;
        var prim = input[Symbol.toPrimitive];
        if (prim !== undefined) {
          var res = prim.call(input, hint || "default");
          if (typeof res !== "object") return res;
          throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return (hint === "string" ? String : Number)(input);
      }
      function _toPropertyKey(arg) {
        var key = _toPrimitive(arg, "string");
        return typeof key === "symbol" ? key : String(key);
      }
      function _initializerDefineProperty(target, property, descriptor, context) {
        if (!descriptor) return;
        Object.defineProperty(target, property, {
          enumerable: descriptor.enumerable,
          configurable: descriptor.configurable,
          writable: descriptor.writable,
          value: descriptor.initializer ? descriptor.initializer.call(context) : void 0
        });
      }
      function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
        var desc = {};
        Object.keys(descriptor).forEach(function (key) {
          desc[key] = descriptor[key];
        });
        desc.enumerable = !!desc.enumerable;
        desc.configurable = !!desc.configurable;
        if ('value' in desc || desc.initializer) {
          desc.writable = true;
        }
        desc = decorators.slice().reverse().reduce(function (desc, decorator) {
          return decorator(target, property, desc) || desc;
        }, desc);
        if (context && desc.initializer !== void 0) {
          desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
          desc.initializer = undefined;
        }
        if (desc.initializer === void 0) {
          Object.defineProperty(target, property, desc);
          desc = null;
        }
        return desc;
      }
    }
  };
});

System.register("chunks:///_virtual/set-species.js", ['./cjs-loader.mjs', './get-built-in.js', './define-built-in-accessor.js', './well-known-symbol.js', './descriptors.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var getBuiltIn = require('../internals/get-built-in');
        var defineBuiltInAccessor = require('../internals/define-built-in-accessor');
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var DESCRIPTORS = require('../internals/descriptors');
        var SPECIES = wellKnownSymbol('species');
        module.exports = function (CONSTRUCTOR_NAME) {
          var Constructor = getBuiltIn(CONSTRUCTOR_NAME);
          if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
            defineBuiltInAccessor(Constructor, SPECIES, {
              configurable: true,
              get: function get() {
                return this;
              }
            });
          }
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/get-built-in': __cjsMetaURL$1,
          '../internals/define-built-in-accessor': __cjsMetaURL$2,
          '../internals/well-known-symbol': __cjsMetaURL$3,
          '../internals/descriptors': __cjsMetaURL$4
        };
      });
    }
  };
});

System.register("chunks:///_virtual/set-to-string-tag.js", ['./cjs-loader.mjs', './object-define-property.js', './has-own-property.js', './well-known-symbol.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var defineProperty = require('../internals/object-define-property').f;
        var hasOwn = require('../internals/has-own-property');
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var TO_STRING_TAG = wellKnownSymbol('toStringTag');
        module.exports = function (target, TAG, STATIC) {
          if (target && !STATIC) target = target.prototype;
          if (target && !hasOwn(target, TO_STRING_TAG)) {
            defineProperty(target, TO_STRING_TAG, {
              configurable: true,
              value: TAG
            });
          }
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/object-define-property': __cjsMetaURL$1,
          '../internals/has-own-property': __cjsMetaURL$2,
          '../internals/well-known-symbol': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/sha1.js", ['./rollupPluginModLoBabelHelpers.js', './core.js'], function (exports) {
  var _inheritsLoose, Hasher, WordArray;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      Hasher = module.Hasher;
      WordArray = module.WordArray;
    }],
    execute: function () {
      // Reusable object
      var W = [];

      /**
       * SHA-1 hash algorithm.
       */
      var SHA1Algo = exports('SHA1Algo', /*#__PURE__*/function (_Hasher) {
        _inheritsLoose(SHA1Algo, _Hasher);
        function SHA1Algo() {
          return _Hasher.apply(this, arguments) || this;
        }
        var _proto = SHA1Algo.prototype;
        _proto._doReset = function _doReset() {
          this._hash = new WordArray([0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0]);
        };
        _proto._doProcessBlock = function _doProcessBlock(M, offset) {
          // Shortcut
          var H = this._hash.words;

          // Working variables
          var a = H[0];
          var b = H[1];
          var c = H[2];
          var d = H[3];
          var e = H[4];

          // Computation
          for (var i = 0; i < 80; i += 1) {
            if (i < 16) {
              W[i] = M[offset + i] | 0;
            } else {
              var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
              W[i] = n << 1 | n >>> 31;
            }
            var t = (a << 5 | a >>> 27) + e + W[i];
            if (i < 20) {
              t += (b & c | ~b & d) + 0x5a827999;
            } else if (i < 40) {
              t += (b ^ c ^ d) + 0x6ed9eba1;
            } else if (i < 60) {
              t += (b & c | b & d | c & d) - 0x70e44324;
            } else /* if (i < 80) */{
                t += (b ^ c ^ d) - 0x359d3e2a;
              }
            e = d;
            d = c;
            c = b << 30 | b >>> 2;
            b = a;
            a = t;
          }

          // Intermediate hash value
          H[0] = H[0] + a | 0;
          H[1] = H[1] + b | 0;
          H[2] = H[2] + c | 0;
          H[3] = H[3] + d | 0;
          H[4] = H[4] + e | 0;
        };
        _proto._doFinalize = function _doFinalize() {
          // Shortcuts
          var data = this._data;
          var dataWords = data.words;
          var nBitsTotal = this._nDataBytes * 8;
          var nBitsLeft = data.sigBytes * 8;

          // Add padding
          dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
          dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);
          dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = nBitsTotal;
          data.sigBytes = dataWords.length * 4;

          // Hash final blocks
          this._process();

          // Return final computed hash
          return this._hash;
        };
        _proto.clone = function clone() {
          var clone = _Hasher.prototype.clone.call(this);
          clone._hash = this._hash.clone();
          return clone;
        };
        return SHA1Algo;
      }(Hasher));

      /**
       * Shortcut function to the hasher's object interface.
       *
       * @param {WordArray|string} message The message to hash.
       *
       * @return {WordArray} The hash.
       *
       * @static
       *
       * @example
       *
       *     var hash = CryptoJS.SHA1('message');
       *     var hash = CryptoJS.SHA1(wordArray);
       */
      var SHA1 = exports('SHA1', Hasher._createHelper(SHA1Algo));

      /**
       * Shortcut function to the HMAC's object interface.
       *
       * @param {WordArray|string} message The message to hash.
       * @param {WordArray|string} key The secret key.
       *
       * @return {WordArray} The HMAC.
       *
       * @static
       *
       * @example
       *
       *     var hmac = CryptoJS.HmacSHA1(message, key);
       */
      var HmacSHA1 = exports('HmacSHA1', Hasher._createHmacHelper(SHA1Algo));
    }
  };
});

System.register("chunks:///_virtual/sha224.js", ['./rollupPluginModLoBabelHelpers.js', './core.js', './sha256.js'], function (exports) {
  var _inheritsLoose, WordArray, SHA256Algo;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      WordArray = module.WordArray;
    }, function (module) {
      SHA256Algo = module.SHA256Algo;
    }],
    execute: function () {
      /**
       * SHA-224 hash algorithm.
       */
      var SHA224Algo = exports('SHA224Algo', /*#__PURE__*/function (_SHA256Algo) {
        _inheritsLoose(SHA224Algo, _SHA256Algo);
        function SHA224Algo() {
          return _SHA256Algo.apply(this, arguments) || this;
        }
        var _proto = SHA224Algo.prototype;
        _proto._doReset = function _doReset() {
          this._hash = new WordArray([0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4]);
        };
        _proto._doFinalize = function _doFinalize() {
          var hash = _SHA256Algo.prototype._doFinalize.call(this);
          hash.sigBytes -= 4;
          return hash;
        };
        return SHA224Algo;
      }(SHA256Algo));

      /**
       * Shortcut function to the hasher's object interface.
       *
       * @param {WordArray|string} message The message to hash.
       *
       * @return {WordArray} The hash.
       *
       * @static
       *
       * @example
       *
       *     var hash = CryptoJS.SHA224('message');
       *     var hash = CryptoJS.SHA224(wordArray);
       */
      var SHA224 = exports('SHA224', SHA256Algo._createHelper(SHA224Algo));

      /**
       * Shortcut function to the HMAC's object interface.
       *
       * @param {WordArray|string} message The message to hash.
       * @param {WordArray|string} key The secret key.
       *
       * @return {WordArray} The HMAC.
       *
       * @static
       *
       * @example
       *
       *     var hmac = CryptoJS.HmacSHA224(message, key);
       */
      var HmacSHA224 = exports('HmacSHA224', SHA256Algo._createHmacHelper(SHA224Algo));
    }
  };
});

System.register("chunks:///_virtual/sha256.js", ['./rollupPluginModLoBabelHelpers.js', './core.js'], function (exports) {
  var _inheritsLoose, Hasher, WordArray;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      Hasher = module.Hasher;
      WordArray = module.WordArray;
    }],
    execute: function () {
      // Initialization and round constants tables
      var H = [];
      var K = [];

      // Compute constants
      var isPrime = function isPrime(n) {
        var sqrtN = Math.sqrt(n);
        for (var factor = 2; factor <= sqrtN; factor += 1) {
          if (!(n % factor)) {
            return false;
          }
        }
        return true;
      };
      var getFractionalBits = function getFractionalBits(n) {
        return (n - (n | 0)) * 0x100000000 | 0;
      };
      var n = 2;
      var nPrime = 0;
      while (nPrime < 64) {
        if (isPrime(n)) {
          if (nPrime < 8) {
            H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));
          }
          K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));
          nPrime += 1;
        }
        n += 1;
      }

      // Reusable object
      var W = [];

      /**
       * SHA-256 hash algorithm.
       */
      var SHA256Algo = exports('SHA256Algo', /*#__PURE__*/function (_Hasher) {
        _inheritsLoose(SHA256Algo, _Hasher);
        function SHA256Algo() {
          return _Hasher.apply(this, arguments) || this;
        }
        var _proto = SHA256Algo.prototype;
        _proto._doReset = function _doReset() {
          this._hash = new WordArray(H.slice(0));
        };
        _proto._doProcessBlock = function _doProcessBlock(M, offset) {
          // Shortcut
          var _H = this._hash.words;

          // Working variables
          var a = _H[0];
          var b = _H[1];
          var c = _H[2];
          var d = _H[3];
          var e = _H[4];
          var f = _H[5];
          var g = _H[6];
          var h = _H[7];

          // Computation
          for (var i = 0; i < 64; i += 1) {
            if (i < 16) {
              W[i] = M[offset + i] | 0;
            } else {
              var gamma0x = W[i - 15];
              var gamma0 = (gamma0x << 25 | gamma0x >>> 7) ^ (gamma0x << 14 | gamma0x >>> 18) ^ gamma0x >>> 3;
              var gamma1x = W[i - 2];
              var gamma1 = (gamma1x << 15 | gamma1x >>> 17) ^ (gamma1x << 13 | gamma1x >>> 19) ^ gamma1x >>> 10;
              W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];
            }
            var ch = e & f ^ ~e & g;
            var maj = a & b ^ a & c ^ b & c;
            var sigma0 = (a << 30 | a >>> 2) ^ (a << 19 | a >>> 13) ^ (a << 10 | a >>> 22);
            var sigma1 = (e << 26 | e >>> 6) ^ (e << 21 | e >>> 11) ^ (e << 7 | e >>> 25);
            var t1 = h + sigma1 + ch + K[i] + W[i];
            var t2 = sigma0 + maj;
            h = g;
            g = f;
            f = e;
            e = d + t1 | 0;
            d = c;
            c = b;
            b = a;
            a = t1 + t2 | 0;
          }

          // Intermediate hash value
          _H[0] = _H[0] + a | 0;
          _H[1] = _H[1] + b | 0;
          _H[2] = _H[2] + c | 0;
          _H[3] = _H[3] + d | 0;
          _H[4] = _H[4] + e | 0;
          _H[5] = _H[5] + f | 0;
          _H[6] = _H[6] + g | 0;
          _H[7] = _H[7] + h | 0;
        };
        _proto._doFinalize = function _doFinalize() {
          // Shortcuts
          var data = this._data;
          var dataWords = data.words;
          var nBitsTotal = this._nDataBytes * 8;
          var nBitsLeft = data.sigBytes * 8;

          // Add padding
          dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
          dataWords[(nBitsLeft + 64 >>> 9 << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);
          dataWords[(nBitsLeft + 64 >>> 9 << 4) + 15] = nBitsTotal;
          data.sigBytes = dataWords.length * 4;

          // Hash final blocks
          this._process();

          // Return final computed hash
          return this._hash;
        };
        _proto.clone = function clone() {
          var clone = _Hasher.prototype.clone.call(this);
          clone._hash = this._hash.clone();
          return clone;
        };
        return SHA256Algo;
      }(Hasher));

      /**
       * Shortcut function to the hasher's object interface.
       *
       * @param {WordArray|string} message The message to hash.
       *
       * @return {WordArray} The hash.
       *
       * @static
       *
       * @example
       *
       *     var hash = CryptoJS.SHA256('message');
       *     var hash = CryptoJS.SHA256(wordArray);
       */
      var SHA256 = exports('SHA256', Hasher._createHelper(SHA256Algo));

      /**
       * Shortcut function to the HMAC's object interface.
       *
       * @param {WordArray|string} message The message to hash.
       * @param {WordArray|string} key The secret key.
       *
       * @return {WordArray} The HMAC.
       *
       * @static
       *
       * @example
       *
       *     var hmac = CryptoJS.HmacSHA256(message, key);
       */
      var HmacSHA256 = exports('HmacSHA256', Hasher._createHmacHelper(SHA256Algo));
    }
  };
});

System.register("chunks:///_virtual/sha3.js", ['./rollupPluginModLoBabelHelpers.js', './core.js', './x64-core.js'], function (exports) {
  var _inheritsLoose, Hasher, WordArray, X64Word;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      Hasher = module.Hasher;
      WordArray = module.WordArray;
    }, function (module) {
      X64Word = module.X64Word;
    }],
    execute: function () {
      // Constants tables
      var RHO_OFFSETS = [];
      var PI_INDEXES = [];
      var ROUND_CONSTANTS = [];

      // Compute Constants
      // Compute rho offset constants
      var _x = 1;
      var _y = 0;
      for (var t = 0; t < 24; t += 1) {
        RHO_OFFSETS[_x + 5 * _y] = (t + 1) * (t + 2) / 2 % 64;
        var newX = _y % 5;
        var newY = (2 * _x + 3 * _y) % 5;
        _x = newX;
        _y = newY;
      }

      // Compute pi index constants
      for (var x = 0; x < 5; x += 1) {
        for (var y = 0; y < 5; y += 1) {
          PI_INDEXES[x + 5 * y] = y + (2 * x + 3 * y) % 5 * 5;
        }
      }

      // Compute round constants
      var LFSR = 0x01;
      for (var i = 0; i < 24; i += 1) {
        var roundConstantMsw = 0;
        var roundConstantLsw = 0;
        for (var j = 0; j < 7; j += 1) {
          if (LFSR & 0x01) {
            var bitPosition = (1 << j) - 1;
            if (bitPosition < 32) {
              roundConstantLsw ^= 1 << bitPosition;
            } else /* if (bitPosition >= 32) */{
                roundConstantMsw ^= 1 << bitPosition - 32;
              }
          }

          // Compute next LFSR
          if (LFSR & 0x80) {
            // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1
            LFSR = LFSR << 1 ^ 0x71;
          } else {
            LFSR <<= 1;
          }
        }
        ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);
      }

      // Reusable objects for temporary values
      var T = [];
      for (var _i = 0; _i < 25; _i += 1) {
        T[_i] = X64Word.create();
      }

      /**
       * SHA-3 hash algorithm.
       */
      var SHA3Algo = exports('SHA3Algo', /*#__PURE__*/function (_Hasher) {
        _inheritsLoose(SHA3Algo, _Hasher);
        function SHA3Algo(cfg) {
          /**
           * Configuration options.
           *
           * @property {number} outputLength
           *   The desired number of bits in the output hash.
           *   Only values permitted are: 224, 256, 384, 512.
           *   Default: 512
           */
          return _Hasher.call(this, Object.assign({
            outputLength: 512
          }, cfg)) || this;
        }
        var _proto = SHA3Algo.prototype;
        _proto._doReset = function _doReset() {
          this._state = [];
          var state = this._state;
          for (var _i2 = 0; _i2 < 25; _i2 += 1) {
            state[_i2] = new X64Word();
          }
          this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
        };
        _proto._doProcessBlock = function _doProcessBlock(M, offset) {
          // Shortcuts
          var state = this._state;
          var nBlockSizeLanes = this.blockSize / 2;

          // Absorb
          for (var _i3 = 0; _i3 < nBlockSizeLanes; _i3 += 1) {
            // Shortcuts
            var M2i = M[offset + 2 * _i3];
            var M2i1 = M[offset + 2 * _i3 + 1];

            // Swap endian
            M2i = (M2i << 8 | M2i >>> 24) & 0x00ff00ff | (M2i << 24 | M2i >>> 8) & 0xff00ff00;
            M2i1 = (M2i1 << 8 | M2i1 >>> 24) & 0x00ff00ff | (M2i1 << 24 | M2i1 >>> 8) & 0xff00ff00;

            // Absorb message into state
            var lane = state[_i3];
            lane.high ^= M2i1;
            lane.low ^= M2i;
          }

          // Rounds
          for (var round = 0; round < 24; round += 1) {
            // Theta
            for (var _x2 = 0; _x2 < 5; _x2 += 1) {
              // Mix column lanes
              var tMsw = 0;
              var tLsw = 0;
              for (var _y2 = 0; _y2 < 5; _y2 += 1) {
                var _lane = state[_x2 + 5 * _y2];
                tMsw ^= _lane.high;
                tLsw ^= _lane.low;
              }

              // Temporary values
              var Tx = T[_x2];
              Tx.high = tMsw;
              Tx.low = tLsw;
            }
            for (var _x3 = 0; _x3 < 5; _x3 += 1) {
              // Shortcuts
              var Tx4 = T[(_x3 + 4) % 5];
              var Tx1 = T[(_x3 + 1) % 5];
              var Tx1Msw = Tx1.high;
              var Tx1Lsw = Tx1.low;

              // Mix surrounding columns
              var _tMsw = Tx4.high ^ (Tx1Msw << 1 | Tx1Lsw >>> 31);
              var _tLsw = Tx4.low ^ (Tx1Lsw << 1 | Tx1Msw >>> 31);
              for (var _y3 = 0; _y3 < 5; _y3 += 1) {
                var _lane2 = state[_x3 + 5 * _y3];
                _lane2.high ^= _tMsw;
                _lane2.low ^= _tLsw;
              }
            }

            // Rho Pi
            for (var laneIndex = 1; laneIndex < 25; laneIndex += 1) {
              var _tMsw2 = void 0;
              var _tLsw2 = void 0;

              // Shortcuts
              var _lane3 = state[laneIndex];
              var laneMsw = _lane3.high;
              var laneLsw = _lane3.low;
              var rhoOffset = RHO_OFFSETS[laneIndex];

              // Rotate lanes
              if (rhoOffset < 32) {
                _tMsw2 = laneMsw << rhoOffset | laneLsw >>> 32 - rhoOffset;
                _tLsw2 = laneLsw << rhoOffset | laneMsw >>> 32 - rhoOffset;
              } else /* if (rhoOffset >= 32) */{
                  _tMsw2 = laneLsw << rhoOffset - 32 | laneMsw >>> 64 - rhoOffset;
                  _tLsw2 = laneMsw << rhoOffset - 32 | laneLsw >>> 64 - rhoOffset;
                }

              // Transpose lanes
              var TPiLane = T[PI_INDEXES[laneIndex]];
              TPiLane.high = _tMsw2;
              TPiLane.low = _tLsw2;
            }

            // Rho pi at x = y = 0
            var T0 = T[0];
            var state0 = state[0];
            T0.high = state0.high;
            T0.low = state0.low;

            // Chi
            for (var _x4 = 0; _x4 < 5; _x4 += 1) {
              for (var _y4 = 0; _y4 < 5; _y4 += 1) {
                // Shortcuts
                var _laneIndex = _x4 + 5 * _y4;
                var _lane4 = state[_laneIndex];
                var TLane = T[_laneIndex];
                var Tx1Lane = T[(_x4 + 1) % 5 + 5 * _y4];
                var Tx2Lane = T[(_x4 + 2) % 5 + 5 * _y4];

                // Mix rows
                _lane4.high = TLane.high ^ ~Tx1Lane.high & Tx2Lane.high;
                _lane4.low = TLane.low ^ ~Tx1Lane.low & Tx2Lane.low;
              }
            }

            // Iota
            var _lane5 = state[0];
            var roundConstant = ROUND_CONSTANTS[round];
            _lane5.high ^= roundConstant.high;
            _lane5.low ^= roundConstant.low;
          }
        };
        _proto._doFinalize = function _doFinalize() {
          // Shortcuts
          var data = this._data;
          var dataWords = data.words;
          var nBitsLeft = data.sigBytes * 8;
          var blockSizeBits = this.blockSize * 32;

          // Add padding
          dataWords[nBitsLeft >>> 5] |= 0x1 << 24 - nBitsLeft % 32;
          dataWords[(Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits >>> 5) - 1] |= 0x80;
          data.sigBytes = dataWords.length * 4;

          // Hash final blocks
          this._process();

          // Shortcuts
          var state = this._state;
          var outputLengthBytes = this.cfg.outputLength / 8;
          var outputLengthLanes = outputLengthBytes / 8;

          // Squeeze
          var hashWords = [];
          for (var _i4 = 0; _i4 < outputLengthLanes; _i4 += 1) {
            // Shortcuts
            var lane = state[_i4];
            var laneMsw = lane.high;
            var laneLsw = lane.low;

            // Swap endian
            laneMsw = (laneMsw << 8 | laneMsw >>> 24) & 0x00ff00ff | (laneMsw << 24 | laneMsw >>> 8) & 0xff00ff00;
            laneLsw = (laneLsw << 8 | laneLsw >>> 24) & 0x00ff00ff | (laneLsw << 24 | laneLsw >>> 8) & 0xff00ff00;

            // Squeeze state to retrieve hash
            hashWords.push(laneLsw);
            hashWords.push(laneMsw);
          }

          // Return final computed hash
          return new WordArray(hashWords, outputLengthBytes);
        };
        _proto.clone = function clone() {
          var clone = _Hasher.prototype.clone.call(this);
          clone._state = this._state.slice(0);
          var state = clone._state;
          for (var _i5 = 0; _i5 < 25; _i5 += 1) {
            state[_i5] = state[_i5].clone();
          }
          return clone;
        };
        return SHA3Algo;
      }(Hasher));

      /**
       * Shortcut function to the hasher's object interface.
       *
       * @param {WordArray|string} message The message to hash.
       *
       * @return {WordArray} The hash.
       *
       * @static
       *
       * @example
       *
       *     var hash = CryptoJS.SHA3('message');
       *     var hash = CryptoJS.SHA3(wordArray);
       */
      var SHA3 = exports('SHA3', Hasher._createHelper(SHA3Algo));

      /**
       * Shortcut function to the HMAC's object interface.
       *
       * @param {WordArray|string} message The message to hash.
       * @param {WordArray|string} key The secret key.
       *
       * @return {WordArray} The HMAC.
       *
       * @static
       *
       * @example
       *
       *     var hmac = CryptoJS.HmacSHA3(message, key);
       */
      var HmacSHA3 = exports('HmacSHA3', Hasher._createHmacHelper(SHA3Algo));
    }
  };
});

System.register("chunks:///_virtual/sha384.js", ['./rollupPluginModLoBabelHelpers.js', './x64-core.js', './sha512.js'], function (exports) {
  var _inheritsLoose, X64WordArray, X64Word, SHA512Algo;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      X64WordArray = module.X64WordArray;
      X64Word = module.X64Word;
    }, function (module) {
      SHA512Algo = module.SHA512Algo;
    }],
    execute: function () {
      /**
       * SHA-384 hash algorithm.
       */
      var SHA384Algo = exports('SHA384Algo', /*#__PURE__*/function (_SHA512Algo) {
        _inheritsLoose(SHA384Algo, _SHA512Algo);
        function SHA384Algo() {
          return _SHA512Algo.apply(this, arguments) || this;
        }
        var _proto = SHA384Algo.prototype;
        _proto._doReset = function _doReset() {
          this._hash = new X64WordArray([new X64Word(0xcbbb9d5d, 0xc1059ed8), new X64Word(0x629a292a, 0x367cd507), new X64Word(0x9159015a, 0x3070dd17), new X64Word(0x152fecd8, 0xf70e5939), new X64Word(0x67332667, 0xffc00b31), new X64Word(0x8eb44a87, 0x68581511), new X64Word(0xdb0c2e0d, 0x64f98fa7), new X64Word(0x47b5481d, 0xbefa4fa4)]);
        };
        _proto._doFinalize = function _doFinalize() {
          var hash = _SHA512Algo.prototype._doFinalize.call(this);
          hash.sigBytes -= 16;
          return hash;
        };
        return SHA384Algo;
      }(SHA512Algo));

      /**
       * Shortcut function to the hasher's object interface.
       *
       * @param {WordArray|string} message The message to hash.
       *
       * @return {WordArray} The hash.
       *
       * @static
       *
       * @example
       *
       *     var hash = CryptoJS.SHA384('message');
       *     var hash = CryptoJS.SHA384(wordArray);
       */
      var SHA384 = exports('SHA384', SHA512Algo._createHelper(SHA384Algo));

      /**
       * Shortcut function to the HMAC's object interface.
       *
       * @param {WordArray|string} message The message to hash.
       * @param {WordArray|string} key The secret key.
       *
       * @return {WordArray} The HMAC.
       *
       * @static
       *
       * @example
       *
       *     var hmac = CryptoJS.HmacSHA384(message, key);
       */
      var HmacSHA384 = exports('HmacSHA384', SHA512Algo._createHmacHelper(SHA384Algo));
    }
  };
});

System.register("chunks:///_virtual/sha512.js", ['./rollupPluginModLoBabelHelpers.js', './core.js', './x64-core.js'], function (exports) {
  var _inheritsLoose, Hasher, X64Word, X64WordArray;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      Hasher = module.Hasher;
    }, function (module) {
      X64Word = module.X64Word;
      X64WordArray = module.X64WordArray;
    }],
    execute: function () {
      // Constants
      var K = [new X64Word(0x428a2f98, 0xd728ae22), new X64Word(0x71374491, 0x23ef65cd), new X64Word(0xb5c0fbcf, 0xec4d3b2f), new X64Word(0xe9b5dba5, 0x8189dbbc), new X64Word(0x3956c25b, 0xf348b538), new X64Word(0x59f111f1, 0xb605d019), new X64Word(0x923f82a4, 0xaf194f9b), new X64Word(0xab1c5ed5, 0xda6d8118), new X64Word(0xd807aa98, 0xa3030242), new X64Word(0x12835b01, 0x45706fbe), new X64Word(0x243185be, 0x4ee4b28c), new X64Word(0x550c7dc3, 0xd5ffb4e2), new X64Word(0x72be5d74, 0xf27b896f), new X64Word(0x80deb1fe, 0x3b1696b1), new X64Word(0x9bdc06a7, 0x25c71235), new X64Word(0xc19bf174, 0xcf692694), new X64Word(0xe49b69c1, 0x9ef14ad2), new X64Word(0xefbe4786, 0x384f25e3), new X64Word(0x0fc19dc6, 0x8b8cd5b5), new X64Word(0x240ca1cc, 0x77ac9c65), new X64Word(0x2de92c6f, 0x592b0275), new X64Word(0x4a7484aa, 0x6ea6e483), new X64Word(0x5cb0a9dc, 0xbd41fbd4), new X64Word(0x76f988da, 0x831153b5), new X64Word(0x983e5152, 0xee66dfab), new X64Word(0xa831c66d, 0x2db43210), new X64Word(0xb00327c8, 0x98fb213f), new X64Word(0xbf597fc7, 0xbeef0ee4), new X64Word(0xc6e00bf3, 0x3da88fc2), new X64Word(0xd5a79147, 0x930aa725), new X64Word(0x06ca6351, 0xe003826f), new X64Word(0x14292967, 0x0a0e6e70), new X64Word(0x27b70a85, 0x46d22ffc), new X64Word(0x2e1b2138, 0x5c26c926), new X64Word(0x4d2c6dfc, 0x5ac42aed), new X64Word(0x53380d13, 0x9d95b3df), new X64Word(0x650a7354, 0x8baf63de), new X64Word(0x766a0abb, 0x3c77b2a8), new X64Word(0x81c2c92e, 0x47edaee6), new X64Word(0x92722c85, 0x1482353b), new X64Word(0xa2bfe8a1, 0x4cf10364), new X64Word(0xa81a664b, 0xbc423001), new X64Word(0xc24b8b70, 0xd0f89791), new X64Word(0xc76c51a3, 0x0654be30), new X64Word(0xd192e819, 0xd6ef5218), new X64Word(0xd6990624, 0x5565a910), new X64Word(0xf40e3585, 0x5771202a), new X64Word(0x106aa070, 0x32bbd1b8), new X64Word(0x19a4c116, 0xb8d2d0c8), new X64Word(0x1e376c08, 0x5141ab53), new X64Word(0x2748774c, 0xdf8eeb99), new X64Word(0x34b0bcb5, 0xe19b48a8), new X64Word(0x391c0cb3, 0xc5c95a63), new X64Word(0x4ed8aa4a, 0xe3418acb), new X64Word(0x5b9cca4f, 0x7763e373), new X64Word(0x682e6ff3, 0xd6b2b8a3), new X64Word(0x748f82ee, 0x5defb2fc), new X64Word(0x78a5636f, 0x43172f60), new X64Word(0x84c87814, 0xa1f0ab72), new X64Word(0x8cc70208, 0x1a6439ec), new X64Word(0x90befffa, 0x23631e28), new X64Word(0xa4506ceb, 0xde82bde9), new X64Word(0xbef9a3f7, 0xb2c67915), new X64Word(0xc67178f2, 0xe372532b), new X64Word(0xca273ece, 0xea26619c), new X64Word(0xd186b8c7, 0x21c0c207), new X64Word(0xeada7dd6, 0xcde0eb1e), new X64Word(0xf57d4f7f, 0xee6ed178), new X64Word(0x06f067aa, 0x72176fba), new X64Word(0x0a637dc5, 0xa2c898a6), new X64Word(0x113f9804, 0xbef90dae), new X64Word(0x1b710b35, 0x131c471b), new X64Word(0x28db77f5, 0x23047d84), new X64Word(0x32caab7b, 0x40c72493), new X64Word(0x3c9ebe0a, 0x15c9bebc), new X64Word(0x431d67c4, 0x9c100d4c), new X64Word(0x4cc5d4be, 0xcb3e42b6), new X64Word(0x597f299c, 0xfc657e2a), new X64Word(0x5fcb6fab, 0x3ad6faec), new X64Word(0x6c44198c, 0x4a475817)];

      // Reusable objects
      var W = [];
      for (var i = 0; i < 80; i += 1) {
        W[i] = new X64Word();
      }

      /**
       * SHA-512 hash algorithm.
       */
      var SHA512Algo = exports('SHA512Algo', /*#__PURE__*/function (_Hasher) {
        _inheritsLoose(SHA512Algo, _Hasher);
        function SHA512Algo() {
          var _this;
          _this = _Hasher.call(this) || this;
          _this.blockSize = 1024 / 32;
          return _this;
        }
        var _proto = SHA512Algo.prototype;
        _proto._doReset = function _doReset() {
          this._hash = new X64WordArray([new X64Word(0x6a09e667, 0xf3bcc908), new X64Word(0xbb67ae85, 0x84caa73b), new X64Word(0x3c6ef372, 0xfe94f82b), new X64Word(0xa54ff53a, 0x5f1d36f1), new X64Word(0x510e527f, 0xade682d1), new X64Word(0x9b05688c, 0x2b3e6c1f), new X64Word(0x1f83d9ab, 0xfb41bd6b), new X64Word(0x5be0cd19, 0x137e2179)]);
        };
        _proto._doProcessBlock = function _doProcessBlock(M, offset) {
          // Shortcuts
          var H = this._hash.words;
          var H0 = H[0];
          var H1 = H[1];
          var H2 = H[2];
          var H3 = H[3];
          var H4 = H[4];
          var H5 = H[5];
          var H6 = H[6];
          var H7 = H[7];
          var H0h = H0.high;
          var H0l = H0.low;
          var H1h = H1.high;
          var H1l = H1.low;
          var H2h = H2.high;
          var H2l = H2.low;
          var H3h = H3.high;
          var H3l = H3.low;
          var H4h = H4.high;
          var H4l = H4.low;
          var H5h = H5.high;
          var H5l = H5.low;
          var H6h = H6.high;
          var H6l = H6.low;
          var H7h = H7.high;
          var H7l = H7.low;

          // Working variables
          var ah = H0h;
          var al = H0l;
          var bh = H1h;
          var bl = H1l;
          var ch = H2h;
          var cl = H2l;
          var dh = H3h;
          var dl = H3l;
          var eh = H4h;
          var el = H4l;
          var fh = H5h;
          var fl = H5l;
          var gh = H6h;
          var gl = H6l;
          var hh = H7h;
          var hl = H7l;

          // Rounds
          for (var _i = 0; _i < 80; _i += 1) {
            var Wil = void 0;
            var Wih = void 0;

            // Shortcut
            var Wi = W[_i];

            // Extend message
            if (_i < 16) {
              Wi.high = M[offset + _i * 2] | 0;
              Wih = Wi.high;
              Wi.low = M[offset + _i * 2 + 1] | 0;
              Wil = Wi.low;
            } else {
              // Gamma0
              var gamma0x = W[_i - 15];
              var gamma0xh = gamma0x.high;
              var gamma0xl = gamma0x.low;
              var gamma0h = (gamma0xh >>> 1 | gamma0xl << 31) ^ (gamma0xh >>> 8 | gamma0xl << 24) ^ gamma0xh >>> 7;
              var gamma0l = (gamma0xl >>> 1 | gamma0xh << 31) ^ (gamma0xl >>> 8 | gamma0xh << 24) ^ (gamma0xl >>> 7 | gamma0xh << 25);

              // Gamma1
              var gamma1x = W[_i - 2];
              var gamma1xh = gamma1x.high;
              var gamma1xl = gamma1x.low;
              var gamma1h = (gamma1xh >>> 19 | gamma1xl << 13) ^ (gamma1xh << 3 | gamma1xl >>> 29) ^ gamma1xh >>> 6;
              var gamma1l = (gamma1xl >>> 19 | gamma1xh << 13) ^ (gamma1xl << 3 | gamma1xh >>> 29) ^ (gamma1xl >>> 6 | gamma1xh << 26);

              // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
              var Wi7 = W[_i - 7];
              var Wi7h = Wi7.high;
              var Wi7l = Wi7.low;
              var Wi16 = W[_i - 16];
              var Wi16h = Wi16.high;
              var Wi16l = Wi16.low;
              Wil = gamma0l + Wi7l;
              Wih = gamma0h + Wi7h + (Wil >>> 0 < gamma0l >>> 0 ? 1 : 0);
              Wil += gamma1l;
              Wih = Wih + gamma1h + (Wil >>> 0 < gamma1l >>> 0 ? 1 : 0);
              Wil += Wi16l;
              Wih = Wih + Wi16h + (Wil >>> 0 < Wi16l >>> 0 ? 1 : 0);
              Wi.high = Wih;
              Wi.low = Wil;
            }
            var chh = eh & fh ^ ~eh & gh;
            var chl = el & fl ^ ~el & gl;
            var majh = ah & bh ^ ah & ch ^ bh & ch;
            var majl = al & bl ^ al & cl ^ bl & cl;
            var sigma0h = (ah >>> 28 | al << 4) ^ (ah << 30 | al >>> 2) ^ (ah << 25 | al >>> 7);
            var sigma0l = (al >>> 28 | ah << 4) ^ (al << 30 | ah >>> 2) ^ (al << 25 | ah >>> 7);
            var sigma1h = (eh >>> 14 | el << 18) ^ (eh >>> 18 | el << 14) ^ (eh << 23 | el >>> 9);
            var sigma1l = (el >>> 14 | eh << 18) ^ (el >>> 18 | eh << 14) ^ (el << 23 | eh >>> 9);

            // t1 = h + sigma1 + ch + K[i] + W[i]
            var Ki = K[_i];
            var Kih = Ki.high;
            var Kil = Ki.low;
            var t1l = hl + sigma1l;
            var t1h = hh + sigma1h + (t1l >>> 0 < hl >>> 0 ? 1 : 0);
            t1l += chl;
            t1h = t1h + chh + (t1l >>> 0 < chl >>> 0 ? 1 : 0);
            t1l += Kil;
            t1h = t1h + Kih + (t1l >>> 0 < Kil >>> 0 ? 1 : 0);
            t1l += Wil;
            t1h = t1h + Wih + (t1l >>> 0 < Wil >>> 0 ? 1 : 0);

            // t2 = sigma0 + maj
            var t2l = sigma0l + majl;
            var t2h = sigma0h + majh + (t2l >>> 0 < sigma0l >>> 0 ? 1 : 0);

            // Update working variables
            hh = gh;
            hl = gl;
            gh = fh;
            gl = fl;
            fh = eh;
            fl = el;
            el = dl + t1l | 0;
            eh = dh + t1h + (el >>> 0 < dl >>> 0 ? 1 : 0) | 0;
            dh = ch;
            dl = cl;
            ch = bh;
            cl = bl;
            bh = ah;
            bl = al;
            al = t1l + t2l | 0;
            ah = t1h + t2h + (al >>> 0 < t1l >>> 0 ? 1 : 0) | 0;
          }

          // Intermediate hash value
          H0.low = H0l + al;
          H0l = H0.low;
          H0.high = H0h + ah + (H0l >>> 0 < al >>> 0 ? 1 : 0);
          H1.low = H1l + bl;
          H1l = H1.low;
          H1.high = H1h + bh + (H1l >>> 0 < bl >>> 0 ? 1 : 0);
          H2.low = H2l + cl;
          H2l = H2.low;
          H2.high = H2h + ch + (H2l >>> 0 < cl >>> 0 ? 1 : 0);
          H3.low = H3l + dl;
          H3l = H3.low;
          H3.high = H3h + dh + (H3l >>> 0 < dl >>> 0 ? 1 : 0);
          H4.low = H4l + el;
          H4l = H4.low;
          H4.high = H4h + eh + (H4l >>> 0 < el >>> 0 ? 1 : 0);
          H5.low = H5l + fl;
          H5l = H5.low;
          H5.high = H5h + fh + (H5l >>> 0 < fl >>> 0 ? 1 : 0);
          H6.low = H6l + gl;
          H6l = H6.low;
          H6.high = H6h + gh + (H6l >>> 0 < gl >>> 0 ? 1 : 0);
          H7.low = H7l + hl;
          H7l = H7.low;
          H7.high = H7h + hh + (H7l >>> 0 < hl >>> 0 ? 1 : 0);
        };
        _proto._doFinalize = function _doFinalize() {
          // Shortcuts
          var data = this._data;
          var dataWords = data.words;
          var nBitsTotal = this._nDataBytes * 8;
          var nBitsLeft = data.sigBytes * 8;

          // Add padding
          dataWords[nBitsLeft >>> 5] |= 0x80 << 24 - nBitsLeft % 32;
          dataWords[(nBitsLeft + 128 >>> 10 << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);
          dataWords[(nBitsLeft + 128 >>> 10 << 5) + 31] = nBitsTotal;
          data.sigBytes = dataWords.length * 4;

          // Hash final blocks
          this._process();

          // Convert hash to 32-bit word array before returning
          var hash = this._hash.toX32();

          // Return final computed hash
          return hash;
        };
        _proto.clone = function clone() {
          var clone = _Hasher.prototype.clone.call(this);
          clone._hash = this._hash.clone();
          return clone;
        };
        return SHA512Algo;
      }(Hasher));

      /**
       * Shortcut function to the hasher's object interface.
       *
       * @param {WordArray|string} message The message to hash.
       *
       * @return {WordArray} The hash.
       *
       * @static
       *
       * @example
       *
       *     var hash = CryptoJS.SHA512('message');
       *     var hash = CryptoJS.SHA512(wordArray);
       */
      var SHA512 = exports('SHA512', Hasher._createHelper(SHA512Algo));

      /**
       * Shortcut function to the HMAC's object interface.
       *
       * @param {WordArray|string} message The message to hash.
       * @param {WordArray|string} key The secret key.
       *
       * @return {WordArray} The HMAC.
       *
       * @static
       *
       * @example
       *
       *     var hmac = CryptoJS.HmacSHA512(message, key);
       */
      var HmacSHA512 = exports('HmacSHA512', Hasher._createHmacHelper(SHA512Algo));
    }
  };
});

System.register("chunks:///_virtual/shared-key.js", ['./cjs-loader.mjs', './shared.js', './uid.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var shared = require('../internals/shared');
        var uid = require('../internals/uid');
        var keys = shared('keys');
        module.exports = function (key) {
          return keys[key] || (keys[key] = uid(key));
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/shared': __cjsMetaURL$1,
          '../internals/uid': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/shared-store.js", ['./cjs-loader.mjs', './global.js', './define-global-property.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var global = require('../internals/global');
        var defineGlobalProperty = require('../internals/define-global-property');
        var SHARED = '__core-js_shared__';
        var store = global[SHARED] || defineGlobalProperty(SHARED, {});
        module.exports = store;

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/global': __cjsMetaURL$1,
          '../internals/define-global-property': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/shared.js", ['./cjs-loader.mjs', './is-pure.js', './shared-store.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var IS_PURE = require('../internals/is-pure');
        var store = require('../internals/shared-store');
        (module.exports = function (key, value) {
          return store[key] || (store[key] = value !== undefined ? value : {});
        })('versions', []).push({
          version: '3.32.2',
          mode: IS_PURE ? 'pure' : 'global',
          copyright: '© 2014-2023 Denis Pushkarev (zloirock.ru)',
          license: 'https://github.com/zloirock/core-js/blob/v3.32.2/LICENSE',
          source: 'https://github.com/zloirock/core-js'
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/is-pure': __cjsMetaURL$1,
          '../internals/shared-store': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/species-constructor.js", ['./cjs-loader.mjs', './an-object.js', './a-constructor.js', './is-null-or-undefined.js', './well-known-symbol.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var anObject = require('../internals/an-object');
        var aConstructor = require('../internals/a-constructor');
        var isNullOrUndefined = require('../internals/is-null-or-undefined');
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var SPECIES = wellKnownSymbol('species');

        // `SpeciesConstructor` abstract operation
        // https://tc39.es/ecma262/#sec-speciesconstructor
        module.exports = function (O, defaultConstructor) {
          var C = anObject(O).constructor;
          var S;
          return C === undefined || isNullOrUndefined(S = anObject(C)[SPECIES]) ? defaultConstructor : aConstructor(S);
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/an-object': __cjsMetaURL$1,
          '../internals/a-constructor': __cjsMetaURL$2,
          '../internals/is-null-or-undefined': __cjsMetaURL$3,
          '../internals/well-known-symbol': __cjsMetaURL$4
        };
      });
    }
  };
});

System.register("chunks:///_virtual/string-multibyte.js", ['./cjs-loader.mjs', './function-uncurry-this.js', './to-integer-or-infinity.js', './to-string.js', './require-object-coercible.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var uncurryThis = require('../internals/function-uncurry-this');
        var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');
        var toString = require('../internals/to-string');
        var requireObjectCoercible = require('../internals/require-object-coercible');
        var charAt = uncurryThis(''.charAt);
        var charCodeAt = uncurryThis(''.charCodeAt);
        var stringSlice = uncurryThis(''.slice);
        var createMethod = function createMethod(CONVERT_TO_STRING) {
          return function ($this, pos) {
            var S = toString(requireObjectCoercible($this));
            var position = toIntegerOrInfinity(pos);
            var size = S.length;
            var first, second;
            if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
            first = charCodeAt(S, position);
            return first < 0xD800 || first > 0xDBFF || position + 1 === size || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF ? CONVERT_TO_STRING ? charAt(S, position) : first : CONVERT_TO_STRING ? stringSlice(S, position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
          };
        };
        module.exports = {
          // `String.prototype.codePointAt` method
          // https://tc39.es/ecma262/#sec-string.prototype.codepointat
          codeAt: createMethod(false),
          // `String.prototype.at` method
          // https://github.com/mathiasbynens/String.prototype.at
          charAt: createMethod(true)
        };

        // #endregion ORIGINAL CODE

        module.exports;
        module.exports.codeAt;
      }, function () {
        return {
          '../internals/function-uncurry-this': __cjsMetaURL$1,
          '../internals/to-integer-or-infinity': __cjsMetaURL$2,
          '../internals/to-string': __cjsMetaURL$3,
          '../internals/require-object-coercible': __cjsMetaURL$4
        };
      });
    }
  };
});

System.register("chunks:///_virtual/string-trim.js", ['./cjs-loader.mjs', './function-uncurry-this.js', './require-object-coercible.js', './to-string.js', './whitespaces.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var uncurryThis = require('../internals/function-uncurry-this');
        var requireObjectCoercible = require('../internals/require-object-coercible');
        var toString = require('../internals/to-string');
        var whitespaces = require('../internals/whitespaces');
        var replace = uncurryThis(''.replace);
        var ltrim = RegExp('^[' + whitespaces + ']+');
        var rtrim = RegExp('(^|[^' + whitespaces + '])[' + whitespaces + ']+$');

        // `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation
        var createMethod = function createMethod(TYPE) {
          return function ($this) {
            var string = toString(requireObjectCoercible($this));
            if (TYPE & 1) string = replace(string, ltrim, '');
            if (TYPE & 2) string = replace(string, rtrim, '$1');
            return string;
          };
        };
        module.exports = {
          // `String.prototype.{ trimLeft, trimStart }` methods
          // https://tc39.es/ecma262/#sec-string.prototype.trimstart
          start: createMethod(1),
          // `String.prototype.{ trimRight, trimEnd }` methods
          // https://tc39.es/ecma262/#sec-string.prototype.trimend
          end: createMethod(2),
          // `String.prototype.trim` method
          // https://tc39.es/ecma262/#sec-string.prototype.trim
          trim: createMethod(3)
        };

        // #endregion ORIGINAL CODE

        module.exports;
        module.exports.start;
      }, function () {
        return {
          '../internals/function-uncurry-this': __cjsMetaURL$1,
          '../internals/require-object-coercible': __cjsMetaURL$2,
          '../internals/to-string': __cjsMetaURL$3,
          '../internals/whitespaces': __cjsMetaURL$4
        };
      });
    }
  };
});

System.register("chunks:///_virtual/symbol-constructor-detection.js", ['./cjs-loader.mjs', './engine-v8-version.js', './fails.js', './global.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        /* eslint-disable es/no-symbol -- required for testing */
        var V8_VERSION = require('../internals/engine-v8-version');
        var fails = require('../internals/fails');
        var global = require('../internals/global');
        var $String = global.String;

        // eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
        module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
          var symbol = Symbol('symbol detection');
          // Chrome 38 Symbol has incorrect toString conversion
          // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
          // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,
          // of course, fail.
          return !$String(symbol) || !(Object(symbol) instanceof Symbol) ||
          // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
          !Symbol.sham && V8_VERSION && V8_VERSION < 41;
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/engine-v8-version': __cjsMetaURL$1,
          '../internals/fails': __cjsMetaURL$2,
          '../internals/global': __cjsMetaURL$3
        };
      });
    }
  };
});

System.register("chunks:///_virtual/task.js", ['./cjs-loader.mjs', './global.js', './function-apply.js', './function-bind-context.js', './is-callable.js', './has-own-property.js', './fails.js', './html.js', './array-slice.js', './document-create-element.js', './validate-arguments-length.js', './engine-is-ios.js', './engine-is-node.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8, __cjsMetaURL$9, __cjsMetaURL$a, __cjsMetaURL$b, __cjsMetaURL$c;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$9 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$a = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$b = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$c = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var global = require('../internals/global');
        var apply = require('../internals/function-apply');
        var bind = require('../internals/function-bind-context');
        var isCallable = require('../internals/is-callable');
        var hasOwn = require('../internals/has-own-property');
        var fails = require('../internals/fails');
        var html = require('../internals/html');
        var arraySlice = require('../internals/array-slice');
        var createElement = require('../internals/document-create-element');
        var validateArgumentsLength = require('../internals/validate-arguments-length');
        var IS_IOS = require('../internals/engine-is-ios');
        var IS_NODE = require('../internals/engine-is-node');
        var set = global.setImmediate;
        var clear = global.clearImmediate;
        var process = global.process;
        var Dispatch = global.Dispatch;
        var Function = global.Function;
        var MessageChannel = global.MessageChannel;
        var String = global.String;
        var counter = 0;
        var queue = {};
        var ONREADYSTATECHANGE = 'onreadystatechange';
        var $location, defer, channel, port;
        fails(function () {
          // Deno throws a ReferenceError on `location` access without `--location` flag
          $location = global.location;
        });
        var run = function run(id) {
          if (hasOwn(queue, id)) {
            var fn = queue[id];
            delete queue[id];
            fn();
          }
        };
        var runner = function runner(id) {
          return function () {
            run(id);
          };
        };
        var eventListener = function eventListener(event) {
          run(event.data);
        };
        var globalPostMessageDefer = function globalPostMessageDefer(id) {
          // old engines have not location.origin
          global.postMessage(String(id), $location.protocol + '//' + $location.host);
        };

        // Node.js 0.9+ & IE10+ has setImmediate, otherwise:
        if (!set || !clear) {
          set = function setImmediate(handler) {
            validateArgumentsLength(arguments.length, 1);
            var fn = isCallable(handler) ? handler : Function(handler);
            var args = arraySlice(arguments, 1);
            queue[++counter] = function () {
              apply(fn, undefined, args);
            };
            defer(counter);
            return counter;
          };
          clear = function clearImmediate(id) {
            delete queue[id];
          };
          // Node.js 0.8-
          if (IS_NODE) {
            defer = function defer(id) {
              process.nextTick(runner(id));
            };
            // Sphere (JS game engine) Dispatch API
          } else if (Dispatch && Dispatch.now) {
            defer = function defer(id) {
              Dispatch.now(runner(id));
            };
            // Browsers with MessageChannel, includes WebWorkers
            // except iOS - https://github.com/zloirock/core-js/issues/624
          } else if (MessageChannel && !IS_IOS) {
            channel = new MessageChannel();
            port = channel.port2;
            channel.port1.onmessage = eventListener;
            defer = bind(port.postMessage, port);
            // Browsers with postMessage, skip WebWorkers
            // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
          } else if (global.addEventListener && isCallable(global.postMessage) && !global.importScripts && $location && $location.protocol !== 'file:' && !fails(globalPostMessageDefer)) {
            defer = globalPostMessageDefer;
            global.addEventListener('message', eventListener, false);
            // IE8-
          } else if (ONREADYSTATECHANGE in createElement('script')) {
            defer = function defer(id) {
              html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {
                html.removeChild(this);
                run(id);
              };
            };
            // Rest old browsers
          } else {
            defer = function defer(id) {
              setTimeout(runner(id), 0);
            };
          }
        }
        module.exports = {
          set: set,
          clear: clear
        };

        // #endregion ORIGINAL CODE

        module.exports;
        module.exports.set;
        module.exports.clear;
      }, function () {
        return {
          '../internals/global': __cjsMetaURL$1,
          '../internals/function-apply': __cjsMetaURL$2,
          '../internals/function-bind-context': __cjsMetaURL$3,
          '../internals/is-callable': __cjsMetaURL$4,
          '../internals/has-own-property': __cjsMetaURL$5,
          '../internals/fails': __cjsMetaURL$6,
          '../internals/html': __cjsMetaURL$7,
          '../internals/array-slice': __cjsMetaURL$8,
          '../internals/document-create-element': __cjsMetaURL$9,
          '../internals/validate-arguments-length': __cjsMetaURL$a,
          '../internals/engine-is-ios': __cjsMetaURL$b,
          '../internals/engine-is-node': __cjsMetaURL$c
        };
      });
    }
  };
});

System.register("chunks:///_virtual/this-number-value.js", ['./cjs-loader.mjs', './function-uncurry-this.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var uncurryThis = require('../internals/function-uncurry-this');

        // `thisNumberValue` abstract operation
        // https://tc39.es/ecma262/#sec-thisnumbervalue
        module.exports = uncurryThis(1.0.valueOf);

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-uncurry-this': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/to-absolute-index.js", ['./cjs-loader.mjs', './to-integer-or-infinity.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');
        var max = Math.max;
        var min = Math.min;

        // Helper for a popular repeating case of the spec:
        // Let integer be ? ToInteger(index).
        // If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
        module.exports = function (index, length) {
          var integer = toIntegerOrInfinity(index);
          return integer < 0 ? max(integer + length, 0) : min(integer, length);
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/to-integer-or-infinity': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/to-big-int.js", ['./cjs-loader.mjs', './to-primitive.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var toPrimitive = require('../internals/to-primitive');
        var $TypeError = TypeError;

        // `ToBigInt` abstract operation
        // https://tc39.es/ecma262/#sec-tobigint
        module.exports = function (argument) {
          var prim = toPrimitive(argument, 'number');
          if (typeof prim == 'number') throw $TypeError("Can't convert number to bigint");
          // eslint-disable-next-line es/no-bigint -- safe
          return BigInt(prim);
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/to-primitive': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/to-index.js", ['./cjs-loader.mjs', './to-integer-or-infinity.js', './to-length.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');
        var toLength = require('../internals/to-length');
        var $RangeError = RangeError;

        // `ToIndex` abstract operation
        // https://tc39.es/ecma262/#sec-toindex
        module.exports = function (it) {
          if (it === undefined) return 0;
          var number = toIntegerOrInfinity(it);
          var length = toLength(number);
          if (number !== length) throw $RangeError('Wrong length or index');
          return length;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/to-integer-or-infinity': __cjsMetaURL$1,
          '../internals/to-length': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/to-indexed-object.js", ['./cjs-loader.mjs', './indexed-object.js', './require-object-coercible.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        // toObject with fallback for non-array-like ES3 strings
        var IndexedObject = require('../internals/indexed-object');
        var requireObjectCoercible = require('../internals/require-object-coercible');
        module.exports = function (it) {
          return IndexedObject(requireObjectCoercible(it));
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/indexed-object': __cjsMetaURL$1,
          '../internals/require-object-coercible': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/to-integer-or-infinity.js", ['./cjs-loader.mjs', './math-trunc.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var trunc = require('../internals/math-trunc');

        // `ToIntegerOrInfinity` abstract operation
        // https://tc39.es/ecma262/#sec-tointegerorinfinity
        module.exports = function (argument) {
          var number = +argument;
          // eslint-disable-next-line no-self-compare -- NaN check
          return number !== number || number === 0 ? 0 : trunc(number);
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/math-trunc': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/to-length.js", ['./cjs-loader.mjs', './to-integer-or-infinity.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');
        var min = Math.min;

        // `ToLength` abstract operation
        // https://tc39.es/ecma262/#sec-tolength
        module.exports = function (argument) {
          return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/to-integer-or-infinity': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/to-object.js", ['./cjs-loader.mjs', './require-object-coercible.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var requireObjectCoercible = require('../internals/require-object-coercible');
        var $Object = Object;

        // `ToObject` abstract operation
        // https://tc39.es/ecma262/#sec-toobject
        module.exports = function (argument) {
          return $Object(requireObjectCoercible(argument));
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/require-object-coercible': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/to-offset.js", ['./cjs-loader.mjs', './to-positive-integer.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var toPositiveInteger = require('../internals/to-positive-integer');
        var $RangeError = RangeError;
        module.exports = function (it, BYTES) {
          var offset = toPositiveInteger(it);
          if (offset % BYTES) throw $RangeError('Wrong offset');
          return offset;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/to-positive-integer': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/to-positive-integer.js", ['./cjs-loader.mjs', './to-integer-or-infinity.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');
        var $RangeError = RangeError;
        module.exports = function (it) {
          var result = toIntegerOrInfinity(it);
          if (result < 0) throw $RangeError("The argument can't be less than 0");
          return result;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/to-integer-or-infinity': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/to-primitive.js", ['./cjs-loader.mjs', './function-call.js', './is-object.js', './is-symbol.js', './get-method.js', './ordinary-to-primitive.js', './well-known-symbol.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var call = require('../internals/function-call');
        var isObject = require('../internals/is-object');
        var isSymbol = require('../internals/is-symbol');
        var getMethod = require('../internals/get-method');
        var ordinaryToPrimitive = require('../internals/ordinary-to-primitive');
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var $TypeError = TypeError;
        var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');

        // `ToPrimitive` abstract operation
        // https://tc39.es/ecma262/#sec-toprimitive
        module.exports = function (input, pref) {
          if (!isObject(input) || isSymbol(input)) return input;
          var exoticToPrim = getMethod(input, TO_PRIMITIVE);
          var result;
          if (exoticToPrim) {
            if (pref === undefined) pref = 'default';
            result = call(exoticToPrim, input, pref);
            if (!isObject(result) || isSymbol(result)) return result;
            throw $TypeError("Can't convert object to primitive value");
          }
          if (pref === undefined) pref = 'number';
          return ordinaryToPrimitive(input, pref);
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-call': __cjsMetaURL$1,
          '../internals/is-object': __cjsMetaURL$2,
          '../internals/is-symbol': __cjsMetaURL$3,
          '../internals/get-method': __cjsMetaURL$4,
          '../internals/ordinary-to-primitive': __cjsMetaURL$5,
          '../internals/well-known-symbol': __cjsMetaURL$6
        };
      });
    }
  };
});

System.register("chunks:///_virtual/to-property-key.js", ['./cjs-loader.mjs', './to-primitive.js', './is-symbol.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var toPrimitive = require('../internals/to-primitive');
        var isSymbol = require('../internals/is-symbol');

        // `ToPropertyKey` abstract operation
        // https://tc39.es/ecma262/#sec-topropertykey
        module.exports = function (argument) {
          var key = toPrimitive(argument, 'string');
          return isSymbol(key) ? key : key + '';
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/to-primitive': __cjsMetaURL$1,
          '../internals/is-symbol': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/to-string-tag-support.js", ['./cjs-loader.mjs', './well-known-symbol.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var TO_STRING_TAG = wellKnownSymbol('toStringTag');
        var test = {};
        test[TO_STRING_TAG] = 'z';
        module.exports = String(test) === '[object z]';

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/well-known-symbol': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/to-string.js", ['./cjs-loader.mjs', './classof.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var classof = require('../internals/classof');
        var $String = String;
        module.exports = function (argument) {
          if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');
          return $String(argument);
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/classof': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/to-uint8-clamped.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var round = Math.round;
        module.exports = function (it) {
          var value = round(it);
          return value < 0 ? 0 : value > 0xFF ? 0xFF : value & 0xFF;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/tripledes.js", ['./rollupPluginModLoBabelHelpers.js', './core.js', './cipher-core.js'], function (exports) {
  var _inheritsLoose, WordArray, BlockCipher;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      WordArray = module.WordArray;
    }, function (module) {
      BlockCipher = module.BlockCipher;
    }],
    execute: function () {
      // Permuted Choice 1 constants
      var PC1 = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4];

      // Permuted Choice 2 constants
      var PC2 = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32];

      // Cumulative bit shift constants
      var BIT_SHIFTS = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];

      // SBOXes and round permutation constants
      var SBOX_P = [{
        0x0: 0x808200,
        0x10000000: 0x8000,
        0x20000000: 0x808002,
        0x30000000: 0x2,
        0x40000000: 0x200,
        0x50000000: 0x808202,
        0x60000000: 0x800202,
        0x70000000: 0x800000,
        0x80000000: 0x202,
        0x90000000: 0x800200,
        0xa0000000: 0x8200,
        0xb0000000: 0x808000,
        0xc0000000: 0x8002,
        0xd0000000: 0x800002,
        0xe0000000: 0x0,
        0xf0000000: 0x8202,
        0x8000000: 0x0,
        0x18000000: 0x808202,
        0x28000000: 0x8202,
        0x38000000: 0x8000,
        0x48000000: 0x808200,
        0x58000000: 0x200,
        0x68000000: 0x808002,
        0x78000000: 0x2,
        0x88000000: 0x800200,
        0x98000000: 0x8200,
        0xa8000000: 0x808000,
        0xb8000000: 0x800202,
        0xc8000000: 0x800002,
        0xd8000000: 0x8002,
        0xe8000000: 0x202,
        0xf8000000: 0x800000,
        0x1: 0x8000,
        0x10000001: 0x2,
        0x20000001: 0x808200,
        0x30000001: 0x800000,
        0x40000001: 0x808002,
        0x50000001: 0x8200,
        0x60000001: 0x200,
        0x70000001: 0x800202,
        0x80000001: 0x808202,
        0x90000001: 0x808000,
        0xa0000001: 0x800002,
        0xb0000001: 0x8202,
        0xc0000001: 0x202,
        0xd0000001: 0x800200,
        0xe0000001: 0x8002,
        0xf0000001: 0x0,
        0x8000001: 0x808202,
        0x18000001: 0x808000,
        0x28000001: 0x800000,
        0x38000001: 0x200,
        0x48000001: 0x8000,
        0x58000001: 0x800002,
        0x68000001: 0x2,
        0x78000001: 0x8202,
        0x88000001: 0x8002,
        0x98000001: 0x800202,
        0xa8000001: 0x202,
        0xb8000001: 0x808200,
        0xc8000001: 0x800200,
        0xd8000001: 0x0,
        0xe8000001: 0x8200,
        0xf8000001: 0x808002
      }, {
        0x0: 0x40084010,
        0x1000000: 0x4000,
        0x2000000: 0x80000,
        0x3000000: 0x40080010,
        0x4000000: 0x40000010,
        0x5000000: 0x40084000,
        0x6000000: 0x40004000,
        0x7000000: 0x10,
        0x8000000: 0x84000,
        0x9000000: 0x40004010,
        0xa000000: 0x40000000,
        0xb000000: 0x84010,
        0xc000000: 0x80010,
        0xd000000: 0x0,
        0xe000000: 0x4010,
        0xf000000: 0x40080000,
        0x800000: 0x40004000,
        0x1800000: 0x84010,
        0x2800000: 0x10,
        0x3800000: 0x40004010,
        0x4800000: 0x40084010,
        0x5800000: 0x40000000,
        0x6800000: 0x80000,
        0x7800000: 0x40080010,
        0x8800000: 0x80010,
        0x9800000: 0x0,
        0xa800000: 0x4000,
        0xb800000: 0x40080000,
        0xc800000: 0x40000010,
        0xd800000: 0x84000,
        0xe800000: 0x40084000,
        0xf800000: 0x4010,
        0x10000000: 0x0,
        0x11000000: 0x40080010,
        0x12000000: 0x40004010,
        0x13000000: 0x40084000,
        0x14000000: 0x40080000,
        0x15000000: 0x10,
        0x16000000: 0x84010,
        0x17000000: 0x4000,
        0x18000000: 0x4010,
        0x19000000: 0x80000,
        0x1a000000: 0x80010,
        0x1b000000: 0x40000010,
        0x1c000000: 0x84000,
        0x1d000000: 0x40004000,
        0x1e000000: 0x40000000,
        0x1f000000: 0x40084010,
        0x10800000: 0x84010,
        0x11800000: 0x80000,
        0x12800000: 0x40080000,
        0x13800000: 0x4000,
        0x14800000: 0x40004000,
        0x15800000: 0x40084010,
        0x16800000: 0x10,
        0x17800000: 0x40000000,
        0x18800000: 0x40084000,
        0x19800000: 0x40000010,
        0x1a800000: 0x40004010,
        0x1b800000: 0x80010,
        0x1c800000: 0x0,
        0x1d800000: 0x4010,
        0x1e800000: 0x40080010,
        0x1f800000: 0x84000
      }, {
        0x0: 0x104,
        0x100000: 0x0,
        0x200000: 0x4000100,
        0x300000: 0x10104,
        0x400000: 0x10004,
        0x500000: 0x4000004,
        0x600000: 0x4010104,
        0x700000: 0x4010000,
        0x800000: 0x4000000,
        0x900000: 0x4010100,
        0xa00000: 0x10100,
        0xb00000: 0x4010004,
        0xc00000: 0x4000104,
        0xd00000: 0x10000,
        0xe00000: 0x4,
        0xf00000: 0x100,
        0x80000: 0x4010100,
        0x180000: 0x4010004,
        0x280000: 0x0,
        0x380000: 0x4000100,
        0x480000: 0x4000004,
        0x580000: 0x10000,
        0x680000: 0x10004,
        0x780000: 0x104,
        0x880000: 0x4,
        0x980000: 0x100,
        0xa80000: 0x4010000,
        0xb80000: 0x10104,
        0xc80000: 0x10100,
        0xd80000: 0x4000104,
        0xe80000: 0x4010104,
        0xf80000: 0x4000000,
        0x1000000: 0x4010100,
        0x1100000: 0x10004,
        0x1200000: 0x10000,
        0x1300000: 0x4000100,
        0x1400000: 0x100,
        0x1500000: 0x4010104,
        0x1600000: 0x4000004,
        0x1700000: 0x0,
        0x1800000: 0x4000104,
        0x1900000: 0x4000000,
        0x1a00000: 0x4,
        0x1b00000: 0x10100,
        0x1c00000: 0x4010000,
        0x1d00000: 0x104,
        0x1e00000: 0x10104,
        0x1f00000: 0x4010004,
        0x1080000: 0x4000000,
        0x1180000: 0x104,
        0x1280000: 0x4010100,
        0x1380000: 0x0,
        0x1480000: 0x10004,
        0x1580000: 0x4000100,
        0x1680000: 0x100,
        0x1780000: 0x4010004,
        0x1880000: 0x10000,
        0x1980000: 0x4010104,
        0x1a80000: 0x10104,
        0x1b80000: 0x4000004,
        0x1c80000: 0x4000104,
        0x1d80000: 0x4010000,
        0x1e80000: 0x4,
        0x1f80000: 0x10100
      }, {
        0x0: 0x80401000,
        0x10000: 0x80001040,
        0x20000: 0x401040,
        0x30000: 0x80400000,
        0x40000: 0x0,
        0x50000: 0x401000,
        0x60000: 0x80000040,
        0x70000: 0x400040,
        0x80000: 0x80000000,
        0x90000: 0x400000,
        0xa0000: 0x40,
        0xb0000: 0x80001000,
        0xc0000: 0x80400040,
        0xd0000: 0x1040,
        0xe0000: 0x1000,
        0xf0000: 0x80401040,
        0x8000: 0x80001040,
        0x18000: 0x40,
        0x28000: 0x80400040,
        0x38000: 0x80001000,
        0x48000: 0x401000,
        0x58000: 0x80401040,
        0x68000: 0x0,
        0x78000: 0x80400000,
        0x88000: 0x1000,
        0x98000: 0x80401000,
        0xa8000: 0x400000,
        0xb8000: 0x1040,
        0xc8000: 0x80000000,
        0xd8000: 0x400040,
        0xe8000: 0x401040,
        0xf8000: 0x80000040,
        0x100000: 0x400040,
        0x110000: 0x401000,
        0x120000: 0x80000040,
        0x130000: 0x0,
        0x140000: 0x1040,
        0x150000: 0x80400040,
        0x160000: 0x80401000,
        0x170000: 0x80001040,
        0x180000: 0x80401040,
        0x190000: 0x80000000,
        0x1a0000: 0x80400000,
        0x1b0000: 0x401040,
        0x1c0000: 0x80001000,
        0x1d0000: 0x400000,
        0x1e0000: 0x40,
        0x1f0000: 0x1000,
        0x108000: 0x80400000,
        0x118000: 0x80401040,
        0x128000: 0x0,
        0x138000: 0x401000,
        0x148000: 0x400040,
        0x158000: 0x80000000,
        0x168000: 0x80001040,
        0x178000: 0x40,
        0x188000: 0x80000040,
        0x198000: 0x1000,
        0x1a8000: 0x80001000,
        0x1b8000: 0x80400040,
        0x1c8000: 0x1040,
        0x1d8000: 0x80401000,
        0x1e8000: 0x400000,
        0x1f8000: 0x401040
      }, {
        0x0: 0x80,
        0x1000: 0x1040000,
        0x2000: 0x40000,
        0x3000: 0x20000000,
        0x4000: 0x20040080,
        0x5000: 0x1000080,
        0x6000: 0x21000080,
        0x7000: 0x40080,
        0x8000: 0x1000000,
        0x9000: 0x20040000,
        0xa000: 0x20000080,
        0xb000: 0x21040080,
        0xc000: 0x21040000,
        0xd000: 0x0,
        0xe000: 0x1040080,
        0xf000: 0x21000000,
        0x800: 0x1040080,
        0x1800: 0x21000080,
        0x2800: 0x80,
        0x3800: 0x1040000,
        0x4800: 0x40000,
        0x5800: 0x20040080,
        0x6800: 0x21040000,
        0x7800: 0x20000000,
        0x8800: 0x20040000,
        0x9800: 0x0,
        0xa800: 0x21040080,
        0xb800: 0x1000080,
        0xc800: 0x20000080,
        0xd800: 0x21000000,
        0xe800: 0x1000000,
        0xf800: 0x40080,
        0x10000: 0x40000,
        0x11000: 0x80,
        0x12000: 0x20000000,
        0x13000: 0x21000080,
        0x14000: 0x1000080,
        0x15000: 0x21040000,
        0x16000: 0x20040080,
        0x17000: 0x1000000,
        0x18000: 0x21040080,
        0x19000: 0x21000000,
        0x1a000: 0x1040000,
        0x1b000: 0x20040000,
        0x1c000: 0x40080,
        0x1d000: 0x20000080,
        0x1e000: 0x0,
        0x1f000: 0x1040080,
        0x10800: 0x21000080,
        0x11800: 0x1000000,
        0x12800: 0x1040000,
        0x13800: 0x20040080,
        0x14800: 0x20000000,
        0x15800: 0x1040080,
        0x16800: 0x80,
        0x17800: 0x21040000,
        0x18800: 0x40080,
        0x19800: 0x21040080,
        0x1a800: 0x0,
        0x1b800: 0x21000000,
        0x1c800: 0x1000080,
        0x1d800: 0x40000,
        0x1e800: 0x20040000,
        0x1f800: 0x20000080
      }, {
        0x0: 0x10000008,
        0x100: 0x2000,
        0x200: 0x10200000,
        0x300: 0x10202008,
        0x400: 0x10002000,
        0x500: 0x200000,
        0x600: 0x200008,
        0x700: 0x10000000,
        0x800: 0x0,
        0x900: 0x10002008,
        0xa00: 0x202000,
        0xb00: 0x8,
        0xc00: 0x10200008,
        0xd00: 0x202008,
        0xe00: 0x2008,
        0xf00: 0x10202000,
        0x80: 0x10200000,
        0x180: 0x10202008,
        0x280: 0x8,
        0x380: 0x200000,
        0x480: 0x202008,
        0x580: 0x10000008,
        0x680: 0x10002000,
        0x780: 0x2008,
        0x880: 0x200008,
        0x980: 0x2000,
        0xa80: 0x10002008,
        0xb80: 0x10200008,
        0xc80: 0x0,
        0xd80: 0x10202000,
        0xe80: 0x202000,
        0xf80: 0x10000000,
        0x1000: 0x10002000,
        0x1100: 0x10200008,
        0x1200: 0x10202008,
        0x1300: 0x2008,
        0x1400: 0x200000,
        0x1500: 0x10000000,
        0x1600: 0x10000008,
        0x1700: 0x202000,
        0x1800: 0x202008,
        0x1900: 0x0,
        0x1a00: 0x8,
        0x1b00: 0x10200000,
        0x1c00: 0x2000,
        0x1d00: 0x10002008,
        0x1e00: 0x10202000,
        0x1f00: 0x200008,
        0x1080: 0x8,
        0x1180: 0x202000,
        0x1280: 0x200000,
        0x1380: 0x10000008,
        0x1480: 0x10002000,
        0x1580: 0x2008,
        0x1680: 0x10202008,
        0x1780: 0x10200000,
        0x1880: 0x10202000,
        0x1980: 0x10200008,
        0x1a80: 0x2000,
        0x1b80: 0x202008,
        0x1c80: 0x200008,
        0x1d80: 0x0,
        0x1e80: 0x10000000,
        0x1f80: 0x10002008
      }, {
        0x0: 0x100000,
        0x10: 0x2000401,
        0x20: 0x400,
        0x30: 0x100401,
        0x40: 0x2100401,
        0x50: 0x0,
        0x60: 0x1,
        0x70: 0x2100001,
        0x80: 0x2000400,
        0x90: 0x100001,
        0xa0: 0x2000001,
        0xb0: 0x2100400,
        0xc0: 0x2100000,
        0xd0: 0x401,
        0xe0: 0x100400,
        0xf0: 0x2000000,
        0x8: 0x2100001,
        0x18: 0x0,
        0x28: 0x2000401,
        0x38: 0x2100400,
        0x48: 0x100000,
        0x58: 0x2000001,
        0x68: 0x2000000,
        0x78: 0x401,
        0x88: 0x100401,
        0x98: 0x2000400,
        0xa8: 0x2100000,
        0xb8: 0x100001,
        0xc8: 0x400,
        0xd8: 0x2100401,
        0xe8: 0x1,
        0xf8: 0x100400,
        0x100: 0x2000000,
        0x110: 0x100000,
        0x120: 0x2000401,
        0x130: 0x2100001,
        0x140: 0x100001,
        0x150: 0x2000400,
        0x160: 0x2100400,
        0x170: 0x100401,
        0x180: 0x401,
        0x190: 0x2100401,
        0x1a0: 0x100400,
        0x1b0: 0x1,
        0x1c0: 0x0,
        0x1d0: 0x2100000,
        0x1e0: 0x2000001,
        0x1f0: 0x400,
        0x108: 0x100400,
        0x118: 0x2000401,
        0x128: 0x2100001,
        0x138: 0x1,
        0x148: 0x2000000,
        0x158: 0x100000,
        0x168: 0x401,
        0x178: 0x2100400,
        0x188: 0x2000001,
        0x198: 0x2100000,
        0x1a8: 0x0,
        0x1b8: 0x2100401,
        0x1c8: 0x100401,
        0x1d8: 0x400,
        0x1e8: 0x2000400,
        0x1f8: 0x100001
      }, {
        0x0: 0x8000820,
        0x1: 0x20000,
        0x2: 0x8000000,
        0x3: 0x20,
        0x4: 0x20020,
        0x5: 0x8020820,
        0x6: 0x8020800,
        0x7: 0x800,
        0x8: 0x8020000,
        0x9: 0x8000800,
        0xa: 0x20800,
        0xb: 0x8020020,
        0xc: 0x820,
        0xd: 0x0,
        0xe: 0x8000020,
        0xf: 0x20820,
        0x80000000: 0x800,
        0x80000001: 0x8020820,
        0x80000002: 0x8000820,
        0x80000003: 0x8000000,
        0x80000004: 0x8020000,
        0x80000005: 0x20800,
        0x80000006: 0x20820,
        0x80000007: 0x20,
        0x80000008: 0x8000020,
        0x80000009: 0x820,
        0x8000000a: 0x20020,
        0x8000000b: 0x8020800,
        0x8000000c: 0x0,
        0x8000000d: 0x8020020,
        0x8000000e: 0x8000800,
        0x8000000f: 0x20000,
        0x10: 0x20820,
        0x11: 0x8020800,
        0x12: 0x20,
        0x13: 0x800,
        0x14: 0x8000800,
        0x15: 0x8000020,
        0x16: 0x8020020,
        0x17: 0x20000,
        0x18: 0x0,
        0x19: 0x20020,
        0x1a: 0x8020000,
        0x1b: 0x8000820,
        0x1c: 0x8020820,
        0x1d: 0x20800,
        0x1e: 0x820,
        0x1f: 0x8000000,
        0x80000010: 0x20000,
        0x80000011: 0x800,
        0x80000012: 0x8020020,
        0x80000013: 0x20820,
        0x80000014: 0x20,
        0x80000015: 0x8020000,
        0x80000016: 0x8000000,
        0x80000017: 0x8000820,
        0x80000018: 0x8020820,
        0x80000019: 0x8000020,
        0x8000001a: 0x8000800,
        0x8000001b: 0x0,
        0x8000001c: 0x20800,
        0x8000001d: 0x820,
        0x8000001e: 0x20020,
        0x8000001f: 0x8020800
      }];

      // Masks that select the SBOX input
      var SBOX_MASK = [0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000, 0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f];

      // Swap bits across the left and right words
      function exchangeLR(offset, mask) {
        var t = (this._lBlock >>> offset ^ this._rBlock) & mask;
        this._rBlock ^= t;
        this._lBlock ^= t << offset;
      }
      function exchangeRL(offset, mask) {
        var t = (this._rBlock >>> offset ^ this._lBlock) & mask;
        this._lBlock ^= t;
        this._rBlock ^= t << offset;
      }

      /**
       * DES block cipher algorithm.
       */
      var DESAlgo = exports('DESAlgo', /*#__PURE__*/function (_BlockCipher) {
        _inheritsLoose(DESAlgo, _BlockCipher);
        function DESAlgo(xformMode, key, cfg) {
          var _this;
          _this = _BlockCipher.call(this, xformMode, key, cfg) || this;

          // blickSize is an instance field and should set in constructor.
          // Both DESAlgo and TripleDESAlgo.
          _this.blockSize = 64 / 32;
          return _this;
        }
        var _proto = DESAlgo.prototype;
        _proto._doReset = function _doReset() {
          // Shortcuts
          var key = this._key;
          var keyWords = key.words;

          // Select 56 bits according to PC1
          var keyBits = [];
          for (var i = 0; i < 56; i += 1) {
            var keyBitPos = PC1[i] - 1;
            keyBits[i] = keyWords[keyBitPos >>> 5] >>> 31 - keyBitPos % 32 & 1;
          }

          // Assemble 16 subkeys
          this._subKeys = [];
          var subKeys = this._subKeys;
          for (var nSubKey = 0; nSubKey < 16; nSubKey += 1) {
            // Create subkey
            subKeys[nSubKey] = [];
            var subKey = subKeys[nSubKey];

            // Shortcut
            var bitShift = BIT_SHIFTS[nSubKey];

            // Select 48 bits according to PC2
            for (var _i = 0; _i < 24; _i += 1) {
              // Select from the left 28 key bits
              subKey[_i / 6 | 0] |= keyBits[(PC2[_i] - 1 + bitShift) % 28] << 31 - _i % 6;

              // Select from the right 28 key bits
              subKey[4 + (_i / 6 | 0)] |= keyBits[28 + (PC2[_i + 24] - 1 + bitShift) % 28] << 31 - _i % 6;
            }

            // Since each subkey is applied to an expanded 32-bit input,
            // the subkey can be broken into 8 values scaled to 32-bits,
            // which allows the key to be used without expansion
            subKey[0] = subKey[0] << 1 | subKey[0] >>> 31;
            for (var _i2 = 1; _i2 < 7; _i2 += 1) {
              subKey[_i2] >>>= (_i2 - 1) * 4 + 3;
            }
            subKey[7] = subKey[7] << 5 | subKey[7] >>> 27;
          }

          // Compute inverse subkeys
          this._invSubKeys = [];
          var invSubKeys = this._invSubKeys;
          for (var _i3 = 0; _i3 < 16; _i3 += 1) {
            invSubKeys[_i3] = subKeys[15 - _i3];
          }
        };
        _proto.encryptBlock = function encryptBlock(M, offset) {
          this._doCryptBlock(M, offset, this._subKeys);
        };
        _proto.decryptBlock = function decryptBlock(M, offset) {
          this._doCryptBlock(M, offset, this._invSubKeys);
        };
        _proto._doCryptBlock = function _doCryptBlock(M, offset, subKeys) {
          var _M = M;

          // Get input
          this._lBlock = M[offset];
          this._rBlock = M[offset + 1];

          // Initial permutation
          exchangeLR.call(this, 4, 0x0f0f0f0f);
          exchangeLR.call(this, 16, 0x0000ffff);
          exchangeRL.call(this, 2, 0x33333333);
          exchangeRL.call(this, 8, 0x00ff00ff);
          exchangeLR.call(this, 1, 0x55555555);

          // Rounds
          for (var round = 0; round < 16; round += 1) {
            // Shortcuts
            var subKey = subKeys[round];
            var lBlock = this._lBlock;
            var rBlock = this._rBlock;

            // Feistel function
            var f = 0;
            for (var i = 0; i < 8; i += 1) {
              f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];
            }
            this._lBlock = rBlock;
            this._rBlock = lBlock ^ f;
          }

          // Undo swap from last round
          var t = this._lBlock;
          this._lBlock = this._rBlock;
          this._rBlock = t;

          // Final permutation
          exchangeLR.call(this, 1, 0x55555555);
          exchangeRL.call(this, 8, 0x00ff00ff);
          exchangeRL.call(this, 2, 0x33333333);
          exchangeLR.call(this, 16, 0x0000ffff);
          exchangeLR.call(this, 4, 0x0f0f0f0f);

          // Set output
          _M[offset] = this._lBlock;
          _M[offset + 1] = this._rBlock;
        };
        return DESAlgo;
      }(BlockCipher));
      DESAlgo.keySize = 64 / 32;
      DESAlgo.ivSize = 64 / 32;
      // blickSize is an instance field and should set in constructor.

      /**
       * Shortcut functions to the cipher's object interface.
       *
       * @example
       *
       *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);
       *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);
       */
      var DES = exports('DES', BlockCipher._createHelper(DESAlgo));

      /**
       * Triple-DES block cipher algorithm.
       */
      var TripleDESAlgo = exports('TripleDESAlgo', /*#__PURE__*/function (_BlockCipher2) {
        _inheritsLoose(TripleDESAlgo, _BlockCipher2);
        function TripleDESAlgo() {
          return _BlockCipher2.apply(this, arguments) || this;
        }
        var _proto2 = TripleDESAlgo.prototype;
        _proto2._doReset = function _doReset() {
          // Shortcuts
          var key = this._key;
          var keyWords = key.words;
          // Make sure the key length is valid (64, 128 or >= 192 bit)
          if (keyWords.length !== 2 && keyWords.length !== 4 && keyWords.length < 6) {
            throw new Error('Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.');
          }

          // Extend the key according to the keying options defined in 3DES standard
          var key1 = keyWords.slice(0, 2);
          var key2 = keyWords.length < 4 ? keyWords.slice(0, 2) : keyWords.slice(2, 4);
          var key3 = keyWords.length < 6 ? keyWords.slice(0, 2) : keyWords.slice(4, 6);

          // Create DES instances
          this._des1 = DESAlgo.createEncryptor(WordArray.create(key1));
          this._des2 = DESAlgo.createEncryptor(WordArray.create(key2));
          this._des3 = DESAlgo.createEncryptor(WordArray.create(key3));
        };
        _proto2.encryptBlock = function encryptBlock(M, offset) {
          this._des1.encryptBlock(M, offset);
          this._des2.decryptBlock(M, offset);
          this._des3.encryptBlock(M, offset);
        };
        _proto2.decryptBlock = function decryptBlock(M, offset) {
          this._des3.decryptBlock(M, offset);
          this._des2.encryptBlock(M, offset);
          this._des1.decryptBlock(M, offset);
        };
        return TripleDESAlgo;
      }(BlockCipher));
      TripleDESAlgo.keySize = 192 / 32;
      TripleDESAlgo.ivSize = 64 / 32;
      // blickSize is an instance field and should set in constructor.

      /**
       * Shortcut functions to the cipher's object interface.
       *
       * @example
       *
       *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);
       *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);
       */
      var TripleDES = exports('TripleDES', BlockCipher._createHelper(TripleDESAlgo));
    }
  };
});

System.register("chunks:///_virtual/try-to-string.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $String = String;
        module.exports = function (argument) {
          try {
            return $String(argument);
          } catch (error) {
            return 'Object';
          }
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/tslib.es6.mjs", [], function (exports) {
  return {
    execute: function () {
      exports({
        __awaiter: __awaiter,
        __extends: __extends,
        __generator: __generator
      });

      /******************************************************************************
      Copyright (c) Microsoft Corporation.
       Permission to use, copy, modify, and/or distribute this software for any
      purpose with or without fee is hereby granted.
       THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
      REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
      AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
      INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
      LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
      OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
      PERFORMANCE OF THIS SOFTWARE.
      ***************************************************************************** */
      /* global Reflect, Promise, SuppressedError, Symbol */

      var _extendStatics = function extendStatics(d, b) {
        _extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function (d, b) {
          d.__proto__ = b;
        } || function (d, b) {
          for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };
        return _extendStatics(d, b);
      };
      function __extends(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        _extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      }
      var _assign = exports('__assign', function __assign() {
        _assign = exports('__assign', Object.assign || function __assign(t) {
          for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
          }
          return t;
        });
        return _assign.apply(this, arguments);
      });
      function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) {
          return value instanceof P ? value : new P(function (resolve) {
            resolve(value);
          });
        }
        return new (P || (P = Promise))(function (resolve, reject) {
          function fulfilled(value) {
            try {
              step(generator.next(value));
            } catch (e) {
              reject(e);
            }
          }
          function rejected(value) {
            try {
              step(generator["throw"](value));
            } catch (e) {
              reject(e);
            }
          }
          function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      }
      function __generator(thisArg, body) {
        var _ = {
            label: 0,
            sent: function sent() {
              if (t[0] & 1) throw t[1];
              return t[1];
            },
            trys: [],
            ops: []
          },
          f,
          y,
          t,
          g;
        return g = {
          next: verb(0),
          "throw": verb(1),
          "return": verb(2)
        }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
          return this;
        }), g;
        function verb(n) {
          return function (v) {
            return step([n, v]);
          };
        }
        function step(op) {
          if (f) throw new TypeError("Generator is already executing.");
          while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;
              case 4:
                _.label++;
                return {
                  value: op[1],
                  done: false
                };
              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;
              case 7:
                op = _.ops.pop();
                _.trys.pop();
                continue;
              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }
                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }
                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }
                if (t && _.label < t[2]) {
                  _.label = t[2];
                  _.ops.push(op);
                  break;
                }
                if (t[2]) _.ops.pop();
                _.trys.pop();
                continue;
            }
            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }
          if (op[0] & 5) throw op[1];
          return {
            value: op[0] ? op[1] : void 0,
            done: true
          };
        }
      }
      var _SuppressedError = typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
        var e = new Error(message);
        return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
      };
    }
  };
});

System.register("chunks:///_virtual/typed-array-constructor.js", ['./cjs-loader.mjs', './export.js', './global.js', './function-call.js', './descriptors.js', './typed-array-constructors-require-wrappers.js', './array-buffer-view-core.js', './array-buffer.js', './an-instance.js', './create-property-descriptor.js', './create-non-enumerable-property.js', './is-integral-number.js', './to-length.js', './to-index.js', './to-offset.js', './to-uint8-clamped.js', './to-property-key.js', './has-own-property.js', './classof.js', './is-object.js', './is-symbol.js', './object-create.js', './object-is-prototype-of.js', './object-set-prototype-of.js', './object-get-own-property-names.js', './typed-array-from.js', './array-iteration.js', './set-species.js', './define-built-in-accessor.js', './object-define-property.js', './object-get-own-property-descriptor.js', './internal-state.js', './inherit-if-required.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8, __cjsMetaURL$9, __cjsMetaURL$a, __cjsMetaURL$b, __cjsMetaURL$c, __cjsMetaURL$d, __cjsMetaURL$e, __cjsMetaURL$f, __cjsMetaURL$g, __cjsMetaURL$h, __cjsMetaURL$i, __cjsMetaURL$j, __cjsMetaURL$k, __cjsMetaURL$l, __cjsMetaURL$m, __cjsMetaURL$n, __cjsMetaURL$o, __cjsMetaURL$p, __cjsMetaURL$q, __cjsMetaURL$r, __cjsMetaURL$s, __cjsMetaURL$t, __cjsMetaURL$u, __cjsMetaURL$v, __cjsMetaURL$w;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$9 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$a = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$b = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$c = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$d = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$e = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$f = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$g = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$h = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$i = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$j = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$k = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$l = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$m = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$n = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$o = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$p = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$q = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$r = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$s = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$t = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$u = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$v = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$w = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var global = require('../internals/global');
        var call = require('../internals/function-call');
        var DESCRIPTORS = require('../internals/descriptors');
        var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = require('../internals/typed-array-constructors-require-wrappers');
        var ArrayBufferViewCore = require('../internals/array-buffer-view-core');
        var ArrayBufferModule = require('../internals/array-buffer');
        var anInstance = require('../internals/an-instance');
        var createPropertyDescriptor = require('../internals/create-property-descriptor');
        var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');
        var isIntegralNumber = require('../internals/is-integral-number');
        var toLength = require('../internals/to-length');
        var toIndex = require('../internals/to-index');
        var toOffset = require('../internals/to-offset');
        var toUint8Clamped = require('../internals/to-uint8-clamped');
        var toPropertyKey = require('../internals/to-property-key');
        var hasOwn = require('../internals/has-own-property');
        var classof = require('../internals/classof');
        var isObject = require('../internals/is-object');
        var isSymbol = require('../internals/is-symbol');
        var create = require('../internals/object-create');
        var isPrototypeOf = require('../internals/object-is-prototype-of');
        var setPrototypeOf = require('../internals/object-set-prototype-of');
        var getOwnPropertyNames = require('../internals/object-get-own-property-names').f;
        var typedArrayFrom = require('../internals/typed-array-from');
        var forEach = require('../internals/array-iteration').forEach;
        var setSpecies = require('../internals/set-species');
        var defineBuiltInAccessor = require('../internals/define-built-in-accessor');
        var definePropertyModule = require('../internals/object-define-property');
        var getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');
        var InternalStateModule = require('../internals/internal-state');
        var inheritIfRequired = require('../internals/inherit-if-required');
        var getInternalState = InternalStateModule.get;
        var setInternalState = InternalStateModule.set;
        var enforceInternalState = InternalStateModule.enforce;
        var nativeDefineProperty = definePropertyModule.f;
        var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
        var RangeError = global.RangeError;
        var ArrayBuffer = ArrayBufferModule.ArrayBuffer;
        var ArrayBufferPrototype = ArrayBuffer.prototype;
        var DataView = ArrayBufferModule.DataView;
        var NATIVE_ARRAY_BUFFER_VIEWS = ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;
        var TYPED_ARRAY_TAG = ArrayBufferViewCore.TYPED_ARRAY_TAG;
        var TypedArray = ArrayBufferViewCore.TypedArray;
        var TypedArrayPrototype = ArrayBufferViewCore.TypedArrayPrototype;
        var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;
        var isTypedArray = ArrayBufferViewCore.isTypedArray;
        var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
        var WRONG_LENGTH = 'Wrong length';
        var fromList = function fromList(C, list) {
          aTypedArrayConstructor(C);
          var index = 0;
          var length = list.length;
          var result = new C(length);
          while (length > index) result[index] = list[index++];
          return result;
        };
        var addGetter = function addGetter(it, key) {
          defineBuiltInAccessor(it, key, {
            configurable: true,
            get: function get() {
              return getInternalState(this)[key];
            }
          });
        };
        var isArrayBuffer = function isArrayBuffer(it) {
          var klass;
          return isPrototypeOf(ArrayBufferPrototype, it) || (klass = classof(it)) === 'ArrayBuffer' || klass === 'SharedArrayBuffer';
        };
        var isTypedArrayIndex = function isTypedArrayIndex(target, key) {
          return isTypedArray(target) && !isSymbol(key) && key in target && isIntegralNumber(+key) && key >= 0;
        };
        var wrappedGetOwnPropertyDescriptor = function getOwnPropertyDescriptor(target, key) {
          key = toPropertyKey(key);
          return isTypedArrayIndex(target, key) ? createPropertyDescriptor(2, target[key]) : nativeGetOwnPropertyDescriptor(target, key);
        };
        var wrappedDefineProperty = function defineProperty(target, key, descriptor) {
          key = toPropertyKey(key);
          if (isTypedArrayIndex(target, key) && isObject(descriptor) && hasOwn(descriptor, 'value') && !hasOwn(descriptor, 'get') && !hasOwn(descriptor, 'set')
          // TODO: add validation descriptor w/o calling accessors
          && !descriptor.configurable && (!hasOwn(descriptor, 'writable') || descriptor.writable) && (!hasOwn(descriptor, 'enumerable') || descriptor.enumerable)) {
            target[key] = descriptor.value;
            return target;
          }
          return nativeDefineProperty(target, key, descriptor);
        };
        if (DESCRIPTORS) {
          if (!NATIVE_ARRAY_BUFFER_VIEWS) {
            getOwnPropertyDescriptorModule.f = wrappedGetOwnPropertyDescriptor;
            definePropertyModule.f = wrappedDefineProperty;
            addGetter(TypedArrayPrototype, 'buffer');
            addGetter(TypedArrayPrototype, 'byteOffset');
            addGetter(TypedArrayPrototype, 'byteLength');
            addGetter(TypedArrayPrototype, 'length');
          }
          $({
            target: 'Object',
            stat: true,
            forced: !NATIVE_ARRAY_BUFFER_VIEWS
          }, {
            getOwnPropertyDescriptor: wrappedGetOwnPropertyDescriptor,
            defineProperty: wrappedDefineProperty
          });
          module.exports = function (TYPE, wrapper, CLAMPED) {
            var BYTES = TYPE.match(/\d+/)[0] / 8;
            var CONSTRUCTOR_NAME = TYPE + (CLAMPED ? 'Clamped' : '') + 'Array';
            var GETTER = 'get' + TYPE;
            var SETTER = 'set' + TYPE;
            var NativeTypedArrayConstructor = global[CONSTRUCTOR_NAME];
            var TypedArrayConstructor = NativeTypedArrayConstructor;
            var TypedArrayConstructorPrototype = TypedArrayConstructor && TypedArrayConstructor.prototype;
            var exported = {};
            var getter = function getter(that, index) {
              var data = getInternalState(that);
              return data.view[GETTER](index * BYTES + data.byteOffset, true);
            };
            var setter = function setter(that, index, value) {
              var data = getInternalState(that);
              data.view[SETTER](index * BYTES + data.byteOffset, CLAMPED ? toUint8Clamped(value) : value, true);
            };
            var addElement = function addElement(that, index) {
              nativeDefineProperty(that, index, {
                get: function get() {
                  return getter(this, index);
                },
                set: function set(value) {
                  return setter(this, index, value);
                },
                enumerable: true
              });
            };
            if (!NATIVE_ARRAY_BUFFER_VIEWS) {
              TypedArrayConstructor = wrapper(function (that, data, offset, $length) {
                anInstance(that, TypedArrayConstructorPrototype);
                var index = 0;
                var byteOffset = 0;
                var buffer, byteLength, length;
                if (!isObject(data)) {
                  length = toIndex(data);
                  byteLength = length * BYTES;
                  buffer = new ArrayBuffer(byteLength);
                } else if (isArrayBuffer(data)) {
                  buffer = data;
                  byteOffset = toOffset(offset, BYTES);
                  var $len = data.byteLength;
                  if ($length === undefined) {
                    if ($len % BYTES) throw RangeError(WRONG_LENGTH);
                    byteLength = $len - byteOffset;
                    if (byteLength < 0) throw RangeError(WRONG_LENGTH);
                  } else {
                    byteLength = toLength($length) * BYTES;
                    if (byteLength + byteOffset > $len) throw RangeError(WRONG_LENGTH);
                  }
                  length = byteLength / BYTES;
                } else if (isTypedArray(data)) {
                  return fromList(TypedArrayConstructor, data);
                } else {
                  return call(typedArrayFrom, TypedArrayConstructor, data);
                }
                setInternalState(that, {
                  buffer: buffer,
                  byteOffset: byteOffset,
                  byteLength: byteLength,
                  length: length,
                  view: new DataView(buffer)
                });
                while (index < length) addElement(that, index++);
              });
              if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);
              TypedArrayConstructorPrototype = TypedArrayConstructor.prototype = create(TypedArrayPrototype);
            } else if (TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS) {
              TypedArrayConstructor = wrapper(function (dummy, data, typedArrayOffset, $length) {
                anInstance(dummy, TypedArrayConstructorPrototype);
                return inheritIfRequired(function () {
                  if (!isObject(data)) return new NativeTypedArrayConstructor(toIndex(data));
                  if (isArrayBuffer(data)) return $length !== undefined ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES), $length) : typedArrayOffset !== undefined ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES)) : new NativeTypedArrayConstructor(data);
                  if (isTypedArray(data)) return fromList(TypedArrayConstructor, data);
                  return call(typedArrayFrom, TypedArrayConstructor, data);
                }(), dummy, TypedArrayConstructor);
              });
              if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);
              forEach(getOwnPropertyNames(NativeTypedArrayConstructor), function (key) {
                if (!(key in TypedArrayConstructor)) {
                  createNonEnumerableProperty(TypedArrayConstructor, key, NativeTypedArrayConstructor[key]);
                }
              });
              TypedArrayConstructor.prototype = TypedArrayConstructorPrototype;
            }
            if (TypedArrayConstructorPrototype.constructor !== TypedArrayConstructor) {
              createNonEnumerableProperty(TypedArrayConstructorPrototype, 'constructor', TypedArrayConstructor);
            }
            enforceInternalState(TypedArrayConstructorPrototype).TypedArrayConstructor = TypedArrayConstructor;
            if (TYPED_ARRAY_TAG) {
              createNonEnumerableProperty(TypedArrayConstructorPrototype, TYPED_ARRAY_TAG, CONSTRUCTOR_NAME);
            }
            var FORCED = TypedArrayConstructor !== NativeTypedArrayConstructor;
            exported[CONSTRUCTOR_NAME] = TypedArrayConstructor;
            $({
              global: true,
              constructor: true,
              forced: FORCED,
              sham: !NATIVE_ARRAY_BUFFER_VIEWS
            }, exported);
            if (!(BYTES_PER_ELEMENT in TypedArrayConstructor)) {
              createNonEnumerableProperty(TypedArrayConstructor, BYTES_PER_ELEMENT, BYTES);
            }
            if (!(BYTES_PER_ELEMENT in TypedArrayConstructorPrototype)) {
              createNonEnumerableProperty(TypedArrayConstructorPrototype, BYTES_PER_ELEMENT, BYTES);
            }
            setSpecies(CONSTRUCTOR_NAME);
          };
        } else module.exports = function () {/* empty */};

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/global': __cjsMetaURL$2,
          '../internals/function-call': __cjsMetaURL$3,
          '../internals/descriptors': __cjsMetaURL$4,
          '../internals/typed-array-constructors-require-wrappers': __cjsMetaURL$5,
          '../internals/array-buffer-view-core': __cjsMetaURL$6,
          '../internals/array-buffer': __cjsMetaURL$7,
          '../internals/an-instance': __cjsMetaURL$8,
          '../internals/create-property-descriptor': __cjsMetaURL$9,
          '../internals/create-non-enumerable-property': __cjsMetaURL$a,
          '../internals/is-integral-number': __cjsMetaURL$b,
          '../internals/to-length': __cjsMetaURL$c,
          '../internals/to-index': __cjsMetaURL$d,
          '../internals/to-offset': __cjsMetaURL$e,
          '../internals/to-uint8-clamped': __cjsMetaURL$f,
          '../internals/to-property-key': __cjsMetaURL$g,
          '../internals/has-own-property': __cjsMetaURL$h,
          '../internals/classof': __cjsMetaURL$i,
          '../internals/is-object': __cjsMetaURL$j,
          '../internals/is-symbol': __cjsMetaURL$k,
          '../internals/object-create': __cjsMetaURL$l,
          '../internals/object-is-prototype-of': __cjsMetaURL$m,
          '../internals/object-set-prototype-of': __cjsMetaURL$n,
          '../internals/object-get-own-property-names': __cjsMetaURL$o,
          '../internals/typed-array-from': __cjsMetaURL$p,
          '../internals/array-iteration': __cjsMetaURL$q,
          '../internals/set-species': __cjsMetaURL$r,
          '../internals/define-built-in-accessor': __cjsMetaURL$s,
          '../internals/object-define-property': __cjsMetaURL$t,
          '../internals/object-get-own-property-descriptor': __cjsMetaURL$u,
          '../internals/internal-state': __cjsMetaURL$v,
          '../internals/inherit-if-required': __cjsMetaURL$w
        };
      });
    }
  };
});

System.register("chunks:///_virtual/typed-array-constructors-require-wrappers.js", ['./cjs-loader.mjs', './global.js', './fails.js', './check-correctness-of-iteration.js', './array-buffer-view-core.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        /* eslint-disable no-new -- required for testing */
        var global = require('../internals/global');
        var fails = require('../internals/fails');
        var checkCorrectnessOfIteration = require('../internals/check-correctness-of-iteration');
        var NATIVE_ARRAY_BUFFER_VIEWS = require('../internals/array-buffer-view-core').NATIVE_ARRAY_BUFFER_VIEWS;
        var ArrayBuffer = global.ArrayBuffer;
        var Int8Array = global.Int8Array;
        module.exports = !NATIVE_ARRAY_BUFFER_VIEWS || !fails(function () {
          Int8Array(1);
        }) || !fails(function () {
          new Int8Array(-1);
        }) || !checkCorrectnessOfIteration(function (iterable) {
          new Int8Array();
          new Int8Array(null);
          new Int8Array(1.5);
          new Int8Array(iterable);
        }, true) || fails(function () {
          // Safari (11+) bug - a reason why even Safari 13 should load a typed array polyfill
          return new Int8Array(new ArrayBuffer(2), 1, undefined).length !== 1;
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/global': __cjsMetaURL$1,
          '../internals/fails': __cjsMetaURL$2,
          '../internals/check-correctness-of-iteration': __cjsMetaURL$3,
          '../internals/array-buffer-view-core': __cjsMetaURL$4
        };
      });
    }
  };
});

System.register("chunks:///_virtual/typed-array-from-species-and-list.js", ['./cjs-loader.mjs', './array-from-constructor-and-list.js', './typed-array-species-constructor.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var arrayFromConstructorAndList = require('../internals/array-from-constructor-and-list');
        var typedArraySpeciesConstructor = require('../internals/typed-array-species-constructor');
        module.exports = function (instance, list) {
          return arrayFromConstructorAndList(typedArraySpeciesConstructor(instance), list);
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/array-from-constructor-and-list': __cjsMetaURL$1,
          '../internals/typed-array-species-constructor': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/typed-array-from.js", ['./cjs-loader.mjs', './function-bind-context.js', './function-call.js', './a-constructor.js', './to-object.js', './length-of-array-like.js', './get-iterator.js', './get-iterator-method.js', './is-array-iterator-method.js', './is-big-int-array.js', './array-buffer-view-core.js', './to-big-int.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6, __cjsMetaURL$7, __cjsMetaURL$8, __cjsMetaURL$9, __cjsMetaURL$a, __cjsMetaURL$b;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$7 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$8 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$9 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$a = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$b = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var bind = require('../internals/function-bind-context');
        var call = require('../internals/function-call');
        var aConstructor = require('../internals/a-constructor');
        var toObject = require('../internals/to-object');
        var lengthOfArrayLike = require('../internals/length-of-array-like');
        var getIterator = require('../internals/get-iterator');
        var getIteratorMethod = require('../internals/get-iterator-method');
        var isArrayIteratorMethod = require('../internals/is-array-iterator-method');
        var isBigIntArray = require('../internals/is-big-int-array');
        var aTypedArrayConstructor = require('../internals/array-buffer-view-core').aTypedArrayConstructor;
        var toBigInt = require('../internals/to-big-int');
        module.exports = function from(source /* , mapfn, thisArg */) {
          var C = aConstructor(this);
          var O = toObject(source);
          var argumentsLength = arguments.length;
          var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
          var mapping = mapfn !== undefined;
          var iteratorMethod = getIteratorMethod(O);
          var i, length, result, thisIsBigIntArray, value, step, iterator, next;
          if (iteratorMethod && !isArrayIteratorMethod(iteratorMethod)) {
            iterator = getIterator(O, iteratorMethod);
            next = iterator.next;
            O = [];
            while (!(step = call(next, iterator)).done) {
              O.push(step.value);
            }
          }
          if (mapping && argumentsLength > 2) {
            mapfn = bind(mapfn, arguments[2]);
          }
          length = lengthOfArrayLike(O);
          result = new (aTypedArrayConstructor(C))(length);
          thisIsBigIntArray = isBigIntArray(result);
          for (i = 0; length > i; i++) {
            value = mapping ? mapfn(O[i], i) : O[i];
            // FF30- typed arrays doesn't properly convert objects to typed array values
            result[i] = thisIsBigIntArray ? toBigInt(value) : +value;
          }
          return result;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-bind-context': __cjsMetaURL$1,
          '../internals/function-call': __cjsMetaURL$2,
          '../internals/a-constructor': __cjsMetaURL$3,
          '../internals/to-object': __cjsMetaURL$4,
          '../internals/length-of-array-like': __cjsMetaURL$5,
          '../internals/get-iterator': __cjsMetaURL$6,
          '../internals/get-iterator-method': __cjsMetaURL$7,
          '../internals/is-array-iterator-method': __cjsMetaURL$8,
          '../internals/is-big-int-array': __cjsMetaURL$9,
          '../internals/array-buffer-view-core': __cjsMetaURL$a,
          '../internals/to-big-int': __cjsMetaURL$b
        };
      });
    }
  };
});

System.register("chunks:///_virtual/typed-array-species-constructor.js", ['./cjs-loader.mjs', './array-buffer-view-core.js', './species-constructor.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var ArrayBufferViewCore = require('../internals/array-buffer-view-core');
        var speciesConstructor = require('../internals/species-constructor');
        var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;
        var getTypedArrayConstructor = ArrayBufferViewCore.getTypedArrayConstructor;

        // a part of `TypedArraySpeciesCreate` abstract operation
        // https://tc39.es/ecma262/#typedarray-species-create
        module.exports = function (originalArray) {
          return aTypedArrayConstructor(speciesConstructor(originalArray, getTypedArrayConstructor(originalArray)));
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/array-buffer-view-core': __cjsMetaURL$1,
          '../internals/species-constructor': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/uid.js", ['./cjs-loader.mjs', './function-uncurry-this.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var uncurryThis = require('../internals/function-uncurry-this');
        var id = 0;
        var postfix = Math.random();
        var toString = uncurryThis(1.0.toString);
        module.exports = function (key) {
          return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/function-uncurry-this': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/use-symbol-as-uid.js", ['./cjs-loader.mjs', './symbol-constructor-detection.js'], function (exports, module) {
  var loader, __cjsMetaURL$1;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        /* eslint-disable es/no-symbol -- required for testing */
        var NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');
        module.exports = NATIVE_SYMBOL && !Symbol.sham && typeof Symbol.iterator == 'symbol';

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/symbol-constructor-detection': __cjsMetaURL$1
        };
      });
    }
  };
});

System.register("chunks:///_virtual/v8-prototype-define-bug.js", ['./cjs-loader.mjs', './descriptors.js', './fails.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var DESCRIPTORS = require('../internals/descriptors');
        var fails = require('../internals/fails');

        // V8 ~ Chrome 36-
        // https://bugs.chromium.org/p/v8/issues/detail?id=3334
        module.exports = DESCRIPTORS && fails(function () {
          // eslint-disable-next-line es/no-object-defineproperty -- required for testing
          return Object.defineProperty(function () {/* empty */}, 'prototype', {
            value: 42,
            writable: false
          }).prototype !== 42;
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/descriptors': __cjsMetaURL$1,
          '../internals/fails': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/validate-arguments-length.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $TypeError = TypeError;
        module.exports = function (passed, required) {
          if (passed < required) throw $TypeError('Not enough arguments');
          return passed;
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/weak-map-basic-detection.js", ['./cjs-loader.mjs', './global.js', './is-callable.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var global = require('../internals/global');
        var isCallable = require('../internals/is-callable');
        var WeakMap = global.WeakMap;
        module.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/global': __cjsMetaURL$1,
          '../internals/is-callable': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/web.dom-collections.for-each.js", ['./cjs-loader.mjs', './global.js', './dom-iterables.js', './dom-token-list-prototype.js', './array-for-each.js', './create-non-enumerable-property.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var global = require('../internals/global');
        var DOMIterables = require('../internals/dom-iterables');
        var DOMTokenListPrototype = require('../internals/dom-token-list-prototype');
        var forEach = require('../internals/array-for-each');
        var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');
        var handlePrototype = function handlePrototype(CollectionPrototype) {
          // some Chrome versions have non-configurable methods on DOMTokenList
          if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {
            createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);
          } catch (error) {
            CollectionPrototype.forEach = forEach;
          }
        };
        for (var COLLECTION_NAME in DOMIterables) {
          if (DOMIterables[COLLECTION_NAME]) {
            handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype);
          }
        }
        handlePrototype(DOMTokenListPrototype);

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/global': __cjsMetaURL$1,
          '../internals/dom-iterables': __cjsMetaURL$2,
          '../internals/dom-token-list-prototype': __cjsMetaURL$3,
          '../internals/array-for-each': __cjsMetaURL$4,
          '../internals/create-non-enumerable-property': __cjsMetaURL$5
        };
      });
    }
  };
});

System.register("chunks:///_virtual/web.dom-collections.for-each.mjs_cjs=&original=.js", ['./web.dom-collections.for-each.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './web.dom-collections.for-each.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./web.dom-collections.for-each.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/web.dom-collections.iterator.js", ['./cjs-loader.mjs', './global.js', './dom-iterables.js', './dom-token-list-prototype.js', './es.array.iterator.js', './create-non-enumerable-property.js', './well-known-symbol.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var global = require('../internals/global');
        var DOMIterables = require('../internals/dom-iterables');
        var DOMTokenListPrototype = require('../internals/dom-token-list-prototype');
        var ArrayIteratorMethods = require('../modules/es.array.iterator');
        var createNonEnumerableProperty = require('../internals/create-non-enumerable-property');
        var wellKnownSymbol = require('../internals/well-known-symbol');
        var ITERATOR = wellKnownSymbol('iterator');
        var TO_STRING_TAG = wellKnownSymbol('toStringTag');
        var ArrayValues = ArrayIteratorMethods.values;
        var handlePrototype = function handlePrototype(CollectionPrototype, COLLECTION_NAME) {
          if (CollectionPrototype) {
            // some Chrome versions have non-configurable methods on DOMTokenList
            if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
              createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
            } catch (error) {
              CollectionPrototype[ITERATOR] = ArrayValues;
            }
            if (!CollectionPrototype[TO_STRING_TAG]) {
              createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
            }
            if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
              // some Chrome versions have non-configurable methods on DOMTokenList
              if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
                createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
              } catch (error) {
                CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
              }
            }
          }
        };
        for (var COLLECTION_NAME in DOMIterables) {
          handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype, COLLECTION_NAME);
        }
        handlePrototype(DOMTokenListPrototype, 'DOMTokenList');

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/global': __cjsMetaURL$1,
          '../internals/dom-iterables': __cjsMetaURL$2,
          '../internals/dom-token-list-prototype': __cjsMetaURL$3,
          '../modules/es.array.iterator': __cjsMetaURL$4,
          '../internals/create-non-enumerable-property': __cjsMetaURL$5,
          '../internals/well-known-symbol': __cjsMetaURL$6
        };
      });
    }
  };
});

System.register("chunks:///_virtual/web.dom-collections.iterator.mjs_cjs=&original=.js", ['./web.dom-collections.iterator.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './web.dom-collections.iterator.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./web.dom-collections.iterator.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/web.url.to-json.js", ['./cjs-loader.mjs', './export.js', './function-call.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var $ = require('../internals/export');
        var call = require('../internals/function-call');

        // `URL.prototype.toJSON` method
        // https://url.spec.whatwg.org/#dom-url-tojson
        $({
          target: 'URL',
          proto: true,
          enumerable: true
        }, {
          toJSON: function toJSON() {
            return call(URL.prototype.toString, this);
          }
        });

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/export': __cjsMetaURL$1,
          '../internals/function-call': __cjsMetaURL$2
        };
      });
    }
  };
});

System.register("chunks:///_virtual/web.url.to-json.mjs_cjs=&original=.js", ['./web.url.to-json.js', './cjs-loader.mjs'], function (exports, module) {
  var __cjsMetaURL, loader;
  return {
    setters: [function (module) {
      __cjsMetaURL = module.__cjsMetaURL;
      exports('__cjsMetaURL', module.__cjsMetaURL);
    }, function (module) {
      loader = module.default;
    }],
    execute: function () {
      // I am the facade module who provides access to the CommonJS module './web.url.to-json.js'~
      if (!__cjsMetaURL) {
        loader.throwInvalidWrapper('./web.url.to-json.js', module.meta.url);
      }
      loader.require(__cjsMetaURL);
    }
  };
});

System.register("chunks:///_virtual/well-known-symbol.js", ['./cjs-loader.mjs', './global.js', './shared.js', './has-own-property.js', './uid.js', './symbol-constructor-detection.js', './use-symbol-as-uid.js'], function (exports, module) {
  var loader, __cjsMetaURL$1, __cjsMetaURL$2, __cjsMetaURL$3, __cjsMetaURL$4, __cjsMetaURL$5, __cjsMetaURL$6;
  return {
    setters: [function (module) {
      loader = module.default;
    }, function (module) {
      __cjsMetaURL$1 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$2 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$3 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$4 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$5 = module.__cjsMetaURL;
    }, function (module) {
      __cjsMetaURL$6 = module.__cjsMetaURL;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        var global = require('../internals/global');
        var shared = require('../internals/shared');
        var hasOwn = require('../internals/has-own-property');
        var uid = require('../internals/uid');
        var NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');
        var USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');
        var Symbol = global.Symbol;
        var WellKnownSymbolsStore = shared('wks');
        var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;
        module.exports = function (name) {
          if (!hasOwn(WellKnownSymbolsStore, name)) {
            WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name) ? Symbol[name] : createWellKnownSymbol('Symbol.' + name);
          }
          return WellKnownSymbolsStore[name];
        };

        // #endregion ORIGINAL CODE

        module.exports;
      }, function () {
        return {
          '../internals/global': __cjsMetaURL$1,
          '../internals/shared': __cjsMetaURL$2,
          '../internals/has-own-property': __cjsMetaURL$3,
          '../internals/uid': __cjsMetaURL$4,
          '../internals/symbol-constructor-detection': __cjsMetaURL$5,
          '../internals/use-symbol-as-uid': __cjsMetaURL$6
        };
      });
    }
  };
});

System.register("chunks:///_virtual/whitespaces.js", ['./cjs-loader.mjs'], function (exports, module) {
  var loader;
  return {
    setters: [function (module) {
      loader = module.default;
    }],
    execute: function () {
      var __cjsMetaURL = exports('__cjsMetaURL', module.meta.url);
      loader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {
        // a string of all valid unicode whitespaces
        module.exports = "\t\n\x0B\f\r \xA0\u1680\u2000\u2001\u2002" + "\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF";

        // #endregion ORIGINAL CODE

        module.exports;
      }, {});
    }
  };
});

System.register("chunks:///_virtual/x64-core.js", ['./rollupPluginModLoBabelHelpers.js', './core.js'], function (exports) {
  var _inheritsLoose, Base, WordArray;
  return {
    setters: [function (module) {
      _inheritsLoose = module.inheritsLoose;
    }, function (module) {
      Base = module.Base;
      WordArray = module.WordArray;
    }],
    execute: function () {
      var X32WordArray = WordArray;

      /**
       * A 64-bit word.
       */
      var X64Word = exports('X64Word', /*#__PURE__*/function (_Base) {
        _inheritsLoose(X64Word, _Base);
        /**
         * Initializes a newly created 64-bit word.
         *
         * @param {number} high The high 32 bits.
         * @param {number} low The low 32 bits.
         *
         * @example
         *
         *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);
         */
        function X64Word(high, low) {
          var _this;
          _this = _Base.call(this) || this;
          _this.high = high;
          _this.low = low;
          return _this;
        }
        return X64Word;
      }(Base));

      /**
       * An array of 64-bit words.
       *
       * @property {Array} words The array of CryptoJS.x64.Word objects.
       * @property {number} sigBytes The number of significant bytes in this word array.
       */
      var X64WordArray = exports('X64WordArray', /*#__PURE__*/function (_Base2) {
        _inheritsLoose(X64WordArray, _Base2);
        /**
         * Initializes a newly created word array.
         *
         * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.
         * @param {number} sigBytes (Optional) The number of significant bytes in the words.
         *
         * @example
         *
         *     var wordArray = CryptoJS.x64.WordArray.create();
         *
         *     var wordArray = CryptoJS.x64.WordArray.create([
         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
         *     ]);
         *
         *     var wordArray = CryptoJS.x64.WordArray.create([
         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
         *     ], 10);
         */
        function X64WordArray(words, sigBytes) {
          var _this2;
          if (words === void 0) {
            words = [];
          }
          if (sigBytes === void 0) {
            sigBytes = words.length * 8;
          }
          _this2 = _Base2.call(this) || this;
          _this2.words = words;
          _this2.sigBytes = sigBytes;
          return _this2;
        }

        /**
         * Converts this 64-bit word array to a 32-bit word array.
         *
         * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.
         *
         * @example
         *
         *     var x32WordArray = x64WordArray.toX32();
         */
        var _proto = X64WordArray.prototype;
        _proto.toX32 = function toX32() {
          // Shortcuts
          var x64Words = this.words;
          var x64WordsLength = x64Words.length;

          // Convert
          var x32Words = [];
          for (var i = 0; i < x64WordsLength; i += 1) {
            var x64Word = x64Words[i];
            x32Words.push(x64Word.high);
            x32Words.push(x64Word.low);
          }
          return X32WordArray.create(x32Words, this.sigBytes);
        }

        /**
         * Creates a copy of this word array.
         *
         * @return {X64WordArray} The clone.
         *
         * @example
         *
         *     var clone = x64WordArray.clone();
         */;
        _proto.clone = function clone() {
          var clone = _Base2.prototype.clone.call(this);

          // Clone "words" array
          clone.words = this.words.slice(0);
          var words = clone.words;

          // Clone each X64Word object
          var wordsLength = words.length;
          for (var i = 0; i < wordsLength; i += 1) {
            words[i] = words[i].clone();
          }
          return clone;
        };
        return X64WordArray;
      }(Base));
    }
  };
});

} }; });