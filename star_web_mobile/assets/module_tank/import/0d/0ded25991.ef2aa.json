[1,["787I7i/sRNS7eKo6SzAIdo@f9941","0bTS1MydFJO7B9mi4fKQnv@f9941","7dWFW65RBOtYAy6pm1IMYs@f9941","7dj5uJT9FMn6OrOOx83tfK@f9941","9aHfuj03BEcY1Q74rQHwYV@0fab2","9aHfuj03BEcY1Q74rQHwYV@a30ec","9aHfuj03BEcY1Q74rQHwYV@fc066","9aHfuj03BEcY1Q74rQHwYV@16efd","f1KiPEuSRDIqJgPZgkKPHo@f9941","c5YvdlJJdNM6IMT0ozktFc@f9941","8734Sd3xVIfa7wWl6s/uCO","b3VsB6gO9GUr0Tpj9CcmaC","57+0qolMNCHIrH1Exs1Sl2","12CA1inC5HHrymNUvzaM/f","586/GI2elNIZrVlLiq1Pbm","d1HJbr2UNJ8YbGpBZ8UoiS","9aHfuj03BEcY1Q74rQHwYV@a5b16","29HcQaMBNCmZIsAPu9qf87"],["node","_spriteFrame","root","data","_parent","lblName","hpBar","followTarget","damageRoot","namesRoot","groundEffect","objectsRoot","scene","_customMaterial","tankPrefab","namePrefab","damageLabelPrefab","_effectAsset","destroyedState","normalState","lid","barrel","firePoint","bullet","efx"],[["cc.Node",["_name","_id","_active","_components","_prefab","_parent","_children","_lpos","_lscale","_lrot","_euler"],0,9,4,1,2,5,5,5,5],["cc.Sprite",["_sizeMode","_type","_useGrayscale","node","_spriteFrame","__prefab","_color","_customMaterial"],0,1,6,4,5,6],["cc.UITransform",["node","__prefab","_contentSize","_anchorPoint"],3,1,4,5,5],["cc.Node",["_name","_parent","_components","_lpos","_prefab","_lscale"],2,1,12,5,4,5],["cc.Label",["_string","_actualFontSize","_fontSize","_enableOutline","_cacheMode","_outlineWidth","node","__prefab","_color","_outlineColor"],-3,1,4,5,5],["cc.PrefabInfo",["fileId","instance","targetOverrides","nestedPrefabInstanceRoots","root","asset"],-1,1,1],["cc.Prefab",["_name"],2],["cc.CompPrefabInfo",["fileId"],2],["ed1f693B5ZAzr48dUvNXANX",["node","__prefab"],3,1,4],["cc.PrefabInfo",["root","asset","fileId","instance","nestedPrefabInstanceRoots","targetOverrides"],-3],["70dbarSbilHfrVZ77CvDOBA",["node","__prefab","hpBar","lblName"],3,1,4,1,1],["cc.EffectAsset",["_name","combinations","shaders","techniques"],-1],["cc.SceneAsset",["_name"],2],["cc.RenderRoot2D",["node"],3,1],["93845hnoKZPF4LEX3faqKr5",["node","objectsRoot","groundEffect","namesRoot","damageRoot","followTarget","tankPrefab","namePrefab","damageLabelPrefab"],3,1,1,1,1,1,1,6,6,6],["cc.Camera",["_projection","_orthoHeight","_far","_visibility","node","_color"],-1,1,5],["cc.Scene",["_name","_children","_prefab","_globals"],2,2,4,4],["cc.SceneGlobals",["ambient","shadows","_skybox","fog","octree","skin","lightProbeInfo","postSettings"],3,4,4,4,4,4,4,4,4],["cc.AmbientInfo",["_skyIllumLDR","_skyColorHDR","_skyColorLDR","_groundAlbedoLDR"],2,5,5,5],["cc.ShadowsInfo",["_enabled","_type","_shadowColor","_size"],1,5,5],["cc.SkyboxInfo",[],3],["cc.FogInfo",[],3],["cc.OctreeInfo",[],3],["cc.SkinInfo",["_enabled"],2],["cc.LightProbeInfo",[],3],["cc.PostSettingsInfo",[],3],["f705fWwQU9LILordSGQJXqx",["node"],3,1],["cc.Material",["_name","_props","_states","_defines"],-1],["d1b03Z5TBtCJYploSlGTOkK",["node","__prefab","firePoint","barrel","lid","normalState","destroyedState","bullet"],3,1,4,1,1,1,1,1,6],["a53885kGXFApaKZHdvb+kXu",["moveSpeed","lifeTime","node","__prefab","efx"],1,1,4,6]],[[2,0,2,1],[0,0,5,3,7,8,2],[1,3,4,1],[7,0,2],[5,0,1,2,3,4,5,5],[2,0,1,2,1],[2,0,1],[1,3,5,4,1],[0,0,5,3,2],[2,0,1,1],[6,0,2],[0,0,6,3,4,7,2],[0,0,5,3,4,7,8,2],[0,0,5,3,4,2],[0,0,5,6,3,4,2],[0,0,5,6,3,4,7,2],[1,0,3,5,6,4,2],[1,2,3,5,4,2],[0,0,3,4,2],[0,0,5,3,4,7,2],[0,0,6,3,2],[0,0,1,6,3,3],[0,0,5,6,3,2],[0,0,6,3,4,8,2],[0,0,2,5,6,3,4,3],[0,0,5,3,4,7,9,10,2],[0,0,5,6,3,4,7,9,10,2],[0,0,5,4,7,8,2],[3,0,1,2,4,3,2],[3,0,1,2,3,2],[3,0,1,2,4,3,5,2],[2,0,1,2,3,1],[4,0,1,2,4,3,5,6,7,8,7],[4,0,1,2,3,6,7,9,5],[8,0,1,1],[5,0,1,3,2,4,5,5],[9,0,1,2,3,4,5,7],[10,0,1,2,3,1],[1,1,0,3,6,4,3],[1,0,3,6,7,4,2],[1,3,5,6,4,1],[1,3,5,6,1],[11,0,1,2,3,5],[12,0,2],[13,0,1],[14,0,1,2,3,4,5,6,7,8,1],[15,0,1,2,3,4,5,5],[16,0,1,2,3,2],[17,0,1,2,3,4,5,6,7,1],[18,0,1,2,3,2],[19,0,1,2,3,3],[20,1],[21,1],[22,1],[23,0,2],[24,1],[25,1],[26,0,1],[27,0,1,2,3,5],[28,0,1,2,3,4,5,6,7,1],[29,0,1,2,3,4,3]],[[[[10,"LabelDamage"],[18,"LabelDamage",[[5,-2,[3,"bcDubxyIZKvq0+SZ5SaK0s"],[5,42.75,42]],[32,"-10",25,25,2,true,1,-3,[3,"327HSEcXFKOKED7DgKzhA5"],[4,4280032477]],[34,-4,[3,"cb9CiDQ0pGapUQKN64m6RD"]]],[4,"c9BnR6tO5IDZDj2r2afECq",null,null,null,-1,0]]],0,[0,2,1,0,0,1,0,0,1,0,0,1,0,3,1,4],[],[],[]],[[[10,"name_and_hp"],[11,"name_and_hp",[-6,-7,-8],[[5,-2,[3,"b1SHRRGhdEIL4727PXyCtg"],[5,1,1]],[37,-5,[3,"9b0ka82HxDP6WOE7fw74Dt"],-4,-3]],[4,"a73VFAj69KaYAL8Y9AtYEu",null,null,null,-1,0],[1,0,150,0]],[12,"hp_bar",1,[[31,-9,[3,"b4V1h6RS5HSrvcLfMjrtx7"],[5,96,5],[0,0,0.5]],[16,0,-10,[3,"a4130QnfFK77NfMxwAydI1"],[4,4286568478],1]],[4,"96Xwde4C5GaJ352BKFqHpd",null,null,null,1,0],[1,-48,75,0],[1,0.5,1,1]],[19,"hp_bg",1,[[5,-11,[3,"41UFwCK7pE2Yx1BT5FqryQ"],[5,100,8]],[16,0,-12,[3,"b69a4yNhJCR7rUMMdFlXlB"],[4,503316480],0]],[4,"657FKPekJJ7acvo3c/S7XP",null,null,null,1,0],[1,0,75,0]],[28,"lblName",1,[[[5,-13,[3,"3bH1Hy5lJIZ6kgj5aDo2wp"],[5,63.988266958841464,54.4]],-14],4,1],[4,"f0Z4BpYZRNFaz/QmiKvwwL",null,null,null,1,0],[1,0,100,0]],[33,"高薇薇",21.354166666666664,20,true,4,[3,"afqGayauhMLq3a4SQu2Vax"],[4,4286940549]]],0,[0,2,1,0,0,1,0,5,5,0,6,2,0,0,1,0,-1,3,0,-2,2,0,-3,4,0,0,2,0,0,2,0,0,3,0,0,3,0,0,4,0,-2,5,0,3,1,14],[0,0],[1,1],[3,3]],[[[42,"../module_tank/effects/effect-ground-mask",[{}],[{"hash":3546179021,"name":"../module_tank/effects/effect-ground-mask|sprite-vs:vert|sprite-fs:frag","blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[{"name":"CCLocal","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_matWorld","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matWorldIT","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_lightingMapUVParam","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_localShadowBias","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData2","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData2","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","typename":"sampler2D","type":28,"count":1,"stageFlags":16,"tags":{"builtin":"local"},"defines":["USE_TEXTURE"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n    highp vec4 cc_localShadowBias;\n    highp vec4 cc_reflectionProbeData1;\n    highp vec4 cc_reflectionProbeData2;\n    highp vec4 cc_reflectionProbeBlendData1;\n    highp vec4 cc_reflectionProbeBlendData2;\n  };\n#endif\n#if SAMPLE_FROM_RT\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define LIGHT_MAP_TYPE_DISABLED 0\n  #define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n  #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n  #define REFLECTION_PROBE_TYPE_NONE 0\n  #define REFLECTION_PROBE_TYPE_CUBE 1\n  #define REFLECTION_PROBE_TYPE_PLANAR 2\n  #define REFLECTION_PROBE_TYPE_BLEND 3\n  #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n      #define LIGHT_TYPE_DIRECTIONAL 0.0\n  #define LIGHT_TYPE_SPHERE 1.0\n  #define LIGHT_TYPE_SPOT 2.0\n  #define LIGHT_TYPE_POINT 3.0\n  #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n  #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n  #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n  #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n  #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n  #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n  #define TONE_MAPPING_ACES 0\n  #define TONE_MAPPING_LINEAR 1\n  #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n  #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n    #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n  #endif\n  #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n  #endif\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 color;\nout vec2 uv0;\nout vec4 worldPos;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  worldPos = pos;\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  uv0 = a_texCoord;\n  #if SAMPLE_FROM_RT\n    uv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n  #endif\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\n  return vec4(texture(tex, uv).rgb, texture(tex, uv + vec2(0.0, 0.5)).r);\n#else\n  return texture(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\n  layout(std140) uniform ALPHA_TEST_DATA {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nin vec4 color;\nin vec4 worldPos;\n#if USE_TEXTURE\n  in vec2 uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n    o *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n    #if IS_GRAY\n      float gray  = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\n      o.r = o.g = o.b = gray;\n    #endif\n  #endif\n  o *= color;\n  float halfWidth = 0.0;\n  float halfHeight = 0.0;\n  float centerRadius = 1500.0;\n  float fadeOutRange = 200.0;\n  vec3 diff = worldPos.xyz - vec3(halfWidth,halfHeight,0.0);\n  o.a = clamp((sqrt(dot(diff,diff)) - centerRadius)/fadeOutRange,0.0,0.8);\n  o.a = pow(o.a,2.0);\n  ALPHA_TEST(o);\n  return o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n  uniform highp mat4 cc_matViewProj;\n  uniform highp vec4 cc_cameraPos;\n#if USE_LOCAL\n  uniform highp mat4 cc_matWorld;\n#endif\n#if SAMPLE_FROM_RT\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define LIGHT_MAP_TYPE_DISABLED 0\n  #define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n  #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n  #define REFLECTION_PROBE_TYPE_NONE 0\n  #define REFLECTION_PROBE_TYPE_CUBE 1\n  #define REFLECTION_PROBE_TYPE_PLANAR 2\n  #define REFLECTION_PROBE_TYPE_BLEND 3\n  #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n      #define LIGHT_TYPE_DIRECTIONAL 0.0\n  #define LIGHT_TYPE_SPHERE 1.0\n  #define LIGHT_TYPE_SPOT 2.0\n  #define LIGHT_TYPE_POINT 3.0\n  #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n  #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n  #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n  #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n  #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n  #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n  #define TONE_MAPPING_ACES 0\n  #define TONE_MAPPING_LINEAR 1\n  #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n  #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n    #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n  #endif\n  #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n  #endif\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 color;\nvarying vec2 uv0;\nvarying vec4 worldPos;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  worldPos = pos;\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  uv0 = a_texCoord;\n  #if SAMPLE_FROM_RT\n    uv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n  #endif\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\n  return vec4(texture2D(tex, uv).rgb, texture2D(tex, uv + vec2(0.0, 0.5)).r);\n#else\n  return texture2D(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\n      uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 color;\nvarying vec4 worldPos;\n#if USE_TEXTURE\n  varying vec2 uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n    o *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n    #if IS_GRAY\n      float gray  = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\n      o.r = o.g = o.b = gray;\n    #endif\n  #endif\n  o *= color;\n  float halfWidth = 0.0;\n  float halfHeight = 0.0;\n  float centerRadius = 1500.0;\n  float fadeOutRange = 200.0;\n  vec3 diff = worldPos.xyz - vec3(halfWidth,halfHeight,0.0);\n  o.a = clamp((sqrt(dot(diff,diff)) - centerRadius)/fadeOutRange,0.0,0.8);\n  o.a = pow(o.a,2.0);\n  ALPHA_TEST(o);\n  return o;\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","defines":["USE_TEXTURE"]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":56,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":43}},"defines":[{"name":"USE_LOCAL","type":"boolean"},{"name":"SAMPLE_FROM_RT","type":"boolean"},{"name":"USE_PIXEL_ALIGNMENT","type":"boolean"},{"name":"CC_USE_EMBEDDED_ALPHA","type":"boolean"},{"name":"USE_ALPHA_TEST","type":"boolean"},{"name":"USE_TEXTURE","type":"boolean"},{"name":"IS_GRAY","type":"boolean"}]}],[{"passes":[{"program":"../module_tank/effects/effect-ground-mask|sprite-vs:vert|sprite-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false},"properties":{"alphaThreshold":{"type":13,"value":[0.5]}}}]}]]],0,0,[],[],[]],[[[43,"game_tank"],[20,"map_front",[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50],[[6,-1]]],[21,"SceneRoot2D","49i7ZxiUJNi7oSjWEnzH6f",[-59,-60,-61,-62,-63,1,-64],[[6,-51],[44,-52],[45,-58,-57,-56,-55,-54,-53,51,52,53]]],[29,"Camera",2,[[[46,0,393.4486735870819,2000,1073741824,-65,[4,4278190080]],-66],4,1],[1,640,360,1000]],[22,"map",2,[-68],[[6,-67]]],[8,"background",4,[[0,-69,[5,5000,5000]],[38,2,0,-70,[4,4292203989],0]]],[8,"objects",2,[[6,-71]]],[8,"ground_effects",2,[[6,-72]]],[8,"namesRoot",2,[[6,-73]]],[1,"plant-01",1,[[0,-74,[5,385,357]],[2,-75,1]],[1,-430.868,501.116,0],[1,0.257,0.257,0.257]],[1,"plant-02",1,[[0,-76,[5,385,357]],[2,-77,2]],[1,-455.539,2004.302,0],[1,0.35,0.35,0.35]],[1,"plant-03",1,[[0,-78,[5,385,357]],[2,-79,3]],[1,26.634,-620.172,0],[1,0.584,0.584,0.584]],[1,"plant-02",1,[[0,-80,[5,377,371]],[2,-81,4]],[1,132.474,239.479,0],[1,0.35,0.35,0.35]],[1,"plant-04",1,[[0,-82,[5,377,371]],[2,-83,5]],[1,-1214.521,371.232,0],[1,0.426,0.426,0.426]],[1,"plant-05",1,[[0,-84,[5,377,371]],[2,-85,6]],[1,-1048.202,969.19,0],[1,0.35,0.35,0.35]],[1,"plant-06",1,[[0,-86,[5,377,371]],[2,-87,7]],[1,-1519.441,1274.109,0],[1,0.679,0.679,0.679]],[1,"plant-07",1,[[0,-88,[5,385,357]],[2,-89,8]],[1,1314.51,-402.422,0],[1,0.493,0.493,0.493]],[1,"plant-03",1,[[0,-90,[5,376,380]],[2,-91,9]],[1,-301,1276,0],[1,0.564,0.564,0.564]],[1,"plant-30",1,[[0,-92,[5,377,371]],[2,-93,10]],[1,830.856,1850.062,0],[1,0.373,0.373,0.373]],[1,"plant-08",1,[[0,-94,[5,385,357]],[2,-95,11]],[1,1554.81,1844.689,0],[1,0.35,0.35,0.35]],[1,"plant-09",1,[[0,-96,[5,385,357]],[2,-97,12]],[1,1569.466,-1159.643,0],[1,0.35,0.35,0.35]],[1,"plant-10",1,[[0,-98,[5,377,371]],[2,-99,13]],[1,532.45,-1279.723,0],[1,0.708,0.708,0.708]],[1,"plant-11",1,[[0,-100,[5,377,371]],[2,-101,14]],[1,-814.545,-1147.97,0],[1,0.35,0.35,0.35]],[1,"plant-12",1,[[0,-102,[5,377,371]],[2,-103,15]],[1,767.418,2012.105,0],[1,0.885,0.885,0.885]],[1,"plant-13",1,[[0,-104,[5,377,371]],[2,-105,16]],[1,-1119.465,-245.093,0],[1,0.745,0.745,0.745]],[1,"plant-14",1,[[0,-106,[5,385,357]],[2,-107,17]],[1,1966.352,1195.497,0],[1,0.35,0.35,0.35]],[1,"plant-15",1,[[0,-108,[5,385,357]],[2,-109,18]],[1,1154.554,-1414.662,0],[1,0.661,0.661,0.661]],[1,"plant-16",1,[[0,-110,[5,385,357]],[2,-111,19]],[1,1781.94,196.532,0],[1,0.35,0.35,0.35]],[1,"plant-17",1,[[0,-112,[5,377,371]],[2,-113,20]],[1,1349.275,-2371.71,0],[1,0.35,0.35,0.35]],[1,"plant-18",1,[[0,-114,[5,377,371]],[2,-115,21]],[1,2.28,-2239.957,0],[1,0.761,0.761,0.761]],[1,"plant-19",1,[[0,-116,[5,377,371]],[2,-117,22]],[1,168.599,-1641.999,0],[1,0.35,0.35,0.35]],[1,"plant-20",1,[[0,-118,[5,377,371]],[2,-119,23]],[1,-854.586,-2042.344,0],[1,0.35,0.35,0.35]],[1,"plant-21",1,[[0,-120,[5,385,357]],[2,-121,24]],[1,-2010.571,-1760.615,0],[1,0.35,0.35,0.35]],[1,"plant-22",1,[[0,-122,[5,385,357]],[2,-123,25]],[1,-1506.595,-1979.485,0],[1,0.35,0.35,0.35]],[1,"plant-23",1,[[0,-124,[5,377,371]],[2,-125,26]],[1,-1785.942,-1890.209,0],[1,0.774,0.774,0.774]],[1,"plant-24",1,[[0,-126,[5,377,371]],[2,-127,27]],[1,559.047,363.708,0],[1,0.35,0.35,0.35]],[1,"plant-25",1,[[0,-128,[5,377,371]],[2,-129,28]],[1,725.366,961.666,0],[1,0.35,0.35,0.35]],[1,"plant-26",1,[[0,-130,[5,377,371]],[2,-131,29]],[1,-2008.91,2044.192,0],[1,0.35,0.35,0.35]],[1,"plant-27",1,[[0,-132,[5,385,357]],[2,-133,30]],[1,2348.485,-860.032,0],[1,0.35,0.35,0.35]],[1,"plant-28",1,[[0,-134,[5,385,357]],[2,-135,31]],[1,-2009.321,424.56,0],[1,0.513,0.513,0.513]],[1,"plant-29",1,[[0,-136,[5,385,357]],[2,-137,32]],[1,-1893.752,-949.308,0],[1,0.35,0.35,0.35]],[1,"plant-31",1,[[0,-138,[5,376,380]],[2,-139,33]],[1,1697.941,1479.858,0],[1,0.885,0.885,0.885]],[1,"plant-32",1,[[0,-140,[5,376,380]],[2,-141,34]],[1,1369.768,1154.443,0],[1,0.444,0.444,0.444]],[1,"plant-33",1,[[0,-142,[5,376,380]],[2,-143,35]],[1,2286.622,757.596,0],[1,0.817,0.817,0.817]],[1,"plant-34",1,[[0,-144,[5,376,380]],[2,-145,36]],[1,1150.818,456.54,0],[1,1.157,1.157,1.157]],[1,"plant-35",1,[[0,-146,[5,376,380]],[2,-147,37]],[1,1060.461,-931.4,0],[1,0.444,0.444,0.444]],[1,"plant-36",1,[[0,-148,[5,376,380]],[2,-149,38]],[1,1977.315,-1328.247,0],[1,0.817,0.817,0.817]],[1,"plant-37",1,[[0,-150,[5,376,380]],[2,-151,39]],[1,841.511,-1629.303,0],[1,1.157,1.157,1.157]],[1,"plant-38",1,[[0,-152,[5,376,380]],[2,-153,40]],[1,1388.634,-605.985,0],[1,0.885,0.885,0.885]],[1,"plant-39",1,[[0,-154,[5,376,380]],[2,-155,41]],[1,-1931.157,1686.85,0],[1,0.444,0.444,0.444]],[1,"plant-40",1,[[0,-156,[5,376,380]],[2,-157,42]],[1,-1014.303,1290.003,0],[1,0.817,0.817,0.817]],[1,"plant-41",1,[[0,-158,[5,376,380]],[2,-159,43]],[1,-2150.107,988.947,0],[1,1.157,1.157,1.157]],[1,"plant-42",1,[[0,-160,[5,376,380]],[2,-161,44]],[1,-1602.984,2012.265,0],[1,0.885,0.885,0.885]],[1,"plant-43",1,[[0,-162,[5,376,380]],[2,-163,45]],[1,-1869.436,-720.886,0],[1,0.444,0.444,0.444]],[1,"plant-44",1,[[0,-164,[5,376,380]],[2,-165,46]],[1,-952.582,-1117.733,0],[1,0.817,0.817,0.817]],[1,"plant-45",1,[[0,-166,[5,376,380]],[2,-167,47]],[1,-2088.386,-1418.789,0],[1,1.157,1.157,1.157]],[1,"plant-46",1,[[0,-168,[5,376,380]],[2,-169,48]],[1,-1541.263,-395.471,0],[1,0.885,0.885,0.885]],[8,"ground-mask",1,[[0,-170,[5,5000,5000]],[39,0,-171,[4,2027585580],49,50]]],[8,"damage_root",2,[[6,-172]]],[47,"game_tank",[2],[36,null,null,"84e1b2b3-64eb-4ecc-ac3d-3c0a664da5d0",null,null,[]],[48,[49,0.8,[2,0.2,0.5,0.8,0.520833125],[2,0.452588,0.607642,0.755699,0.8],[2,0.618555,0.577848,0.544564,0]],[50,true,1,[4,4283190348],[0,2048,2048]],[51],[52],[53],[54,false],[55],[56]]],[57,3]],0,[0,0,1,0,-1,9,0,-2,10,0,-3,11,0,-4,12,0,-5,13,0,-6,14,0,-7,15,0,-8,16,0,-9,17,0,-10,18,0,-11,19,0,-12,20,0,-13,21,0,-14,22,0,-15,23,0,-16,24,0,-17,25,0,-18,26,0,-19,27,0,-20,28,0,-21,29,0,-22,30,0,-23,31,0,-24,32,0,-25,33,0,-26,34,0,-27,35,0,-28,36,0,-29,37,0,-30,38,0,-31,39,0,-32,40,0,-33,41,0,-34,42,0,-35,43,0,-36,44,0,-37,45,0,-38,46,0,-39,47,0,-40,48,0,-41,49,0,-42,50,0,-43,51,0,-44,52,0,-45,53,0,-46,54,0,-47,55,0,-48,56,0,-49,57,0,0,2,0,0,2,0,7,60,0,8,58,0,9,8,0,10,7,0,11,6,0,0,2,0,-1,3,0,-2,4,0,-3,6,0,-4,7,0,-5,8,0,-7,58,0,0,3,0,-2,60,0,0,4,0,-1,5,0,0,5,0,0,5,0,0,6,0,0,7,0,0,8,0,0,9,0,0,9,0,0,10,0,0,10,0,0,11,0,0,11,0,0,12,0,0,12,0,0,13,0,0,13,0,0,14,0,0,14,0,0,15,0,0,15,0,0,16,0,0,16,0,0,17,0,0,17,0,0,18,0,0,18,0,0,19,0,0,19,0,0,20,0,0,20,0,0,21,0,0,21,0,0,22,0,0,22,0,0,23,0,0,23,0,0,24,0,0,24,0,0,25,0,0,25,0,0,26,0,0,26,0,0,27,0,0,27,0,0,28,0,0,28,0,0,29,0,0,29,0,0,30,0,0,30,0,0,31,0,0,31,0,0,32,0,0,32,0,0,33,0,0,33,0,0,34,0,0,34,0,0,35,0,0,35,0,0,36,0,0,36,0,0,37,0,0,37,0,0,38,0,0,38,0,0,39,0,0,39,0,0,40,0,0,40,0,0,41,0,0,41,0,0,42,0,0,42,0,0,43,0,0,43,0,0,44,0,0,44,0,0,45,0,0,45,0,0,46,0,0,46,0,0,47,0,0,47,0,0,48,0,0,48,0,0,49,0,0,49,0,0,50,0,0,50,0,0,51,0,0,51,0,0,52,0,0,52,0,0,53,0,0,53,0,0,54,0,0,54,0,0,55,0,0,55,0,0,56,0,0,56,0,0,57,0,0,57,0,0,58,0,12,59,1,4,2,2,4,59,172],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,13,1,14,15,16],[9,2,2,2,0,0,0,0,2,1,0,2,2,0,0,0,0,2,2,2,0,0,0,0,2,2,0,0,0,0,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,10,3,11,12,13]],[[[58,"mat-ground-mask",[{}],[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_TEXTURE":true}]]],0,0,[0],[17],[14]],[[[10,"tank"],[23,"tank",[-9,-10,-11,-12,-13],[[9,-2,[3,"9dqk+XbNlPoIuz/skvoLZc"]],[59,-8,[3,"f6R3xyQ8JIKYctUsxeN2N7"],-7,-6,-5,-4,-3,9]],[35,"b5GBmUyRxLL4Js3qZ1K1Zv",null,null,[],-1,0],[1,0.6,0.6,0.6]],[14,"normal_state",1,[-15,-16],[[9,-14,[3,"0e8a2cm3BMzoQLjcNjvzGM"]]],[4,"3a+rjQIKRKOb1slKGEglup",null,null,null,1,0]],[11,"paotai_1_0",[-19],[[5,-17,[3,"1cUcumWRVE/LVk1ZsoVMw+"],[5,155,70]],[7,-18,[3,"c4xCa5wRtCZLiMfE0F0TAb"],5]],[4,"0eK99SkKJLj5lrAUCPyq+r",null,null,null,1,0],[1,41,0,0]],[24,"destroyed",false,1,[-21,-22],[[9,-20,[3,"e8PmCXtvlJDaFpDyqz1tPR"]]],[4,"48oHnDSwJL9IlN+HURrx+H",null,null,null,1,0]],[15,"left_wheel",1,[-25],[[5,-23,[3,"80cl3/FZdHZrZPX3vxEtYE"],[5,188,40]],[7,-24,[3,"39zkdHRtZMgYNds+VW2HqQ"],1]],[4,"c4wBzCs1FInIN+uWsEaOBh",null,null,null,1,0],[1,0,37,0]],[15,"right_wheel",1,[-28],[[5,-26,[3,"53y0x4fbxEU4+E2qt0lIqj"],[5,188,40]],[7,-27,[3,"d3wRPNFe5NDIcccKhf8ga4"],3]],[4,"5fOYnwy7tCXbkg71xbb/ng",null,null,null,1,0],[1,0,-37,0]],[11,"paotai_1_0",[-31],[[5,-29,[3,"e6rVkxqYZC4YdUhDbhk7TO"],[5,155,70]],[17,true,-30,[3,"eeONwymHNNcLGb+5mgOggN"],8]],[4,"f4EHWqsVBBSaDxgXMkSnNH",null,null,null,1,0],[1,41,0,0]],[13,"ludai_1_0",5,[[5,-32,[3,"f3Rt3UH1dHDb8kB3+kYJ5Q"],[5,190,40]],[7,-33,[3,"30dKqf88JLu6HSo/Ul9DLC"],0]],[4,"ddoyRMH2xOWogK5Cj94a2I",null,null,null,1,0]],[13,"ludai_1_0",6,[[5,-34,[3,"0bYpftqSRLWKzNffdbrO5T"],[5,190,40]],[7,-35,[3,"691ZCyA2JJsqiZZpczVqSj"],2]],[4,"4azeCCzUNF2b0b3Ztw1KHW",null,null,null,1,0]],[13,"panzauo_1_0",2,[[5,-36,[3,"143Wi0xE1Bsa2Yw+VqhYnt"],[5,139,115]],[7,-37,[3,"47sPk7JpZOrqPu3/Ngv8Dc"],4]],[4,"c3iUszuDlMUosgSk7nh0SA",null,null,null,1,0]],[14,"pao",2,[3],[[9,-38,[3,"39NV5bcxtNSprElQQk7l38"]]],[4,"65u4NfSulKW4BGoiOf3svL",null,null,null,1,0]],[30,"lid",3,[[[5,-39,[3,"49/vMlKtZByK63MgaHigGg"],[5,26,26]],-40],4,1],[4,"71g083bLFAta0DKeYvmqNq",null,null,null,1,0],[1,-41.54,0,0],[1,1.831,1.831,1.831]],[25,"panzauo_1_0",4,[[5,-41,[3,"32+9v7THFPE4NlTgA+8VRJ"],[5,139,115]],[17,true,-42,[3,"338/byJdBPbINCGvF6PrqW"],6]],[4,"deB0MTAWVC5ZGBjDeWJE/g",null,null,null,1,0],[1,20.742,25.622,0],[3,0,0,-0.3435285689426459,0.9391422268859057],[1,0,0,-40.184]],[26,"pao",4,[7],[[9,-43,[3,"3fGtXurd9AopfZcGVzFe17"]]],[4,"82e3DY0hZP052CClSoLYnB",null,null,null,1,0],[1,-39.042,4.88,0],[3,0,0,-0.5079142712792271,0.8614076230396918],[1,0,0,-61.05]],[12,"lid",7,[[5,-44,[3,"43o9ZWEIdAxbzhV+WbKJ4L"],[5,26,26]],[40,-45,[3,"48n/UpvIVK+oz6uj6rvLDs"],[4,4278190335],7]],[4,"53dsMIrKlGlItkdaXshwrs",null,null,null,1,0],[1,-18.28,47.087,0],[1,1.831,1.831,1.831]],[27,"fire_point",1,[4,"397GNV58ZFI6hJ88ccAeaG",null,null,null,1,0],[1,113.09333333333348,1.1368683772161603e-13,0],[1,1.6666666666666667,1.6666666666666667,1.6666666666666667]],[41,12,[3,"4frQ3bym5AB4UPkIcg0U6+"],[4,4278190335]]],0,[0,2,1,0,0,1,0,18,4,0,19,2,0,20,17,0,21,3,0,22,16,0,0,1,0,-1,5,0,-2,6,0,-3,16,0,-4,2,0,-5,4,0,0,2,0,-1,10,0,-2,11,0,0,3,0,0,3,0,-1,12,0,0,4,0,-1,13,0,-2,14,0,0,5,0,0,5,0,-1,8,0,0,6,0,0,6,0,-1,9,0,0,7,0,0,7,0,-1,15,0,0,8,0,0,8,0,0,9,0,0,9,0,0,10,0,0,10,0,0,11,0,0,12,0,-2,17,0,0,13,0,0,13,0,0,14,0,0,15,0,0,15,0,3,1,3,4,11,7,4,14,45],[0,0,0,0,0,0,0,0,0,0,17],[1,1,1,1,1,1,1,1,1,23,1],[4,5,4,5,6,7,6,8,7,15,8]],[[[10,"tank_bullet"],[11,"tank_bullet",[-3],[[60,800,750,-2,[3,"adXfGvAv1Pw4KgtJu1J6oc"],1]],[4,"348BwEQF1P37ZIVFr/1N7t",null,null,null,-1,0],[1,67.856,0,0]],[12,"zidan_1_0",1,[[5,-4,[3,"f8W5Q/qJpFipQPDxkjq297"],[5,60,22]],[7,-5,[3,"c5MbSFexxI7YUufkF50TVd"],0]],[4,"c9rZeBjEdNKKKzRdVxOoYA",null,null,null,1,0],[1,21.591,0,0],[1,0.6,0.6,0.6]]],0,[0,2,1,0,0,1,0,-1,2,0,0,2,0,0,2,0,3,1,5],[0,0],[1,24],[16,17]]]]
