{"version":3,"sources":["../file:/D:/work/github/star_client/assets/module_gomoku/components/file:/D:/work/github/star_client/assets/module_gomoku/components/GomokuAI.ts","../file:/D:/work/github/star_client/assets/module_gomoku/scripts/file:/D:/work/github/star_client/assets/module_gomoku/scripts/GomokuDef.ts","../file:/D:/work/github/star_client/assets/module_gomoku/components/file:/D:/work/github/star_client/assets/module_gomoku/components/GomokuGameHUD.ts","../file:/D:/work/github/star_client/assets/module_gomoku/scripts/file:/D:/work/github/star_client/assets/module_gomoku/scripts/GomokuGameMgr.ts","../file:/D:/work/github/star_client/assets/module_gomoku/components/file:/D:/work/github/star_client/assets/module_gomoku/components/GomokuGameplay.ts","../file:/D:/work/github/star_client/assets/module_gomoku/components/file:/D:/work/github/star_client/assets/module_gomoku/components/GomokuLobbyScene.ts","../file:/D:/work/github/star_client/assets/module_gomoku/components/file:/D:/work/github/star_client/assets/module_gomoku/components/GomokuViewPlayer.ts"],"names":["ccclass","_decorator","property","GomokuAI","_dec","_class","_Component","_inheritsLoose","apply","arguments","_proto","prototype","start","director","on","GomokuGameEvent","TURN_PLAYER_CHANGED","onEvent_TurnPlayerChanged","PLACE_PIECE","onCheckResult","onDestroy","off","aiThinkingTime","scheduleOnce","onAIPlay","bind","GomokuGameMgr","inst","gameData","currentPlayer","aigrid","boardMgr","getBestPlaceGrid","playerGrid","info","score","setGrid","gridX","gridY","msg","uid","value","emit","changeTurnPlayer","data","v","getGridData","isWin","checkWin","fnAlertClick","bOK","initAIMode","tgx","SceneUtil","reloadScene","RoomMgr","exitRoom","UIAlert","show","onClick","update","deltaTime","Component","_RF","pop","ConstantDef","GRID_SIZE","GomokuGameHUD","_dec2","GamePlayerInfo","_dec3","_dec4","Label","_dec5","Button","_dec6","Node","_dec7","_class2","_this","_len","length","args","Array","_key","call","concat","_initializerDefineProperty","_descriptor","_assertThisInitialized","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","UserMgr","loadScene","SceneDef","START","UIMgr","closeAll","initEventListener","isOnline","rpc_Ready","reStart","onRoomBackByRoomMgr","rpc_ClientReady","lblRoomId","string","displayId","initUser","initWatcherList","updateCtrlUI","showUI","UIChat","gameNet","leftPlayer","setUserId","leftUserId","rightPlayer","rightUserId","u","selfUser","btnReady","node","active","playerId","ready","gameMode","GameMode","AI","setAILevel","RoomEvent","NEW_USER_COMES","onNewUserComes","USER_DATA_CHANGED","onUserDataChanged","USER_LEAVES","onUserLeaves","WATCHER_LIST_CHANGED","ROOM_PUSH","SubGameMessage","EnterSubGameRoomSuccess","isPlayer","undefined","_initWatcherList","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_RoomMgr$inst$data","usersData","i","userIds","c","_i","newNode","_i2","_c","icon","wrap","_callee$","_context","prev","next","watcherList","parent","userList","abrupt","children","instantiate","addChild","push","rpc_GetUserInfos","getComponent","Sprite","setUserIconAndName","stop","SOLO","tips","isWatcher","playerNum","isMyTurn","onBtnExitClicked","_onBtnExitClicked","_callee3","_callee3$","_context3","ok","isPlaying","_callee2","_callee2$","_context2","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer","PLAYER_COMES","PLAYER_LEAVES","GAME_BEGIN","GAME_OVER","_GameMgr","_gameData","_boardMgr","GomokuBoardMgr","_gameType","SubGameDef","GOMOKU","_entryScene","name","bundle","ModuleDef","_gameScene","initNetMsgHandlers","listenMsg","onNet_GameDataSyncPush","onNet_GameDataChangedPush","onNet_PlayerComesPush","onNet_PlayerDataChangedPush","onNet_PlayerLeavesPush","onNet_GameBeginPush","onNet_GameOverPush","onNet_PlacePiecePush","reset","SubGameMgr","gameMgr","players","color","getPlayer","userId","p","getPlayerIndex","rpc_PlacePiece","_rpc_PlacePiece","isSucc","err","callApi","sent","_x","_x2","gridData","boardData","player","splice","forEach","_createClass","key","get","_inst","GameMgr","registerGameMgr","tmpV2","v2","tmpRay","geometry","Ray","gridPlane","Plane","GomokuGamePlay","Material","_dec8","_piecePool","_descriptor7","_touchStartTime","_currentSide","_touchStartPoint","_lastNewPiece","_lastNewPieceValue","getFromPool","white","meshRenderer","MeshRenderer","mat","matBlack","matWhite","setMaterial","putToPool","removeFromParent","black","EasyController","EasyControllerEvent","SCREEN_TOUCH_START","onTouchStart","SCREEN_TOUCH_END","onTouchEnd","onPlacePiece","onGameBegin","onGameOver","cleanBoard","addComponent","initBoard","_onGameBegin","_onGameOver","userInfo","reason","winner","rpc_GetUserInfo","sizeInGrid","j","placePiece","evt","Date","now","set","touch","getLocation","_onTouchEnd","dx","dy","camera","dist","point","grid","placeV","placer","pos","ret","x","getLocationX","y","getLocationY","console","log","find","Camera","screenPointToRay","intersect","rayPlane","v3","computeHit","posToGrid","z","selfPlayer","gridToPos","setPosition","message","newPiece","normalMat","highlightMat","matBlackHighlight","matWhiteHighlight","pieceRoot","randomLayPieceTest","Math","floor","random","prefab","GomokuLobbyScene","_start","_this2","lobbyNet","type","UIAnnouncement","ui","announcementPlacer","position","onBtnLobby","LOBBY","onBtnQuickPlayClicked","_this3","UI_SearchingRival","startMatch","onBtnRoomListClicked","UIRoomList","onBtnTraningModeClicked","gameScene","onBtnCreate","UICreateRoom","GomokuViewPlayer","CharacterMovement","ThirdPersonCameraCtrl","_originVelocity","_originLen","movement","velocity","cameraCtrl","len"],"mappings":"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","file":"all.js","sourcesContent":["import { _decorator, Component, director, Node } from 'cc';\r\nimport { GomokuGameEvent, GomokuGameMgr } from '../scripts/GomokuGameMgr';\r\nimport { RoomMgr } from '../../module_basic/scripts/RoomMgr';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GomokuAI')\r\nexport class GomokuAI extends Component {\r\n    start() {\r\n        director.on(GomokuGameEvent.TURN_PLAYER_CHANGED, this.onEvent_TurnPlayerChanged,this);\r\n        director.on(GomokuGameEvent.PLACE_PIECE, this.onCheckResult, this);\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        director.off(GomokuGameEvent.TURN_PLAYER_CHANGED, this.onEvent_TurnPlayerChanged,this);\r\n        director.off(GomokuGameEvent.PLACE_PIECE, this.onCheckResult, this);\r\n    }\r\n\r\n    onEvent_TurnPlayerChanged(){\r\n        let aiThinkingTime = 1.0;\r\n        this.scheduleOnce(this.onAIPlay.bind(this), aiThinkingTime);\r\n    }\r\n\r\n    onAIPlay() {\r\n        if (GomokuGameMgr.inst.gameData.currentPlayer == 'ai') {\r\n            let aigrid = GomokuGameMgr.inst.boardMgr.getBestPlaceGrid(2);\r\n            let playerGrid = GomokuGameMgr.inst.boardMgr.getBestPlaceGrid(1);\r\n            let info = aigrid;\r\n            if (playerGrid.score >= aigrid.score) {\r\n                //防守\r\n                info = playerGrid;\r\n            }\r\n\r\n            GomokuGameMgr.inst.boardMgr.setGrid(info.gridX, info.gridY, 2);\r\n\r\n            let msg = {\r\n                uid: GomokuGameMgr.inst.gameData.currentPlayer,\r\n                gridX: info.gridX,\r\n                gridY: info.gridY,\r\n                value: 2\r\n            };\r\n            director.emit(GomokuGameEvent.PLACE_PIECE, msg);\r\n            GomokuGameMgr.inst.changeTurnPlayer();\r\n        }\r\n    }\r\n\r\n    onCheckResult(data: { gridX: number, gridY: number }) {\r\n        let v = GomokuGameMgr.inst.boardMgr.getGridData(data.gridX, data.gridY);\r\n        let isWin = GomokuGameMgr.inst.boardMgr.checkWin(data.gridX, data.gridY, v);\r\n        if (isWin) {\r\n            let fnAlertClick = (bOK)=>{\r\n                if(bOK){\r\n                    GomokuGameMgr.inst.initAIMode();\r\n                    tgx.SceneUtil.reloadScene();\r\n                }\r\n                else{\r\n                    RoomMgr.inst.exitRoom();\r\n                }\r\n            };\r\n            if (v == 1) {\r\n                tgx.UIAlert.show('你赢了! 再来一局？',true).onClick(fnAlertClick);\r\n            }\r\n            else {\r\n                tgx.UIAlert.show('你输了! 再来一局？',true).onClick(fnAlertClick);\r\n            }\r\n        }\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n}\r\n\r\n\r\n","\r\nexport class ConstantDef{\r\n    public GRID_SIZE = 1.25;\r\n}\r\n\r\n\r\n","import { _decorator, Component, Label, Button, director, instantiate, Sprite, Node } from \"cc\";\r\nimport { UserMgr } from \"../../module_basic/scripts/UserMgr\";\r\nimport { SceneDef } from \"../../scripts/SceneDef\";\r\nimport { GomokuGameEvent, GomokuGameMgr } from \"../scripts/GomokuGameMgr\";\r\nimport { GamePlayerInfo } from \"../../module_basic/scripts/GamePlayerInfo\";\r\nimport { UIChat } from \"../../module_basic/ui_chat/UIChat\";\r\nimport { GameMode, RoomEvent, RoomMgr } from \"../../module_basic/scripts/RoomMgr\";\r\nimport { gameNet } from \"../../module_basic/scripts/NetGameServer\";\r\nimport { SubGameMessage } from \"../../module_basic/scripts/SubGameMessage\";\r\n\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GomokuGameHUD')\r\nexport class GomokuGameHUD extends Component {\r\n\r\n    @property(GamePlayerInfo)\r\n    leftPlayer: GamePlayerInfo = null!;\r\n    //#endregion\r\n\r\n    @property(GamePlayerInfo)\r\n    rightPlayer: GamePlayerInfo = null!;\r\n\r\n    @property(Label)\r\n    tips: Label = null!;\r\n\r\n    @property(Button)\r\n    btnReady: Button;\r\n\r\n    @property(Node)\r\n    watcherList: Node;\r\n\r\n    @property(Label)\r\n    lblRoomId: Label;\r\n\r\n    //#endregion\r\n    //#region 组件第一次激活前执行，也就是第一次执行 update 之前触发\r\n    start() {\r\n        if (!UserMgr.inst.uid) {\r\n            tgx.SceneUtil.loadScene(SceneDef.START);\r\n            return;\r\n        }\r\n        tgx.UIMgr.inst.closeAll();\r\n\r\n        \r\n        this.initEventListener();\r\n        if (RoomMgr.inst.isOnline) {\r\n            RoomMgr.inst.rpc_Ready();\r\n            this.reStart();\r\n        }\r\n        else\r\n        {\r\n            this.onRoomBackByRoomMgr();\r\n        }\r\n        \r\n    }\r\n    private reStart(): void {\r\n        RoomMgr.inst.rpc_ClientReady();\r\n        \r\n    }\r\n    private onRoomBackByRoomMgr():void\r\n    {\r\n        if (RoomMgr.inst.isOnline) {\r\n            this.lblRoomId.string = RoomMgr.inst.data.displayId || '';\r\n        }\r\n        else {\r\n            this.lblRoomId.string = '';\r\n        }\r\n        this.initUser();\r\n        this.initWatcherList();\r\n        this.updateCtrlUI();\r\n        if(RoomMgr.inst.isOnline){\r\n            tgx.UIMgr.inst.showUI(UIChat,null,null,gameNet);\r\n        }\r\n    }\r\n    //#endregion\r\n\r\n    //#region 用户信息初始化\r\n    initUser() {\r\n        if (RoomMgr.inst.isOnline) {\r\n            this.leftPlayer.setUserId(GomokuGameMgr.inst.leftUserId);\r\n            this.rightPlayer.setUserId(GomokuGameMgr.inst.rightUserId);\r\n\r\n            let u = RoomMgr.inst.selfUser;\r\n            this.btnReady.node.active = u && u.playerId && !u.ready;\r\n        }\r\n        else {\r\n            this.btnReady.node.active = false;\r\n            this.leftPlayer.setUserId(UserMgr.inst.uid);\r\n            if(RoomMgr.inst.gameMode == GameMode.AI){\r\n                this.rightPlayer.setAILevel(0);\r\n            }\r\n            else{\r\n                this.rightPlayer.node.active = false;\r\n            }\r\n        }\r\n    }\r\n    //#endregion\r\n\r\n    //#region 开始注册监听事件\r\n    initEventListener() {\r\n        director.on(GomokuGameEvent.TURN_PLAYER_CHANGED, this.updateCtrlUI, this);\r\n        director.on(RoomEvent.NEW_USER_COMES, this.onNewUserComes, this);\r\n        director.on(RoomEvent.USER_DATA_CHANGED, this.onUserDataChanged, this);\r\n        director.on(RoomEvent.USER_LEAVES, this.onUserLeaves, this);\r\n        director.on(RoomEvent.WATCHER_LIST_CHANGED, this.initWatcherList, this);\r\n        director.on(GomokuGameEvent.ROOM_PUSH, this.onRoomBackByRoomMgr, this);\r\n        director.on(SubGameMessage.EnterSubGameRoomSuccess,this.reStart,this);\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        director.off(GomokuGameEvent.TURN_PLAYER_CHANGED, this.updateCtrlUI, this);\r\n        director.off(RoomEvent.NEW_USER_COMES, this.onNewUserComes, this);\r\n        director.off(RoomEvent.USER_DATA_CHANGED, this.onUserDataChanged, this);\r\n        director.off(RoomEvent.USER_LEAVES, this.onUserLeaves, this);\r\n        director.off(RoomEvent.WATCHER_LIST_CHANGED, this.initWatcherList, this);\r\n        director.off(GomokuGameEvent.ROOM_PUSH, this.onRoomBackByRoomMgr, this);\r\n        director.off(SubGameMessage.EnterSubGameRoomSuccess,this.reStart,this);\r\n    }\r\n    //#endregion\r\n\r\n    onNewUserComes(data) {\r\n        if (data.isPlayer) {\r\n            this.initUser();\r\n        }\r\n        else {\r\n            this.initWatcherList();\r\n        }\r\n    }\r\n\r\n    onUserLeaves(data) {\r\n        if (data.isPlayer) {\r\n            this.initUser();\r\n        }\r\n        else {\r\n            this.initWatcherList();\r\n        }\r\n    }\r\n\r\n    onUserDataChanged(data){\r\n        this.initUser();\r\n        if (data.isPlayer !== undefined) {\r\n            this.initWatcherList();            \r\n        }\r\n    }\r\n\r\n    async initWatcherList() {\r\n        this.watcherList.parent.active = false;\r\n        let usersData = RoomMgr.inst.data?.userList;\r\n        if (!RoomMgr.inst.isOnline || !usersData.length) {\r\n            return;\r\n        }\r\n\r\n        this.watcherList.parent.active = true;\r\n\r\n        for (let i = 0; i < this.watcherList.children.length; ++i) {\r\n            this.watcherList.children[i].active = false;\r\n        }\r\n\r\n        let userIds = [];\r\n        let c = this.watcherList.children[0];\r\n        for (let i = 0; i < usersData.length; ++i) {\r\n            let u = usersData[i];\r\n            if(!u.playerId){\r\n                let newNode = instantiate(c);\r\n                this.watcherList.addChild(newNode);\r\n                userIds.push(u.uid);\r\n            }\r\n        }\r\n\r\n        await UserMgr.inst.rpc_GetUserInfos(userIds);\r\n\r\n        for (let i = 0; i < userIds.length; ++i) {\r\n            let c = this.watcherList.children[i];\r\n            c.active = true;\r\n            let icon = c.children[0].getComponent(Sprite);\r\n            UserMgr.inst.setUserIconAndName(userIds[i], icon);\r\n        }\r\n    }\r\n\r\n    updateCtrlUI() {\r\n        if (RoomMgr.inst.gameMode == GameMode.SOLO) {\r\n            this.tips.string = '单人练习';\r\n        }\r\n        else if (RoomMgr.inst.isWatcher) {\r\n            this.tips.string = '观战中...';\r\n        }\r\n        else if (RoomMgr.inst.data.playerNum < 2) {\r\n            this.tips.string = '等待对手加入...'\r\n        }\r\n        else if (GomokuGameMgr.inst.isMyTurn) {\r\n            this.tips.string = '该你落子...';\r\n        }\r\n        else {\r\n            this.tips.string = '对手落子...';\r\n        }\r\n    }\r\n\r\n    async onBtnExitClicked() {\r\n        if (!RoomMgr.inst.isOnline) {\r\n            tgx.UIAlert.show('球局未结束，确定离开吗？', true).onClick((ok: boolean) => {\r\n                if (ok) {\r\n                    RoomMgr.inst.exitRoom();\r\n                }\r\n            });\r\n        }\r\n        else {\r\n\r\n            if (RoomMgr.inst.isPlayer && RoomMgr.inst.isPlaying) {\r\n                tgx.UIAlert.show('确定要认输并退出吗？', true).onClick(async (ok: Boolean) => {\r\n                    if (ok) {\r\n                        RoomMgr.inst.exitRoom();\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                RoomMgr.inst.exitRoom();\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { GameMgr, GameMode } from \"../../module_basic/scripts/GameMgr\";\r\nimport { SubGameMgr } from \"../../module_basic/scripts/SubGameMgr\";\r\nimport { UserMgr } from \"../../module_basic/scripts/UserMgr\";\r\nimport { IGomokuGameData, IGomokuPlayer } from \"../../module_basic/shared/protocols/public/gomoku/GomokuTypeDef\";\r\nimport { MsgGameDataChangedPush } from \"../../module_basic/shared/protocols/public/gomoku/MsgGameDataChangedPush\";\r\nimport { Scene, director } from \"cc\";\r\nimport { MsgPlayerComesPush } from \"../../module_basic/shared/protocols/public/gomoku/MsgPlayerComesPush\";\r\nimport { MsgPlayerDataChangedPush } from \"../../module_basic/shared/protocols/public/gomoku/MsgPlayerDataChangedPush\";\r\nimport { MsgPlayerLeavesPush } from \"../../module_basic/shared/protocols/public/gomoku/MsgPlayerLeavesPush\";\r\nimport { MsgGameBeginPush } from \"../../module_basic/shared/protocols/public/gomoku/MsgGameBeginPush\";\r\nimport { GomokuBoardMgr } from \"../../module_basic/shared/GomokuBoardMgr\";\r\nimport { MsgGameOverPush } from \"../../module_basic/shared/protocols/public/gomoku/MsgGameOverPush\";\r\nimport { MsgPlacePiecePush } from \"../../module_basic/shared/protocols/public/gomoku/MsgPlacePiecePush\";\r\nimport { MsgGameDataSyncPush } from \"../../module_basic/shared/protocols/public/gomoku/MsgGameDataSyncPush\";\r\nimport { NetGameServer, gameNet } from \"../../module_basic/scripts/NetGameServer\";\r\nimport { RoomMgr } from \"../../module_basic/scripts/RoomMgr\";\r\nimport { SubGameDef } from \"../../module_basic/scripts/SubGameDef\";\r\nimport { SceneDef } from \"../../scripts/SceneDef\";\r\nimport { ModuleDef } from \"../../scripts/ModuleDef\";\r\n\r\nexport class GomokuGameEvent {\r\n    public static ROOM_PUSH = 'GomokuGameEvent.ROOM_PUSH';\r\n    public static TURN_PLAYER_CHANGED = 'GomokuGameEvent.TURN_PLAYER_CHANGED';\r\n    public static PLAYER_COMES = 'GomokuGameEvent.PLAYER_COMES';\r\n    public static PLAYER_LEAVES = 'GomokuGameEvent.PLAYER_LEAVES';\r\n    public static GAME_BEGIN = 'GomokuGameEvent.GAME_BEGIN';\r\n    public static GAME_OVER = 'GomokuGameEvent.GAME_OVER';\r\n    public static PLACE_PIECE = 'GomokuGameEvent.PLACE_PIECE';\r\n}\r\n\r\nexport class GomokuGameMgr extends GameMgr {\r\n    private static _inst: GomokuGameMgr;\r\n    public static get inst(): GomokuGameMgr {\r\n        if (!this._inst) {\r\n            this._inst = new GomokuGameMgr();\r\n        }\r\n        return this._inst;\r\n    }\r\n\r\n    private _gameData: IGomokuGameData;\r\n    private _boardMgr: GomokuBoardMgr = new GomokuBoardMgr();\r\n\r\n    public get gameData(): Readonly<IGomokuGameData> {\r\n        return this._gameData;\r\n    }\r\n\r\n    public get boardMgr(): GomokuBoardMgr {\r\n        return this._boardMgr;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this._gameType = SubGameDef.GOMOKU;\r\n        this._entryScene = { name: 'lobby_gomoku', bundle: ModuleDef.GOMOKU };\r\n        this._gameScene = { name: 'game_gomoku', bundle: ModuleDef.GOMOKU };\r\n        this.initNetMsgHandlers();\r\n    }\r\n\r\n    initNetMsgHandlers() {\r\n        gameNet.listenMsg(\"gomoku/GameDataSyncPush\", this.onNet_GameDataSyncPush, this);\r\n        gameNet.listenMsg(\"gomoku/GameDataChangedPush\", this.onNet_GameDataChangedPush, this);\r\n\r\n        gameNet.listenMsg(\"gomoku/PlayerComesPush\", this.onNet_PlayerComesPush, this);\r\n        gameNet.listenMsg(\"gomoku/PlayerDataChangedPush\", this.onNet_PlayerDataChangedPush, this);\r\n        gameNet.listenMsg(\"gomoku/PlayerLeavesPush\", this.onNet_PlayerLeavesPush, this);\r\n\r\n        gameNet.listenMsg(\"gomoku/GameBeginPush\", this.onNet_GameBeginPush, this);\r\n        gameNet.listenMsg(\"gomoku/GameOverPush\", this.onNet_GameOverPush, this);\r\n\r\n        gameNet.listenMsg(\"gomoku/PlacePiecePush\", this.onNet_PlacePiecePush, this);\r\n    }\r\n\r\n    public reset() {\r\n        super.reset();\r\n    }\r\n\r\n    public initAIMode() {\r\n        SubGameMgr.gameMgr = this;\r\n        RoomMgr.inst.initAIMode('gomoku', [\r\n            { uid: UserMgr.inst.uid, ready: true, playerId: 1 },\r\n            { uid: 'ai', ready: true, playerId: 2 }\r\n        ]);\r\n\r\n        this._gameData = {\r\n            players: [{ uid: UserMgr.inst.uid, color: 'black' }, { uid: 'ai', color: 'white' }],\r\n            currentPlayer: UserMgr.inst.uid,\r\n        }\r\n        this._boardMgr.reset();\r\n    }\r\n\r\n    public changeTurnPlayer() {\r\n        if (RoomMgr.inst.gameMode != GameMode.AI) {\r\n            return;\r\n        }\r\n\r\n        if (this._gameData.currentPlayer == this._gameData.players[0].uid) {\r\n            this._gameData.currentPlayer = this.gameData.players[1].uid;\r\n        }\r\n        else {\r\n            this._gameData.currentPlayer = this.gameData.players[0].uid;\r\n        }\r\n        director.emit(GomokuGameEvent.TURN_PLAYER_CHANGED, this._gameData.currentPlayer);\r\n    }\r\n\r\n    public get selfPlayer(): IGomokuPlayer {\r\n        return this.getPlayer(UserMgr.inst.uid);\r\n    }\r\n\r\n    private get selfPlayerIndex(): number {\r\n        return this.getPlayerIndex(UserMgr.inst.uid);\r\n    }\r\n\r\n    public get leftUserId(): string {\r\n        if (!this._gameData || this._gameData.players.length == 0) {\r\n            return '';\r\n        }\r\n\r\n        if (RoomMgr.inst.isPlayer) {\r\n            return UserMgr.inst.uid;\r\n        }\r\n        else {\r\n            return this._gameData.players[0].uid;\r\n        }\r\n    }\r\n\r\n    public get rightUserId(): string {\r\n        if (!this._gameData || this._gameData.players.length == 0) {\r\n            return '';\r\n        }\r\n\r\n        if (RoomMgr.inst.isPlayer) {\r\n            if (this._gameData.players[0].uid != UserMgr.inst.uid) {\r\n                return this._gameData.players[0].uid;\r\n            }\r\n            else {\r\n                let p = this._gameData.players[1];\r\n                return p ? p.uid : '';\r\n            }\r\n        }\r\n        else {\r\n            let p = this._gameData.players[1];\r\n            return p ? p.uid : '';\r\n        }\r\n    }\r\n\r\n    public get isMyTurn(): boolean {\r\n        if (!this._gameData) {\r\n            return false;\r\n        }\r\n\r\n        if (!RoomMgr.inst.isPlayer) {\r\n            return false;\r\n        }\r\n        if (!this._gameData.currentPlayer) {\r\n            return false;\r\n        }\r\n        return this._gameData.currentPlayer == UserMgr.inst.uid;\r\n    }\r\n\r\n    public getPlayer(userId: string): IGomokuPlayer {\r\n        if (!this._gameData || !this._gameData.players) {\r\n            return null;\r\n        }\r\n        for (let i = 0; i < this._gameData.players.length; ++i) {\r\n            let p = this._gameData.players[i];\r\n            if (p.uid == userId) {\r\n                return p;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private getPlayerIndex(userId: string): number {\r\n        for (let i = 0; i < this._gameData.players.length; ++i) {\r\n            if (this._gameData.players[i].uid == userId) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    public async rpc_PlacePiece(gridX: number, gridY: number) {\r\n        if (RoomMgr.inst.gameMode == GameMode.AI) {\r\n            let v = 1;\r\n            this._boardMgr.setGrid(gridX, gridY, v);\r\n            let msg = {\r\n                uid: GomokuGameMgr.inst.gameData.currentPlayer,\r\n                gridX: gridX,\r\n                gridY: gridY,\r\n                value: v\r\n            };\r\n            director.emit(GomokuGameEvent.PLACE_PIECE, msg);\r\n\r\n            this.changeTurnPlayer();\r\n            return { isSucc: true, err: null };\r\n        }\r\n        else {\r\n            return await gameNet.callApi(\"gomoku/PlacePiece\", { gridX: gridX, gridY: gridY });\r\n        }\r\n    }\r\n\r\n    // ============= MESSAGE HANDLER ============\r\n    /**\r\n     * This message will arrive before login result.\r\n     * 这个消息会在登录成功返回之前收到。\r\n    */\r\n    onNet_GameDataSyncPush(msg: MsgGameDataSyncPush) {\r\n        this._gameData = msg.data;\r\n        this._boardMgr.gridData = this._gameData.boardData;\r\n        director.emit(GomokuGameEvent.ROOM_PUSH);\r\n    }\r\n\r\n    onNet_GameDataChangedPush(msg: MsgGameDataChangedPush) {\r\n        if (!this._gameData) {\r\n            return;\r\n        }\r\n\r\n        if (msg.currentPlayer !== undefined) {\r\n            this._gameData.currentPlayer = msg.currentPlayer;\r\n            director.emit(GomokuGameEvent.TURN_PLAYER_CHANGED, msg.currentPlayer);\r\n        }\r\n\r\n        if (msg.boardData !== undefined) {\r\n            this._gameData.boardData = msg.boardData;\r\n        }\r\n    }\r\n\r\n    onNet_PlayerComesPush(msg: MsgPlayerComesPush) {\r\n        this._gameData.players.push(msg.player);\r\n        director.emit(GomokuGameEvent.PLAYER_COMES, msg.player);\r\n    }\r\n\r\n    onNet_PlayerDataChangedPush(msg: MsgPlayerDataChangedPush) {\r\n        let p = this.getPlayer(msg.uid);\r\n        if (!p) {\r\n            return;\r\n        }\r\n\r\n        if (msg.color != undefined) {\r\n            p.color = msg.color;\r\n        }\r\n    }\r\n\r\n    onNet_PlayerLeavesPush(msg: MsgPlayerLeavesPush) {\r\n        for (let i = 0; i < this._gameData.players.length; ++i) {\r\n            let p = this._gameData.players[i];\r\n            if (p.uid == msg.uid) {\r\n                this._gameData.players.splice(i, 1);\r\n                director.emit(GomokuGameEvent.PLAYER_LEAVES, msg.uid);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    onNet_GameBeginPush(msg: MsgGameBeginPush) {\r\n        if (!this._gameData) {\r\n            return;\r\n        }\r\n\r\n        this._boardMgr.reset();\r\n        this._gameData.players.forEach(v => {\r\n            v.color = '';\r\n        });\r\n\r\n        director.emit(GomokuGameEvent.GAME_BEGIN);\r\n    }\r\n\r\n    onNet_GameOverPush(msg: MsgGameOverPush) {\r\n        director.emit(GomokuGameEvent.GAME_OVER, msg);\r\n    }\r\n\r\n    onNet_PlacePiecePush(msg: MsgPlacePiecePush) {\r\n        this._boardMgr.setGrid(msg.gridX, msg.gridY, msg.value);\r\n        director.emit(GomokuGameEvent.PLACE_PIECE, msg);\r\n    }\r\n\r\n}\r\n\r\nSubGameMgr.inst.registerGameMgr(GomokuGameMgr.inst);","import { _decorator, Camera, Component, director, EventTouch, find, geometry, Input, input, instantiate, Material, Mesh, MeshRenderer, Node, screen, v2, v3, Vec2 } from 'cc';\r\nimport { EasyController, EasyControllerEvent } from '../../core_tgx/easy_controller/EasyController';\r\nimport { GomokuGameEvent, GomokuGameMgr } from '../scripts/GomokuGameMgr';\r\nimport { UserMgr } from '../../module_basic/scripts/UserMgr';\r\nimport { SceneUtil } from '../../core_tgx/base/SceneUtils';\r\nimport { GameMode } from '../../module_basic/scripts/GameMgr';\r\nimport { GomokuAI } from './GomokuAI';\r\nimport { RoomMgr } from '../../module_basic/scripts/RoomMgr';\r\nconst { ccclass, property } = _decorator;\r\n\r\nconst tmpV2 = v2();\r\nconst tmpRay = new geometry.Ray();\r\n\r\nconst gridPlane = new geometry.Plane(0, 1, 0, -0.2);\r\n\r\n@ccclass('GomokuGamePlay')\r\nexport class GomokuGamePlay extends Component {\r\n\r\n    private _piecePool = [];\r\n    getFromPool(v: number) {\r\n        let node: Node = this._piecePool.pop();\r\n        if (!node) {\r\n            node = instantiate(this.white);\r\n        }\r\n        let meshRenderer = node.getComponent(MeshRenderer);\r\n        let mat = this.matBlack;\r\n        if (v == 2) {\r\n            mat = this.matWhite;\r\n        }\r\n        meshRenderer.setMaterial(mat, 0);\r\n        return node;\r\n    }\r\n\r\n    putToPool(node: Node) {\r\n        if (!node) {\r\n            return;\r\n        }\r\n        node.removeFromParent();\r\n        this._piecePool.push(node);\r\n    }\r\n\r\n    @property(Node)\r\n    white: Node;\r\n\r\n    @property(Node)\r\n    black: Node;\r\n\r\n    @property(Node)\r\n    pieceRoot: Node;\r\n\r\n    @property(Material)\r\n    matWhite: Material;\r\n\r\n    @property(Material)\r\n    matWhiteHighlight: Material;\r\n\r\n    @property(Material)\r\n    matBlack: Material;\r\n\r\n    @property(Material)\r\n    matBlackHighlight: Material;\r\n\r\n\r\n    private _touchStartTime = 0;\r\n    private _currentSide = 'black';\r\n    private _touchStartPoint = v2();\r\n\r\n    start() {\r\n        \r\n        this.putToPool(this.white);\r\n        this.putToPool(this.black);\r\n\r\n        EasyController.on(EasyControllerEvent.SCREEN_TOUCH_START, this.onTouchStart, this);\r\n        EasyController.on(EasyControllerEvent.SCREEN_TOUCH_END, this.onTouchEnd, this);\r\n\r\n        director.on(GomokuGameEvent.PLACE_PIECE, this.onPlacePiece, this);\r\n        director.on(GomokuGameEvent.GAME_BEGIN, this.onGameBegin, this);\r\n        director.on(GomokuGameEvent.GAME_OVER, this.onGameOver, this);\r\n        director.on(GomokuGameEvent.ROOM_PUSH, this.onRoomBackByRoomMgr, this);\r\n\r\n        this.cleanBoard();\r\n        \r\n\r\n        if(RoomMgr.inst.gameMode == GameMode.AI){\r\n            this.node.addComponent(GomokuAI);\r\n        }\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        EasyController.off(EasyControllerEvent.SCREEN_TOUCH_START, this.onTouchStart, this);\r\n        EasyController.off(EasyControllerEvent.SCREEN_TOUCH_END, this.onTouchEnd, this);\r\n\r\n        director.off(GomokuGameEvent.PLACE_PIECE, this.onPlacePiece, this);\r\n        director.off(GomokuGameEvent.GAME_BEGIN, this.onGameBegin, this);\r\n        director.off(GomokuGameEvent.GAME_OVER, this.onGameOver, this);\r\n        director.off(GomokuGameEvent.ROOM_PUSH, this.onRoomBackByRoomMgr, this);\r\n    }\r\n    private onRoomBackByRoomMgr() {\r\n        this.initBoard();\r\n    }\r\n    async onGameBegin() {\r\n        await SceneUtil.reloadScene();\r\n        this.scheduleOnce(() => {\r\n            tgx.UIAlert.show(\"游戏开始！\");\r\n        }, 0.1);\r\n    }\r\n\r\n    async onGameOver(data: { winner: string, reason: number }) {\r\n        if (RoomMgr.inst.isPlayer) {\r\n            if (data.reason == 1) {\r\n                tgx.UIAlert.show('对手认输，你赢了！').onClick(() => {\r\n                    RoomMgr.inst.exitRoom();\r\n                });\r\n            }\r\n            else {\r\n                if (data.winner == UserMgr.inst.uid) {\r\n                    tgx.UIAlert.show('你赢了！').onClick(() => {\r\n                        RoomMgr.inst.exitRoom();\r\n                    });;\r\n                }\r\n                else {\r\n                    tgx.UIAlert.show('你输了！').onClick(() => {\r\n                        RoomMgr.inst.exitRoom();\r\n                    });;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            let userInfo = await UserMgr.inst.rpc_GetUserInfo(data.winner);\r\n            if (data.reason == 1) {\r\n                tgx.UIAlert.show('对手认输，玩家[' + userInfo.name + '] 获胜！').onClick(() => {\r\n                    RoomMgr.inst.exitRoom();\r\n                });\r\n            }\r\n            else {\r\n                tgx.UIAlert.show('玩家[' + userInfo.name + '] 获胜！').onClick(() => {\r\n                    RoomMgr.inst.exitRoom();\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    initBoard() {\r\n        this.cleanBoard();\r\n        let sizeInGrid = GomokuGameMgr.inst.boardMgr.sizeInGrid;\r\n        for (let i = 0; i < sizeInGrid; ++i) {\r\n            for (let j = 0; j < sizeInGrid; ++j) {\r\n                let v = GomokuGameMgr.inst.boardMgr.getGridData(i, j);\r\n                if (v) {\r\n                    this.placePiece(i, j, v);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    onTouchStart(evt: EventTouch) {\r\n        this._touchStartTime = Date.now();\r\n        this._touchStartPoint.set(evt.touch.getLocation());\r\n    }\r\n\r\n    async onTouchEnd(evt: EventTouch) {\r\n\r\n        if(!RoomMgr.inst.data.isPlaying)\r\n        {\r\n            return;\r\n        }\r\n\r\n        let dx = this._touchStartPoint.x - evt.touch.getLocationX();\r\n        let dy = this._touchStartPoint.y - evt.touch.getLocationY();\r\n\r\n        /**\r\n         * @en if touch point has been moved or held more than 200 ms, ignore this to avoid mis-operation.\r\n         * @zh 如果触点有移动，或者按下时间超过200ms 则不走着子流程，防止误触\r\n        **/\r\n        if (dx * dx + dy * dy > 1 || Date.now() - this._touchStartTime > 200) {\r\n            return;\r\n        }\r\n        if (!GomokuGameMgr.inst.isMyTurn) {\r\n            return;\r\n        }\r\n\r\n        evt.getLocation(tmpV2);\r\n        console.log(tmpV2);\r\n        let camera = find('Main Camera').getComponent(Camera);\r\n        camera.screenPointToRay(tmpV2.x, tmpV2.y, tmpRay);\r\n\r\n        let dist = geometry.intersect.rayPlane(tmpRay, gridPlane);\r\n\r\n        let point = v3();\r\n        tmpRay.computeHit(point, dist);\r\n\r\n\r\n        //let pos = GomokuGridMgr.inst.getNearestGridCenter(point.x, point.z);\r\n        let grid = GomokuGameMgr.inst.boardMgr.posToGrid(point.x, point.z);\r\n        let v = GomokuGameMgr.inst.boardMgr.getGridData(grid.x, grid.y);\r\n        if (v) {\r\n            //tgxUIAlert.show('此处已有子!');\r\n            return;\r\n        }\r\n\r\n        let placeV = GomokuGameMgr.inst.selfPlayer.color == 'black' ? 1 : 2;\r\n\r\n        let placer = this.getFromPool(placeV);\r\n\r\n        let pos = GomokuGameMgr.inst.boardMgr.gridToPos(grid.x, grid.y);\r\n        placer.setPosition(pos.x, 0, pos.y);\r\n\r\n        let ret = await GomokuGameMgr.inst.rpc_PlacePiece(grid.x, grid.y);\r\n        if (!ret.isSucc) {\r\n            tgx.UIAlert.show(ret.err.message);\r\n        }\r\n        this.putToPool(placer);\r\n    }\r\n\r\n    private _lastNewPiece: Node = null;\r\n    private _lastNewPieceValue = 0;\r\n    onPlacePiece(data: { gridX: number, gridY: number }) {\r\n        let v = GomokuGameMgr.inst.boardMgr.getGridData(data.gridX, data.gridY);\r\n        let newPiece = this.placePiece(data.gridX, data.gridY, v);\r\n\r\n        if (this._lastNewPiece) {\r\n            let normalMat = this._lastNewPieceValue == 1 ? this.matBlack : this.matWhite;\r\n            this._lastNewPiece.getComponent(MeshRenderer).setMaterial(normalMat, 0);\r\n        }\r\n\r\n        let highlightMat = v == 1 ? this.matBlackHighlight : this.matWhiteHighlight;\r\n        newPiece.getComponent(MeshRenderer).setMaterial(highlightMat, 0);\r\n        this._lastNewPiece = newPiece;\r\n        this._lastNewPieceValue = v;\r\n    }\r\n\r\n    cleanBoard() {\r\n        for (let i = this.pieceRoot.children.length - 1; i >= 0; --i) {\r\n            this.putToPool(this.pieceRoot.children[i]);\r\n        }\r\n        this._lastNewPiece = null;\r\n    }\r\n\r\n    placePiece(gridX: number, gridY: number, v: number) {\r\n        let node = this.getFromPool(v);\r\n        let pos = GomokuGameMgr.inst.boardMgr.gridToPos(gridX, gridY);\r\n        node.setPosition(pos.x, 0, pos.y);\r\n        this.pieceRoot.addChild(node);\r\n        return node;\r\n    }\r\n\r\n    randomLayPieceTest() {\r\n        for (let i = 0; i < 64; ++i) {\r\n            for (let j = 0; j < 64; ++j) {\r\n                let v = Math.floor(Math.random() * 3);\r\n                GomokuGameMgr.inst.boardMgr.setGrid(i, j, v);\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < 64; ++i) {\r\n            for (let j = 0; j < 64; ++j) {\r\n                let pos = GomokuGameMgr.inst.boardMgr.gridToPos(i, j);\r\n                let v = GomokuGameMgr.inst.boardMgr.getGridData(i, j);\r\n                console.log(v);\r\n                if (v != 0) {\r\n                    let prefab = this.black;\r\n                    if (v == 2) {\r\n                        prefab = this.white;\r\n                    }\r\n                    let node: Node = instantiate(prefab);\r\n                    node.setPosition(pos.x, 0, pos.y);\r\n                    this.node.addChild(node);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n}\r\n\r\n\r\n","import { _decorator, Component, Node, Sprite, UI, sys } from 'cc';\r\nimport { SceneUtil } from '../../core_tgx/base/SceneUtils';\r\nimport { GameMode } from '../../module_basic/scripts/GameMgr';\r\nimport { UserMgr } from '../../module_basic/scripts/UserMgr';\r\nimport { UI_SearchingRival } from '../../module_basic/ui_searching_rival/UI_SearchingRival';\r\nimport { ModuleDef } from '../../scripts/ModuleDef';\r\nimport { SceneDef } from '../../scripts/SceneDef';\r\nimport { GomokuGameMgr } from '../scripts/GomokuGameMgr';\r\nimport { UICreateRoom } from '../../module_basic/ui_create_room/UICreateRoom';\r\nimport { UIChat } from '../../module_basic/ui_chat/UIChat';\r\nimport { UIAnnouncement } from '../../module_basic/ui_announcement/UIAnnouncement';\r\nimport { lobbyNet } from '../../module_basic/scripts/NetGameServer';\r\nimport { UIRoomList } from '../../module_basic/ui_room_list/UIRoomList';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GomokuLobbyScene')\r\nexport class GomokuLobbyScene extends Component {\r\n\r\n    @property(Node) announcementPlacer:Node;\r\n\r\n    async start() {\r\n        if (!UserMgr.inst.uid) {\r\n            tgx.SceneUtil.loadScene(SceneDef.START);\r\n            return;\r\n        }\r\n\r\n        tgx.UIMgr.inst.closeAll();\r\n\r\n        if(lobbyNet.type != 'http'){\r\n            tgx.UIMgr.inst.showUI(UIChat,null,null,lobbyNet);\r\n        }\r\n\r\n        tgx.UIMgr.inst.showUI(UIAnnouncement,(ui:UIAnnouncement)=>{\r\n            ui.setPosition(this.announcementPlacer.position.x, this.announcementPlacer.position.y);\r\n        });\r\n    }\r\n\r\n    onBtnLobby() {\r\n        SceneUtil.loadScene(SceneDef.LOBBY);\r\n    }\r\n\r\n    onBtnQuickPlayClicked() {\r\n        tgx.UIMgr.inst.showUI(UI_SearchingRival, (ui: UI_SearchingRival) => {\r\n            this.scheduleOnce(()=>{\r\n                ui.startMatch('gomoku');\r\n            }, 1.5);\r\n        });\r\n    }\r\n\r\n    onBtnRoomListClicked(){\r\n        tgx.UIMgr.inst.showUI(UIRoomList);\r\n    }\r\n\r\n    onBtnTraningModeClicked() {\r\n        GomokuGameMgr.inst.initAIMode();\r\n        tgx.SceneUtil.loadScene(GomokuGameMgr.inst.gameScene);\r\n    }\r\n\r\n    onBtnCreate() {\r\n        tgx.UIMgr.inst.showUI(UICreateRoom);\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n}","import { _decorator, Component, Node } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('GomokuViewPlayer')\r\nexport class GomokuViewPlayer extends Component {\r\n    @property(tgx.CharacterMovement)\r\n    movement: tgx.CharacterMovement;\r\n\r\n    @property(tgx.ThirdPersonCameraCtrl)\r\n    cameraCtrl: tgx.ThirdPersonCameraCtrl;\r\n\r\n    private _originVelocity: number = 0;\r\n    private _originLen: number = 0;\r\n    start() {\r\n        this._originVelocity = this.movement.velocity;\r\n        this._originLen = this.cameraCtrl.len;\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        this.movement.velocity = this.cameraCtrl.len / this._originLen * this._originVelocity;\r\n    }\r\n}\r\n\r\n\r\n"]}