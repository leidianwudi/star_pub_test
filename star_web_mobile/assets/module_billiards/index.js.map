{"version":3,"sources":["../file:/D:/work/github/star_client/assets/module_billiards/scripts/file:/D:/work/github/star_client/assets/module_billiards/scripts/AudioPlayer.ts","../file:/D:/work/github/star_client/assets/module_billiards/components/file:/D:/work/github/star_client/assets/module_billiards/components/BallCollision.ts","../file:/D:/work/github/star_client/assets/module_billiards/scripts/file:/D:/work/github/star_client/assets/module_billiards/scripts/BallUVSetter.ts","../file:/D:/work/github/star_client/assets/module_billiards/scripts/file:/D:/work/github/star_client/assets/module_billiards/scripts/BilliardsGameHUD.ts","../file:/D:/work/github/star_client/assets/module_billiards/scripts/file:/D:/work/github/star_client/assets/module_billiards/scripts/BilliardsGameMgr.ts","../file:/D:/work/github/star_client/assets/module_billiards/scripts/file:/D:/work/github/star_client/assets/module_billiards/scripts/BilliardsLobbyScene.ts","../file:/D:/work/github/star_client/assets/module_billiards/components/file:/D:/work/github/star_client/assets/module_billiards/components/BilliardTableControl.ts","../file:/D:/work/github/star_client/assets/module_billiards/scripts/file:/D:/work/github/star_client/assets/module_billiards/scripts/FixedPhysics.ts","../file:/D:/work/github/star_client/assets/module_billiards/scripts/config/file:/D:/work/github/star_client/assets/module_billiards/scripts/config/GConst.ts","../file:/D:/work/github/star_client/assets/module_billiards/scripts/config/file:/D:/work/github/star_client/assets/module_billiards/scripts/config/GEnum.ts","../file:/D:/work/github/star_client/assets/module_billiards/components/file:/D:/work/github/star_client/assets/module_billiards/components/HitIndicator.ts","../file:/D:/work/github/star_client/assets/module_billiards/components/file:/D:/work/github/star_client/assets/module_billiards/components/PocketTrigger.ts","../file:/D:/work/github/star_client/assets/module_billiards/components/file:/D:/work/github/star_client/assets/module_billiards/components/PocktedBalls.ts"],"names":["AudioPlayer","playOneShot","sound","volume","tgx","AudioMgr","inst","ModuleDef","BILLIARDS","play","stop","pause","_RF","pop","ccclass","_decorator","property","tmp_V1","v3","tmp_V2","BallCollision","_dec","_class","_class2","_Component","_inheritsLoose","apply","arguments","_proto","prototype","start","getComponent","Collider","on","onCollisionEnter","event","name","otherCollider","node","selfCollider","RigidBody","getLinearVelocity","max","length","collideWithBalls","Component","executeInEditMode","atlasWith","altasHeight","paddingLeft","paddingTop","gap","texWidth","texHeight","maxCols","scaleU","scaleV","BallUVSetter","_this","_len","args","Array","_key","call","concat","_initializerDefineProperty","_descriptor","_assertThisInitialized","_lastBallId","setTilingOffset","ballId","col","row","Math","floor","tx","ty","offsetU","offsetV","meshRenderer","MeshRenderer","setInstancedAttribute","update","deltaTime","_applyDecoratedDescriptor","configurable","enumerable","writable","initializer","BilliardsGameHUD","_dec2","GamePlayerInfo","_dec3","_dec4","Label","_dec5","Button","_dec6","Node","_dec7","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","UserMgr","uid","SceneUtil","loadScene","SceneDef","START","UIMgr","closeAll","initEventListener","RoomMgr","isOnline","rpc_Ready","reStart","onRoomBackByRoomMgr","rpc_ClientReady","lblRoomId","string","data","displayId","initUser","initWatcherList","updateCtrlUI","showUI","UIChat","gameNet","leftPlayer","setUserId","BilliardsGameMgr","leftUserId","rightPlayer","rightUserId","u","selfUser","btnReady","active","playerId","ready","director","BilliardsGameEvent","TURN_PLAYER_CHANGED","RoomEvent","NEW_USER_COMES","onNewUserComes","USER_LEAVES","onUserLeaves","WATCHER_LIST_CHANGED","ROOM_PUSH","SubGameMessage","EnterSubGameRoomSuccess","onDestroy","off","isPlayer","_initWatcherList","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_RoomMgr$inst$data","usersData","i","userIds","c","_i","newNode","_i2","_c","icon","wrap","_callee$","_context","prev","next","watcherList","parent","userList","abrupt","children","instantiate","addChild","push","rpc_GetUserInfos","Sprite","setUserIconAndName","gameMode","GameMode","SOLO","tips","AI","isWatcher","playerNum","isMyTurn","onBtnReadyClicked","onBtnExitClicked","_onBtnExitClicked","_callee3","_callee3$","_context3","UIAlert","show","onClick","ok","entryScene","isPlaying","_callee2","_callee2$","_context2","exitRoom","HIT_BALL","HIT_BALL_COMPLETE","CUE_CHANGED","BALL_SYNC","PLAYER_DATA_CHANGED","GAME_BEGIN","GAME_OVER","PLAYER_COMES","PLAYER_LEAVES","_GameMgr","_gameData","order","cueDir","_gameType","SubGameDef","_entryScene","bundle","_gameScene","initNetMsgHandlers","listenMsg","onNet_GameDataSyncPush","onNet_GameDataChangedPush","onNet_PlayerComesPush","onNet_PlayerDataChangedPush","onNet_PlayerLeavesPush","onNet_GameBeginPush","onNet_GameOverPush","onNet_HitBallPush","onNet_HitBallCompletePush","onNet_AdjustCuePush","reset","initSoloMode","SubGameMgr","gameMgr","getPlayer","userId","players","p","getPlayerIndex","isPocketed","pocketedBalls","indexOf","sendMsg_HitBall","msg","sendMsg","sendMsg_HitBallComplete","sendMsg_AdjustCue","sendMsg_BallsDataSync","console","log","emit","ballsData","undefined","Vec3","set","x","y","z","currentPlayer","player","splice","forEach","v","hitImpulse","direction","_createClass","key","get","_inst","GameMgr","registerGameMgr","BilliardsLobbyScene","_start","_this2","lobbyNet","type","UIAnnouncement","ui","setPosition","announcementPlacer","position","onBtnLobby","LOBBY","onBtnQuickPlayClicked","_this3","UI_SearchingRival","scheduleOnce","startMatch","onBtnRoomListClicked","UIRoomList","onBtnTraningModeClicked","UIWaiting","gameScene","onBtnCreate","UICreateRoom","MAX_HIT_STRENGTH","MAX_BALL_NUM","BALL_RADIUS","tmpV3_1","tmpV3_2","tmpV3_3","planes","geometry","Plane","hitRay","Ray","BilliardTableControl","Slider","_dec8","_dec9","Prefab","_dec10","_dec11","_dec12","HitIndicator","_dec13","PocktedBalls","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","_descriptor12","_allBalls","_impulse","_cueRot","_cueOffset","_hitOffset","_whiteballOrignalPos","_ballsPosData","_ballsQuatData","_needUpdatePhysics","_cueSyncData","_lastProgress","_lastSlideTime","_slideLen","_newPocketedBallIds","_hasPocketed","_isBallMoveByHit","_currentHitOrder","_lastSyncTime","_isGameOver","_fixedDt","GameConst","MAX_FPS","cue","getPosition","whiteBall","gameData","curDirection","curDir","setRotationFromEuler","indicatorWhiteBall","beHitBalls","worldPosition","getSyncData","doBallsDataSync","resetBalls","onTurnPlayerChanged","destroy","ball","ballPrefab","addComponent","hitBallNodeName","setBallData","PhysicsSystem","instance","physicsWorld","syncSceneToPhysics","_initEventListener","onEvent_CueChanged","onEvent_HitBall","onEvent_BallSync","FixedPhysics","EVENT_UPDATE_FINISHED","onEvent_FixedPhysicsUpdateFinished","PocketTrigger","EVENT_HIT_POCKET","onPocket","powerSlider","handle","Input","EventType","TOUCH_END","onEvent_TouchEnd","TOUCH_CANCEL","directionSlider","onDirectionSliderTouchEnd","Director","EVENT_AFTER_UPDATE","onEvent_PostUpdate","onGameBegin","onGameOver","enabled","progress","hideIndicator","hitIndicator","hideAll","dirToDegree","d","normalize","degree","atan","PI","checkBorders","ray","mint","hitPlane","t","intersect","rayPlane","computeLen","pos","len","o","adjustIndicator","radian","misc","degreesToRadians","eulerAngles","rotateY","SphereCollider","center","targetBall","pb","predict","setHitLine","d2","subtract","setBallLine","up","cross","setWhiteLine","ret","isInPocket","table","pocket","r","worldScale","dx","dz","dot","n","Pb","M","N","a","b","t1","sqrt","t2","min","_onGameBegin","_onGameOver","userInfo","reason","winner","rpc_GetUserInfo","sent","_x","onBtnHitBallClicked","isOutOfTable","clearPhysicsState","setWorldPosition","syncActionToServer","onPowerChanged","slider","addPosX","addPosY","newCuePos","power","onDirectionChanged","Date","now","deltaProgress","abs","dt","factor","slideSpeed","addtionalY","curRot","newHitBallRot","hit","tween","doHitBall","to","easing","then","needImpulse","cur","wPos","wRot","worldRotation","w","ballsPosData","ballsQuatData","syncBallData","isHit","completeData","nextPlayer","getNextTurnPlayer","onEvent_HitComplete","isSelfTurn","playerList","nextIdx","impulse","applyImpulse","checkGameOver","pocketedNum","clearState","rg","rx","ry","rz","rw","setWorldRotation","fixedUpdate","isGameOver","newPocketedBalls","gameOver","reloadScene","subStepCount","accumulator","postUpdateStepCount","maxSubSteps","MAX_STEPS","autoSimulation","fixedTimeStep","enable","EVENT_BEFORE_PHYSICS","step","emitEvents","syncAfterEvents","EVENT_AFTER_PHYSICS","resUrl","joinRoom","userCenter","gameRoom","loginMgrChildUrl","title","inputUserName","inputPassWord","switchTypeBtnLabel","hallMgrChildUrl","hallMgr","roomBtns","joinRoomMgrChildUrl","joinMgr","inputRoom","colorList","Color","CYAN","GREEN","MAGENTA","GRAY","RED","YELLOW","GameEnum","pageFlag","Enum","common_Problem","tchnical_Proposal","tools_Techniques","level","normal","hight","viewType","userActionType","register","login","ColliderGroup","DEFAULT","HOLE","BALL","onLoad","hitLine","ballLine","whiteLine","rotY","setLine","setScale","initListener","onTriggerEnter","triggerEvent","getGroup","GEnum","ballCollider","_prefab","initPocketedBalls","onEvent_PlayerDataChanged","root","isRight","addPocketedBall","removeAllChildren","size","signX","pocketedBall","index"],"mappings":";;;;;;;;;;UAGaA,WAAW;QAAA,SAAAA;QAAAA,WAAA,CAENC,WAAW,GAAzB,SAAAA,YAA0BC,KAAyB,EAAEC,MAAc,EAAQ;UAAA,IAAtBA,MAAc;YAAdA,MAAc,GAAG,GAAG;;UACrEC,GAAG,CAACC,QAAQ,CAACC,IAAI,CAACL,WAAW,CAACC,KAAK,EAAEC,MAAM,EAAEI,SAAS,CAACC,SAAS,CAAC;SACpE;QAAAR,WAAA,CAEaS,IAAI,GAAlB,SAAAA,KAAmBP,KAAa,EAAEC,MAAc,EAAQ;UAAA,IAAtBA,MAAc;YAAdA,MAAc,GAAG,GAAG;;UAClDC,GAAG,CAACC,QAAQ,CAACC,IAAI,CAACG,IAAI,CAACP,KAAK,EAAEC,MAAM,EAAEI,SAAS,CAACC,SAAS,CAAC;SAC7D;QAAAR,WAAA,CAEaU,IAAI,GAAlB,SAAAA,OAAqB;UACjBN,GAAG,CAACC,QAAQ,CAACC,IAAI,CAACI,IAAI,EAAE;SAC3B;QAAAV,WAAA,CAEaW,KAAK,GAAnB,SAAAA,QAAsB;UAClBP,GAAG,CAACC,QAAQ,CAACC,IAAI,CAACK,KAAK,EAAE;SAC5B;QAAA,OAAAX,WAAA;MAAA;cACJ,CAAAY,GAAA,CAAAC,GAAA;;;;;;;;;;;;;;;;;;;;;MCnBD,IAAQC,OAAO,GAAeC,UAAU,CAAhCD,OAAO;QAAEE,QAAQ,GAAKD,UAAU,CAAvBC,QAAQ;MAEzB,IAAMC,MAAM,GAAGC,EAAE,EAAE;MACnB,IAAMC,MAAM,GAAGD,EAAE,EAAE;UAGNE,aAAa,6BAAAC,IAAA,GADzBP,OAAO,CAAC,eAAe,CAAC,EAAAO,IAAA,CAAAC,MAAA,IAAAC,OAAA,0BAAAC,UAAA;QAAAC,cAAA,CAAAL,aAAA,EAAAI,UAAA;QAAA,SAAAJ;UAAA,OAAAI,UAAA,CAAAE,KAAA,OAAAC,SAAA;;QAAA,IAAAC,MAAA,GAAAR,aAAA,CAAAS,SAAA;QAAAD,MAAA,CAGrBE,KAAK,GAAL,SAAAA,QAAQ;UACJ,IAAI,CAACC,YAAY,CAACC,QAAQ,CAAC,CAACC,EAAE,CAAC,kBAAkB,EAAE,IAAI,CAACC,gBAAgB,CAAC;SAC5E;QAAAN,MAAA,CAEDM,gBAAgB,GAAhB,SAAAA,iBAAiBC,KAAqB,EAAC;UACnC,IAAIC,IAAI,GAAGD,KAAK,CAACE,aAAa,CAACC,IAAI,CAACF,IAAI;UACxC,IAAGA,IAAI,IAAI,YAAY,IAAIA,IAAI,IAAI,YAAY,IAAIA,IAAI,IAAI,OAAO,EAAC;YAC/D;;UAEJD,KAAK,CAACI,YAAY,CAACD,IAAI,CAACP,YAAY,CAACS,SAAS,CAAC,CAACC,iBAAiB,CAACxB,MAAM,CAAC;UACzEkB,KAAK,CAACE,aAAa,CAACC,IAAI,CAACP,YAAY,CAACS,SAAS,CAAC,CAACC,iBAAiB,CAACtB,MAAM,CAAC;UAC1E,IAAIuB,GAAG,GAAGzB,MAAM,CAAC0B,MAAM,EAAE,GAAGxB,MAAM,CAACwB,MAAM,EAAE;UAC3C,IAAGD,GAAG,GAAGtB,aAAa,CAACwB,gBAAgB,EAAC;YACpCxB,aAAa,CAACwB,gBAAgB,GAAGF,GAAG;;SAE3C;QAAA,OAAAtB,aAAA;MAAA,EAjB8ByB,SAAS,GAAAtB,OAAA,CAC1BqB,gBAAgB,GAAU,CAAC,EAAArB,OAAA,MAAAD,MAAA;cAiB5C,CAAAV,GAAA,CAAAC,GAAA;;;;;;;;;;;;;;;;;;;;;;MCxBD,IAAQC,OAAO,GAAkCC,UAAU,CAAnDD,OAAO;QAAEE,QAAQ,GAAwBD,UAAU,CAA1CC,QAAQ;QAAE8B,iBAAiB,GAAK/B,UAAU,CAAhC+B,iBAAiB;MAE5C,IAAIC,SAAS,GAAG,GAAG;MACnB,IAAIC,WAAW,GAAG,GAAG;MACrB,IAAIC,WAAW,GAAG,EAAE;MACpB,IAAIC,UAAU,GAAG,EAAE;MACnB,IAAIC,GAAG,GAAG,CAAC;MAEX,IAAIC,QAAQ,GAAG,GAAG;MAClB,IAAIC,SAAS,GAAG,EAAE;MAClB,IAAIC,OAAO,GAAG,CAAC;MAEf,IAAIC,MAAM,GAAGH,QAAQ,GAAGL,SAAS;MACjC,IAAIS,MAAM,GAAGH,SAAS,GAAGL,WAAW;UAIvBS,YAAY,4BAAApC,IAAA,GAFxBP,OAAO,CAAC,cAAc,CAAC,EAAAO,IAAA,CAAAC,MAAA,GACvBwB,iBAAiB,CAAAxB,MAAA,IAAAC,OAAA,0BAAAC,UAAA;QAAAC,cAAA,CAAAgC,YAAA,EAAAjC,UAAA;QAAA,SAAAiC;UAAA,IAAAC,KAAA;UAAA,SAAAC,IAAA,GAAAhC,SAAA,CAAAgB,MAAA,EAAAiB,IAAA,OAAAC,KAAA,CAAAF,IAAA,GAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;YAAAF,IAAA,CAAAE,IAAA,IAAAnC,SAAA,CAAAmC,IAAA;;UAAAJ,KAAA,GAAAlC,UAAA,CAAAuC,IAAA,CAAArC,KAAA,CAAAF,UAAA,SAAAwC,MAAA,CAAAJ,IAAA;UAAAK,0BAAA,CAAAP,KAAA,YAAAQ,WAAA,EAAAC,sBAAA,CAAAT,KAAA;UAAAA,KAAA,CAKdU,WAAW,GAAW,CAAC,CAAC;UAAA,OAAAV,KAAA;;QAAA,IAAA9B,MAAA,GAAA6B,YAAA,CAAA5B,SAAA;QAAAD,MAAA,CAExBE,KAAK,GAAL,SAAAA,QAAQ;UACJ,IAAI,CAACuC,eAAe,CAAC,IAAI,CAACC,MAAM,CAAC;SACpC;QAAA1C,MAAA,CAEDyC,eAAe,GAAf,SAAAA,gBAAgBC,MAAc,EAAE;UAC5B,IAAIC,GAAG,GAAGD,MAAM,GAAGhB,OAAO;UAC1B,IAAIkB,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACJ,MAAM,GAAGhB,OAAO,CAAC;UACtC,IAAIqB,EAAE,GAAG1B,WAAW,GAAGsB,GAAG,IAAInB,QAAQ,GAAGD,GAAG,CAAC;UAC7C,IAAIyB,EAAE,GAAG1B,UAAU,GAAGsB,GAAG,IAAInB,SAAS,GAAGF,GAAG,CAAC;UAC7C,IAAI0B,OAAO,GAAGF,EAAE,GAAG5B,SAAS;UAC5B,IAAI+B,OAAO,GAAGF,EAAE,GAAG5B,WAAW;UAC9B,IAAI+B,YAAY,GAAG,IAAI,CAACzC,IAAI,CAACP,YAAY,CAACiD,YAAY,CAAC;UACvDD,YAAY,CAACE,qBAAqB,CAAC,gBAAgB,EAAE,CAAC1B,MAAM,EAAEC,MAAM,EAAEqB,OAAO,EAAEC,OAAO,CAAC,CAAC;SAC3F;QAAAlD,MAAA,CAEDsD,MAAM,GAAN,SAAAA,OAAOC,SAAiB,EAAE;UACtB,IAAI,IAAI,CAACf,WAAW,IAAI,IAAI,CAACE,MAAM,EAAE;YACjC,IAAI,CAACD,eAAe,CAAC,IAAI,CAACC,MAAM,CAAC;YACjC,IAAI,CAACF,WAAW,GAAG,IAAI,CAACE,MAAM;;SAErC;QAAA,OAAAb,YAAA;MAAA,EA1B6BZ,SAAS,GAAAqB,WAAA,GAAAkB,yBAAA,CAAA7D,OAAA,CAAAM,SAAA,aACtCb,QAAQ;QAAAqE,YAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,WAAA,WAAAA;UAAA,OACQ,CAAC;;MAAA,IAAAjE,OAAA,MAAAD,MAAA,KAAAA,MAAA;cAyBrB,CAAAV,GAAA,CAAAC,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCnCD,IAAQC,OAAO,GAAeC,UAAU,CAAhCD,OAAO;QAAEE,QAAQ,GAAKD,UAAU,CAAvBC,QAAQ;UAGZyE,gBAAgB,gCAAApE,IAAA,GAD5BP,OAAO,CAAC,kBAAkB,CAAC,EAAA4E,KAAA,GAGvB1E,QAAQ,CAAC2E,cAAc,CAAC,EAAAC,KAAA,GAIxB5E,QAAQ,CAAC2E,cAAc,CAAC,EAAAE,KAAA,GAGxB7E,QAAQ,CAAC8E,KAAK,CAAC,EAAAC,KAAA,GAGf/E,QAAQ,CAACgF,MAAM,CAAC,EAAAC,KAAA,GAGhBjF,QAAQ,CAACkF,IAAI,CAAC,EAAAC,KAAA,GAGdnF,QAAQ,CAAC8E,KAAK,CAAC,EAAAzE,IAAA,CAAAC,MAAA,IAAAC,OAAA,0BAAAC,UAAA;QAAAC,cAAA,CAAAgE,gBAAA,EAAAjE,UAAA;QAAA,SAAAiE;UAAA,IAAA/B,KAAA;UAAA,SAAAC,IAAA,GAAAhC,SAAA,CAAAgB,MAAA,EAAAiB,IAAA,OAAAC,KAAA,CAAAF,IAAA,GAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;YAAAF,IAAA,CAAAE,IAAA,IAAAnC,SAAA,CAAAmC,IAAA;;UAAAJ,KAAA,GAAAlC,UAAA,CAAAuC,IAAA,CAAArC,KAAA,CAAAF,UAAA,SAAAwC,MAAA,CAAAJ,IAAA;UAAAK,0BAAA,CAAAP,KAAA,gBAAAQ,WAAA,EAAAC,sBAAA,CAAAT,KAAA;;UAdhBO,0BAAA,CAAAP,KAAA,iBAAA0C,YAAA,EAAAjC,sBAAA,CAAAT,KAAA;UAAAO,0BAAA,CAAAP,KAAA,UAAA2C,YAAA,EAAAlC,sBAAA,CAAAT,KAAA;UAAAO,0BAAA,CAAAP,KAAA,cAAA4C,YAAA,EAAAnC,sBAAA,CAAAT,KAAA;UAAAO,0BAAA,CAAAP,KAAA,iBAAA6C,YAAA,EAAApC,sBAAA,CAAAT,KAAA;UAAAO,0BAAA,CAAAP,KAAA,eAAA8C,YAAA,EAAArC,sBAAA,CAAAT,KAAA;UAAA,OAAAA,KAAA;;QAAA,IAAA9B,MAAA,GAAA6D,gBAAA,CAAA5D,SAAA;;;QAkBAD,MAAA,CACAE,KAAK,GAAL,SAAAA,QAAQ;UACJ,IAAI,CAAC2E,OAAO,CAACnG,IAAI,CAACoG,GAAG,EAAE;YACnBtG,GAAG,CAACuG,SAAS,CAACC,SAAS,CAACC,QAAQ,CAACC,KAAK,CAAC;YACvC;;UAEJ1G,GAAG,CAAC2G,KAAK,CAACzG,IAAI,CAAC0G,QAAQ,EAAE;UACzB,IAAI,CAACC,iBAAiB,EAAE;UACxB,IAAIC,OAAO,CAAC5G,IAAI,CAAC6G,QAAQ,EAAE;YACvBD,OAAO,CAAC5G,IAAI,CAAC8G,SAAS,EAAE;YACxB,IAAI,CAACC,OAAO,EAAE;WACjB,MAED;YACI,IAAI,CAACC,mBAAmB,EAAE;;;;;;QAKlC1F,MAAA,CAESyF,OAAO,GAAf,SAAAA,UAAwB;UACrBH,OAAO,CAAC5G,IAAI,CAACiH,eAAe,EAAE;SAEjC;QAAA3F,MAAA,CACO0F,mBAAmB,GAA3B,SAAAA,sBACA;UACI,IAAIJ,OAAO,CAAC5G,IAAI,CAAC6G,QAAQ,EAAE;YACvB,IAAI,CAACK,SAAS,CAACC,MAAM,GAAGP,OAAO,CAAC5G,IAAI,CAACoH,IAAI,CAACC,SAAS;WACtD,MACI;YACD,IAAI,CAACH,SAAS,CAACC,MAAM,GAAG,EAAE;;UAE9B,IAAI,CAACG,QAAQ,EAAE;UACf,IAAI,CAACC,eAAe,EAAE;UACtB,IAAI,CAACC,YAAY,EAAE;UACnB,IAAIZ,OAAO,CAAC5G,IAAI,CAAC6G,QAAQ,EAAE;YACvB/G,GAAG,CAAC2G,KAAK,CAACzG,IAAI,CAACyH,MAAM,CAACC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAEC,OAAO,CAAC;;;;;;QAG1DrG,MAAA,CACAgG,QAAQ,GAAR,SAAAA,WAAW;UACP,IAAIV,OAAO,CAAC5G,IAAI,CAAC6G,QAAQ,EAAE;YACvB,IAAI,CAACe,UAAU,CAACC,SAAS,CAACC,gBAAgB,CAAC9H,IAAI,CAAC+H,UAAU,CAAC;YAC3D,IAAI,CAACC,WAAW,CAACH,SAAS,CAACC,gBAAgB,CAAC9H,IAAI,CAACiI,WAAW,CAAC;YAE7D,IAAIC,CAAC,GAAGtB,OAAO,CAAC5G,IAAI,CAACmI,QAAQ;YAC7B,IAAI,CAACC,QAAQ,CAACpG,IAAI,CAACqG,MAAM,GAAGH,CAAC,IAAIA,CAAC,CAACI,QAAQ,IAAI,CAACJ,CAAC,CAACK,KAAK;WAC1D,MACI;YACD,IAAI,CAACH,QAAQ,CAACpG,IAAI,CAACqG,MAAM,GAAG,KAAK;YACjC,IAAI,CAACL,WAAW,CAAChG,IAAI,CAACqG,MAAM,GAAG,KAAK;YACpC,IAAI,CAACT,UAAU,CAACC,SAAS,CAAC1B,OAAO,CAACnG,IAAI,CAACoG,GAAG,CAAC;;;;;;;;QAKnD9E,MAAA,CACAqF,iBAAiB,GAAjB,SAAAA,oBAAoB;UAChB6B,QAAQ,CAAC7G,EAAE,CAAC8G,kBAAkB,CAACC,mBAAmB,EAAE,IAAI,CAAClB,YAAY,EAAE,IAAI,CAAC;UAC5EgB,QAAQ,CAAC7G,EAAE,CAACgH,SAAS,CAACC,cAAc,EAAE,IAAI,CAACC,cAAc,EAAE,IAAI,CAAC;UAChEL,QAAQ,CAAC7G,EAAE,CAACgH,SAAS,CAACG,WAAW,EAAE,IAAI,CAACC,YAAY,EAAE,IAAI,CAAC;UAC3DP,QAAQ,CAAC7G,EAAE,CAACgH,SAAS,CAACK,oBAAoB,EAAE,IAAI,CAACzB,eAAe,EAAE,IAAI,CAAC;UACvEiB,QAAQ,CAAC7G,EAAE,CAAC8G,kBAAkB,CAACQ,SAAS,EAAE,IAAI,CAACjC,mBAAmB,EAAE,IAAI,CAAC;UACzEwB,QAAQ,CAAC7G,EAAE,CAACuH,cAAc,CAACC,uBAAuB,EAAC,IAAI,CAACpC,OAAO,EAAC,IAAI,CAAC;SACxE;QAAAzF,MAAA,CAES8H,SAAS,GAAnB,SAAAA,YAA4B;UACxBZ,QAAQ,CAACa,GAAG,CAACZ,kBAAkB,CAACC,mBAAmB,EAAE,IAAI,CAAClB,YAAY,EAAE,IAAI,CAAC;UAC7EgB,QAAQ,CAACa,GAAG,CAACV,SAAS,CAACC,cAAc,EAAE,IAAI,CAACC,cAAc,EAAE,IAAI,CAAC;UACjEL,QAAQ,CAACa,GAAG,CAACV,SAAS,CAACG,WAAW,EAAE,IAAI,CAACC,YAAY,EAAE,IAAI,CAAC;UAC5DP,QAAQ,CAACa,GAAG,CAACV,SAAS,CAACK,oBAAoB,EAAE,IAAI,CAACzB,eAAe,EAAE,IAAI,CAAC;UACxEiB,QAAQ,CAACa,GAAG,CAACZ,kBAAkB,CAACQ,SAAS,EAAE,IAAI,CAACjC,mBAAmB,EAAE,IAAI,CAAC;UAC1EwB,QAAQ,CAACa,GAAG,CAACH,cAAc,CAACC,uBAAuB,EAAC,IAAI,CAACpC,OAAO,EAAC,IAAI,CAAC;;;;;QAE1EzF,MAAA,CAEAuH,cAAc,GAAd,SAAAA,eAAezB,IAAI,EAAE;UACjB,IAAIA,IAAI,CAACkC,QAAQ,EAAE;YACf,IAAI,CAAChC,QAAQ,EAAE;WAClB,MACI;YACD,IAAI,CAACC,eAAe,EAAE;;SAE7B;QAAAjG,MAAA,CAEDyH,YAAY,GAAZ,SAAAA,aAAa3B,IAAI,EAAE;UACf,IAAIA,IAAI,CAACkC,QAAQ,EAAE;YACf,IAAI,CAAChC,QAAQ,EAAE;WAClB,MACI;YACD,IAAI,CAACC,eAAe,EAAE;;SAE7B;QAAAjG,MAAA,CAEKiG,eAAe;UAAA,IAAAgC,gBAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAArB,SAAAC;YAAA,IAAAC,kBAAA;YAAA,IAAAC,SAAA,EAAAC,CAAA,EAAAC,OAAA,EAAAC,CAAA,EAAAC,EAAA,EAAA/B,CAAA,EAAAgC,OAAA,EAAAC,GAAA,EAAAC,EAAA,EAAAC,IAAA;YAAA,OAAAZ,mBAAA,GAAAa,IAAA,UAAAC,SAAAC,QAAA;cAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;gBAAA;kBACI,IAAI,CAACC,WAAW,CAACC,MAAM,CAACvC,MAAM,GAAG,KAAK;kBAClCwB,SAAS,IAAAD,kBAAA,GAAGhD,OAAO,CAAC5G,IAAI,CAACoH,IAAI,qBAAjBwC,kBAAA,CAAmBiB,QAAQ;kBAAA,MACvC,CAACjE,OAAO,CAAC5G,IAAI,CAAC6G,QAAQ,IAAI,CAACgD,SAAS,CAACxH,MAAM;oBAAAmI,QAAA,CAAAE,IAAA;oBAAA;;kBAAA,OAAAF,QAAA,CAAAM,MAAA;gBAAA;kBAI/C,IAAI,CAACH,WAAW,CAACC,MAAM,CAACvC,MAAM,GAAG,IAAI;kBAErC,KAASyB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACa,WAAW,CAACI,QAAQ,CAAC1I,MAAM,EAAE,EAAEyH,CAAC,EAAE;oBACvD,IAAI,CAACa,WAAW,CAACI,QAAQ,CAACjB,CAAC,CAAC,CAACzB,MAAM,GAAG,KAAK;;kBAG3C0B,OAAO,GAAG,EAAE;kBACZC,CAAC,GAAG,IAAI,CAACW,WAAW,CAACI,QAAQ,CAAC,CAAC,CAAC;kBACpC,KAASjB,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGD,SAAS,CAACxH,MAAM,EAAE,EAAEyH,EAAC,EAAE;oBACnC5B,CAAC,GAAG2B,SAAS,CAACC,EAAC,CAAC;oBACpB,IAAI,CAAC5B,CAAC,CAACI,QAAQ,EAAE;sBACT4B,OAAO,GAAGc,WAAW,CAAChB,CAAC,CAAC;sBAC5B,IAAI,CAACW,WAAW,CAACM,QAAQ,CAACf,OAAO,CAAC;sBAClCH,OAAO,CAACmB,IAAI,CAAChD,CAAC,CAAC9B,GAAG,CAAC;;;kBAE1BoE,QAAA,CAAAE,IAAA;kBAAA,OAEKvE,OAAO,CAACnG,IAAI,CAACmL,gBAAgB,CAACpB,OAAO,CAAC;gBAAA;kBAE5C,KAASD,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGC,OAAO,CAAC1H,MAAM,EAAE,EAAEyH,GAAC,EAAE;oBACjCE,EAAC,GAAG,IAAI,CAACW,WAAW,CAACI,QAAQ,CAACjB,GAAC,CAAC;oBACpCE,EAAC,CAAC3B,MAAM,GAAG,IAAI;oBACXgC,IAAI,GAAGL,EAAC,CAACe,QAAQ,CAAC,CAAC,CAAC,CAACtJ,YAAY,CAAC2J,MAAM,CAAC;oBAC7CjF,OAAO,CAACnG,IAAI,CAACqL,kBAAkB,CAACtB,OAAO,CAACD,GAAC,CAAC,EAAEO,IAAI,CAAC;;gBACpD;gBAAA;kBAAA,OAAAG,QAAA,CAAApK,IAAA;;eAAAuJ,OAAA;WACJ;UAAA,SAAApC;YAAA,OAAAgC,gBAAA,CAAAnI,KAAA,OAAAC,SAAA;;UAAA,OAAAkG,eAAA;;QAAAjG,MAAA,CAEDkG,YAAY,GAAZ,SAAAA,eAAe;UACX,IAAIZ,OAAO,CAAC5G,IAAI,CAACsL,QAAQ,IAAIC,QAAQ,CAACC,IAAI,EAAE;YACxC,IAAI,CAACC,IAAI,CAACtE,MAAM,GAAG,MAAM;WAC5B,MACI,IAAIP,OAAO,CAAC5G,IAAI,CAACsL,QAAQ,IAAIC,QAAQ,CAACG,EAAE,EAAE;YAC3C,IAAI,CAACD,IAAI,CAACtE,MAAM,GAAG,MAAM;WAC5B,MACI,IAAIP,OAAO,CAAC5G,IAAI,CAAC2L,SAAS,EAAE;YAC7B,IAAI,CAACF,IAAI,CAACtE,MAAM,GAAG,QAAQ;WAC9B,MACI,IAAIP,OAAO,CAAC5G,IAAI,CAACoH,IAAI,CAACwE,SAAS,GAAG,CAAC,EAAE;YACtC,IAAI,CAACH,IAAI,CAACtE,MAAM,GAAG,WAAW;WACjC,MACI,IAAIW,gBAAgB,CAAC9H,IAAI,CAAC6L,QAAQ,EAAE;YACrC,IAAI,CAACJ,IAAI,CAACtE,MAAM,GAAG,SAAS;WAC/B,MACI;YACD,IAAI,CAACsE,IAAI,CAACtE,MAAM,GAAG,SAAS;;SAEnC;QAAA7F,MAAA,CAEDwK,iBAAiB,GAAjB,SAAAA,oBAAoB;UAChBlF,OAAO,CAAC5G,IAAI,CAAC8G,SAAS,EAAE;SAC3B;QAAAxF,MAAA,CAEKyK,gBAAgB;UAAA,IAAAC,iBAAA,GAAAxC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAtB,SAAAuC;YAAA,OAAAxC,mBAAA,GAAAa,IAAA,UAAA4B,UAAAC,SAAA;cAAA,kBAAAA,SAAA,CAAA1B,IAAA,GAAA0B,SAAA,CAAAzB,IAAA;gBAAA;kBACI,IAAI,CAAC9D,OAAO,CAAC5G,IAAI,CAAC6G,QAAQ,EAAE;oBACxB/G,GAAG,CAACsM,OAAO,CAACC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,CAACC,OAAO,CAAC,UAACC,EAAW,EAAK;sBAC5D,IAAIA,EAAE,EAAE;wBACJzM,GAAG,CAACuG,SAAS,CAACC,SAAS,CAACwB,gBAAgB,CAAC9H,IAAI,CAACwM,UAAU,CAAC;;qBAEhE,CAAC;mBACL,MACI;oBACD,IAAI5F,OAAO,CAAC5G,IAAI,CAACsJ,QAAQ,IAAI1C,OAAO,CAAC5G,IAAI,CAACyM,SAAS,EAAE;sBACjD3M,GAAG,CAACsM,OAAO,CAACC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAACC,OAAO,eAAA9C,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAC,SAAAgD,SAAOH,EAAW;wBAAA,OAAA9C,mBAAA,GAAAa,IAAA,UAAAqC,UAAAC,SAAA;0BAAA,kBAAAA,SAAA,CAAAnC,IAAA,GAAAmC,SAAA,CAAAlC,IAAA;4BAAA;8BAC3D,IAAI6B,EAAE,EAAE;gCAEJ3F,OAAO,CAAC5G,IAAI,CAAC6M,QAAQ,EAAE,CAAC;;;4BAC3B;4BAAA;8BAAA,OAAAD,SAAA,CAAAxM,IAAA;;2BAAAsM,QAAA;uBACJ,GAAC;qBACL,MACI;sBACD9F,OAAO,CAAC5G,IAAI,CAAC6M,QAAQ,EAAE,CAAC;;;;gBAE/B;gBAAA;kBAAA,OAAAV,SAAA,CAAA/L,IAAA;;eAAA6L,QAAA;WACJ;UAAA,SAAAF;YAAA,OAAAC,iBAAA,CAAA5K,KAAA,OAAAC,SAAA;;UAAA,OAAA0K,gBAAA;;QAAA,OAAA5G,gBAAA;MAAA,EArMiC5C,SAAS,IAAAqB,WAAA,GAAAkB,yBAAA,CAAA7D,OAAA,CAAAM,SAAA,iBAAA6D,KAAA;QAAAL,YAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,WAAA,WAAAA;UAAA,OAGd,IAAI;;MAAA,IAAAY,YAAA,GAAAhB,yBAAA,CAAA7D,OAAA,CAAAM,SAAA,kBAAA+D,KAAA;QAAAP,YAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,WAAA,WAAAA;UAAA,OAIH,IAAI;;MAAA,IAAAa,YAAA,GAAAjB,yBAAA,CAAA7D,OAAA,CAAAM,SAAA,WAAAgE,KAAA;QAAAR,YAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,WAAA,WAAAA;UAAA,OAGpB,IAAI;;MAAA,IAAAc,YAAA,GAAAlB,yBAAA,CAAA7D,OAAA,CAAAM,SAAA,eAAAkE,KAAA;QAAAV,YAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,WAAA;MAAA,IAAAe,YAAA,GAAAnB,yBAAA,CAAA7D,OAAA,CAAAM,SAAA,kBAAAoE,KAAA;QAAAZ,YAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,WAAA;MAAA,IAAAgB,YAAA,GAAApB,yBAAA,CAAA7D,OAAA,CAAAM,SAAA,gBAAAsE,KAAA;QAAAd,YAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,WAAA;MAAA,KAAAjE,OAAA,MAAAD,MAAA;cA4LrB,CAAAV,GAAA,CAAAC,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC7LYkI,kBAAkB,0CAAAA;MAAlBA,kBAAkB,CACbQ,SAAS,GAAW,8BAA8B;MADvDR,kBAAkB,CAEbqE,QAAQ,GAAW,6BAA6B;MAFrDrE,kBAAkB,CAGbsE,iBAAiB,GAAW,sCAAsC;MAHvEtE,kBAAkB,CAIbuE,WAAW,GAAW,gCAAgC;MAJ3DvE,kBAAkB,CAKbwE,SAAS,GAAW,8BAA8B;MALvDxE,kBAAkB,CAObC,mBAAmB,GAAW,wCAAwC;MAP3ED,kBAAkB,CAQbyE,mBAAmB,GAAW,wCAAwC;MAR3EzE,kBAAkB,CAUb0E,UAAU,GAAW,+BAA+B;MAVzD1E,kBAAkB,CAWb2E,SAAS,GAAW,8BAA8B;MAXvD3E,kBAAkB,CAab4E,YAAY,GAAW,iCAAiC;MAb7D5E,kBAAkB,CAcb6E,aAAa,GAAW,kCAAkC;UAI/DxF,gBAAgB,sDAAAyF,QAAA;QAAApM,cAAA,CAAA2G,gBAAA,EAAAyF,QAAA;QASzB,SAAAzF,mBAAa;UAAA,IAAA1E,KAAA;UACTA,KAAA,GAAAmK,QAAA,CAAA9J,IAAA,KAAM,CAAC;UAACL,KAAA,CAOFoK,SAAS;UAAApK,KAAA,CACnBqK,KAAK;UAAArK,KAAA,CACLsK,MAAM;UARFtK,KAAA,CAAKuK,SAAS,GAAGC,UAAU,CAAC1N,SAAS;UACrCkD,KAAA,CAAKyK,WAAW,GAAG;YAAE/L,IAAI,EAAE,iBAAiB;YAAEgM,MAAM,EAAE7N,SAAS,CAACC;WAAW;UAC3EkD,KAAA,CAAK2K,UAAU,GAAG;YAAEjM,IAAI,EAAE,gBAAgB;YAAEgM,MAAM,EAAE7N,SAAS,CAACC;WAAW;UACzEkD,KAAA,CAAK4K,kBAAkB,EAAE;UAAC,OAAA5K,KAAA;;QAC7B,IAAA9B,MAAA,GAAAwG,gBAAA,CAAAvG,SAAA;QAAAD,MAAA,CAUD0M,kBAAkB,GAAlB,SAAAA,qBAAqB;UACjBrG,OAAO,CAACsG,SAAS,CAAC,4BAA4B,EAAE,IAAI,CAACC,sBAAsB,EAAE,IAAI,CAAC;UAClFvG,OAAO,CAACsG,SAAS,CAAC,+BAA+B,EAAE,IAAI,CAACE,yBAAyB,EAAE,IAAI,CAAC;UAExFxG,OAAO,CAACsG,SAAS,CAAC,2BAA2B,EAAE,IAAI,CAACG,qBAAqB,EAAE,IAAI,CAAC;UAChFzG,OAAO,CAACsG,SAAS,CAAC,iCAAiC,EAAE,IAAI,CAACI,2BAA2B,EAAE,IAAI,CAAC;UAC5F1G,OAAO,CAACsG,SAAS,CAAC,4BAA4B,EAAE,IAAI,CAACK,sBAAsB,EAAE,IAAI,CAAC;UAElF3G,OAAO,CAACsG,SAAS,CAAC,yBAAyB,EAAE,IAAI,CAACM,mBAAmB,EAAE,IAAI,CAAC;UAC5E5G,OAAO,CAACsG,SAAS,CAAC,wBAAwB,EAAE,IAAI,CAACO,kBAAkB,EAAE,IAAI,CAAC;UAE1E7G,OAAO,CAACsG,SAAS,CAAC,mBAAmB,EAAE,IAAI,CAACQ,iBAAiB,EAAE,IAAI,CAAC;UACpE9G,OAAO,CAACsG,SAAS,CAAC,2BAA2B,EAAE,IAAI,CAACS,yBAAyB,EAAE,IAAI,CAAC;UACpF/G,OAAO,CAACsG,SAAS,CAAC,qBAAqB,EAAE,IAAI,CAACU,mBAAmB,EAAE,IAAI,CAAC;SAC3E;QAAArN,MAAA,CAEMsN,KAAK,GAAZ,SAAAA,QAAe;UACXrB,QAAA,CAAAhM,SAAA,CAAMqN,KAAK,CAAAnL,IAAA;UACX,IAAI,CAAC+J,SAAS,GAAG,IAAI;UACrB,IAAI,CAACE,MAAM,GAAG,IAAI;UAClB,IAAI,CAACA,MAAM,GAAG,IAAI;SACrB;QAAApM,MAAA,CAEDuN,YAAY,GAAZ,SAAAA,eAAc;UACVjI,OAAO,CAAC5G,IAAI,CAAC4O,KAAK,EAAE;UACpB,IAAI,CAACA,KAAK,EAAE;UACZE,UAAU,CAACC,OAAO,GAAG,IAAI;SAC5B;QAAAzN,MAAA,CAyDM0N,SAAS,GAAhB,SAAAA,UAAiBC,MAAc,EAAoB;UAC/C,IAAI,CAAC,IAAI,CAACzB,SAAS,IAAI,CAAC,IAAI,CAACA,SAAS,CAAC0B,OAAO,EAAE;YAC5C,OAAO,IAAI;;UAEf,KAAK,IAAIpF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC0D,SAAS,CAAC0B,OAAO,CAAC7M,MAAM,EAAE,EAAEyH,CAAC,EAAE;YACpD,IAAIqF,CAAC,GAAG,IAAI,CAAC3B,SAAS,CAAC0B,OAAO,CAACpF,CAAC,CAAC;YACjC,IAAIqF,CAAC,CAAC/I,GAAG,IAAI6I,MAAM,EAAE;cACjB,OAAOE,CAAC;;;UAGhB,OAAO,IAAI;SACd;QAAA7N,MAAA,CAEO8N,cAAc,GAAtB,SAAAA,eAAuBH,MAAc,EAAU;UAC3C,KAAK,IAAInF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC0D,SAAS,CAAC0B,OAAO,CAAC7M,MAAM,EAAE,EAAEyH,CAAC,EAAE;YACpD,IAAI,IAAI,CAAC0D,SAAS,CAAC0B,OAAO,CAACpF,CAAC,CAAC,CAAC1D,GAAG,IAAI6I,MAAM,EAAE;cACzC,OAAOnF,CAAC;;;UAGhB,OAAO,CAAC,CAAC;SACZ;QAAAxI,MAAA,CAEM+N,UAAU,GAAjB,SAAAA,WAAkBrL,MAAc,EAAW;UACvC,IAAI,CAAC,IAAI,CAACwJ,SAAS,IAAI,CAAC,IAAI,CAACA,SAAS,CAAC0B,OAAO,EAAE;YAC5C,OAAO,KAAK;;UAEhB,KAAK,IAAIpF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC0D,SAAS,CAAC0B,OAAO,CAAC7M,MAAM,EAAE,EAAEyH,CAAC,EAAE;YACpD,IAAIqF,CAAC,GAAG,IAAI,CAAC3B,SAAS,CAAC0B,OAAO,CAACpF,CAAC,CAAC;YACjC,IAAIqF,CAAC,CAACG,aAAa,IAAIH,CAAC,CAACG,aAAa,CAACC,OAAO,CAACvL,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE;cAC1D,OAAO,IAAI;;;UAGnB,OAAO,KAAK;SACf;QAAA1C,MAAA,CAEDkO,eAAe,GAAf,SAAAA,gBAAgBC,GAAe,EAAE;UAC7B9H,OAAO,CAAC+H,OAAO,CAAC,mBAAmB,EAAED,GAAG,CAAC;SAC5C;QAAAnO,MAAA,CAEDqO,uBAAuB,GAAvB,SAAAA,wBAAwBF,GAAuB,EAAE;UAC7C9H,OAAO,CAAC+H,OAAO,CAAC,2BAA2B,EAAED,GAAG,CAAC;SACpD;QAAAnO,MAAA,CAEDsO,iBAAiB,GAAjB,SAAAA,kBAAkBH,GAAiB,EAAE;UACjC9H,OAAO,CAAC+H,OAAO,CAAC,qBAAqB,EAAED,GAAG,CAAC;SAC9C;QAAAnO,MAAA,CAEDuO,qBAAqB,GAArB,SAAAA,sBAAsBJ,GAAqB,EAAE;UACzC9H,OAAO,CAAC+H,OAAO,CAAC,yBAAyB,EAAED,GAAG,CAAC;;;;;;;;QAInDnO,MAAA,CAIA4M,sBAAsB,GAAtB,SAAAA,uBAAuBuB,GAAwB,EAAE;UAC7C,IAAI,CAACjC,SAAS,GAAGiC,GAAG;UACpBK,OAAO,CAACC,GAAG,CAAC,WAAW,EAACN,GAAG,CAAC;UAC5BjH,QAAQ,CAACwH,IAAI,CAACvH,kBAAkB,CAACQ,SAAS,CAAC;SAC9C;QAAA3H,MAAA,CAED6M,yBAAyB,GAAzB,SAAAA,0BAA0BsB,GAA2B,EAAE;UACnD,IAAI,CAAC,IAAI,CAACjC,SAAS,EAAE;YACjB;;UAEJ,IAAIiC,GAAG,CAACQ,SAAS,KAAKC,SAAS,EAAE;YAC7B,IAAI,CAAC1C,SAAS,CAACyC,SAAS,GAAGR,GAAG,CAACQ,SAAS;YACxC,IAAI,CAAC,IAAI,CAACpE,QAAQ,EAAE;cAChBrD,QAAQ,CAACwH,IAAI,CAACvH,kBAAkB,CAACwE,SAAS,EAAEwC,GAAG,CAACQ,SAAS,CAAC;;;UAIlE,IAAIR,GAAG,CAAChC,KAAK,KAAKyC,SAAS,EAAE;YACzB,IAAI,CAACzC,KAAK,GAAGgC,GAAG,CAAChC,KAAK;;UAE1B,IAAIgC,GAAG,CAAC/B,MAAM,KAAKwC,SAAS,EAAE;YAC1B,IAAI,CAAC,IAAI,CAACxC,MAAM,EAAE;cACd,IAAI,CAACA,MAAM,GAAG,IAAIyC,IAAI,EAAE;;YAE5B,IAAI,CAACzC,MAAM,CAAC0C,GAAG,CAACX,GAAG,CAAC/B,MAAM,CAAC2C,CAAC,EAAEZ,GAAG,CAAC/B,MAAM,CAAC4C,CAAC,EAAEb,GAAG,CAAC/B,MAAM,CAAC6C,CAAC,CAAC;;UAG7D,IAAId,GAAG,CAACe,aAAa,KAAKN,SAAS,EAAE;YACjC,IAAI,CAAC1C,SAAS,CAACgD,aAAa,GAAGf,GAAG,CAACe,aAAa;YAChDhI,QAAQ,CAACwH,IAAI,CAACvH,kBAAkB,CAACC,mBAAmB,EAAE+G,GAAG,CAACe,aAAa,CAAC;;SAE/E;QAAAlP,MAAA,CAED8M,qBAAqB,GAArB,SAAAA,sBAAsBqB,GAAuB,EAAE;UAC3C,IAAI,CAACjC,SAAS,CAAC0B,OAAO,CAAChE,IAAI,CAACuE,GAAG,CAACgB,MAAM,CAAC;UACvCjI,QAAQ,CAACwH,IAAI,CAACvH,kBAAkB,CAAC4E,YAAY,EAAEoC,GAAG,CAACgB,MAAM,CAAC;SAC7D;QAAAnP,MAAA,CAED+M,2BAA2B,GAA3B,SAAAA,4BAA4BoB,GAA6B,EAAE;UACvD,IAAIN,CAAC,GAAG,IAAI,CAACH,SAAS,CAACS,GAAG,CAACrJ,GAAG,CAAC;UAC/B,IAAI,CAAC+I,CAAC,EAAE;YACJ;;UAGJ,IAAIM,GAAG,CAACH,aAAa,IAAIY,SAAS,EAAE;YAChCf,CAAC,CAACG,aAAa,GAAGG,GAAG,CAACH,aAAa;;UAGvC9G,QAAQ,CAACwH,IAAI,CAACvH,kBAAkB,CAACyE,mBAAmB,EAAEuC,GAAG,CAAC;SAC7D;QAAAnO,MAAA,CAEDgN,sBAAsB,GAAtB,SAAAA,uBAAuBmB,GAAwB,EAAE;UAC7C,KAAK,IAAI3F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC0D,SAAS,CAAC0B,OAAO,CAAC7M,MAAM,EAAE,EAAEyH,CAAC,EAAE;YACpD,IAAIqF,CAAC,GAAG,IAAI,CAAC3B,SAAS,CAAC0B,OAAO,CAACpF,CAAC,CAAC;YACjC,IAAIqF,CAAC,CAAC/I,GAAG,IAAIqJ,GAAG,CAACrJ,GAAG,EAAE;cAClB,IAAI,CAACoH,SAAS,CAAC0B,OAAO,CAACwB,MAAM,CAAC5G,CAAC,EAAE,CAAC,CAAC;cACnCtB,QAAQ,CAACwH,IAAI,CAACvH,kBAAkB,CAAC6E,aAAa,EAAEmC,GAAG,CAACrJ,GAAG,CAAC;cACxD;;;SAGX;QAAA9E,MAAA,CAEDiN,mBAAmB,GAAnB,SAAAA,oBAAoBkB,GAAqB,EAAE;UACvC,IAAI,CAAC,IAAI,CAACjC,SAAS,EAAE;YACjB;;UAGJ,IAAI,CAACA,SAAS,CAACyC,SAAS,GAAG,IAAI;UAC/B,IAAI,CAACzC,SAAS,CAAC0B,OAAO,CAACyB,OAAO,CAAC,UAAAC,CAAC,EAAI;YAChCA,CAAC,CAACtB,aAAa,GAAG,EAAE;WACvB,CAAC;UAEF9G,QAAQ,CAACwH,IAAI,CAACvH,kBAAkB,CAAC0E,UAAU,CAAC;SAC/C;QAAA7L,MAAA,CAEDkN,kBAAkB,GAAlB,SAAAA,mBAAmBiB,GAAoB,EAAE;UACrCjH,QAAQ,CAACwH,IAAI,CAACvH,kBAAkB,CAAC2E,SAAS,EAAEqC,GAAG,CAAC;SACnD;QAAAnO,MAAA,CAEDmN,iBAAiB,GAAjB,SAAAA,kBAAkBgB,GAAe,EAAE;UAC/B,IAAI,CAAC,IAAI,CAACjC,SAAS,EAAE;YACjB;;UAEJ,IAAI,CAAC,IAAI,CAAC3B,QAAQ,EAAE;YAChBrD,QAAQ,CAACwH,IAAI,CAACvH,kBAAkB,CAACqE,QAAQ,EAAE2C,GAAG,CAACoB,UAAU,EAAEpB,GAAG,CAAChC,KAAK,CAAC;;SAE5E;QAAAnM,MAAA,CAEDoN,yBAAyB,GAAzB,SAAAA,0BAA0Be,GAAuB,EAAE;UAC/C,IAAI,CAAC,IAAI,CAACjC,SAAS,EAAE;YACjB;;UAEJhF,QAAQ,CAACwH,IAAI,CAACvH,kBAAkB,CAACsE,iBAAiB,CAAC;SACtD;QAAAzL,MAAA,CAEDqN,mBAAmB,GAAnB,SAAAA,oBAAoBc,GAAiB,EAAE;UACnC,IAAI,CAAC,IAAI,CAACjC,SAAS,EAAE;YACjB;;UAEJ,IAAIiC,GAAG,CAACqB,SAAS,EAAE;YACf,IAAI,CAAC,IAAI,CAACpD,MAAM,EAAE;cACd,IAAI,CAACA,MAAM,GAAG,IAAIyC,IAAI,EAAE;;YAE5B,IAAI,CAACzC,MAAM,CAAC0C,GAAG,CAACX,GAAG,CAACqB,SAAS,CAACT,CAAC,EAAEZ,GAAG,CAACqB,SAAS,CAACR,CAAC,EAAEb,GAAG,CAACqB,SAAS,CAACP,CAAC,CAAC;;UAEtE,IAAI,CAAC,IAAI,CAAC1E,QAAQ,EAAE;YAChBrD,QAAQ,CAACwH,IAAI,CAACvH,kBAAkB,CAACuE,WAAW,EAAEyC,GAAG,CAAC;;SAEzD;QAAAsB,YAAA,CAAAjJ,gBAAA;UAAAkJ,GAAA;UAAAC,GAAA,EA5PD,SAAAA,MAA0C;YACtC,OAAO,IAAI,CAACzD,SAAS;;;UACxBwD,GAAA;UAAAC,GAAA,EA+BD,SAAAA,MAA0C;YACtC,OAAO,IAAI,CAACjC,SAAS,CAAC7I,OAAO,CAACnG,IAAI,CAACoG,GAAG,CAAC;;;UAC1C4K,GAAA;UAAAC,GAAA,EAED,SAAAA,MAAsC;YAClC,OAAO,IAAI,CAAC7B,cAAc,CAACjJ,OAAO,CAACnG,IAAI,CAACoG,GAAG,CAAC;;;UAC/C4K,GAAA;UAAAC,GAAA,EAED,SAAAA,MAAgC;YAC5B,IAAI,CAAC,IAAI,CAACzD,SAAS,IAAI,IAAI,CAACA,SAAS,CAAC0B,OAAO,CAAC7M,MAAM,IAAI,CAAC,EAAE;cACvD,OAAO,EAAE;;YAGb,IAAIuE,OAAO,CAAC5G,IAAI,CAACsJ,QAAQ,EAAE;cACvB,OAAOnD,OAAO,CAACnG,IAAI,CAACoG,GAAG;aAC1B,MACI;cACD,OAAO,IAAI,CAACoH,SAAS,CAAC0B,OAAO,CAAC,CAAC,CAAC,CAAC9I,GAAG;;;;UAE3C4K,GAAA;UAAAC,GAAA,EAED,SAAAA,MAAiC;YAC7B,IAAI,CAAC,IAAI,CAACzD,SAAS,IAAI,IAAI,CAACA,SAAS,CAAC0B,OAAO,CAAC7M,MAAM,IAAI,CAAC,EAAE;cACvD,OAAO,EAAE;;YAGb,IAAIuE,OAAO,CAAC5G,IAAI,CAACsJ,QAAQ,EAAE;cACvB,IAAI,IAAI,CAACkE,SAAS,CAAC0B,OAAO,CAAC,CAAC,CAAC,CAAC9I,GAAG,IAAID,OAAO,CAACnG,IAAI,CAACoG,GAAG,EAAE;gBACnD,OAAO,IAAI,CAACoH,SAAS,CAAC0B,OAAO,CAAC,CAAC,CAAC,CAAC9I,GAAG;eACvC,MACI;gBACD,IAAI+I,CAAC,GAAG,IAAI,CAAC3B,SAAS,CAAC0B,OAAO,CAAC,CAAC,CAAC;gBACjC,OAAOC,CAAC,GAAGA,CAAC,CAAC/I,GAAG,GAAG,EAAE;;aAE5B,MACI;cACD,IAAI+I,EAAC,GAAG,IAAI,CAAC3B,SAAS,CAAC0B,OAAO,CAAC,CAAC,CAAC;cACjC,OAAOC,EAAC,GAAGA,EAAC,CAAC/I,GAAG,GAAG,EAAE;;;;UAE5B4K,GAAA;UAAAC,GAAA,EAED,SAAAA,MAA+B;YAC3B,IAAI,CAAC,IAAI,CAACzD,SAAS,EAAE;cACjB,OAAO,KAAK;;YAGhB,IAAI,CAAC5G,OAAO,CAAC5G,IAAI,CAACsJ,QAAQ,EAAE;cACxB,OAAO,KAAK;;YAEhB,IAAI,CAAC,IAAI,CAACkE,SAAS,CAACgD,aAAa,EAAE;cAC/B,OAAO,KAAK;;YAEhB,OAAO,IAAI,CAAChD,SAAS,CAACgD,aAAa,IAAIrK,OAAO,CAACnG,IAAI,CAACoG,GAAG;;;UAC1D4K,GAAA;UAAAC,GAAA,EAzGD,SAAAA,MAA2C;YACvC,IAAI,CAAC,IAAI,CAACC,KAAK,EAAE;cACb,IAAI,CAACA,KAAK,GAAG,IAAIpJ,gBAAgB,EAAE;;YAEvC,OAAO,IAAI,CAACoJ,KAAK;;;QACpB,OAAApJ,gBAAA;MAAA,EAPiCqJ,OAAO;MAAhCrJ,gBAAgB,CACVoJ,KAAK;MAmRxBpC,UAAU,CAAC9O,IAAI,CAACoR,eAAe,CAACtJ,gBAAgB,CAAC9H,IAAI,CAAC;cAAC,CAAAM,GAAA,CAAAC,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MC/SvD,IAAQC,OAAO,GAAeC,UAAU,CAAhCD,OAAO;QAAEE,QAAQ,GAAKD,UAAU,CAAvBC,QAAQ;UAGZ2Q,mBAAmB,mCAAAtQ,IAAA,GAD/BP,OAAO,CAAC,qBAAqB,CAAC,EAAA4E,KAAA,GAG1B1E,QAAQ,CAACkF,IAAI,CAAC,EAAA7E,IAAA,CAAAC,MAAA,IAAAC,OAAA,0BAAAC,UAAA;QAAAC,cAAA,CAAAkQ,mBAAA,EAAAnQ,UAAA;QAAA,SAAAmQ;UAAA,IAAAjO,KAAA;UAAA,SAAAC,IAAA,GAAAhC,SAAA,CAAAgB,MAAA,EAAAiB,IAAA,OAAAC,KAAA,CAAAF,IAAA,GAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;YAAAF,IAAA,CAAAE,IAAA,IAAAnC,SAAA,CAAAmC,IAAA;;UAAAJ,KAAA,GAAAlC,UAAA,CAAAuC,IAAA,CAAArC,KAAA,CAAAF,UAAA,SAAAwC,MAAA,CAAAJ,IAAA;UAAAK,0BAAA,CAAAP,KAAA,wBAAAQ,WAAA,EAAAC,sBAAA,CAAAT,KAAA;UAAA,OAAAA,KAAA;;QAAA,IAAA9B,MAAA,GAAA+P,mBAAA,CAAA9P,SAAA;QAAAD,MAAA,CAETE,KAAK;UAAA,IAAA8P,MAAA,GAAA9H,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAX,SAAAC;YAAA,IAAA4H,MAAA;YAAA,OAAA9H,mBAAA,GAAAa,IAAA,UAAAC,SAAAC,QAAA;cAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;gBAAA;kBAAA,IACSvE,OAAO,CAACnG,IAAI,CAACoG,GAAG;oBAAAoE,QAAA,CAAAE,IAAA;oBAAA;;kBACjB5K,GAAG,CAACuG,SAAS,CAACC,SAAS,CAACC,QAAQ,CAACC,KAAK,CAAC;kBAAC,OAAAgE,QAAA,CAAAM,MAAA;gBAAA;kBAI5ChL,GAAG,CAAC2G,KAAK,CAACzG,IAAI,CAAC0G,QAAQ,EAAE;kBAEzB,IAAG8K,QAAQ,CAACC,IAAI,IAAI,MAAM,EAAC;oBACvB3R,GAAG,CAAC2G,KAAK,CAACzG,IAAI,CAACyH,MAAM,CAACC,MAAM,EAAC,IAAI,EAAC,IAAI,EAAC8J,QAAQ,CAAC;;kBAGpD1R,GAAG,CAAC2G,KAAK,CAACzG,IAAI,CAACyH,MAAM,CAACiK,cAAc,EAAC,UAACC,EAAiB,EAAG;oBACtDA,EAAE,CAACC,WAAW,CAACL,MAAI,CAACM,kBAAkB,CAACC,QAAQ,CAACzB,CAAC,EAAEkB,MAAI,CAACM,kBAAkB,CAACC,QAAQ,CAACxB,CAAC,CAAC;mBACzF,CAAC;gBAAC;gBAAA;kBAAA,OAAA9F,QAAA,CAAApK,IAAA;;eAAAuJ,OAAA;WACN;UAAA,SAAAnI;YAAA,OAAA8P,MAAA,CAAAlQ,KAAA,OAAAC,SAAA;;UAAA,OAAAG,KAAA;;QAAAF,MAAA,CAEDyQ,UAAU,GAAV,SAAAA,aAAa;UACT1L,SAAS,CAACC,SAAS,CAACC,QAAQ,CAACyL,KAAK,CAAC;SACtC;QAAA1Q,MAAA,CAED2Q,qBAAqB,GAArB,SAAAA,wBAAwB;UAAA,IAAAC,MAAA;UACpBpS,GAAG,CAAC2G,KAAK,CAACzG,IAAI,CAACyH,MAAM,CAAC0K,iBAAiB,EAAE,UAACR,EAAqB,EAAK;YAChEO,MAAI,CAACE,YAAY,CAAC,YAAI;cAClBT,EAAE,CAACU,UAAU,CAAC,WAAW,CAAC;aAC7B,EAAE,GAAG,CAAC;WACV,CAAC;SACL;QAAA/Q,MAAA,CAEDgR,oBAAoB,GAApB,SAAAA,uBAAsB;UAClBxS,GAAG,CAAC2G,KAAK,CAACzG,IAAI,CAACyH,MAAM,CAAC8K,UAAU,CAAC;SACpC;QAAAjR,MAAA,CAEDkR,uBAAuB,GAAvB,SAAAA,0BAA0B;UACtB1K,gBAAgB,CAAC9H,IAAI,CAAC6O,YAAY,EAAE;UACpC/O,GAAG,CAAC2S,SAAS,CAACpG,IAAI,EAAE;UACpBvM,GAAG,CAACuG,SAAS,CAACC,SAAS,CAACwB,gBAAgB,CAAC9H,IAAI,CAAC0S,SAAS,CAAC;SAC3D;QAAApR,MAAA,CAEDqR,WAAW,GAAX,SAAAA,cAAc;UACV7S,GAAG,CAAC2G,KAAK,CAACzG,IAAI,CAACyH,MAAM,CAACmL,YAAY,CAAC;SACtC;QAAAtR,MAAA,CAEDsD,MAAM,GAAN,SAAAA,OAAOC,SAAiB,EAAE,EAEzB;QAAA,OAAAwM,mBAAA;MAAA,EAjDoC9O,SAAS,GAAAqB,WAAA,GAAAkB,yBAAA,CAAA7D,OAAA,CAAAM,SAAA,yBAAA6D,KAAA;QAAAL,YAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,WAAA;MAAA,IAAAjE,OAAA,MAAAD,MAAA;cAkDjD,CAAAV,GAAA,CAAAC,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCnDD,IAAQC,OAAO,GAAeC,UAAU,CAAhCD,OAAO;QAAEE,QAAQ,GAAKD,UAAU,CAAvBC,QAAQ;MAEzB,IAAMmS,gBAAgB,GAAG,GAAG;MAC5B,IAAMC,YAAY,GAAG,EAAE;MAEvB,IAAMC,WAAW,GAAG,GAAG;MAEvB,IAAMC,OAAO,GAAGpS,EAAE,EAAE;MACpB,IAAMqS,OAAO,GAAGrS,EAAE,EAAE;MACpB,IAAMsS,OAAO,GAAGtS,EAAE,EAAE;MAEpB,IAAMuS,MAAM,GAAG,CACX,IAAIC,QAAQ,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,EACnC,IAAID,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,EACpC,IAAID,QAAQ,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,EACnC,IAAID,QAAQ,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CACvC;MAED,IAAMC,MAAM,GAAG,IAAIF,QAAQ,CAACG,GAAG,EAAE;UAGpBC,oBAAoB,oCAAAzS,IAAA,GADhCP,OAAO,CAAC,sBAAsB,CAAC,EAAA4E,KAAA,GAI3B1E,QAAQ,CAAC+S,MAAM,CAAC,EAAAnO,KAAA,GAGhB5E,QAAQ,CAAC+S,MAAM,CAAC,EAAAlO,KAAA,GAGhB7E,QAAQ,CAACgF,MAAM,CAAC,EAAAD,KAAA,GAGhB/E,QAAQ,CAACkF,IAAI,CAAC,EAAAD,KAAA,GAGdjF,QAAQ,CAACkF,IAAI,CAAC,EAAAC,KAAA,GAGdnF,QAAQ,CAACkF,IAAI,CAAC,EAAA8N,KAAA,GAGdhT,QAAQ,CAACkF,IAAI,CAAC,EAAA+N,KAAA,GAIdjT,QAAQ,CAACkT,MAAM,CAAC,EAAAC,MAAA,GAGhBnT,QAAQ,CAACkT,MAAM,CAAC,EAAAE,MAAA,GAGhBpT,QAAQ,CAACkF,IAAI,CAAC,EAAAmO,MAAA,GAGdrT,QAAQ,CAACsT,YAAY,CAAC,EAAAC,MAAA,GAGtBvT,QAAQ,CAACwT,YAAY,CAAC,EAAAnT,IAAA,CAAAC,MAAA,IAAAC,OAAA,0BAAAC,UAAA;QAAAC,cAAA,CAAAqS,oBAAA,EAAAtS,UAAA;QAAA,SAAAsS;UAAA,IAAApQ,KAAA;UAAA,SAAAC,IAAA,GAAAhC,SAAA,CAAAgB,MAAA,EAAAiB,IAAA,OAAAC,KAAA,CAAAF,IAAA,GAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;YAAAF,IAAA,CAAAE,IAAA,IAAAnC,SAAA,CAAAmC,IAAA;;UAAAJ,KAAA,GAAAlC,UAAA,CAAAuC,IAAA,CAAArC,KAAA,CAAAF,UAAA,SAAAwC,MAAA,CAAAJ,IAAA;;UAnCvBK,0BAAA,CAAAP,KAAA,iBAAAQ,WAAA,EAAAC,sBAAA,CAAAT,KAAA;UAAAO,0BAAA,CAAAP,KAAA,qBAAA0C,YAAA,EAAAjC,sBAAA,CAAAT,KAAA;UAAAO,0BAAA,CAAAP,KAAA,eAAA2C,YAAA,EAAAlC,sBAAA,CAAAT,KAAA;UAAAO,0BAAA,CAAAP,KAAA,SAAA4C,YAAA,EAAAnC,sBAAA,CAAAT,KAAA;UAAAO,0BAAA,CAAAP,KAAA,eAAA6C,YAAA,EAAApC,sBAAA,CAAAT,KAAA;UAAAO,0BAAA,CAAAP,KAAA,wBAAA8C,YAAA,EAAArC,sBAAA,CAAAT,KAAA;UAAAO,0BAAA,CAAAP,KAAA,gBAAA+Q,YAAA,EAAAtQ,sBAAA,CAAAT,KAAA;;UAqBAO,0BAAA,CAAAP,KAAA,gBAAAgR,YAAA,EAAAvQ,sBAAA,CAAAT,KAAA;UAAAO,0BAAA,CAAAP,KAAA,iBAAAiR,YAAA,EAAAxQ,sBAAA,CAAAT,KAAA;UAAAO,0BAAA,CAAAP,KAAA,WAAAkR,aAAA,EAAAzQ,sBAAA,CAAAT,KAAA;UAAAO,0BAAA,CAAAP,KAAA,kBAAAmR,aAAA,EAAA1Q,sBAAA,CAAAT,KAAA;UAAAO,0BAAA,CAAAP,KAAA,mBAAAoR,aAAA,EAAA3Q,sBAAA,CAAAT,KAAA;UAAAA,KAAA,CAiBQqR,SAAS,GAAgB,IAAIlR,KAAK,CAAOuP,YAAY,CAAC;;UAE9D1P,KAAA,CACQsR,QAAQ,GAAS,IAAIvE,IAAI,EAAE;UAAA/M,KAAA,CAC3BuR,OAAO,GAAS/T,EAAE,EAAE;UAAAwC,KAAA,CACpBwR,UAAU,GAAS,IAAIzE,IAAI,EAAE;UAAA/M,KAAA,CAC7ByR,UAAU,GAAS,IAAI1E,IAAI,EAAE;UAAA/M,KAAA,CAC7B0R,oBAAoB,GAAGlU,EAAE,EAAE;UAAAwC,KAAA,CAE3B2R,aAAa,GAAG,IAAIxR,KAAK,CAASuP,YAAY,GAAG,CAAC,CAAC;UAAA1P,KAAA,CACnD4R,cAAc,GAAG,IAAIzR,KAAK,CAASuP,YAAY,GAAG,CAAC,CAAC;;UAC5D1P,KAAA,CAEQ6R,kBAAkB,GAAY,KAAK;UAAA7R,KAAA,CACnC8R,YAAY,GAAG,IAAI;UAAA9R,KAAA,CAqInB+R,aAAa,GAAG,GAAG;UAAA/R,KAAA,CACnBgS,cAAc,GAAG,CAAC;UAAAhS,KAAA,CAClBiS,SAAS,GAAG,CAAC;UAAAjS,KAAA,CA6QbkS,mBAAmB,GAAG,EAAE;UAAAlS,KAAA,CACxBmS,YAAY,GAAY,KAAK;;;;;;UAyHrCnS,KAAA,CACQoS,gBAAgB,GAAG,KAAK;UAAApS,KAAA,CAkHhCqS,gBAAgB,GAAG,CAAC;;UA6HpBrS,KAAA,CACQsS,aAAa,GAAG,CAAC;UAAAtS,KAAA,CAYjBuS,WAAW,GAAG,KAAK;UAAAvS,KAAA,CACnBwS,QAAQ,GAAGzR,IAAI,CAACC,KAAK,CAAC,GAAG,GAAGyR,SAAS,CAACC,OAAO,GAAG,KAAK,CAAC,GAAG,KAAK;UAAA,OAAA1S,KAAA;;QAAA,IAAA9B,MAAA,GAAAkS,oBAAA,CAAAjS,SAAA;;QA1wBtED,MAAA,CACAE,KAAK,GAAL,SAAAA,QAAQ;UAEJ,IAAI,CAACuU,GAAG,CAACC,WAAW,CAAC,IAAI,CAACpB,UAAU,CAAC;UACrC,IAAI,CAACC,UAAU,CAACzE,GAAG,CAAC,IAAI,CAACwE,UAAU,CAAC;UACpC,IAAI,CAACC,UAAU,CAACxE,CAAC,GAAG,CAAC,IAAI;UACzB,IAAI,CAAC0F,GAAG,CAACnL,MAAM,CAACgH,WAAW,CAAC,IAAI,CAACqE,SAAS,CAACnE,QAAQ,CAAC;UACpD,IAAIhK,gBAAgB,CAAC9H,IAAI,CAACkW,QAAQ,IAAIpO,gBAAgB,CAAC9H,IAAI,CAACkW,QAAQ,CAACC,YAAY,EAAE;YAC/E,IAAIC,MAAM,GAAGtO,gBAAgB,CAAC9H,IAAI,CAACkW,QAAQ,CAACC,YAAY;YACxD,IAAIC,MAAM,EAAE;cACR,IAAI,CAACL,GAAG,CAACnL,MAAM,CAACyL,oBAAoB,CAACD,MAAM,CAAC/F,CAAC,EAAE+F,MAAM,CAAC9F,CAAC,EAAE8F,MAAM,CAAC7F,CAAC,CAAC;;;UAI1E,IAAI,CAAC+F,kBAAkB,CAACjO,MAAM,GAAG,KAAK;UAEtC,IAAI,CAACoN,gBAAgB,GAAG,CAAC;UACzB,IAAI3N,gBAAgB,CAAC9H,IAAI,CAACkW,QAAQ,EAAE;YAChC,IAAI,CAACT,gBAAgB,GAAG3N,gBAAgB,CAAC9H,IAAI,CAACyN,KAAK;;UAGvD,KAAK,IAAI3D,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgJ,YAAY,EAAE,EAAEhJ,CAAC,EAAE;YACnC,IAAIA,CAAC,IAAI,CAAC,EAAE;cACR,IAAI,CAAC2K,SAAS,CAAC3K,CAAC,CAAC,GAAG,IAAI,CAACmM,SAAS;aACrC,MACI;cACD,IAAI,CAACxB,SAAS,CAAC3K,CAAC,CAAC,GAAG,IAAI,CAACyM,UAAU,CAACxL,QAAQ,CAACjB,CAAC,GAAG,CAAC,CAAC;;;UAI3D,IAAI,CAACgL,oBAAoB,CAAC1E,GAAG,CAAC,IAAI,CAACqE,SAAS,CAAC,CAAC,CAAC,CAAC+B,aAAa,CAAC;UAE9D,IAAI5P,OAAO,CAAC5G,IAAI,CAAC6G,QAAQ,EAAE;YACvB,IAAIoJ,SAAS,GAAG,IAAI;YACpB,IAAInI,gBAAgB,CAAC9H,IAAI,CAACkW,QAAQ,IAAIpO,gBAAgB,CAAC9H,IAAI,CAACkW,QAAQ,CAACjG,SAAS,EAAE;cAC5EA,SAAS,GAAGnI,gBAAgB,CAAC9H,IAAI,CAACkW,QAAQ,CAACjG,SAAS;aACvD,MACI;cACDA,SAAS,GAAG,IAAI,CAACwG,WAAW,CAAC,KAAK,CAAC,CAACxG,SAAS;;YAEjD,IAAI,CAACyG,eAAe,CAACzG,SAAS,CAAC;;UAGnC,IAAI7I,IAAI,GAAG,IAAI,CAACqP,WAAW,CAAC,KAAK,CAAC;UAClC,IAAI,CAACE,UAAU,CAACvP,IAAI,CAAC6I,SAAS,CAAC;UAE/B,IAAI,CAAC2G,mBAAmB,EAAE;UAE1B,IAAI,CAACjQ,iBAAiB,EAAE;SAC3B;QAAArF,MAAA,CAEDqV,UAAU,GAAV,SAAAA,WAAWvP,IAAqC,EAAE;UAC9C,IAAI,CAACA,IAAI,EAAE;YACP;;UAGJ,KAAK,IAAI0C,CAAC,GAAG,IAAI,CAAC2K,SAAS,CAACpS,MAAM,GAAG,CAAC,EAAEyH,CAAC,IAAI,CAAC,EAAE,EAAEA,CAAC,EAAE;YACjD,IAAI,CAAC2K,SAAS,CAAC3K,CAAC,CAAC,CAAC+M,OAAO,EAAE;;UAG/B,IAAIpU,SAAS,GAAG,GAAG;UACnB,IAAIC,WAAW,GAAG,GAAG;UACrB,IAAIC,WAAW,GAAG,EAAE;UACpB,IAAIC,UAAU,GAAG,EAAE;UACnB,IAAIC,GAAG,GAAG,CAAC;UAEX,IAAIC,QAAQ,GAAG,GAAG;UAClB,IAAIC,SAAS,GAAG,EAAE;UAClB,IAAIC,OAAO,GAAG,CAAC;UAEf,IAAIC,MAAM,GAAGH,QAAQ,GAAGL,SAAS;UACjC,IAAIS,MAAM,GAAGH,SAAS,GAAGL,WAAW;UAEpC,KAAK,IAAIoH,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGgJ,YAAY,EAAE,EAAEhJ,EAAC,EAAE;YACnC,IAAIgN,IAAI,GAAG9L,WAAW,CAAC,IAAI,CAAC+L,UAAU,CAAC;YACvCD,IAAI,CAACE,YAAY,CAAClW,aAAa,CAAC;YAChC,IAAI,CAAC2T,SAAS,CAAC3K,EAAC,CAAC,GAAGgN,IAAI;YAExB,IAAIhN,EAAC,IAAI,CAAC,EAAE;cACR,IAAI,CAACmM,SAAS,GAAGa,IAAI;cACrBA,IAAI,CAAChV,IAAI,GAAG+T,SAAS,CAACoB,eAAe;cACrC,IAAI,CAACV,UAAU,CAAC3L,MAAM,CAACK,QAAQ,CAAC6L,IAAI,CAAC;aACxC,MACI;cACDA,IAAI,CAAChV,IAAI,GAAG,OAAO,GAAGgI,EAAC;cACvB,IAAI,CAACyM,UAAU,CAACtL,QAAQ,CAAC6L,IAAI,CAAC;;YAGlC,IAAI,CAACI,WAAW,CAACpN,EAAC,EAAE1C,IAAI,CAAC;YAEzB,IAAIU,gBAAgB,CAAC9H,IAAI,CAACqP,UAAU,CAACvF,EAAC,CAAC,EAAE;cACrCgN,IAAI,CAACzO,MAAM,GAAG,KAAK;;YAGvB,IAAIpE,GAAG,GAAG6F,EAAC,GAAG9G,OAAO;YACrB,IAAIkB,GAAG,GAAGC,IAAI,CAACC,KAAK,CAAC0F,EAAC,GAAG9G,OAAO,CAAC;YACjC,IAAIqB,EAAE,GAAG1B,WAAW,GAAGsB,GAAG,IAAInB,QAAQ,GAAGD,GAAG,CAAC;YAC7C,IAAIyB,EAAE,GAAG1B,UAAU,GAAGsB,GAAG,IAAInB,SAAS,GAAGF,GAAG,CAAC;YAC7C,IAAI0B,OAAO,GAAGF,EAAE,GAAG5B,SAAS;YAC5B,IAAI+B,OAAO,GAAGF,EAAE,GAAG5B,WAAW;YAE9B,IAAI+B,YAAY,GAAGqS,IAAI,CAACrV,YAAY,CAACiD,YAAY,CAAC;YAClDD,YAAY,CAACE,qBAAqB,CAAC,gBAAgB,EAAE,CAAC1B,MAAM,EAAEC,MAAM,EAAEqB,OAAO,EAAEC,OAAO,CAAC,CAAC;;UAG5F2S,aAAa,CAACC,QAAQ,CAACC,YAAY,CAACC,kBAAkB,EAAE;;;;;;QAG5DhW,MAAA,CACMqF,iBAAiB;QAAA;UAAA,IAAA4Q,kBAAA,GAAA/N,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAvB,SAAAC;YAAA,OAAAF,mBAAA,GAAAa,IAAA,UAAAC,SAAAC,QAAA;cAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;gBAAA;kBACIlC,QAAQ,CAAC7G,EAAE,CAAC8G,kBAAkB,CAACuE,WAAW,EAAE,IAAI,CAACwK,kBAAkB,EAAE,IAAI,CAAC;kBAC1EhP,QAAQ,CAAC7G,EAAE,CAAC8G,kBAAkB,CAACqE,QAAQ,EAAE,IAAI,CAAC2K,eAAe,EAAE,IAAI,CAAC;kBACpEjP,QAAQ,CAAC7G,EAAE,CAAC8G,kBAAkB,CAACC,mBAAmB,EAAE,IAAI,CAACkO,mBAAmB,EAAE,IAAI,CAAC;kBACnFpO,QAAQ,CAAC7G,EAAE,CAAC8G,kBAAkB,CAACwE,SAAS,EAAE,IAAI,CAACyK,gBAAgB,EAAE,IAAI,CAAC;kBAEtElP,QAAQ,CAAC7G,EAAE,CAACgW,YAAY,CAACC,qBAAqB,EAAE,IAAI,CAACC,kCAAkC,EAAE,IAAI,CAAC;kBAC9FrP,QAAQ,CAAC7G,EAAE,CAACmW,aAAa,CAACC,gBAAgB,EAAE,IAAI,CAACC,QAAQ,EAAE,IAAI,CAAC;kBAEhE,IAAI,CAACC,WAAW,CAACC,MAAM,CAAClW,IAAI,CAACL,EAAE,CAACwW,KAAK,CAACC,SAAS,CAACC,SAAS,EAAE,IAAI,CAACC,gBAAgB,EAAE,IAAI,CAAC;kBACvF,IAAI,CAACL,WAAW,CAACC,MAAM,CAAClW,IAAI,CAACL,EAAE,CAACwW,KAAK,CAACC,SAAS,CAACG,YAAY,EAAE,IAAI,CAACD,gBAAgB,EAAE,IAAI,CAAC;kBAE1F,IAAI,CAACE,eAAe,CAACN,MAAM,CAAClW,IAAI,CAACL,EAAE,CAACwW,KAAK,CAACC,SAAS,CAACC,SAAS,EAAE,IAAI,CAACI,yBAAyB,EAAE,IAAI,CAAC;kBACpG,IAAI,CAACD,eAAe,CAACN,MAAM,CAAClW,IAAI,CAACL,EAAE,CAACwW,KAAK,CAACC,SAAS,CAACG,YAAY,EAAE,IAAI,CAACE,yBAAyB,EAAE,IAAI,CAAC;kBAEvGjQ,QAAQ,CAAC7G,EAAE,CAAC+W,QAAQ,CAACC,kBAAkB,EAAE,IAAI,CAACC,kBAAkB,EAAE,IAAI,CAAC;kBAEvEpQ,QAAQ,CAAC7G,EAAE,CAAC8G,kBAAkB,CAAC0E,UAAU,EAAE,IAAI,CAAC0L,WAAW,EAAE,IAAI,CAAC;kBAElErQ,QAAQ,CAAC7G,EAAE,CAAC8G,kBAAkB,CAAC2E,SAAS,EAAE,IAAI,CAAC0L,UAAU,EAAE,IAAI,CAAC;gBAAC;gBAAA;kBAAA,OAAAtO,QAAA,CAAApK,IAAA;;eAAAuJ,OAAA;WACpE;UAAA,SAAAhD;YAAA,OAAA4Q,kBAAA,CAAAnW,KAAA,OAAAC,SAAA;;UAAA,OAAAsF,iBAAA;;QAAArF,MAAA,CAKDmX,yBAAyB,GAAzB,SAAAA,4BAA4B;UACxB,IAAI,CAACtD,aAAa,GAAG,GAAG;UACxB,IAAI,CAACqD,eAAe,CAACO,OAAO,GAAG,KAAK;UACpC,IAAI,CAACP,eAAe,CAACQ,QAAQ,GAAG,GAAG;UACnC,IAAI,CAACR,eAAe,CAACO,OAAO,GAAG,IAAI;UACnC,IAAI,CAAC3D,cAAc,GAAG,CAAC;SAC1B;QAAA9T,MAAA,CAED8H,SAAS,GAAT,SAAAA,YAAY;UACRZ,QAAQ,CAACa,GAAG,CAACqP,QAAQ,CAACC,kBAAkB,EAAE,IAAI,CAACC,kBAAkB,EAAE,IAAI,CAAC;UAExEpQ,QAAQ,CAACa,GAAG,CAACZ,kBAAkB,CAACuE,WAAW,EAAE,IAAI,CAACwK,kBAAkB,EAAE,IAAI,CAAC;UAC3EhP,QAAQ,CAACa,GAAG,CAACZ,kBAAkB,CAACqE,QAAQ,EAAE,IAAI,CAAC2K,eAAe,EAAE,IAAI,CAAC;UACrEjP,QAAQ,CAACa,GAAG,CAACZ,kBAAkB,CAACC,mBAAmB,EAAE,IAAI,CAACkO,mBAAmB,EAAE,IAAI,CAAC;UACpFpO,QAAQ,CAACa,GAAG,CAACZ,kBAAkB,CAACwE,SAAS,EAAE,IAAI,CAACyK,gBAAgB,EAAE,IAAI,CAAC;UAEvElP,QAAQ,CAACa,GAAG,CAACsO,YAAY,CAACC,qBAAqB,EAAE,IAAI,CAACC,kCAAkC,EAAE,IAAI,CAAC;UAC/FrP,QAAQ,CAACa,GAAG,CAACyO,aAAa,CAACC,gBAAgB,EAAE,IAAI,CAACC,QAAQ,EAAE,IAAI,CAAC;UAEjExP,QAAQ,CAACa,GAAG,CAACZ,kBAAkB,CAAC0E,UAAU,EAAE,IAAI,CAAC0L,WAAW,EAAE,IAAI,CAAC;UAEnErQ,QAAQ,CAACa,GAAG,CAACZ,kBAAkB,CAAC2E,SAAS,EAAE,IAAI,CAAC0L,UAAU,EAAE,IAAI,CAAC;SACpE;QAAAxX,MAAA,CAEDoW,gBAAgB,GAAhB,SAAAA,iBAAiBtQ,IAAI,EAAE;UACnB,IAAIU,gBAAgB,CAAC9H,IAAI,CAAC6L,QAAQ,EAAE;YAChC;;UAEJ,IAAI,CAAC6K,eAAe,CAACtP,IAAI,CAAC;SAC7B;QAAA9F,MAAA,CAED2X,aAAa,GAAb,SAAAA,gBAAgB;UACZ,IAAI,CAACC,YAAY,CAACC,OAAO,EAAE;UAC3B,IAAI,CAAC7C,kBAAkB,CAACjO,MAAM,GAAG,KAAK;SACzC;QAAA/G,MAAA,CAED8X,WAAW,GAAX,SAAAA,YAAYC,CAAO,EAAE;UACjBA,CAAC,CAAC/I,CAAC,GAAG,CAAC;UACP+I,CAAC,CAACC,SAAS,EAAE;;UAEb,IAAIC,MAAM,GAAGpV,IAAI,CAACqV,IAAI,CAAC,CAACH,CAAC,CAAC9I,CAAC,GAAG8I,CAAC,CAAChJ,CAAC,CAAC,GAAGlM,IAAI,CAACsV,EAAE,GAAG,GAAG;;UAElD,IAAIJ,CAAC,CAAChJ,CAAC,GAAG,CAAC,EAAE;YACTkJ,MAAM,IAAI,GAAG;WAChB,MACI;YACDA,MAAM,IAAI,GAAG;;UAEjB,OAAOA,MAAM;SAChB;QAAAjY,MAAA,CAEDoY,YAAY,GAAZ,SAAAA,aAAaC,GAAiB,EAA8C;UACxE,IAAIC,IAAI,GAAG,CAAC,CAAC;UACb,IAAIC,QAAwB,GAAG,IAAI;UACnC,KAAK,IAAI/P,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqJ,MAAM,CAAC9Q,MAAM,EAAE,EAAEyH,CAAC,EAAE;YACpC,IAAIgQ,CAAC,GAAG1G,QAAQ,CAAC2G,SAAS,CAACC,QAAQ,CAACL,GAAG,EAAExG,MAAM,CAACrJ,CAAC,CAAC,CAAC;;YAEnD,IAAIgQ,CAAC,GAAG,CAAC,KAAKF,IAAI,GAAG,CAAC,IAAIE,CAAC,GAAGF,IAAI,CAAC,EAAE;cACjCA,IAAI,GAAGE,CAAC;cACRD,QAAQ,GAAG1G,MAAM,CAACrJ,CAAC,CAAC;;;UAG5B,OAAO;YAAE8P,IAAI,EAAEA,IAAI;YAAEC,QAAQ,EAAEA;WAAU;SAC5C;QAAAvY,MAAA,CAED2Y,UAAU,GAAV,SAAAA,WAAWC,GAAS,EAAEb,CAAO,EAAEc,GAAW,EAAE;UACxC7G,MAAM,CAAC8G,CAAC,CAAChK,GAAG,CAAC8J,GAAG,CAAC7J,CAAC,EAAE,CAAC,EAAE6J,GAAG,CAAC3J,CAAC,CAAC;UAC7B+C,MAAM,CAAC+F,CAAC,CAACjJ,GAAG,CAACiJ,CAAC,CAAChJ,CAAC,EAAE,CAAC,EAAEgJ,CAAC,CAAC9I,CAAC,CAAC;UACzB,IAAIqJ,IAAI,GAAG,IAAI,CAACF,YAAY,CAACpG,MAAM,CAAC,CAACsG,IAAI;UACzC,IAAIA,IAAI,GAAG,CAAC,IAAIA,IAAI,GAAGO,GAAG,EAAE;YACxBA,GAAG,GAAGP,IAAI;;UAEd,OAAOO,GAAG;SACb;QAAA7Y,MAAA,CAED+Y,eAAe,GAAf,SAAAA,kBAAkB;UACd,IAAI,CAACnB,YAAY,CAACC,OAAO,EAAE;UAC3B,IAAIiB,CAAC,GAAG,IAAI,CAACnE,SAAS,CAACnE,QAAQ;UAC/B,IAAIuH,CAAC,GAAGrG,OAAO,CAAC5C,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;UAE5B,IAAIkK,MAAM,GAAGC,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAACzE,GAAG,CAACnL,MAAM,CAAC6P,WAAW,CAACnK,CAAC,CAAC;UACjEH,IAAI,CAACuK,OAAO,CAACrB,CAAC,EAAEA,CAAC,EAAE,IAAI,CAACpD,SAAS,CAACxU,YAAY,CAACkZ,cAAc,CAAC,CAACC,MAAM,EAAEN,MAAM,CAAC;UAE9EhH,MAAM,CAAC8G,CAAC,CAAChK,GAAG,CAACgK,CAAC,CAAC/J,CAAC,EAAE+J,CAAC,CAAC9J,CAAC,EAAE8J,CAAC,CAAC7J,CAAC,CAAC;UAC3B+C,MAAM,CAAC+F,CAAC,CAACjJ,GAAG,CAACiJ,CAAC,CAAChJ,CAAC,EAAEgJ,CAAC,CAAC/I,CAAC,EAAE+I,CAAC,CAAC9I,CAAC,CAAC;UAE3B8I,CAAC,CAACC,SAAS,EAAE;;UAEb,IAAIM,IAAI,GAAG,CAAC,CAAC;UACb,IAAIiB,UAAgB,GAAG,IAAI;UAE3B,KAAK,IAAI/Q,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC2K,SAAS,CAACpS,MAAM,EAAE,EAAEyH,CAAC,EAAE;YAC5C,IAAIgR,EAAE,GAAG,IAAI,CAACrG,SAAS,CAAC3K,CAAC,CAAC;YAC1B,IAAIgR,EAAE,CAACzS,MAAM,EAAE;cACX,IAAIyR,CAAC,GAAG,IAAI,CAACiB,OAAO,CAACX,CAAC,EAAEf,CAAC,EAAEyB,EAAE,CAAChJ,QAAQ,CAAC;cACvC,IAAIgI,CAAC,IAAI,CAAC,KAAKF,IAAI,GAAG,CAAC,IAAIE,CAAC,GAAGF,IAAI,CAAC,EAAE;gBAClCA,IAAI,GAAGE,CAAC;gBACRe,UAAU,GAAGC,EAAE;;;;;;UAM3B,IAAIlB,IAAI,IAAI,CAAC,EAAE;YACX,IAAIM,GAAG,GAAG,IAAI,CAAC5D,kBAAkB,CAACxE,QAAQ;YAC1C,IAAI,CAACwE,kBAAkB,CAACjO,MAAM,GAAG,IAAI;YACrC,IAAI,CAACiO,kBAAkB,CAAC1E,WAAW,CAACwI,CAAC,CAAC/J,CAAC,GAAGgJ,CAAC,CAAChJ,CAAC,GAAGuJ,IAAI,EAAEM,GAAG,CAAC5J,CAAC,EAAE8J,CAAC,CAAC7J,CAAC,GAAG8I,CAAC,CAAC9I,CAAC,GAAGqJ,IAAI,CAAC;YAC9E,IAAI,CAACV,YAAY,CAAC8B,UAAU,CAAC,IAAI,CAACjF,GAAG,CAACnL,MAAM,CAAC6P,WAAW,CAACnK,CAAC,EAAE8J,CAAC,EAAER,IAAI,CAAC;YAEpE,IAAIqB,EAAE,GAAGhI,OAAO;YAChBgI,EAAE,CAAC3B,SAAS,EAAE;YACdnJ,IAAI,CAAC+K,QAAQ,CAACD,EAAE,EAAEJ,UAAU,CAAC/I,QAAQ,EAAE,IAAI,CAACwE,kBAAkB,CAACxE,QAAQ,CAAC;YACxE,IAAIyH,MAAM,GAAG,IAAI,CAACH,WAAW,CAAC6B,EAAE,CAAC;YACjC,IAAId,GAAG,GAAG,IAAI,CAACF,UAAU,CAACY,UAAU,CAAC/I,QAAQ,EAAEmJ,EAAE,EAAE,EAAE,CAAC;YACtD,IAAI,CAAC/B,YAAY,CAACiC,WAAW,CAAC5B,MAAM,EAAEsB,UAAU,CAAC/I,QAAQ,EAAEqI,GAAG,GAAGpH,WAAW,CAAC;;;YAG7E,IAAIqI,EAAE,GAAGlI,OAAO;YAChB/C,IAAI,CAACkL,KAAK,CAACD,EAAE,EAAE/B,CAAC,EAAE4B,EAAE,CAAC;YACrB9K,IAAI,CAACkL,KAAK,CAAChC,CAAC,EAAE4B,EAAE,EAAEG,EAAE,CAAC;YACrB/B,CAAC,CAACC,SAAS,EAAE;YACba,GAAG,GAAG,IAAI,CAACF,UAAU,CAAC,IAAI,CAAC3D,kBAAkB,CAACxE,QAAQ,EAAEuH,CAAC,EAAE,EAAE,CAAC;YAC9DE,MAAM,GAAG,IAAI,CAACH,WAAW,CAACC,CAAC,CAAC;YAC5B,IAAI,CAACH,YAAY,CAACoC,YAAY,CAAC/B,MAAM,EAAE,IAAI,CAACjD,kBAAkB,CAACxE,QAAQ,EAAEqI,GAAG,GAAGpH,WAAW,CAAC;WAC9F,MACI;;YAED,IAAIwI,GAAG,GAAG,IAAI,CAAC7B,YAAY,CAACpG,MAAM,CAAC;YACnC,IAAIsG,KAAI,GAAG2B,GAAG,CAAC3B,IAAI;YACnB,IAAIC,QAAQ,GAAG0B,GAAG,CAAC1B,QAAQ;YAC3B,IAAID,KAAI,GAAG,CAAC,EAAE;cACV,IAAIM,IAAG,GAAGjH,OAAO,CAAC7C,GAAG,CAAC,IAAI,CAACkG,kBAAkB,CAACxE,QAAQ,CAAC;cACvDoI,IAAG,CAAC7J,CAAC,GAAG+J,CAAC,CAAC/J,CAAC,GAAGgJ,CAAC,CAAChJ,CAAC,GAAGuJ,KAAI;cACxBM,IAAG,CAAC3J,CAAC,GAAG6J,CAAC,CAAC7J,CAAC,GAAG8I,CAAC,CAAC9I,CAAC,GAAGqJ,KAAI;cACxB,IAAI,CAACtD,kBAAkB,CAAC1E,WAAW,CAACsI,IAAG,CAAC;cACxC,IAAI,CAAChB,YAAY,CAAC8B,UAAU,CAAC,IAAI,CAACjF,GAAG,CAACnL,MAAM,CAAC6P,WAAW,CAACnK,CAAC,EAAE8J,CAAC,EAAER,KAAI,CAAC;cAEpE,IAAI4B,UAAU,GAAG,KAAK;;cAEtB,KAAK,IAAI1R,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,IAAI,CAAC2R,KAAK,CAAC1Q,QAAQ,CAAC1I,MAAM,EAAE,EAAEyH,GAAC,EAAE;gBACjD,IAAI4R,MAAM,GAAG,IAAI,CAACD,KAAK,CAAC1Q,QAAQ,CAACjB,GAAC,CAAC;gBACnC,IAAI6R,CAAC,GAAGD,MAAM,CAACE,UAAU,CAACvL,CAAC,GAAG,CAAC;gBAC/B,IAAIwL,EAAE,GAAGH,MAAM,CAAClF,aAAa,CAACnG,CAAC,IAAI6J,IAAG,CAAC7J,CAAC,GAAGgJ,CAAC,CAAChJ,CAAC,GAAG0C,WAAW,CAAC;gBAC7D,IAAI+I,EAAE,GAAGJ,MAAM,CAAClF,aAAa,CAACjG,CAAC,IAAI2J,IAAG,CAAC3J,CAAC,GAAG8I,CAAC,CAAC9I,CAAC,GAAGwC,WAAW,CAAC;gBAC7D,IAAI8I,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,GAAGH,CAAC,GAAGA,CAAC,EAAE;kBAC3BH,UAAU,GAAG,IAAI;kBACjB;;;cAIR,IAAI,CAAClF,kBAAkB,CAACjO,MAAM,GAAG,CAACmT,UAAU;;;cAG5C,IAAI,CAACA,UAAU,EAAE;;gBAEb,IAAIO,GAAG,GAAG,CAAC,CAAC,GAAG5L,IAAI,CAAC4L,GAAG,CAAC1C,CAAC,EAAEQ,QAAQ,CAACmC,CAAC,CAAC;gBACtC,IAAIL,EAAC,GAAGzI,OAAO;gBACfyI,EAAC,CAACtL,CAAC,GAAGgJ,CAAC,CAAChJ,CAAC,GAAG0L,GAAG,GAAGlC,QAAQ,CAACmC,CAAC,CAAC3L,CAAC;gBAC9BsL,EAAC,CAACrL,CAAC,GAAG,CAAC,CAAC;gBACRqL,EAAC,CAACpL,CAAC,GAAG8I,CAAC,CAAC9I,CAAC,GAAGwL,GAAG,GAAGlC,QAAQ,CAACmC,CAAC,CAACzL,CAAC;gBAC9BoL,EAAC,CAACrC,SAAS,EAAE;gBAEb,IAAIa,KAAG,GAAG,IAAI,CAACF,UAAU,CAACC,IAAG,EAAEyB,EAAC,EAAE,EAAE,CAAC;gBACrC,IAAIpC,OAAM,GAAG,IAAI,CAACH,WAAW,CAACuC,EAAC,CAAC;gBAChC,IAAI,CAACzC,YAAY,CAACiC,WAAW,CAAC5B,OAAM,EAAEW,IAAG,EAAEC,KAAG,GAAGpH,WAAW,CAAC;;aAEpE,MACI;cACD,IAAI,CAACuD,kBAAkB,CAACjO,MAAM,GAAG,KAAK;;;SAGjD;QAAA/G,MAAA,CAEDyZ,OAAO,GAAP,SAAAA,QAAQX,CAAO,EAAEf,CAAO,EAAE4C,EAAQ,EAAE;;;;;;;;;;;;;;;;;;;UAmBhC,IAAIC,CAAC,GAAG9B,CAAC,CAAC/J,CAAC,GAAG4L,EAAE,CAAC5L,CAAC;UAClB,IAAI8L,CAAC,GAAG/B,CAAC,CAAC7J,CAAC,GAAG0L,EAAE,CAAC1L,CAAC;UAClB,IAAIoL,CAAC,GAAG5I,WAAW;UAEnB,IAAIqJ,CAAC,GAAG/C,CAAC,CAAChJ,CAAC,GAAGgJ,CAAC,CAAChJ,CAAC,GAAGgJ,CAAC,CAAC9I,CAAC,GAAG8I,CAAC,CAAC9I,CAAC;UAC7B,IAAI8L,CAAC,GAAG,CAAC,GAAGH,CAAC,GAAG7C,CAAC,CAAChJ,CAAC,GAAG,CAAC,GAAG8L,CAAC,GAAG9C,CAAC,CAAC9I,CAAC;UACjC,IAAIvG,CAAC,GAAGkS,CAAC,GAAGA,CAAC,GAAGC,CAAC,GAAGA,CAAC,GAAG,CAAC,GAAGR,CAAC,GAAGA,CAAC;UAEjC,IAAIS,CAAC,IAAI,CAAC,EAAE;YACR,IAAIxL,CAAC,GAAGyL,CAAC,GAAGA,CAAC,GAAG,CAAC,GAAGD,CAAC,GAAGpS,CAAC;YACzB,IAAI4G,CAAC,IAAI,CAAC,EAAE;cACR,IAAI0L,EAAE,GAAG,CAAC,CAACD,CAAC,GAAGlY,IAAI,CAACoY,IAAI,CAAC3L,CAAC,CAAC,KAAK,CAAC,GAAGwL,CAAC,CAAC;cACtC,IAAII,EAAE,GAAG,CAAC,CAACH,CAAC,GAAGlY,IAAI,CAACoY,IAAI,CAAC3L,CAAC,CAAC,KAAK,CAAC,GAAGwL,CAAC,CAAC;cACtC,IAAIE,EAAE,GAAGE,EAAE,IAAI,CAAC,EAAE;gBACd,OAAOrY,IAAI,CAAC/B,GAAG,CAACka,EAAE,EAAEE,EAAE,CAAC;eAC1B,MACI;gBACD,OAAOrY,IAAI,CAACsY,GAAG,CAACH,EAAE,EAAEE,EAAE,CAAC;;;WAMlC,MACI,IAAIH,CAAC,IAAI,CAAC,EAAE;YACb,OAAO,CAACrS,CAAC,GAAGqS,CAAC;WAChB,MACI;UAGL,OAAO,CAAC,CAAC;;;;;QAEb/a,MAAA,CAEMuX,WAAW;QAAA;UAAA,IAAA6D,YAAA,GAAAlT,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAjB,SAAAgD;YAAA,OAAAjD,mBAAA,GAAAa,IAAA,UAAAqC,UAAAC,SAAA;cAAA,kBAAAA,SAAA,CAAAnC,IAAA,GAAAmC,SAAA,CAAAlC,IAAA;gBAAA;kBAAAkC,SAAA,CAAAlC,IAAA;kBAAA,OACU5K,GAAG,CAACuG,SAAS,CAACC,SAAS,CAACwB,gBAAgB,CAAC9H,IAAI,CAAC0S,SAAS,CAAC;gBAAA;kBAC9D,IAAI,CAACN,YAAY,CAAC,YAAM;oBACpBtS,GAAG,CAACsM,OAAO,CAACC,IAAI,CAAC,MAAM,CAAC;mBAC3B,EAAE,CAAC,CAAC;gBAAC;gBAAA;kBAAA,OAAAO,SAAA,CAAAxM,IAAA;;eAAAsM,QAAA;WACT;UAAA,SAAAmM;YAAA,OAAA6D,YAAA,CAAAtb,KAAA,OAAAC,SAAA;;UAAA,OAAAwX,WAAA;;QAAAvX,MAAA,CAEKwX,UAAU;UAAA,IAAA6D,WAAA,GAAAnT,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAhB,SAAAuC,SAAiB7E,IAAwC;YAAA,IAAAwV,QAAA;YAAA,OAAAnT,mBAAA,GAAAa,IAAA,UAAA4B,UAAAC,SAAA;cAAA,kBAAAA,SAAA,CAAA1B,IAAA,GAAA0B,SAAA,CAAAzB,IAAA;gBAAA;kBAAA,KACjD9D,OAAO,CAAC5G,IAAI,CAACsJ,QAAQ;oBAAA6C,SAAA,CAAAzB,IAAA;oBAAA;;kBACrB,IAAItD,IAAI,CAACyV,MAAM,IAAI,YAAY,EAAE;oBAC7B/c,GAAG,CAACsM,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC,CAACC,OAAO,CAAC,YAAM;sBACxC1F,OAAO,CAAC5G,IAAI,CAAC6M,QAAQ,EAAE;qBAC1B,CAAC;mBACL,MACI;oBACD,IAAIzF,IAAI,CAAC0V,MAAM,IAAI3W,OAAO,CAACnG,IAAI,CAACoG,GAAG,EAAE;sBACjCtG,GAAG,CAACsM,OAAO,CAACC,IAAI,CAAC,MAAM,CAAC,CAACC,OAAO,CAAC,YAAM;wBACnC1F,OAAO,CAAC5G,IAAI,CAAC6M,QAAQ,EAAE;uBAC1B,CAAC;qBACL,MACI;sBACD/M,GAAG,CAACsM,OAAO,CAACC,IAAI,CAAC,MAAM,CAAC,CAACC,OAAO,CAAC,YAAM;wBACnC1F,OAAO,CAAC5G,IAAI,CAAC6M,QAAQ,EAAE;uBAC1B,CAAC;;;kBAETV,SAAA,CAAAzB,IAAA;kBAAA;gBAAA;kBAAAyB,SAAA,CAAAzB,IAAA;kBAAA,OAGoBvE,OAAO,CAACnG,IAAI,CAAC+c,eAAe,CAAC3V,IAAI,CAAC0V,MAAM,CAAC;gBAAA;kBAA1DF,QAAQ,GAAAzQ,SAAA,CAAA6Q,IAAA;kBACZ,IAAI5V,IAAI,CAACyV,MAAM,IAAI,YAAY,EAAE;oBAC7B/c,GAAG,CAACsM,OAAO,CAACC,IAAI,CAAC,UAAU,GAAGuQ,QAAQ,CAAC9a,IAAI,GAAG,OAAO,CAAC,CAACwK,OAAO,CAAC,YAAM;sBACjE1F,OAAO,CAAC5G,IAAI,CAAC6M,QAAQ,EAAE;qBAC1B,CAAC;mBACL,MACI;oBACD/M,GAAG,CAACsM,OAAO,CAACC,IAAI,CAAC,KAAK,GAAGuQ,QAAQ,CAAC9a,IAAI,GAAG,OAAO,CAAC,CAACwK,OAAO,CAAC,YAAM;sBAC5D1F,OAAO,CAAC5G,IAAI,CAAC6M,QAAQ,EAAE;qBAC1B,CAAC;;gBACL;gBAAA;kBAAA,OAAAV,SAAA,CAAA/L,IAAA;;eAAA6L,QAAA;WAER;UAAA,SAAA6M,WAAAmE,EAAA;YAAA,OAAAN,WAAA,CAAAvb,KAAA,OAAAC,SAAA;;UAAA,OAAAyX,UAAA;;QAAAxX,MAAA,CAID0W,QAAQ,GAAR,SAAAA,SAAShW,IAAU,EAAE;UACjB,KAAK,IAAI8H,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC2K,SAAS,CAACpS,MAAM,EAAE,EAAEyH,CAAC,EAAE;YAC5C,IAAIA,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC2K,SAAS,CAAC3K,CAAC,CAAC,IAAI9H,IAAI,EAAE;cACrC,IAAI,CAACsT,mBAAmB,CAACpK,IAAI,CAACpB,CAAC,CAAC;cAChC,IAAI,CAACyL,YAAY,GAAG,IAAI;cACxB,IAAIzN,gBAAgB,CAAC9H,IAAI,CAACkW,QAAQ,EAAE;gBAChC,IAAI,CAAC5G,aAAa,CAAC0I,QAAQ,CAAClQ,gBAAgB,CAAC9H,IAAI,CAACkW,QAAQ,CAAC1F,aAAa,EAAE1G,CAAC,CAAC;eAC/E,MACI;gBACD,IAAI,CAACwF,aAAa,CAAC0I,QAAQ,CAAC7R,OAAO,CAACnG,IAAI,CAACoG,GAAG,EAAE0D,CAAC,CAAC;;cAEpD;;;UAGR9H,IAAI,CAACqG,MAAM,GAAG,KAAK;UACnB3I,WAAW,CAACC,WAAW,CAAC,eAAe,CAAC;SAC3C;QAAA2B,MAAA,CAEDgX,gBAAgB,GAAhB,SAAAA,mBAAmB;UACf,IAAI,IAAI,CAACL,WAAW,CAACe,QAAQ,GAAG,GAAG,EAAE;YACjC,IAAI,CAACkE,mBAAmB,EAAE;;SAEjC;QAAA5b,MAAA,CAED6b,YAAY,GAAZ,SAAAA,aAAarG,IAAU,EAAE;UACrB,IAAI,CAACA,IAAI,EAAE;YACP,OAAO,KAAK;;UAGhB,IAAIA,IAAI,CAACzO,MAAM,IAAI,KAAK,EAAE;YACtB,OAAO,IAAI;;UAGf,IAAI6R,GAAG,GAAGpD,IAAI,CAAChF,QAAQ;UACvB,IAAIoI,GAAG,CAAC5J,CAAC,GAAG,GAAG,EAAE;YACb,OAAO,IAAI;;;UAGf,OAAO,KAAK;;;;;;QAGhBhP,MAAA,CACAuW,kCAAkC,GAAlC,SAAAA,qCAAqC;UACjC,IAAI,CAACuF,iBAAiB,EAAE;UACxB,IAAI,CAACnI,kBAAkB,GAAG,KAAK;UAC/B,IAAI,IAAI,CAACkI,YAAY,CAAC,IAAI,CAAClH,SAAS,CAAC,EAAE;YACnC,IAAI,CAACA,SAAS,CAAC5N,MAAM,GAAG,IAAI;YAC5B,IAAI,CAAC4N,SAAS,CAACoH,gBAAgB,CAAC,IAAI,CAACvI,oBAAoB,CAAC;YAC1DqC,aAAa,CAACC,QAAQ,CAACE,kBAAkB,EAAE;;;;UAI/C,IAAI,IAAI,CAAC9B,gBAAgB,EAAE;YACvB,IAAI,CAAC8H,kBAAkB,CAAC,KAAK,CAAC;;UAGlC,IAAI,CAAChI,mBAAmB,GAAG,EAAE;UAC7B,IAAI,CAACC,YAAY,GAAG,KAAK;UACzB,IAAI,CAACC,gBAAgB,GAAG,KAAK;UAE7B,IAAI,CAAC5O,OAAO,CAAC5G,IAAI,CAAC6G,QAAQ,EAAE;YACxB,IAAI,CAAC+P,mBAAmB,EAAE;;;;;;;;QAKlCtV,MAAA,CACAic,cAAc,GAAd,SAAAA,eAAeC,MAAc,EAAE;UAC3B,IAAI,CAACvE,aAAa,EAAE;UACpB,IAAIwE,OAAO,GAAG,IAAI,CAAC7I,UAAU,CAACvE,CAAC,GAAGmN,MAAM,CAACxE,QAAQ,GAAG,GAAG;UACvD,IAAI0E,OAAO,GAAG,IAAI,CAAC9I,UAAU,CAACtE,CAAC,GAAGkN,MAAM,CAACxE,QAAQ,GAAG,GAAG;UACvD,IAAI2E,SAAS,GAAG,IAAIxN,IAAI,CAAC,IAAI,CAACyE,UAAU,CAACvE,CAAC,GAAGoN,OAAO,EAAE,IAAI,CAAC7I,UAAU,CAACtE,CAAC,GAAGoN,OAAO,EAC7E,IAAI,CAAC9I,UAAU,CAACrE,CAAC,CAAC;UACtB,IAAI,CAACwF,GAAG,CAACnE,WAAW,CAAC+L,SAAS,CAAC;UAC/B,IAAI/W,OAAO,CAAC5G,IAAI,CAAC6G,QAAQ,EAAE;YACvB,IAAI,CAAC,IAAI,CAACqO,YAAY,EAAE;cACpB,IAAI,CAACA,YAAY,GAAG,EAAE;;YAE1B,IAAI,CAACA,YAAY,CAAC0I,KAAK,GAAG;cAAEvN,CAAC,EAAEsN,SAAS,CAACtN,CAAC;cAAEC,CAAC,EAAEqN,SAAS,CAACrN,CAAC;cAAEC,CAAC,EAAEoN,SAAS,CAACpN;aAAG;;;;;;;;QAKpFjP,MAAA,CACAuc,kBAAkB,GAAlB,SAAAA,mBAAmBL,MAAc,EAAE;UAC/B,IAAI,CAAC,IAAI,CAACpI,cAAc,IAAIoI,MAAM,CAACxE,QAAQ,IAAI,IAAI,CAAC7D,aAAa,EAAE;YAC/D,IAAI,CAACC,cAAc,GAAG0I,IAAI,CAACC,GAAG,EAAE;YAChC,IAAI,CAAC1I,SAAS,GAAG,CAAC;;UAEtB,IAAI2I,aAAa,GAAGR,MAAM,CAACxE,QAAQ,GAAG,IAAI,CAAC7D,aAAa;UACxD,IAAI,CAACE,SAAS,IAAIlR,IAAI,CAAC8Z,GAAG,CAACD,aAAa,CAAC;UAEzC,IAAIE,EAAE,GAAGJ,IAAI,CAACC,GAAG,EAAE,GAAG,IAAI,CAAC3I,cAAc;UACzC,IAAI+I,MAAM,GAAG,GAAG;UAChB,IAAID,EAAE,GAAG,CAAC,EAAE;YACR,IAAIE,UAAU,GAAG,IAAI,CAAC/I,SAAS,GAAG6I,EAAE;;YAEpCC,MAAM,GAAGha,IAAI,CAAC/B,GAAG,CAAC,GAAG,EAAEgc,UAAU,GAAG,MAAM,CAAC;;UAG/C,IAAIC,UAAU,GAAGL,aAAa,GAAG,EAAE,GAAGG,MAAM;UAC5C,IAAI,CAAChJ,aAAa,GAAGqI,MAAM,CAACxE,QAAQ;;UAEpC,IAAIsF,MAAM,GAAG,IAAI,CAACvI,GAAG,CAACnL,MAAM,CAAC6P,WAAW;UACxC,IAAI8D,aAAa,GAAG,IAAIpO,IAAI,CAACmO,MAAM,CAACjO,CAAC,EAAEiO,MAAM,CAAChO,CAAC,GAAG+N,UAAU,EAAEC,MAAM,CAAC/N,CAAC,CAAC;UACvE,IAAI,CAACwF,GAAG,CAACnL,MAAM,CAAC6P,WAAW,GAAG8D,aAAa;UAC3C,IAAI,CAAClE,eAAe,EAAE;UAEtB,IAAIzT,OAAO,CAAC5G,IAAI,CAAC6G,QAAQ,EAAE;YACvB,IAAI,CAAC,IAAI,CAACqO,YAAY,EAAE;cACpB,IAAI,CAACA,YAAY,GAAG,EAAE;;YAE1B,IAAI,CAACA,YAAY,CAACpE,SAAS,GAAG;cAAET,CAAC,EAAEkO,aAAa,CAAClO,CAAC;cAAEC,CAAC,EAAEiO,aAAa,CAACjO,CAAC;cAAEC,CAAC,EAAEgO,aAAa,CAAChO;aAAG;;SAEnG;QAAAjP,MAAA,CAQD4b,mBAAmB,GAAnB,SAAAA,sBAAsB;UAAA,IAAA3L,MAAA;UAClB,IAAI,IAAI,CAACiE,gBAAgB,EAAE;YACvB;;;;UAIJ,IAAI,CAACC,gBAAgB,EAAE;UACvB,IAAI,CAACa,kBAAkB,CAACjO,MAAM,GAAG,KAAK;UAEtC,IAAI,CAACmN,gBAAgB,GAAG,IAAI;UAC5B,IAAI,CAACd,QAAQ,GAAG,IAAIvE,IAAI,CAAC0C,gBAAgB,GAAG,IAAI,CAACoF,WAAW,CAACe,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;UAE5E,IAAI,CAACrE,OAAO,CAACvE,GAAG,CAAC,IAAI,CAAC2F,GAAG,CAACnL,MAAM,CAAC6P,WAAW,CAAC;UAC7C,IAAIH,MAAM,GAAGC,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAAC7F,OAAO,CAACrE,CAAC,CAAC;UAClDH,IAAI,CAACuK,OAAO,CAAC,IAAI,CAAChG,QAAQ,EAAE,IAAI,CAACA,QAAQ,EAAE,IAAI,CAACuB,SAAS,CAACxU,YAAY,CAACkZ,cAAc,CAAC,CAACC,MAAM,EAAEN,MAAM,CAAC;UAEtG,IAAI,CAACgD,kBAAkB,CAAC,IAAI,CAAC;UAE7B,IAAI,CAACF,iBAAiB,EAAE;UACxB,IAAIoB,GAAG,GAAGC,KAAK,CAAC,IAAI,CAAC1I,GAAG,CAAC,CAACtS,IAAI,CAAC,YAAM;YACjC8N,MAAI,CAACmN,SAAS,CAACnN,MAAI,CAACmD,QAAQ,CAAC;WAChC,CAAC;UAEF+J,KAAK,CAAC,IAAI,CAAC1I,GAAG,CAAC,CAAC4I,EAAE,CAAC,GAAG,EAAE;YAAE7M,QAAQ,EAAE,IAAI,CAAC+C;WAAY,EAAE;YAAE+J,MAAM,EAAE;WAAW,CAAC,CAACC,IAAI,CAACL,GAAG,CAAC,CAAChd,KAAK,EAAE;;;;;QAEnGF,MAAA,CAIAmV,WAAW,GAAX,SAAAA,YAAYqI,WAAoB,EAAE;UAC9B,KAAK,IAAIhV,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC2K,SAAS,CAACpS,MAAM,EAAEyH,CAAC,EAAE,EAAE;YAC5C,IAAIiV,GAAG,GAAG,IAAI,CAACtK,SAAS,CAAC3K,CAAC,CAAC;YAC3B,IAAIkV,IAAI,GAAGD,GAAG,CAACvI,aAAa;YAC5B,IAAIyI,IAAI,GAAGF,GAAG,CAACG,aAAa;YAC5B,IAAI,CAACnK,aAAa,CAACjL,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGkV,IAAI,CAAC3O,CAAC;YACtC,IAAI,CAAC0E,aAAa,CAACjL,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGkV,IAAI,CAAC1O,CAAC;YACtC,IAAI,CAACyE,aAAa,CAACjL,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGkV,IAAI,CAACzO,CAAC;YAEtC,IAAI,CAACyE,cAAc,CAAClL,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGmV,IAAI,CAAC5O,CAAC;YACvC,IAAI,CAAC2E,cAAc,CAAClL,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGmV,IAAI,CAAC3O,CAAC;YACvC,IAAI,CAAC0E,cAAc,CAAClL,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGmV,IAAI,CAAC1O,CAAC;YACvC,IAAI,CAACyE,cAAc,CAAClL,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAGmV,IAAI,CAACE,CAAC;;UAG3C,IAAIlP,SAAS,GAAG;YACZmP,YAAY,EAAE,IAAI,CAACrK,aAAa;YAChCsK,aAAa,EAAE,IAAI,CAACrK;WACvB;UACD,IAAIsK,YAAY,GAAG;YACfrP,SAAS,EAAEA;WACd;UACD,IAAI6O,WAAW,EAAE;YACbQ,YAAY,CAAC,YAAY,CAAC,GAAG;cAAEjP,CAAC,EAAE,IAAI,CAACqE,QAAQ,CAACrE,CAAC;cAAEC,CAAC,EAAE,IAAI,CAACoE,QAAQ,CAACpE,CAAC;cAAEC,CAAC,EAAE,IAAI,CAACmE,QAAQ,CAACnE;aAAG;;UAE/F,OAAO+O,YAAY;;;;;;QAGvBhe,MAAA,CACAgc,kBAAkB,GAAlB,SAAAA,mBAAmBiC,KAAc,EAAE;UAC/B,IAAI,CAAC3Y,OAAO,CAAC5G,IAAI,CAAC6G,QAAQ,EAAE;YACxB;;UAGJ,IAAIiY,WAAW,GAAGS,KAAK;UACvB,IAAInY,IAAI,GAAG,IAAI,CAACqP,WAAW,CAACqI,WAAW,CAAC;UACxC1X,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAACqO,gBAAgB;UACrC,IAAIqJ,WAAW,EAAE;YACbhX,gBAAgB,CAAC9H,IAAI,CAACwP,eAAe,CAACpI,IAAI,CAAC;WAC9C,MACI;YACD,IAAIoY,YAAY,GAAGpY,IAAiC;YACpD,IAAI,IAAI,CAACqO,gBAAgB,IAAI3N,gBAAgB,CAAC9H,IAAI,CAACyN,KAAK,EAAE;cACtD;;YAGJ,IAAI,IAAI,CAAC8H,YAAY,EAAE;cACnBiK,YAAY,CAACC,UAAU,GAAG3X,gBAAgB,CAAC9H,IAAI,CAACkW,QAAQ,CAAC1F,aAAa;aACzE,MACI;cACDgP,YAAY,CAACC,UAAU,GAAG,IAAI,CAACC,iBAAiB,EAAE;;YAGtD5X,gBAAgB,CAAC9H,IAAI,CAAC2P,uBAAuB,CAAC6P,YAAY,CAAC;;SAElE;QAAAle,MAAA,CAEDqe,mBAAmB,GAAnB,SAAAA,sBAAsB;UAClB,IAAI,CAAC/I,mBAAmB,EAAE;SAC7B;QAAAtV,MAAA,CAGDsV,mBAAmB,GAAnB,SAAAA,sBAAsB;UAClB,IAAIgJ,UAAU,GAAG9X,gBAAgB,CAAC9H,IAAI,CAAC6L,QAAQ,IAAK,CAACjF,OAAO,CAAC5G,IAAI,CAAC6G,QAAS;UAC3E,IAAI+Y,UAAU,EAAE;YACZ,IAAI,CAACvF,eAAe,EAAE;;UAE1B,IAAI,CAACtE,GAAG,CAAC1N,MAAM,GAAG,IAAI;UACtB,IAAI,CAAC4P,WAAW,CAACjW,IAAI,CAACqG,MAAM,GAAGuX,UAAU;UACzC,IAAI,CAAC3H,WAAW,CAACe,QAAQ,GAAG,GAAG;UAC/B,IAAI,CAACjD,GAAG,CAACnL,MAAM,CAACgH,WAAW,CAAC,IAAI,CAACqE,SAAS,CAACnE,QAAQ,CAAC;UACpD,IAAI,CAACiE,GAAG,CAACnE,WAAW,CAAC,IAAI,CAACgD,UAAU,CAACvE,CAAC,EAAE,IAAI,CAACuE,UAAU,CAACtE,CAAC,EAAE,IAAI,CAACsE,UAAU,CAACrE,CAAC,CAAC;UAC7E,IAAIzI,gBAAgB,CAAC9H,IAAI,CAACkW,QAAQ,IAAIpO,gBAAgB,CAAC9H,IAAI,CAAC0N,MAAM,EAAE;YAChE,IAAI,CAACiH,OAAO,CAACvE,GAAG,CAACtI,gBAAgB,CAAC9H,IAAI,CAAC0N,MAAM,CAAC;YAC9C,IAAI,CAACqI,GAAG,CAACnL,MAAM,CAAC6P,WAAW,GAAG,IAAI,CAAC9F,OAAO;WAC7C,MACI;YACD,IAAI,CAACA,OAAO,CAACvE,GAAG,CAAC,IAAI,CAAC2F,GAAG,CAACnL,MAAM,CAAC6P,WAAW,CAAC;;UAEjD,IAAI,CAACjC,eAAe,CAACxW,IAAI,CAACqG,MAAM,GAAGuX,UAAU;UAC7C,IAAI,CAACpH,eAAe,CAACQ,QAAQ,GAAG,GAAG;;SAEtC;;QAAA1X,MAAA,CAIDmW,eAAe,GAAf,SAAAA,gBAAgB5G,UAAU,EAAEpD,KAAK,EAAE;UAAA,IAAAyE,MAAA;UAC/B,IAAIpK,gBAAgB,CAAC9H,IAAI,CAAC6L,QAAQ,EAAE;YAChC;;UAEJ,IAAI,CAAC4J,gBAAgB,GAAGhI,KAAK;UAE7B,IAAI,CAAC2P,iBAAiB,EAAE;UACxB,IAAIoB,GAAG,GAAGC,KAAK,CAAC,IAAI,CAAC1I,GAAG,CAAC,CAACtS,IAAI,CAAC,YAAM;YACjCyO,MAAI,CAACwM,SAAS,CAAC7N,UAAU,CAAC;WAC7B,CAAC;UACF4N,KAAK,CAAC,IAAI,CAAC1I,GAAG,CAAC,CAAC4I,EAAE,CAAC,GAAG,EAAE;YAAE7M,QAAQ,EAAE,IAAI,CAAC+C;WAAY,EAAE;YAAE+J,MAAM,EAAE;WAAW,CAAC,CAACC,IAAI,CAACL,GAAG,CAAC,CAAChd,KAAK,EAAE;SAClG;QAAAF,MAAA,CAGDoe,iBAAiB,GAAjB,SAAAA,oBAAoB;UAChB,IAAIG,UAAU,GAAG/X,gBAAgB,CAAC9H,IAAI,CAACkW,QAAQ,CAAChH,OAAO;UACvD,KAAK,IAAIpF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG+V,UAAU,CAACxd,MAAM,EAAE,EAAEyH,CAAC,EAAE;YACxC,IAAIqF,CAAC,GAAG0Q,UAAU,CAAC/V,CAAC,CAAC;YACrB,IAAIqF,CAAC,CAAC/I,GAAG,IAAI0B,gBAAgB,CAAC9H,IAAI,CAACkW,QAAQ,CAAC1F,aAAa,EAAE;cACvD,IAAIsP,OAAO,GAAG,CAAChW,CAAC,GAAG,CAAC,IAAI+V,UAAU,CAACxd,MAAM;cACzC,IAAI8M,EAAC,GAAG0Q,UAAU,CAACC,OAAO,CAAC;cAC3B,OAAO3Q,EAAC,CAAC/I,GAAG;;;UAGpB,OAAOyZ,UAAU,CAAC,CAAC,CAAC,CAACzZ,GAAG;SAC3B;QAAA9E,MAAA,CAEDod,SAAS,GAAT,SAAAA,UAAU7N,UAAgB,EAAE;;;;;;;;;;;;;;;;;;;UAqBxB,IAAIjK,OAAO,CAAC5G,IAAI,CAAC6G,QAAQ,EAAE;YACvB,IAAI,CAAC6P,eAAe,CAAC5O,gBAAgB,CAAC9H,IAAI,CAACkW,QAAQ,CAACjG,SAAS,CAAC;;UAGlE,IAAI,CAAC8F,GAAG,CAAC1N,MAAM,GAAG,KAAK;UACvB,IAAI,CAAC4P,WAAW,CAACjW,IAAI,CAACqG,MAAM,GAAG,KAAK;UACpC,IAAI,CAACmQ,eAAe,CAACxW,IAAI,CAACqG,MAAM,GAAG,KAAK;UAExC,IAAI0X,OAAO,GAAG,IAAI5P,IAAI,CAACU,UAAU,CAACR,CAAC,EAAE,CAAC,EAAEQ,UAAU,CAACN,CAAC,CAAC;UACrD,IAAK,CAAC3J,OAAO,CAAC5G,IAAI,CAAC6G,QAAQ,IAAIiB,gBAAgB,CAAC9H,IAAI,CAAC6L,QAAQ,EAAG;YAE5D,IAAI,CAACoK,SAAS,CAACxU,YAAY,CAACS,SAAS,CAAC,CAAC8d,YAAY,CAACD,OAAO,CAAC;YAE5DpI,YAAY,CAAC/I,KAAK,EAAE;YACpB,IAAI,CAACqG,kBAAkB,GAAG,IAAI;;UAGlC,IAAIpV,MAAM,GAAGkgB,OAAO,CAAC1d,MAAM,EAAE,GAAGwQ,gBAAgB;UAChDnT,WAAW,CAACC,WAAW,CAAC,gBAAgB,EAAEE,MAAM,CAAC;SACpD;QAAAyB,MAAA,CAED2e,aAAa,GAAb,SAAAA,gBAAgB;UACZ,IAAIC,WAAW,GAAG,CAAC;UACnB,KAAK,IAAIpW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAC2K,SAAS,CAACpS,MAAM,EAAE,EAAEyH,CAAC,EAAE;YAC5C,IAAI,IAAI,CAAC2K,SAAS,CAAC3K,CAAC,CAAC,CAACzB,MAAM,IAAI,KAAK,EAAE;cACnC6X,WAAW,EAAE;;;UAGrB,OAAOA,WAAW,IAAIpN,YAAY,GAAG,CAAC;SACzC;QAAAxR,MAAA,CAED8b,iBAAiB,GAAjB,SAAAA,oBAAoB;UAChB,IAAI,CAACnH,SAAS,CAACxU,YAAY,CAACS,SAAS,CAAC,CAACie,UAAU,EAAE;UACnD,KAAK,IAAIrW,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACyM,UAAU,CAACxL,QAAQ,CAAC1I,MAAM,EAAE,EAAEyH,CAAC,EAAE;YACtD,IAAIsW,EAAE,GAAG,IAAI,CAAC7J,UAAU,CAACxL,QAAQ,CAACjB,CAAC,CAAC,CAACrI,YAAY,CAACS,SAAS,CAAC,CAACie,UAAU,EAAE;;UAE7EhJ,aAAa,CAACC,QAAQ,CAACC,YAAY,CAACC,kBAAkB,EAAE;SAC3D;QAAAhW,MAAA,CAED4V,WAAW,GAAX,SAAAA,YAAYpN,CAAS,EAAE1C,IAAmE,EAAE;UACxF,IAAI0P,IAAI,GAAG,IAAI,CAACrC,SAAS,CAAC3K,CAAC,CAAC;UAC5B,IAAIuG,CAAC,GAAGjJ,IAAI,CAACgY,YAAY,CAACtV,CAAC,GAAG,CAAC,CAAC;UAChC,IAAIwG,CAAC,GAAGlJ,IAAI,CAACgY,YAAY,CAACtV,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;UACpC,IAAIyG,CAAC,GAAGnJ,IAAI,CAACgY,YAAY,CAACtV,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;UACpCgN,IAAI,CAACuG,gBAAgB,CAAChN,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC;UAE9B,IAAI8P,EAAE,GAAGjZ,IAAI,CAACiY,aAAa,CAACvV,CAAC,GAAG,CAAC,CAAC;UAClC,IAAIwW,EAAE,GAAGlZ,IAAI,CAACiY,aAAa,CAACvV,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;UACtC,IAAIyW,EAAE,GAAGnZ,IAAI,CAACiY,aAAa,CAACvV,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;UACtC,IAAI0W,EAAE,GAAGpZ,IAAI,CAACiY,aAAa,CAACvV,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;UACtCgN,IAAI,CAAC2J,gBAAgB,CAACJ,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,CAAC;UAErC,IAAI1Y,gBAAgB,CAAC9H,IAAI,CAACqP,UAAU,CAACvF,CAAC,CAAC,EAAE;YACrCgN,IAAI,CAACzO,MAAM,GAAG,KAAK;;SAE1B;QAAA/G,MAAA,CAEDoV,eAAe,GAAf,SAAAA,gBAAgBtP,IAAmE,EAAE;UACjF,KAAK,IAAI0C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgJ,YAAY,EAAE,EAAEhJ,CAAC,EAAE;YACnC,IAAI,CAACoN,WAAW,CAACpN,CAAC,EAAE1C,IAAI,CAAC;;;;;;;QAIjC9F,MAAA,CACQkW,kBAAkB,GAA1B,SAAAA,mBAA2BpQ,IAAI,EAAE;UAC7B,IAAIU,gBAAgB,CAAC9H,IAAI,CAAC6L,QAAQ,EAAE;YAChC;;UAEJ,IAAIzE,IAAI,CAACwW,KAAK,EAAE;YACZ,IAAI,CAAC7H,GAAG,CAACnE,WAAW,CAACxK,IAAI,CAACwW,KAAK,CAAC;;UAEpC,IAAIxW,IAAI,CAAC0J,SAAS,EAAE;YAChB,IAAI,CAACiF,GAAG,CAACnL,MAAM,CAAC6P,WAAW,GAAGrT,IAAI,CAAC0J,SAAS;;SAEnD;QAAAxP,MAAA,CAGDsD,MAAM,GAAN,SAAAA,OAAOsZ,EAAU,EAAE;UACf,IAAI,CAACxI,aAAa,IAAIwI,EAAE;UACxB,IAAI,IAAI,CAACxI,aAAa,GAAG,GAAG,EAAE;YAC1B,IAAI,IAAI,CAACR,YAAY,EAAE;cACnBpN,gBAAgB,CAAC9H,IAAI,CAAC4P,iBAAiB,CAAC,IAAI,CAACsF,YAAY,CAAC;cAC1D,IAAI,CAACA,YAAY,GAAG,IAAI;;YAE5B,IAAI,CAACQ,aAAa,GAAG,CAAC;;SAE7B;QAAApU,MAAA,CAIDsX,kBAAkB,GAAlB,SAAAA,qBAAqB;UACjB,IAAI,IAAI,CAAC3D,kBAAkB,EAAE;YACzB0C,YAAY,CAAC+I,WAAW,CAAC,IAAI,CAAC9K,QAAQ,CAAC;YACvC,IAAI,CAAC,IAAI,CAACD,WAAW,EAAE;cACnB,IAAIgL,UAAU,GAAG,IAAI,CAACV,aAAa,EAAE;cACrC,IAAIrZ,OAAO,CAAC5G,IAAI,CAAC6G,QAAQ,EAAE;gBACvB,IAAIO,IAAI,GAAG,IAAI,CAACqP,WAAW,CAAC,KAAK,CAAQ;gBACzCrP,IAAI,CAACwZ,gBAAgB,GAAG,IAAI,CAACtL,mBAAmB;gBAChD,IAAI,CAACA,mBAAmB,GAAG,EAAE;gBAC7B,IAAIqL,UAAU,EAAE;kBACZvZ,IAAI,CAACyZ,QAAQ,GAAG,IAAI;;gBAExB/Y,gBAAgB,CAAC9H,IAAI,CAAC6P,qBAAqB,CAACzI,IAAI,CAAC;eACpD,MACI,IAAIuZ,UAAU,EAAE;gBACjB7gB,GAAG,CAACsM,OAAO,CAACC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAACC,OAAO,CAAC,UAAA+P,CAAC,EAAI;kBAC7C,IAAIA,CAAC,EAAE;oBACHvc,GAAG,CAACuG,SAAS,CAACya,WAAW,EAAE;mBAC9B,MACI;oBACDla,OAAO,CAAC5G,IAAI,CAAC6M,QAAQ,EAAE;;iBAE9B,CAAC;;cAEN,IAAI,CAAC8I,WAAW,GAAGgL,UAAU;;;UAIrC,IAAI7f,aAAa,CAACwB,gBAAgB,GAAG,CAAC,EAAE;YACpC5C,WAAW,CAACC,WAAW,CAAC,sBAAsB,EAAEmB,aAAa,CAACwB,gBAAgB,GAAG,KAAK,CAAC;;UAE3FxB,aAAa,CAACwB,gBAAgB,GAAG,GAAG;SACvC;QAAA,OAAAkR,oBAAA;MAAA,EAn2BqCjR,SAAS,IAAAqB,WAAA,GAAAkB,yBAAA,CAAA7D,OAAA,CAAAM,SAAA,kBAAA6D,KAAA;QAAAL,YAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,WAAA,WAAAA;UAAA,OAIzB,IAAI;;MAAA,IAAAY,YAAA,GAAAhB,yBAAA,CAAA7D,OAAA,CAAAM,SAAA,sBAAA+D,KAAA;QAAAP,YAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,WAAA,WAAAA;UAAA,OAGA,IAAI;;MAAA,IAAAa,YAAA,GAAAjB,yBAAA,CAAA7D,OAAA,CAAAM,SAAA,gBAAAgE,KAAA;QAAAR,YAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,WAAA,WAAAA;UAAA,OAGV,IAAI;;MAAA,IAAAc,YAAA,GAAAlB,yBAAA,CAAA7D,OAAA,CAAAM,SAAA,UAAAkE,KAAA;QAAAV,YAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,WAAA,WAAAA;UAAA,OAGZ,IAAI;;MAAA,IAAAe,YAAA,GAAAnB,yBAAA,CAAA7D,OAAA,CAAAM,SAAA,gBAAAoE,KAAA;QAAAZ,YAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,WAAA,WAAAA;UAAA,OAGE,IAAI;;MAAA,IAAAgB,YAAA,GAAApB,yBAAA,CAAA7D,OAAA,CAAAM,SAAA,yBAAAsE,KAAA;QAAAd,YAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,WAAA;MAAA,IAAAiP,YAAA,GAAArP,yBAAA,CAAA7D,OAAA,CAAAM,SAAA,iBAAAmS,KAAA;QAAA3O,YAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,WAAA,WAAAA;UAAA,OAMH,IAAI;;MAAA,IAAAkP,YAAA,GAAAtP,yBAAA,CAAA7D,OAAA,CAAAM,SAAA,iBAAAoS,KAAA;QAAA5O,YAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,WAAA;MAAA,IAAAmP,YAAA,GAAAvP,yBAAA,CAAA7D,OAAA,CAAAM,SAAA,kBAAAsS,MAAA;QAAA9O,YAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,WAAA;MAAA,IAAAoP,aAAA,GAAAxP,yBAAA,CAAA7D,OAAA,CAAAM,SAAA,YAAAuS,MAAA;QAAA/O,YAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,WAAA;MAAA,IAAAqP,aAAA,GAAAzP,yBAAA,CAAA7D,OAAA,CAAAM,SAAA,mBAAAwS,MAAA;QAAAhP,YAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,WAAA;MAAA,IAAAsP,aAAA,GAAA1P,yBAAA,CAAA7D,OAAA,CAAAM,SAAA,oBAAA0S,MAAA;QAAAlP,YAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,WAAA;MAAA,KAAAjE,OAAA,MAAAD,MAAA;cA80B1B,CAAAV,GAAA,CAAAC,GAAA;;;;;;;;;;;;;;;;MCt4BD,IAAIwgB,YAAY,GAAG,CAAC;MACpB,IAAIC,WAAW,GAAG,CAAC;MACnB,IAAIC,mBAAmB,GAAG,CAAC;MAC3B,IAAMC,WAAW,GAAG,CAAC;MACrB,IAAMC,SAAS,GAAG,GAAG;UAERxJ,YAAY;QAAA,SAAAA;QAAAA,YAAA,CAGP/I,KAAK,GAAnB,SAAAA,QAAqB;UACjBmS,YAAY,GAAG,CAAC;UAChBC,WAAW,GAAG,CAAC;UACfC,mBAAmB,GAAG,CAAC;UACvB9J,aAAa,CAACC,QAAQ,CAACgK,cAAc,GAAG,KAAK;UAC7CjK,aAAa,CAACC,QAAQ,CAACiK,aAAa,GAAG,IAAI;UAC3ClK,aAAa,CAACC,QAAQ,CAAC8J,WAAW,GAAG,CAAC;SACzC;QAAAvJ,YAAA,CACa+I,WAAW,GAAzB,SAAAA,YAA0BxC,EAAU,EAAE;UAClC,IAAI,CAAC/G,aAAa,CAACC,QAAQ,CAACC,YAAY,EAAE;UAC1C,IAAI,CAACF,aAAa,CAACC,QAAQ,CAACkK,MAAM,EAAE;YAChCnK,aAAa,CAACC,QAAQ,CAACC,YAAY,CAACC,kBAAkB,EAAE;YACxD;;UAEJyJ,YAAY,GAAG,CAAC;UAChBC,WAAW,IAAI9C,EAAE;UACjB1V,QAAQ,CAACwH,IAAI,CAAC0I,QAAQ,CAAC6I,oBAAoB,CAAC;UAC5C,OAAQR,YAAY,GAAGG,WAAW,EAAG;YACjC,IAAID,mBAAmB,GAAGE,SAAS,IAAIH,WAAW,IAAI7J,aAAa,CAACC,QAAQ,CAACiK,aAAa,EAAE;cACxFlK,aAAa,CAACC,QAAQ,CAACC,YAAY,CAACC,kBAAkB,EAAE;cACxDH,aAAa,CAACC,QAAQ,CAACC,YAAY,CAACmK,IAAI,CAACrK,aAAa,CAACC,QAAQ,CAACiK,aAAa,CAAC;cAC9ElK,aAAa,CAACC,QAAQ,CAACC,YAAY,CAACoK,UAAU,EAAE;cAChDtK,aAAa,CAACC,QAAQ,CAACC,YAAY,CAACqK,eAAe,EAAE;cACrDV,WAAW,IAAI7J,aAAa,CAACC,QAAQ,CAACiK,aAAa;cACnDN,YAAY,EAAE;cACdE,mBAAmB,EAAE;aACxB,MACI;cACD9J,aAAa,CAACC,QAAQ,CAACC,YAAY,CAACC,kBAAkB,EAAE;cACxD;;;UAGR,IAAI2J,mBAAmB,KAAKE,SAAS,EAAE;YACnC3Y,QAAQ,CAACwH,IAAI,CAAC2H,YAAY,CAACC,qBAAqB,CAAC;;UAErDpP,QAAQ,CAACwH,IAAI,CAAC0I,QAAQ,CAACiJ,mBAAmB,CAAC;SAC9C;QAAA,OAAAhK,YAAA;MAAA;MAvCQA,YAAY,CACPC,qBAAqB,GAAG,oCAAoC;cAAA,CAAAtX,GAAA,CAAAC,GAAA;;;;;;;;;;;;;;;MCP9E;UACMsV,SAAS,sBAAG;QACdC,OAAO,EAAC,EAAE;;QAEV8L,MAAM,EAAE;UACJC,QAAQ,EAAE,kBAAkB;UAC5BC,UAAU,EAAE,oBAAoB;UAChCC,QAAQ,EAAE;SACb;QACDC,gBAAgB,EAAE;UACdC,KAAK,EAAE,aAAa;UACpBxW,IAAI,EAAE,YAAY;UAClByW,aAAa,EAAE,gBAAgB;UAC/BC,aAAa,EAAE,gBAAgB;UAC/BC,kBAAkB,EAAE;SACvB;QACDC,eAAe,EAAE;UACbC,OAAO,EAAE,SAAS;UAClBL,KAAK,EAAE,aAAa;UACpBM,QAAQ,EAAE;SACb;QACDC,mBAAmB,EAAE;UACjBC,OAAO,EAAE,SAAS;UAClBC,SAAS,EAAE;SACd;;QAEDC,SAAS,EAAE,CAAEC,KAAK,CAACC,IAAI,EAAED,KAAK,CAACE,KAAK,EAAEF,KAAK,CAACG,OAAO,EACnDH,KAAK,CAACI,IAAI,EAAEJ,KAAK,CAACK,GAAG,EAAEL,KAAK,CAACM,MAAM,CAAC;QACpCjM,eAAe,EAAE;MACrB;cACyB,CAAA3W,GAAA,CAAAC,GAAA;;;;;;;;;;;;;;UC9BnB4iB,QAAQ,sBAAG;QACTC,QAAQ,EAAEC,IAAI,CAAC;UACXC,cAAc,EAAE,CAAC;UACjBC,iBAAiB,EAAE,CAAC;UACpBC,gBAAgB,EAAE;SACrB,CAAC;QACFC,KAAK,EAAEJ,IAAI,CAAC;UACRK,MAAM,EAAE,CAAC;UACTC,KAAK,EAAE;SACV,CAAC;QACFC,QAAQ,EAAEP,IAAI,CAAC;UACXhZ,IAAI,EAAE,CAAC;UACPoR,KAAK,EAAE;SACV,CAAC;QACFoI,cAAc,EAAER,IAAI,CAAC;UACjBS,QAAQ,EAAE,CAAC;UACXC,KAAK,EAAE;SACV,CAAC;QACFC,aAAa,EAAEX,IAAI,CAAC;UAChBY,OAAO,EAAE,CAAC;UACVC,IAAI,EAAE,CAAC;UACPC,IAAI,EAAE;SACT;MACT;cACwB,CAAA7jB,GAAA,CAAAC,GAAA;;;;;;;;;;;;;;;;;;;;;;MCzBxB,IAAQC,OAAO,GAAeC,UAAU,CAAhCD,OAAO;QAAEE,QAAQ,GAAKD,UAAU,CAAvBC,QAAQ;UAGZsT,YAAY,4BAAAjT,IAAA,GADxBP,OAAO,CAAC,cAAc,CAAC,EAAA4E,KAAA,GAEnB1E,QAAQ,CAACkF,IAAI,CAAC,EAAAN,KAAA,GAGd5E,QAAQ,CAACkF,IAAI,CAAC,EAAAL,KAAA,GAGd7E,QAAQ,CAACkF,IAAI,CAAC,EAAA7E,IAAA,CAAAC,MAAA,IAAAC,OAAA,0BAAAC,UAAA;QAAAC,cAAA,CAAA6S,YAAA,EAAA9S,UAAA;QAAA,SAAA8S;UAAA,IAAA5Q,KAAA;UAAA,SAAAC,IAAA,GAAAhC,SAAA,CAAAgB,MAAA,EAAAiB,IAAA,OAAAC,KAAA,CAAAF,IAAA,GAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;YAAAF,IAAA,CAAAE,IAAA,IAAAnC,SAAA,CAAAmC,IAAA;;UAAAJ,KAAA,GAAAlC,UAAA,CAAAuC,IAAA,CAAArC,KAAA,CAAAF,UAAA,SAAAwC,MAAA,CAAAJ,IAAA;UAAAK,0BAAA,CAAAP,KAAA,aAAAQ,WAAA,EAAAC,sBAAA,CAAAT,KAAA;UAAAO,0BAAA,CAAAP,KAAA,cAAA0C,YAAA,EAAAjC,sBAAA,CAAAT,KAAA;UAAAO,0BAAA,CAAAP,KAAA,eAAA2C,YAAA,EAAAlC,sBAAA,CAAAT,KAAA;UAAA,OAAAA,KAAA;;QAAA,IAAA9B,MAAA,GAAA0S,YAAA,CAAAzS,SAAA;QAAAD,MAAA,CAGf8iB,MAAM,GAAN,SAAAA,SAAS;UACL,IAAI,CAACjL,OAAO,EAAE;SACjB;QAAA7X,MAAA,CAED6X,OAAO,GAAP,SAAAA,UAAS;UACL,IAAI,CAACkL,OAAO,CAAChc,MAAM,GAAG,KAAK;UAC3B,IAAI,CAACic,QAAQ,CAACjc,MAAM,GAAG,KAAK;UAC5B,IAAI,CAACkc,SAAS,CAAClc,MAAM,GAAG,KAAK;SAChC;QAAA/G,MAAA,CAED0Z,UAAU,GAAV,SAAAA,WAAWwJ,IAAY,EAAEhjB,KAAW,EAAE2Y,GAAW,EAAE;UAC/C,IAAI,CAACsK,OAAO,CAAC,IAAI,CAACJ,OAAO,EAACG,IAAI,EAAChjB,KAAK,EAAC2Y,GAAG,CAAC;SAC5C;QAAA7Y,MAAA,CAED6Z,WAAW,GAAX,SAAAA,YAAYqJ,IAAY,EAAEhjB,KAAW,EAAE2Y,GAAW,EAAE;UAChD,IAAI,CAACsK,OAAO,CAAC,IAAI,CAACH,QAAQ,EAACE,IAAI,EAAChjB,KAAK,EAAC2Y,GAAG,CAAC;SAC7C;QAAA7Y,MAAA,CAEDga,YAAY,GAAZ,SAAAA,aAAakJ,IAAY,EAAEhjB,KAAW,EAAE2Y,GAAW,EAAE;UACjD,IAAI,CAACsK,OAAO,CAAC,IAAI,CAACF,SAAS,EAACC,IAAI,EAAChjB,KAAK,EAAC2Y,GAAG,CAAC;SAC9C;QAAA7Y,MAAA,CAEOmjB,OAAO,GAAf,SAAAA,QAAgBziB,IAAS,EAAEwiB,IAAY,EAAEhjB,KAAW,EAAE2Y,GAAW,EAAC;UAC9DnY,IAAI,CAACqG,MAAM,GAAG,IAAI;UAClBrG,IAAI,CAACqU,oBAAoB,CAAC,CAAC,EAAEmO,IAAI,EAAE,CAAC,CAAC;UACrCxiB,IAAI,CAAC4P,WAAW,CAACpQ,KAAK,CAAC;UACvB,IAAIwI,CAAC,GAAGhI,IAAI,CAAC+I,QAAQ,CAAC,CAAC,CAAC;UACxBf,CAAC,CAAC0a,QAAQ,CAACvK,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;UACrBnQ,CAAC,CAAC4H,WAAW,CAACuI,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;SACrC;QAAA7Y,MAAA,CAEDsD,MAAM,GAAN,SAAAA,OAAOC,SAAiB,EAAE,EAEzB;QAAA,OAAAmP,YAAA;MAAA,EA3C6BzR,SAAS,IAAAqB,WAAA,GAAAkB,yBAAA,CAAA7D,OAAA,CAAAM,SAAA,cAAA6D,KAAA;QAAAL,YAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,WAAA;MAAA,IAAAY,YAAA,GAAAhB,yBAAA,CAAA7D,OAAA,CAAAM,SAAA,eAAA+D,KAAA;QAAAP,YAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,WAAA;MAAA,IAAAa,YAAA,GAAAjB,yBAAA,CAAA7D,OAAA,CAAAM,SAAA,gBAAAgE,KAAA;QAAAR,YAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,WAAA;MAAA,KAAAjE,OAAA,MAAAD,MAAA;cA4C1C,CAAAV,GAAA,CAAAC,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MC7CD,IAAQC,OAAO,GAAeC,UAAU,CAAhCD,OAAO;QAAEE,QAAQ,GAAKD,UAAU,CAAvBC,QAAQ;UAEZoX,aAAa,6BAAA/W,IAAA,GADzBP,OAAO,CAAC,eAAe,CAAC,EAAAO,IAAA,CAAAC,MAAA,IAAAC,OAAA,0BAAAC,UAAA;QAAAC,cAAA,CAAA2W,aAAA,EAAA5W,UAAA;QAAA,SAAA4W;UAAA,OAAA5W,UAAA,CAAAE,KAAA,OAAAC,SAAA;;QAAA,IAAAC,MAAA,GAAAwW,aAAA,CAAAvW,SAAA;;QAGrBD,MAAA,CACAE,KAAK,GAAL,SAAAA,QAAS;UACL,IAAI,CAACmjB,YAAY,EAAE;;;;;;;QAIvBrjB,MAAA,CACAqjB,YAAY,GAAZ,SAAAA,eAAgB;UACZ,IAAI,CAACljB,YAAY,CAACC,QAAQ,CAAC,CAACC,EAAE,CAAC,gBAAgB,EAAE,IAAI,CAACijB,cAAc,CAAC;;;;;;;QAIzEtjB,MAAA,CACAsjB,cAAc,GAAd,SAAAA,eAAgBC,YAA2B,EAAE;UACzC/U,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;UACtB,IAAI8U,YAAY,CAAC9iB,aAAa,CAAC+iB,QAAQ,EAAE,KAAKC,QAAK,CAACf,aAAa,CAACG,IAAI,EAAE;YACpE,IAAIa,YAAY,GAAGH,YAAY,CAAC9iB,aAAa;YAC7CyG,QAAQ,CAACwH,IAAI,CAAC8H,aAAa,CAACC,gBAAgB,EAACiN,YAAY,CAAChjB,IAAI,CAAC;;SAEtE;QAAA,OAAA8V,aAAA;MAAA,EArB8BvV,SAAS,GAAAtB,OAAA,CAC1B8W,gBAAgB,GAAG,0BAA0B,EAAA9W,OAAA,MAAAD,MAAA;cAqB9D,CAAAV,GAAA,CAAAC,GAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCtBD,IAAQC,OAAO,GAAeC,UAAU,CAAhCD,OAAO;QAAEE,QAAQ,GAAKD,UAAU,CAAvBC,QAAQ;UAGZwT,YAAY,4BAAAnT,IAAA,GADxBP,OAAO,CAAC,cAAc,CAAC,EAAA4E,KAAA,GAEnB1E,QAAQ,CAACkF,IAAI,CAAC,EAAAN,KAAA,GAGd5E,QAAQ,CAACkF,IAAI,CAAC,EAAA7E,IAAA,CAAAC,MAAA,IAAAC,OAAA,0BAAAC,UAAA;QAAAC,cAAA,CAAA+S,YAAA,EAAAhT,UAAA;QAAA,SAAAgT;UAAA,IAAA9Q,KAAA;UAAA,SAAAC,IAAA,GAAAhC,SAAA,CAAAgB,MAAA,EAAAiB,IAAA,OAAAC,KAAA,CAAAF,IAAA,GAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;YAAAF,IAAA,CAAAE,IAAA,IAAAnC,SAAA,CAAAmC,IAAA;;UAAAJ,KAAA,GAAAlC,UAAA,CAAAuC,IAAA,CAAArC,KAAA,CAAAF,UAAA,SAAAwC,MAAA,CAAAJ,IAAA;UAAAK,0BAAA,CAAAP,KAAA,gBAAAQ,WAAA,EAAAC,sBAAA,CAAAT,KAAA;UAAAO,0BAAA,CAAAP,KAAA,iBAAA0C,YAAA,EAAAjC,sBAAA,CAAAT,KAAA;UAAAA,KAAA,CAGP6hB,OAAO;UAAA,OAAA7hB,KAAA;;QAAA,IAAA9B,MAAA,GAAA4S,YAAA,CAAA3S,SAAA;QAAAD,MAAA,CAEfE,KAAK,GAAL,SAAAA,QAAQ;UACJ,IAAI,CAACyjB,OAAO,GAAG,IAAI,CAACrd,UAAU,CAACmD,QAAQ,CAAC,CAAC,CAAC;UAC1C,IAAI,CAACnD,UAAU,CAACS,MAAM,GAAG,KAAK;UAC9B,IAAI,CAACL,WAAW,CAACK,MAAM,GAAG,KAAK;UAC/B,IAAIzB,OAAO,CAAC5G,IAAI,CAAC6G,QAAQ,IAAIiB,gBAAgB,CAAC9H,IAAI,CAACkW,QAAQ,EAAE;YACzD,IAAIpO,gBAAgB,CAAC9H,IAAI,CAAC+H,UAAU,EAAE;cAClC,IAAI,CAACmd,iBAAiB,CAACpd,gBAAgB,CAAC9H,IAAI,CAAC+H,UAAU,EAAE,IAAI,CAACH,UAAU,EAAE,KAAK,CAAC;;YAEpF,IAAIE,gBAAgB,CAAC9H,IAAI,CAACiI,WAAW,EAAE;cACnC,IAAI,CAACid,iBAAiB,CAACpd,gBAAgB,CAAC9H,IAAI,CAACiI,WAAW,EAAE,IAAI,CAACD,WAAW,EAAE,IAAI,CAAC;;WAExF,MACI;YACD,IAAI,CAACkd,iBAAiB,CAAC/e,OAAO,CAACnG,IAAI,CAACoG,GAAG,EAAE,IAAI,CAACwB,UAAU,EAAE,KAAK,CAAC;;UAGpEY,QAAQ,CAAC7G,EAAE,CAAC8G,kBAAkB,CAACyE,mBAAmB,EAAE,IAAI,CAACiY,yBAAyB,EAAC,IAAI,CAAC;SAC3F;QAAA7jB,MAAA,CAES8H,SAAS,GAAnB,SAAAA,YAA4B;UACxBZ,QAAQ,CAACa,GAAG,CAACZ,kBAAkB,CAACyE,mBAAmB,EAAE,IAAI,CAACiY,yBAAyB,EAAC,IAAI,CAAC;SAC5F;QAAA7jB,MAAA,CAED6jB,yBAAyB,GAAzB,SAAAA,0BAA0B1V,GAAG,EAAC;UAC1B,IAAIgB,MAAM,GAAG3I,gBAAgB,CAAC9H,IAAI,CAACgP,SAAS,CAACS,GAAG,CAACrJ,GAAG,CAAC;UACrD,IAAIqK,MAAM,IAAIA,MAAM,CAACnB,aAAa,EAAE;YAChC,IAAI8V,IAAI,GAAG,IAAI,CAACxd,UAAU;YAC1B,IAAIyd,OAAO,GAAG5V,GAAG,CAACrJ,GAAG,IAAI0B,gBAAgB,CAAC9H,IAAI,CAACiI,WAAW;YAC1D,IAAIod,OAAO,EAAE;cACTD,IAAI,GAAG,IAAI,CAACpd,WAAW;;YAE3B,KAAK,IAAI8B,CAAC,GAAGsb,IAAI,CAACra,QAAQ,CAAC1I,MAAM,EAAEyH,CAAC,GAAG2G,MAAM,CAACnB,aAAa,CAACjN,MAAM,EAAE,EAAEyH,CAAC,EAAE;cACrE,IAAI,CAACwb,eAAe,CAAC7U,MAAM,CAACnB,aAAa,CAACxF,CAAC,CAAC,EAAEsb,IAAI,EAAEC,OAAO,CAAC;;;SAGvE;QAAA/jB,MAAA,CAED0W,QAAQ,GAAR,SAAAA,SAAS5R,GAAW,EAAEpC,MAAc,EAAE;UAClC,IAAIoC,GAAG,IAAI0B,gBAAgB,CAAC9H,IAAI,CAAC+H,UAAU,IAAI3B,GAAG,IAAID,OAAO,CAACnG,IAAI,CAACoG,GAAG,EAAE;YACpE,IAAI,CAACkf,eAAe,CAACthB,MAAM,EAAE,IAAI,CAAC4D,UAAU,EAAE,KAAK,CAAC;WACvD,MACI;YACD,IAAI,CAAC0d,eAAe,CAACthB,MAAM,EAAE,IAAI,CAACgE,WAAW,EAAE,IAAI,CAAC;;SAE3D;QAAA1G,MAAA,CAEO4jB,iBAAiB,GAAzB,SAAAA,kBAA0B9e,GAAW,EAAEgf,IAAU,EAAEC,OAAgB,EAAE;UACjED,IAAI,CAAC/c,MAAM,GAAG,IAAI;UAClB+c,IAAI,CAACG,iBAAiB,EAAE;UACxB,IAAI9U,MAAM,GAAG3I,gBAAgB,CAAC9H,IAAI,CAACgP,SAAS,CAAC5I,GAAG,CAAC;UACjD,IAAIqK,MAAM,IAAIA,MAAM,CAACnB,aAAa,EAAE;YAChC,KAAK,IAAIxF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG2G,MAAM,CAACnB,aAAa,CAACjN,MAAM,EAAE,EAAEyH,CAAC,EAAE;cAClD,IAAI,CAACwb,eAAe,CAAC7U,MAAM,CAACnB,aAAa,CAACxF,CAAC,CAAC,EAAEsb,IAAI,EAAEC,OAAO,CAAC;;;SAGvE;QAAA/jB,MAAA,CAEOgkB,eAAe,GAAvB,SAAAA,gBAAwBthB,MAAc,EAAEohB,IAAU,EAAEC,OAAgB,EAAE;UAClE,IAAIG,IAAI,GAAG,IAAI,CAACP,OAAO,CAACrJ,UAAU,CAACvL,CAAC;UACpC,IAAIxN,GAAG,GAAG2iB,IAAI,GAAG,EAAE;UACnB,IAAIC,KAAK,GAAGJ,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC;UAC5B,IAAIK,YAAY,GAAG1a,WAAW,CAAC,IAAI,CAACia,OAAO,CAAC;UAC5C,IAAIU,KAAK,GAAGP,IAAI,CAACra,QAAQ,CAAC1I,MAAM;UAChC+iB,IAAI,CAACna,QAAQ,CAACya,YAAY,CAAC;UAC3BA,YAAY,CAACjkB,YAAY,CAAC0B,YAAY,CAAC,CAACa,MAAM,GAAGA,MAAM;UACvD0hB,YAAY,CAAC9T,WAAW,CAAC6T,KAAK,IAAID,IAAI,GAAGG,KAAK,GAAG9iB,GAAG,GAAG8iB,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SACvE;QAAArkB,MAAA,CAEDsD,MAAM,GAAN,SAAAA,OAAOC,SAAiB,EAAE,EAEzB;QAAA,OAAAqP,YAAA;MAAA,EA/E6B3R,SAAS,IAAAqB,WAAA,GAAAkB,yBAAA,CAAA7D,OAAA,CAAAM,SAAA,iBAAA6D,KAAA;QAAAL,YAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,WAAA;MAAA,IAAAY,YAAA,GAAAhB,yBAAA,CAAA7D,OAAA,CAAAM,SAAA,kBAAA+D,KAAA;QAAAP,YAAA;QAAAC,UAAA;QAAAC,QAAA;QAAAC,WAAA;MAAA,KAAAjE,OAAA,MAAAD,MAAA;cAgF1C,CAAAV,GAAA,CAAAC,GAAA","file":"all.js","sourcesContent":["import { AudioClip } from \"cc\";\r\nimport { ModuleDef } from \"../../scripts/ModuleDef\";\r\n\r\nexport class AudioPlayer {\r\n\r\n    public static playOneShot(sound: AudioClip | string, volume: number = 1.0) {\r\n        tgx.AudioMgr.inst.playOneShot(sound, volume, ModuleDef.BILLIARDS);\r\n    }\r\n\r\n    public static play(sound: string, volume: number = 1.0) {\r\n        tgx.AudioMgr.inst.play(sound, volume, ModuleDef.BILLIARDS);\r\n    }\r\n\r\n    public static stop() {\r\n        tgx.AudioMgr.inst.stop();\r\n    }\r\n\r\n    public static pause() {\r\n        tgx.AudioMgr.inst.pause();\r\n    }\r\n}","import { _decorator, Component, Node, Collider, ICollisionEvent, RigidBody, v3 } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\nconst tmp_V1 = v3();\r\nconst tmp_V2 = v3();\r\n\r\n@ccclass('BallCollision')\r\nexport class BallCollision extends Component {\r\n    public static collideWithBalls:number = 0;\r\n    start() {\r\n        this.getComponent(Collider).on(\"onCollisionEnter\", this.onCollisionEnter);\r\n    }\r\n\r\n    onCollisionEnter(event:ICollisionEvent){\r\n        let name = event.otherCollider.node.name;\r\n        if(name == 'TablePlane' || name == 'table_side' || name == 'table'){\r\n            return;\r\n        }\r\n        event.selfCollider.node.getComponent(RigidBody).getLinearVelocity(tmp_V1);\r\n        event.otherCollider.node.getComponent(RigidBody).getLinearVelocity(tmp_V2);\r\n        let max = tmp_V1.length() + tmp_V2.length();\r\n        if(max > BallCollision.collideWithBalls){\r\n            BallCollision.collideWithBalls = max;\r\n        }\r\n    }\r\n}\r\n\r\n","import { _decorator, Component, Node, MeshRenderer } from 'cc';\r\nconst { ccclass, property, executeInEditMode } = _decorator;\r\n\r\nlet atlasWith = 512;\r\nlet altasHeight = 512;\r\nlet paddingLeft = 10;\r\nlet paddingTop = 10;\r\nlet gap = 4;\r\n\r\nlet texWidth = 120;\r\nlet texHeight = 60;\r\nlet maxCols = 3;\r\n\r\nlet scaleU = texWidth / atlasWith;\r\nlet scaleV = texHeight / altasHeight;\r\n\r\n@ccclass('BallUVSetter')\r\n@executeInEditMode\r\nexport class BallUVSetter extends Component {\r\n    @property\r\n    ballId: number = 0;\r\n\r\n    _lastBallId: number = -1;\r\n\r\n    start() {\r\n        this.setTilingOffset(this.ballId);\r\n    }\r\n\r\n    setTilingOffset(ballId: number) {\r\n        let col = ballId % maxCols\r\n        let row = Math.floor(ballId / maxCols)\r\n        let tx = paddingLeft + col * (texWidth + gap)\r\n        let ty = paddingTop + row * (texHeight + gap)\r\n        let offsetU = tx / atlasWith;\r\n        let offsetV = ty / altasHeight;\r\n        let meshRenderer = this.node.getComponent(MeshRenderer);\r\n        meshRenderer.setInstancedAttribute('a_tilingOffset', [scaleU, scaleV, offsetU, offsetV]);\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        if (this._lastBallId != this.ballId) {\r\n            this.setTilingOffset(this.ballId);\r\n            this._lastBallId = this.ballId;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","\r\nimport { _decorator, Component, Label, director, Node, Button, instantiate, Sprite } from 'cc';\r\nimport { UserMgr } from '../../module_basic/scripts/UserMgr';\r\nimport { SceneDef } from '../../scripts/SceneDef';\r\nimport { GamePlayerInfo } from '../../module_basic/scripts/GamePlayerInfo';\r\nimport { BilliardsGameMgr, BilliardsGameEvent } from './BilliardsGameMgr';\r\nimport { UIChat } from '../../module_basic/ui_chat/UIChat';\r\nimport { GameMode, RoomEvent, RoomMgr } from '../../module_basic/scripts/RoomMgr';\r\nimport { gameNet } from '../../module_basic/scripts/NetGameServer';\r\nimport { SubGameMessage } from '../../module_basic/scripts/SubGameMessage';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('BilliardsGameHUD')\r\nexport class BilliardsGameHUD extends Component {\r\n\r\n    @property(GamePlayerInfo)\r\n    leftPlayer: GamePlayerInfo = null!;\r\n    //#endregion\r\n\r\n    @property(GamePlayerInfo)\r\n    rightPlayer: GamePlayerInfo = null!;\r\n\r\n    @property(Label)\r\n    tips: Label = null!;\r\n\r\n    @property(Button)\r\n    btnReady: Button;\r\n\r\n    @property(Node)\r\n    watcherList: Node;\r\n\r\n    @property(Label)\r\n    lblRoomId: Label;\r\n\r\n    //#endregion\r\n    //#region 组件第一次激活前执行，也就是第一次执行 update 之前触发\r\n    start() {\r\n        if (!UserMgr.inst.uid) {\r\n            tgx.SceneUtil.loadScene(SceneDef.START);\r\n            return;\r\n        }\r\n        tgx.UIMgr.inst.closeAll();\r\n        this.initEventListener();\r\n        if (RoomMgr.inst.isOnline) {\r\n            RoomMgr.inst.rpc_Ready();\r\n            this.reStart();\r\n        }\r\n        else\r\n        {\r\n            this.onRoomBackByRoomMgr();\r\n        }\r\n\r\n        \r\n    }\r\n    //#endregion\r\n\r\n     private reStart(): void {\r\n        RoomMgr.inst.rpc_ClientReady();\r\n        \r\n    }\r\n    private onRoomBackByRoomMgr():void\r\n    {\r\n        if (RoomMgr.inst.isOnline) {\r\n            this.lblRoomId.string = RoomMgr.inst.data.displayId;\r\n        }\r\n        else {\r\n            this.lblRoomId.string = '';\r\n        }\r\n        this.initUser();\r\n        this.initWatcherList();\r\n        this.updateCtrlUI();\r\n        if (RoomMgr.inst.isOnline) {\r\n            tgx.UIMgr.inst.showUI(UIChat, null, null, gameNet);\r\n        }\r\n    }\r\n    //#region 用户信息初始化\r\n    initUser() {\r\n        if (RoomMgr.inst.isOnline) {\r\n            this.leftPlayer.setUserId(BilliardsGameMgr.inst.leftUserId);\r\n            this.rightPlayer.setUserId(BilliardsGameMgr.inst.rightUserId);\r\n\r\n            let u = RoomMgr.inst.selfUser;\r\n            this.btnReady.node.active = u && u.playerId && !u.ready;\r\n        }\r\n        else {\r\n            this.btnReady.node.active = false;\r\n            this.rightPlayer.node.active = false;\r\n            this.leftPlayer.setUserId(UserMgr.inst.uid);\r\n        }\r\n    }\r\n    //#endregion\r\n\r\n    //#region 开始注册监听事件\r\n    initEventListener() {\r\n        director.on(BilliardsGameEvent.TURN_PLAYER_CHANGED, this.updateCtrlUI, this);\r\n        director.on(RoomEvent.NEW_USER_COMES, this.onNewUserComes, this);\r\n        director.on(RoomEvent.USER_LEAVES, this.onUserLeaves, this);\r\n        director.on(RoomEvent.WATCHER_LIST_CHANGED, this.initWatcherList, this);\r\n        director.on(BilliardsGameEvent.ROOM_PUSH, this.onRoomBackByRoomMgr, this);\r\n        director.on(SubGameMessage.EnterSubGameRoomSuccess,this.reStart,this);\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        director.off(BilliardsGameEvent.TURN_PLAYER_CHANGED, this.updateCtrlUI, this);\r\n        director.off(RoomEvent.NEW_USER_COMES, this.onNewUserComes, this);\r\n        director.off(RoomEvent.USER_LEAVES, this.onUserLeaves, this);\r\n        director.off(RoomEvent.WATCHER_LIST_CHANGED, this.initWatcherList, this);\r\n        director.off(BilliardsGameEvent.ROOM_PUSH, this.onRoomBackByRoomMgr, this);\r\n        director.off(SubGameMessage.EnterSubGameRoomSuccess,this.reStart,this);\r\n    }\r\n    //#endregion\r\n\r\n    onNewUserComes(data) {\r\n        if (data.isPlayer) {\r\n            this.initUser();\r\n        }\r\n        else {\r\n            this.initWatcherList();\r\n        }\r\n    }\r\n\r\n    onUserLeaves(data) {\r\n        if (data.isPlayer) {\r\n            this.initUser();\r\n        }\r\n        else {\r\n            this.initWatcherList();\r\n        }\r\n    }\r\n\r\n    async initWatcherList() {\r\n        this.watcherList.parent.active = false;\r\n        let usersData = RoomMgr.inst.data?.userList;\r\n        if (!RoomMgr.inst.isOnline || !usersData.length) {\r\n            return;\r\n        }\r\n\r\n        this.watcherList.parent.active = true;\r\n\r\n        for (let i = 0; i < this.watcherList.children.length; ++i) {\r\n            this.watcherList.children[i].active = false;\r\n        }\r\n\r\n        let userIds = [];\r\n        let c = this.watcherList.children[0];\r\n        for (let i = 0; i < usersData.length; ++i) {\r\n            let u = usersData[i];\r\n            if (!u.playerId) {\r\n                let newNode = instantiate(c);\r\n                this.watcherList.addChild(newNode);\r\n                userIds.push(u.uid);\r\n            }\r\n        }\r\n\r\n        await UserMgr.inst.rpc_GetUserInfos(userIds);\r\n\r\n        for (let i = 0; i < userIds.length; ++i) {\r\n            let c = this.watcherList.children[i];\r\n            c.active = true;\r\n            let icon = c.children[0].getComponent(Sprite);\r\n            UserMgr.inst.setUserIconAndName(userIds[i], icon);\r\n        }\r\n    }\r\n\r\n    updateCtrlUI() {\r\n        if (RoomMgr.inst.gameMode == GameMode.SOLO) {\r\n            this.tips.string = '单人练习';\r\n        }\r\n        else if (RoomMgr.inst.gameMode == GameMode.AI) {\r\n            this.tips.string = '人机对决';\r\n        }\r\n        else if (RoomMgr.inst.isWatcher) {\r\n            this.tips.string = '观战中...';\r\n        }\r\n        else if (RoomMgr.inst.data.playerNum < 2) {\r\n            this.tips.string = '等待对手加入...'\r\n        }\r\n        else if (BilliardsGameMgr.inst.isMyTurn) {\r\n            this.tips.string = '该你击球...';\r\n        }\r\n        else {\r\n            this.tips.string = '对手击球...';\r\n        }\r\n    }\r\n\r\n    onBtnReadyClicked() {\r\n        RoomMgr.inst.rpc_Ready();\r\n    }\r\n\r\n    async onBtnExitClicked() {\r\n        if (!RoomMgr.inst.isOnline) {\r\n            tgx.UIAlert.show('球局未结束，确定离开吗？', true).onClick((ok: boolean) => {\r\n                if (ok) {\r\n                    tgx.SceneUtil.loadScene(BilliardsGameMgr.inst.entryScene);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            if (RoomMgr.inst.isPlayer && RoomMgr.inst.isPlaying) {\r\n                tgx.UIAlert.show('确定要认输并退出吗？', true).onClick(async (ok: Boolean) => {\r\n                    if (ok) {\r\n    \r\n                        RoomMgr.inst.exitRoom();//返回大厅\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                RoomMgr.inst.exitRoom();//返回大厅\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Vec3, director } from \"cc\";\r\nimport { GameMgr, GameMode } from \"../../module_basic/scripts/GameMgr\";\r\nimport { SubGameMgr } from \"../../module_basic/scripts/SubGameMgr\";\r\nimport { UserMgr } from \"../../module_basic/scripts/UserMgr\";\r\nimport { IBilliardsGameData, IBilliardsPlayer } from \"../../module_basic/shared/protocols/public/billiards/BilliardsTypeDef\";\r\nimport { MsgAdjustCue } from \"../../module_basic/shared/protocols/public/billiards/MsgAdjustCue\";\r\nimport { MsgGameBeginPush } from \"../../module_basic/shared/protocols/public/billiards/MsgGameBeginPush\";\r\nimport { MsgGameDataChangedPush } from \"../../module_basic/shared/protocols/public/billiards/MsgGameDataChangedPush\";\r\nimport { MsgGameDataSyncPush } from \"../../module_basic/shared/protocols/public/billiards/MsgGameDataSyncPush\";\r\nimport { MsgGameOverPush } from \"../../module_basic/shared/protocols/public/billiards/MsgGameOverPush\";\r\nimport { MsgHitBall } from \"../../module_basic/shared/protocols/public/billiards/MsgHitBall\";\r\nimport { MsgHitBallComplete } from \"../../module_basic/shared/protocols/public/billiards/MsgHitBallComplete\";\r\nimport { MsgPlayerComesPush } from \"../../module_basic/shared/protocols/public/billiards/MsgPlayerComesPush\";\r\nimport { MsgPlayerDataChangedPush } from \"../../module_basic/shared/protocols/public/billiards/MsgPlayerDataChangedPush\";\r\nimport { MsgPlayerLeavesPush } from \"../../module_basic/shared/protocols/public/billiards/MsgPlayerLeavesPush\";\r\nimport { MsgBallsDataSync } from \"../../module_basic/shared/protocols/public/billiards/MsgBallsDataSync\";\r\nimport { gameNet } from \"../../module_basic/scripts/NetGameServer\";\r\nimport { RoomMgr } from \"../../module_basic/scripts/RoomMgr\";\r\nimport { SceneDef } from \"../../scripts/SceneDef\";\r\nimport { SubGameDef } from \"../../module_basic/scripts/SubGameDef\";\r\nimport { ModuleDef } from \"../../scripts/ModuleDef\";\r\n\r\nexport class BilliardsGameEvent {\r\n    public static ROOM_PUSH: string = 'BilliardsGameEvent.ROOM_PUSH';\r\n    public static HIT_BALL: string = 'BilliardsGameEvent.HIT_BALL';\r\n    public static HIT_BALL_COMPLETE: string = 'BilliardsGameEvent.HIT_BALL_COMPLETE';\r\n    public static CUE_CHANGED: string = 'BilliardsGameEvent.CUE_CHANGED';\r\n    public static BALL_SYNC: string = 'BilliardsGameEvent.BALL_SYNC';\r\n\r\n    public static TURN_PLAYER_CHANGED: string = 'BilliardsGameEvent.TURN_PLAYER_CHANGED';\r\n    public static PLAYER_DATA_CHANGED: string = 'BilliardsGameEvent.PLAYER_DATA_CHANGED';\r\n\r\n    public static GAME_BEGIN: string = 'BilliardsGameEvent.GAME_BEBIN';\r\n    public static GAME_OVER: string = 'BilliardsGameEvent.GAME_OVER';\r\n\r\n    public static PLAYER_COMES: string = 'BilliardsGameEvent.PLAYER_COMES';\r\n    public static PLAYER_LEAVES: string = 'BilliardsGameEvent.PLAYER_LEAVES';\r\n}\r\n\r\n\r\nexport class BilliardsGameMgr extends GameMgr {\r\n    private static _inst: BilliardsGameMgr;\r\n    public static get inst(): BilliardsGameMgr {\r\n        if (!this._inst) {\r\n            this._inst = new BilliardsGameMgr();\r\n        }\r\n        return this._inst;\r\n    }\r\n\r\n    constructor(){\r\n        super();\r\n        this._gameType = SubGameDef.BILLIARDS;\r\n        this._entryScene = { name: 'lobby_billiards', bundle: ModuleDef.BILLIARDS };\r\n        this._gameScene = { name: 'game_billiards', bundle: ModuleDef.BILLIARDS };\r\n        this.initNetMsgHandlers();\r\n    }\r\n\r\n    protected _gameData: IBilliardsGameData;\r\n    order: number;\r\n    cueDir: Vec3;\r\n\r\n    public get gameData(): IBilliardsGameData {\r\n        return this._gameData;\r\n    }\r\n\r\n    initNetMsgHandlers() {\r\n        gameNet.listenMsg(\"billiards/GameDataSyncPush\", this.onNet_GameDataSyncPush, this);\r\n        gameNet.listenMsg(\"billiards/GameDataChangedPush\", this.onNet_GameDataChangedPush, this);\r\n\r\n        gameNet.listenMsg(\"billiards/PlayerComesPush\", this.onNet_PlayerComesPush, this);\r\n        gameNet.listenMsg(\"billiards/PlayerDataChangedPush\", this.onNet_PlayerDataChangedPush, this);\r\n        gameNet.listenMsg(\"billiards/PlayerLeavesPush\", this.onNet_PlayerLeavesPush, this);\r\n\r\n        gameNet.listenMsg(\"billiards/GameBeginPush\", this.onNet_GameBeginPush, this);\r\n        gameNet.listenMsg(\"billiards/GameOverPush\", this.onNet_GameOverPush, this);\r\n\r\n        gameNet.listenMsg(\"billiards/HitBall\", this.onNet_HitBallPush, this);\r\n        gameNet.listenMsg(\"billiards/HitBallComplete\", this.onNet_HitBallCompletePush, this);\r\n        gameNet.listenMsg(\"billiards/AdjustCue\", this.onNet_AdjustCuePush, this);\r\n    }\r\n\r\n    public reset() {\r\n        super.reset();\r\n        this._gameData = null;\r\n        this.cueDir = null;\r\n        this.cueDir = null;\r\n    }\r\n\r\n    initSoloMode(){\r\n        RoomMgr.inst.reset();\r\n        this.reset();\r\n        SubGameMgr.gameMgr = this;\r\n    }\r\n\r\n    public get selfPlayer(): IBilliardsPlayer {\r\n        return this.getPlayer(UserMgr.inst.uid);\r\n    }\r\n\r\n    private get selfPlayerIndex(): number {\r\n        return this.getPlayerIndex(UserMgr.inst.uid);\r\n    }\r\n\r\n    public get leftUserId(): string {\r\n        if (!this._gameData || this._gameData.players.length == 0) {\r\n            return '';\r\n        }\r\n\r\n        if (RoomMgr.inst.isPlayer) {\r\n            return UserMgr.inst.uid;\r\n        }\r\n        else {\r\n            return this._gameData.players[0].uid;\r\n        }\r\n    }\r\n\r\n    public get rightUserId(): string {\r\n        if (!this._gameData || this._gameData.players.length == 0) {\r\n            return '';\r\n        }\r\n\r\n        if (RoomMgr.inst.isPlayer) {\r\n            if (this._gameData.players[0].uid != UserMgr.inst.uid) {\r\n                return this._gameData.players[0].uid;\r\n            }\r\n            else {\r\n                let p = this._gameData.players[1];\r\n                return p ? p.uid : '';\r\n            }\r\n        }\r\n        else {\r\n            let p = this._gameData.players[1];\r\n            return p ? p.uid : '';\r\n        }\r\n    }\r\n\r\n    public get isMyTurn(): boolean {\r\n        if (!this._gameData) {\r\n            return false;\r\n        }\r\n\r\n        if (!RoomMgr.inst.isPlayer) {\r\n            return false;\r\n        }\r\n        if (!this._gameData.currentPlayer) {\r\n            return false;\r\n        }\r\n        return this._gameData.currentPlayer == UserMgr.inst.uid;\r\n    }\r\n\r\n    public getPlayer(userId: string): IBilliardsPlayer {\r\n        if (!this._gameData || !this._gameData.players) {\r\n            return null;\r\n        }\r\n        for (let i = 0; i < this._gameData.players.length; ++i) {\r\n            let p = this._gameData.players[i];\r\n            if (p.uid == userId) {\r\n                return p;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private getPlayerIndex(userId: string): number {\r\n        for (let i = 0; i < this._gameData.players.length; ++i) {\r\n            if (this._gameData.players[i].uid == userId) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    public isPocketed(ballId: number): boolean {\r\n        if (!this._gameData || !this._gameData.players) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < this._gameData.players.length; ++i) {\r\n            let p = this._gameData.players[i];\r\n            if (p.pocketedBalls && p.pocketedBalls.indexOf(ballId) != -1) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    sendMsg_HitBall(msg: MsgHitBall) {\r\n        gameNet.sendMsg(\"billiards/HitBall\", msg);\r\n    }\r\n\r\n    sendMsg_HitBallComplete(msg: MsgHitBallComplete) {\r\n        gameNet.sendMsg(\"billiards/HitBallComplete\", msg);\r\n    }\r\n\r\n    sendMsg_AdjustCue(msg: MsgAdjustCue) {\r\n        gameNet.sendMsg(\"billiards/AdjustCue\", msg);\r\n    }\r\n\r\n    sendMsg_BallsDataSync(msg: MsgBallsDataSync) {\r\n        gameNet.sendMsg(\"billiards/BallsDataSync\", msg);\r\n    }\r\n\r\n    // ============= MESSAGE HANDLER ============\r\n    /**\r\n     * This message will arrive before login result.\r\n     * 这个消息会在登录成功返回之前收到。\r\n    */\r\n    onNet_GameDataSyncPush(msg: MsgGameDataSyncPush) {\r\n        this._gameData = msg;\r\n        console.log('game data',msg);\r\n        director.emit(BilliardsGameEvent.ROOM_PUSH);\r\n    }\r\n\r\n    onNet_GameDataChangedPush(msg: MsgGameDataChangedPush) {\r\n        if (!this._gameData) {\r\n            return;\r\n        }\r\n        if (msg.ballsData !== undefined) {\r\n            this._gameData.ballsData = msg.ballsData;\r\n            if (!this.isMyTurn) {\r\n                director.emit(BilliardsGameEvent.BALL_SYNC, msg.ballsData);\r\n            }\r\n        }\r\n\r\n        if (msg.order !== undefined) {\r\n            this.order = msg.order;\r\n        }\r\n        if (msg.cueDir !== undefined) {\r\n            if (!this.cueDir) {\r\n                this.cueDir = new Vec3();\r\n            }\r\n            this.cueDir.set(msg.cueDir.x, msg.cueDir.y, msg.cueDir.z);\r\n        }\r\n\r\n        if (msg.currentPlayer !== undefined) {\r\n            this._gameData.currentPlayer = msg.currentPlayer;\r\n            director.emit(BilliardsGameEvent.TURN_PLAYER_CHANGED, msg.currentPlayer);\r\n        }\r\n    }\r\n\r\n    onNet_PlayerComesPush(msg: MsgPlayerComesPush) {\r\n        this._gameData.players.push(msg.player);\r\n        director.emit(BilliardsGameEvent.PLAYER_COMES, msg.player);\r\n    }\r\n\r\n    onNet_PlayerDataChangedPush(msg: MsgPlayerDataChangedPush) {\r\n        let p = this.getPlayer(msg.uid);\r\n        if (!p) {\r\n            return;\r\n        }\r\n\r\n        if (msg.pocketedBalls != undefined) {\r\n            p.pocketedBalls = msg.pocketedBalls;\r\n        }\r\n\r\n        director.emit(BilliardsGameEvent.PLAYER_DATA_CHANGED, msg);\r\n    }\r\n\r\n    onNet_PlayerLeavesPush(msg: MsgPlayerLeavesPush) {\r\n        for (let i = 0; i < this._gameData.players.length; ++i) {\r\n            let p = this._gameData.players[i];\r\n            if (p.uid == msg.uid) {\r\n                this._gameData.players.splice(i, 1);\r\n                director.emit(BilliardsGameEvent.PLAYER_LEAVES, msg.uid);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    onNet_GameBeginPush(msg: MsgGameBeginPush) {\r\n        if (!this._gameData) {\r\n            return;\r\n        }\r\n\r\n        this._gameData.ballsData = null;\r\n        this._gameData.players.forEach(v => {\r\n            v.pocketedBalls = [];\r\n        });\r\n\r\n        director.emit(BilliardsGameEvent.GAME_BEGIN);\r\n    }\r\n\r\n    onNet_GameOverPush(msg: MsgGameOverPush) {\r\n        director.emit(BilliardsGameEvent.GAME_OVER, msg);\r\n    }\r\n\r\n    onNet_HitBallPush(msg: MsgHitBall) {\r\n        if (!this._gameData) {\r\n            return;\r\n        }\r\n        if (!this.isMyTurn) {\r\n            director.emit(BilliardsGameEvent.HIT_BALL, msg.hitImpulse, msg.order);\r\n        }\r\n    }\r\n\r\n    onNet_HitBallCompletePush(msg: MsgHitBallComplete) {\r\n        if (!this._gameData) {\r\n            return;\r\n        }\r\n        director.emit(BilliardsGameEvent.HIT_BALL_COMPLETE);\r\n    }\r\n\r\n    onNet_AdjustCuePush(msg: MsgAdjustCue) {\r\n        if (!this._gameData) {\r\n            return;\r\n        }\r\n        if (msg.direction) {\r\n            if (!this.cueDir) {\r\n                this.cueDir = new Vec3();\r\n            }\r\n            this.cueDir.set(msg.direction.x, msg.direction.y, msg.direction.z);\r\n        }\r\n        if (!this.isMyTurn) {\r\n            director.emit(BilliardsGameEvent.CUE_CHANGED, msg);\r\n        }\r\n    }\r\n}\r\n\r\nSubGameMgr.inst.registerGameMgr(BilliardsGameMgr.inst);","import { _decorator, Component, Node, Sprite, UI, sys } from 'cc';\r\nimport { SceneUtil } from '../../core_tgx/base/SceneUtils';\r\nimport { GameMode } from '../../module_basic/scripts/GameMgr';\r\nimport { UserMgr } from '../../module_basic/scripts/UserMgr';\r\nimport { UI_SearchingRival } from '../../module_basic/ui_searching_rival/UI_SearchingRival';\r\nimport { ModuleDef } from '../../scripts/ModuleDef';\r\nimport { SceneDef } from '../../scripts/SceneDef';\r\nimport { BilliardsGameMgr } from './BilliardsGameMgr';\r\nimport { UICreateRoom } from '../../module_basic/ui_create_room/UICreateRoom';\r\nimport { UIChat } from '../../module_basic/ui_chat/UIChat';\r\nimport { UIAnnouncement } from '../../module_basic/ui_announcement/UIAnnouncement';\r\nimport { lobbyNet } from '../../module_basic/scripts/NetGameServer';\r\nimport { UIRoomList } from '../../module_basic/ui_room_list/UIRoomList';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('BilliardsLobbyScene')\r\nexport class BilliardsLobbyScene extends Component {\r\n\r\n    @property(Node) announcementPlacer:Node;\r\n\r\n    async start() {\r\n        if (!UserMgr.inst.uid) {\r\n            tgx.SceneUtil.loadScene(SceneDef.START);\r\n            return;\r\n        }\r\n\r\n        tgx.UIMgr.inst.closeAll();\r\n\r\n        if(lobbyNet.type != 'http'){\r\n            tgx.UIMgr.inst.showUI(UIChat,null,null,lobbyNet);\r\n        }\r\n\r\n        tgx.UIMgr.inst.showUI(UIAnnouncement,(ui:UIAnnouncement)=>{\r\n            ui.setPosition(this.announcementPlacer.position.x, this.announcementPlacer.position.y);\r\n        });\r\n    }\r\n\r\n    onBtnLobby() {\r\n        SceneUtil.loadScene(SceneDef.LOBBY);\r\n    }\r\n\r\n    onBtnQuickPlayClicked() {\r\n        tgx.UIMgr.inst.showUI(UI_SearchingRival, (ui: UI_SearchingRival) => {\r\n            this.scheduleOnce(()=>{\r\n                ui.startMatch('billiards');\r\n            }, 1.5);\r\n        });\r\n    }\r\n\r\n    onBtnRoomListClicked(){\r\n        tgx.UIMgr.inst.showUI(UIRoomList);\r\n    }\r\n\r\n    onBtnTraningModeClicked() {\r\n        BilliardsGameMgr.inst.initSoloMode();\r\n        tgx.UIWaiting.show();\r\n        tgx.SceneUtil.loadScene(BilliardsGameMgr.inst.gameScene);\r\n    }\r\n\r\n    onBtnCreate() {\r\n        tgx.UIMgr.inst.showUI(UICreateRoom);\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n}","\r\nimport { _decorator, Component, Node, Slider, Vec3, RigidBody, misc, PhysicsSystem, Quat, SphereCollider, Button, director, Input, v3, tween, Director, physics, ParticleAsset, Prefab, instantiate, MeshRenderer, v4, game, Game, geometry } from 'cc';\r\n\r\nimport { HitIndicator } from './HitIndicator';\r\nimport { UserMgr } from '../../module_basic/scripts/UserMgr';\r\nimport { MsgHitBallComplete } from '../../module_basic/shared/protocols/public/billiards/MsgHitBallComplete';\r\nimport { SceneDef } from '../../scripts/SceneDef';\r\nimport { AudioPlayer } from '../scripts/AudioPlayer';\r\nimport { BilliardsGameMgr, BilliardsGameEvent } from '../scripts/BilliardsGameMgr';\r\nimport { FixedPhysics } from '../scripts/FixedPhysics';\r\nimport { BallCollision } from './BallCollision';\r\nimport { PocketTrigger } from './PocketTrigger';\r\nimport { PocktedBalls } from './PocktedBalls';\r\nimport GameConst from '../scripts/config/GConst';\r\nimport { RoomMgr } from '../../module_basic/scripts/RoomMgr';\r\nconst { ccclass, property } = _decorator;\r\n\r\nconst MAX_HIT_STRENGTH = 120;\r\nconst MAX_BALL_NUM = 16;\r\n\r\nconst BALL_RADIUS = 0.7;\r\n\r\nconst tmpV3_1 = v3();\r\nconst tmpV3_2 = v3();\r\nconst tmpV3_3 = v3();\r\n\r\nconst planes = [\r\n    new geometry.Plane(1, 0, 0, -23.84),\r\n    new geometry.Plane(-1, 0, 0, -23.84),\r\n    new geometry.Plane(0, 0, 1, -11.11),\r\n    new geometry.Plane(0, 0, -1, -11.11)\r\n];\r\n\r\nconst hitRay = new geometry.Ray();\r\n\r\n@ccclass('BilliardTableControl')\r\nexport class BilliardTableControl extends Component {\r\n\r\n    //#region 编辑器序列化变量\r\n    @property(Slider)\r\n    powerSlider: Slider = null!;\r\n\r\n    @property(Slider)\r\n    directionSlider: Slider = null!;\r\n\r\n    @property(Button)\r\n    hitButton: Button = null!;\r\n\r\n    @property(Node)\r\n    cue: Node = null!;\r\n\r\n    @property(Node)\r\n    whiteBall: Node = null;\r\n\r\n    @property(Node)\r\n    indicatorWhiteBall: Node;\r\n\r\n    @property(Node)\r\n    beHitBalls: Node = null;\r\n    //#endregion\r\n\r\n    @property(Prefab)\r\n    ballPrefab: Prefab;\r\n\r\n    @property(Prefab)\r\n    tablePrefab: Prefab;\r\n\r\n    @property(Node)\r\n    table: Node;\r\n\r\n    @property(HitIndicator)\r\n    hitIndicator: HitIndicator;\r\n\r\n    @property(PocktedBalls)\r\n    pocketedBalls: PocktedBalls;\r\n\r\n    private _allBalls: Array<Node> = new Array<Node>(MAX_BALL_NUM);\r\n\r\n    //#region 私有变量\r\n    private _impulse: Vec3 = new Vec3();\r\n    private _cueRot: Vec3 = v3();\r\n    private _cueOffset: Vec3 = new Vec3();\r\n    private _hitOffset: Vec3 = new Vec3();\r\n    private _whiteballOrignalPos = v3();\r\n\r\n    private _ballsPosData = new Array<number>(MAX_BALL_NUM * 3);\r\n    private _ballsQuatData = new Array<number>(MAX_BALL_NUM * 4);\r\n    //#endregion\r\n\r\n    private _needUpdatePhysics: boolean = false;\r\n    private _cueSyncData = null;\r\n\r\n    //#region 组件第一次激活前执行，也就是第一次执行 update 之前触发\r\n    start() {\r\n\r\n        this.cue.getPosition(this._cueOffset);\r\n        this._hitOffset.set(this._cueOffset);\r\n        this._hitOffset.x = -7.65;\r\n        this.cue.parent.setPosition(this.whiteBall.position);\r\n        if (BilliardsGameMgr.inst.gameData && BilliardsGameMgr.inst.gameData.curDirection) {\r\n            let curDir = BilliardsGameMgr.inst.gameData.curDirection;\r\n            if (curDir) {\r\n                this.cue.parent.setRotationFromEuler(curDir.x, curDir.y, curDir.z);\r\n            }\r\n        }\r\n\r\n        this.indicatorWhiteBall.active = false;\r\n\r\n        this._currentHitOrder = 0;\r\n        if (BilliardsGameMgr.inst.gameData) {\r\n            this._currentHitOrder = BilliardsGameMgr.inst.order;\r\n        }\r\n\r\n        for (let i = 0; i < MAX_BALL_NUM; ++i) {\r\n            if (i == 0) {\r\n                this._allBalls[i] = this.whiteBall;\r\n            }\r\n            else {\r\n                this._allBalls[i] = this.beHitBalls.children[i - 1];\r\n            }\r\n        }\r\n\r\n        this._whiteballOrignalPos.set(this._allBalls[0].worldPosition);\r\n\r\n        if (RoomMgr.inst.isOnline) {\r\n            let ballsData = null;\r\n            if (BilliardsGameMgr.inst.gameData && BilliardsGameMgr.inst.gameData.ballsData) {\r\n                ballsData = BilliardsGameMgr.inst.gameData.ballsData;\r\n            }\r\n            else {\r\n                ballsData = this.getSyncData(false).ballsData;\r\n            }\r\n            this.doBallsDataSync(ballsData);\r\n        }\r\n\r\n        let data = this.getSyncData(false);\r\n        this.resetBalls(data.ballsData);\r\n\r\n        this.onTurnPlayerChanged();\r\n\r\n        this.initEventListener();\r\n    }\r\n\r\n    resetBalls(data: { ballsPosData, ballsQuatData }) {\r\n        if (!data) {\r\n            return;\r\n        }\r\n\r\n        for (let i = this._allBalls.length - 1; i >= 0; --i) {\r\n            this._allBalls[i].destroy();\r\n        }\r\n\r\n        let atlasWith = 512;\r\n        let altasHeight = 512;\r\n        let paddingLeft = 10;\r\n        let paddingTop = 10;\r\n        let gap = 4;\r\n\r\n        let texWidth = 120;\r\n        let texHeight = 60;\r\n        let maxCols = 3;\r\n\r\n        let scaleU = texWidth / atlasWith;\r\n        let scaleV = texHeight / altasHeight;\r\n\r\n        for (let i = 0; i < MAX_BALL_NUM; ++i) {\r\n            let ball = instantiate(this.ballPrefab);\r\n            ball.addComponent(BallCollision);\r\n            this._allBalls[i] = ball;\r\n\r\n            if (i == 0) {\r\n                this.whiteBall = ball;\r\n                ball.name = GameConst.hitBallNodeName;\r\n                this.beHitBalls.parent.addChild(ball);\r\n            }\r\n            else {\r\n                ball.name = 'ball-' + i;\r\n                this.beHitBalls.addChild(ball);\r\n            }\r\n\r\n            this.setBallData(i, data);\r\n\r\n            if (BilliardsGameMgr.inst.isPocketed(i)) {\r\n                ball.active = false;\r\n            }\r\n\r\n            let col = i % maxCols\r\n            let row = Math.floor(i / maxCols)\r\n            let tx = paddingLeft + col * (texWidth + gap)\r\n            let ty = paddingTop + row * (texHeight + gap)\r\n            let offsetU = tx / atlasWith;\r\n            let offsetV = ty / altasHeight;\r\n\r\n            let meshRenderer = ball.getComponent(MeshRenderer);\r\n            meshRenderer.setInstancedAttribute('a_tilingOffset', [scaleU, scaleV, offsetU, offsetV]);\r\n        }\r\n\r\n        PhysicsSystem.instance.physicsWorld.syncSceneToPhysics();\r\n    }\r\n\r\n    //#region 初始化物理刷新事件监听\r\n    async initEventListener() {\r\n        director.on(BilliardsGameEvent.CUE_CHANGED, this.onEvent_CueChanged, this);\r\n        director.on(BilliardsGameEvent.HIT_BALL, this.onEvent_HitBall, this);\r\n        director.on(BilliardsGameEvent.TURN_PLAYER_CHANGED, this.onTurnPlayerChanged, this);\r\n        director.on(BilliardsGameEvent.BALL_SYNC, this.onEvent_BallSync, this);\r\n\r\n        director.on(FixedPhysics.EVENT_UPDATE_FINISHED, this.onEvent_FixedPhysicsUpdateFinished, this);\r\n        director.on(PocketTrigger.EVENT_HIT_POCKET, this.onPocket, this);\r\n\r\n        this.powerSlider.handle.node.on(Input.EventType.TOUCH_END, this.onEvent_TouchEnd, this);\r\n        this.powerSlider.handle.node.on(Input.EventType.TOUCH_CANCEL, this.onEvent_TouchEnd, this);\r\n\r\n        this.directionSlider.handle.node.on(Input.EventType.TOUCH_END, this.onDirectionSliderTouchEnd, this);\r\n        this.directionSlider.handle.node.on(Input.EventType.TOUCH_CANCEL, this.onDirectionSliderTouchEnd, this);\r\n\r\n        director.on(Director.EVENT_AFTER_UPDATE, this.onEvent_PostUpdate, this);\r\n\r\n        director.on(BilliardsGameEvent.GAME_BEGIN, this.onGameBegin, this);\r\n\r\n        director.on(BilliardsGameEvent.GAME_OVER, this.onGameOver, this);\r\n    }\r\n\r\n    private _lastProgress = 0.5;\r\n    private _lastSlideTime = 0;\r\n    private _slideLen = 0;\r\n    onDirectionSliderTouchEnd() {\r\n        this._lastProgress = 0.5;\r\n        this.directionSlider.enabled = false;\r\n        this.directionSlider.progress = 0.5;\r\n        this.directionSlider.enabled = true;\r\n        this._lastSlideTime = 0;\r\n    }\r\n\r\n    onDestroy() {\r\n        director.off(Director.EVENT_AFTER_UPDATE, this.onEvent_PostUpdate, this);\r\n\r\n        director.off(BilliardsGameEvent.CUE_CHANGED, this.onEvent_CueChanged, this);\r\n        director.off(BilliardsGameEvent.HIT_BALL, this.onEvent_HitBall, this);\r\n        director.off(BilliardsGameEvent.TURN_PLAYER_CHANGED, this.onTurnPlayerChanged, this);\r\n        director.off(BilliardsGameEvent.BALL_SYNC, this.onEvent_BallSync, this);\r\n\r\n        director.off(FixedPhysics.EVENT_UPDATE_FINISHED, this.onEvent_FixedPhysicsUpdateFinished, this);\r\n        director.off(PocketTrigger.EVENT_HIT_POCKET, this.onPocket, this);\r\n\r\n        director.off(BilliardsGameEvent.GAME_BEGIN, this.onGameBegin, this);\r\n\r\n        director.off(BilliardsGameEvent.GAME_OVER, this.onGameOver, this);\r\n    }\r\n\r\n    onEvent_BallSync(data) {\r\n        if (BilliardsGameMgr.inst.isMyTurn) {\r\n            return;\r\n        }\r\n        this.doBallsDataSync(data);\r\n    }\r\n\r\n    hideIndicator() {\r\n        this.hitIndicator.hideAll();\r\n        this.indicatorWhiteBall.active = false;\r\n    }\r\n\r\n    dirToDegree(d: Vec3) {\r\n        d.y = 0;\r\n        d.normalize();\r\n        //console.log(d);\r\n        let degree = Math.atan(-d.z / d.x) / Math.PI * 180;\r\n        //console.log(degree);\r\n        if (d.x < 0) {\r\n            degree += 180;\r\n        }\r\n        else {\r\n            degree += 360;\r\n        }\r\n        return degree;\r\n    }\r\n\r\n    checkBorders(ray: geometry.Ray): { mint: number, hitPlane: geometry.Plane } {\r\n        let mint = -1;\r\n        let hitPlane: geometry.Plane = null;\r\n        for (let i = 0; i < planes.length; ++i) {\r\n            let t = geometry.intersect.rayPlane(ray, planes[i]);\r\n            //console.log('t', t);\r\n            if (t > 0 && (mint < 0 || t < mint)) {\r\n                mint = t;\r\n                hitPlane = planes[i];\r\n            }\r\n        }\r\n        return { mint: mint, hitPlane: hitPlane };\r\n    }\r\n\r\n    computeLen(pos: Vec3, d: Vec3, len: number) {\r\n        hitRay.o.set(pos.x, 0, pos.z);\r\n        hitRay.d.set(d.x, 0, d.z);\r\n        let mint = this.checkBorders(hitRay).mint;\r\n        if (mint > 0 && mint < len) {\r\n            len = mint;\r\n        }\r\n        return len;\r\n    }\r\n\r\n    adjustIndicator() {\r\n        this.hitIndicator.hideAll();\r\n        let o = this.whiteBall.position;\r\n        let d = tmpV3_1.set(1, 0, 0);\r\n\r\n        var radian = misc.degreesToRadians(this.cue.parent.eulerAngles.y);\r\n        Vec3.rotateY(d, d, this.whiteBall.getComponent(SphereCollider).center, radian);\r\n\r\n        hitRay.o.set(o.x, o.y, o.z);\r\n        hitRay.d.set(d.x, d.y, d.z);\r\n\r\n        d.normalize();\r\n        //console.log(d);\r\n        let mint = -1;\r\n        let targetBall: Node = null;\r\n\r\n        for (let i = 1; i < this._allBalls.length; ++i) {\r\n            let pb = this._allBalls[i];\r\n            if (pb.active) {\r\n                let t = this.predict(o, d, pb.position);\r\n                if (t >= 0 && (mint < 0 || t < mint)) {\r\n                    mint = t;\r\n                    targetBall = pb;\r\n                    //console.log(t, pb.name);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (mint >= 0) {\r\n            let pos = this.indicatorWhiteBall.position;\r\n            this.indicatorWhiteBall.active = true;\r\n            this.indicatorWhiteBall.setPosition(o.x + d.x * mint, pos.y, o.z + d.z * mint);\r\n            this.hitIndicator.setHitLine(this.cue.parent.eulerAngles.y, o, mint);\r\n\r\n            let d2 = tmpV3_2;\r\n            d2.normalize();\r\n            Vec3.subtract(d2, targetBall.position, this.indicatorWhiteBall.position);\r\n            let degree = this.dirToDegree(d2);\r\n            let len = this.computeLen(targetBall.position, d2, 20);\r\n            this.hitIndicator.setBallLine(degree, targetBall.position, len + BALL_RADIUS);\r\n\r\n            //\r\n            let up = tmpV3_3;\r\n            Vec3.cross(up, d, d2);\r\n            Vec3.cross(d, d2, up);\r\n            d.normalize();\r\n            len = this.computeLen(this.indicatorWhiteBall.position, d, 10);\r\n            degree = this.dirToDegree(d);\r\n            this.hitIndicator.setWhiteLine(degree, this.indicatorWhiteBall.position, len + BALL_RADIUS);\r\n        }\r\n        else {\r\n            //check borders\r\n            let ret = this.checkBorders(hitRay);\r\n            let mint = ret.mint;\r\n            let hitPlane = ret.hitPlane;\r\n            if (mint > 0) {\r\n                let pos = tmpV3_2.set(this.indicatorWhiteBall.position);\r\n                pos.x = o.x + d.x * mint;\r\n                pos.z = o.z + d.z * mint;\r\n                this.indicatorWhiteBall.setPosition(pos);\r\n                this.hitIndicator.setHitLine(this.cue.parent.eulerAngles.y, o, mint);\r\n\r\n                let isInPocket = false;\r\n                //check whether it reaches the pocket.\r\n                for (let i = 0; i < this.table.children.length; ++i) {\r\n                    let pocket = this.table.children[i];\r\n                    let r = pocket.worldScale.x / 2;\r\n                    let dx = pocket.worldPosition.x - (pos.x + d.x * BALL_RADIUS);\r\n                    let dz = pocket.worldPosition.z - (pos.z + d.z * BALL_RADIUS);\r\n                    if (dx * dx + dz * dz < r * r) {\r\n                        isInPocket = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                this.indicatorWhiteBall.active = !isInPocket;\r\n\r\n                //compute reflection direction.\r\n                if (!isInPocket) {\r\n                    //R = V - 2*dot(V,N)*N\r\n                    let dot = -2 * Vec3.dot(d, hitPlane.n);\r\n                    let r = tmpV3_3;\r\n                    r.x = d.x + dot * hitPlane.n.x;\r\n                    r.y = 0;//-d.y - dot * hitPlane.n.y;\r\n                    r.z = d.z + dot * hitPlane.n.z;\r\n                    r.normalize();\r\n\r\n                    let len = this.computeLen(pos, r, 20);\r\n                    let degree = this.dirToDegree(r);\r\n                    this.hitIndicator.setBallLine(degree, pos, len + BALL_RADIUS);\r\n                }\r\n            }\r\n            else {\r\n                this.indicatorWhiteBall.active = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    predict(o: Vec3, d: Vec3, Pb: Vec3) {\r\n        /**\r\n         * 设球 A 的位置为 Pa(x,y,z)，球 B 的位置为 Pb(x,y,z)\r\n         * 当两个球相交时，有\r\n         * dx = Pa.x - Pb.x\r\n         * dz = Pa.z - Pb.z;\r\n         * dx*dx + dz*dz = (2r)^2\r\n         * => (Pa.x - Pb.x)^2 + (Pa.z - Pb.z)^ = 4r^2\r\n         * 由于 Pa(o.x+d.x*t,_,o.z+d.z*t)\r\n         * => (o.x+d.x*t - Pb.x)^2 + (o.z+d.z*t - Pb.z)^2 = 4r^2\r\n         * 设 M = o.x - Pb.x, N = o.z - Pb.z\r\n         * => (M + d.x*t)^2 + (N + d.z*t)^2 = 4r^2\r\n         * => M^2 + d.x^2 * t^2 + 2*M*d.x*t + N^2 + d.z^2t^2 + 2*N*d.z*t - 4r^2 = 0;\r\n         * => (d.x^2 + d.z^2)*t^2 + (2*M*d.x + 2*N*d.z)*t + M^2+N^2-4r^2\r\n         * 若一元二次方程有解，则相交。\r\n         * a = d.x^2 + d.z^2\r\n         * b = 2*M*d.x + 2*N*d.z\r\n         * c = M^2+N^2-4r^2\r\n        */\r\n        let M = o.x - Pb.x;\r\n        let N = o.z - Pb.z;\r\n        let r = BALL_RADIUS;\r\n\r\n        let a = d.x * d.x + d.z * d.z;\r\n        let b = 2 * M * d.x + 2 * N * d.z;\r\n        let c = M * M + N * N - 4 * r * r;\r\n\r\n        if (a != 0) {\r\n            let v = b * b - 4 * a * c;\r\n            if (v >= 0) {\r\n                let t1 = (-b + Math.sqrt(v)) / (2 * a);\r\n                let t2 = (-b - Math.sqrt(v)) / (2 * a);\r\n                if (t1 * t2 <= 0) {\r\n                    return Math.max(t1, t2);\r\n                }\r\n                else {\r\n                    return Math.min(t1, t2);\r\n                }\r\n            }\r\n            else {\r\n                //console.log('无解');\r\n            }\r\n        }\r\n        else if (b != 0) {\r\n            return -c / b;\r\n        }\r\n        else {\r\n            //console.log('无解');\r\n        }\r\n        return -1;\r\n    }\r\n    //#endregion\r\n\r\n    async onGameBegin() {\r\n        await tgx.SceneUtil.loadScene(BilliardsGameMgr.inst.gameScene);\r\n        this.scheduleOnce(() => {\r\n            tgx.UIAlert.show('游戏开始');\r\n        }, 1);\r\n    }\r\n\r\n    async onGameOver(data: { winner: string, reason: string }) {\r\n        if (RoomMgr.inst.isPlayer) {\r\n            if (data.reason == 'RIVAL_LEFT') {\r\n                tgx.UIAlert.show('对手认输，你赢了！').onClick(() => {\r\n                    RoomMgr.inst.exitRoom();\r\n                });\r\n            }\r\n            else {\r\n                if (data.winner == UserMgr.inst.uid) {\r\n                    tgx.UIAlert.show('你赢了！').onClick(() => {\r\n                        RoomMgr.inst.exitRoom();\r\n                    });;\r\n                }\r\n                else {\r\n                    tgx.UIAlert.show('你输了！').onClick(() => {\r\n                        RoomMgr.inst.exitRoom();\r\n                    });;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            let userInfo = await UserMgr.inst.rpc_GetUserInfo(data.winner);\r\n            if (data.reason == 'RIVAL_LEFT') {\r\n                tgx.UIAlert.show('对手认输，玩家[' + userInfo.name + '] 获胜！').onClick(() => {\r\n                    RoomMgr.inst.exitRoom();\r\n                });\r\n            }\r\n            else {\r\n                tgx.UIAlert.show('玩家[' + userInfo.name + '] 获胜！').onClick(() => {\r\n                    RoomMgr.inst.exitRoom();\r\n                });;\r\n            }\r\n        }\r\n    }\r\n\r\n    private _newPocketedBallIds = [];\r\n    private _hasPocketed: boolean = false;\r\n    onPocket(node: Node) {\r\n        for (let i = 0; i < this._allBalls.length; ++i) {\r\n            if (i != 0 && this._allBalls[i] == node) {\r\n                this._newPocketedBallIds.push(i);\r\n                this._hasPocketed = true;\r\n                if (BilliardsGameMgr.inst.gameData) {\r\n                    this.pocketedBalls.onPocket(BilliardsGameMgr.inst.gameData.currentPlayer, i);\r\n                }\r\n                else {\r\n                    this.pocketedBalls.onPocket(UserMgr.inst.uid, i);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        node.active = false;\r\n        AudioPlayer.playOneShot('sounds/pocket');\r\n    }\r\n\r\n    onEvent_TouchEnd() {\r\n        if (this.powerSlider.progress > 0.0) {\r\n            this.onBtnHitBallClicked();\r\n        }\r\n    }\r\n\r\n    isOutOfTable(ball: Node) {\r\n        if (!ball) {\r\n            return false;\r\n        }\r\n\r\n        if (ball.active == false) {\r\n            return true;\r\n        }\r\n\r\n        let pos = ball.position;\r\n        if (pos.y < 8.4) {\r\n            return true;\r\n        }\r\n        //return ball.active == false;\r\n        return false;\r\n    }\r\n\r\n    //#region 物理刷新结束的回调\r\n    onEvent_FixedPhysicsUpdateFinished() {\r\n        this.clearPhysicsState();\r\n        this._needUpdatePhysics = false;\r\n        if (this.isOutOfTable(this.whiteBall)) {\r\n            this.whiteBall.active = true;\r\n            this.whiteBall.setWorldPosition(this._whiteballOrignalPos);\r\n            PhysicsSystem.instance.syncSceneToPhysics();\r\n        }\r\n\r\n        //only need to sync when hit by player self.\r\n        if (this._isBallMoveByHit) {\r\n            this.syncActionToServer(false);\r\n        }\r\n\r\n        this._newPocketedBallIds = [];\r\n        this._hasPocketed = false;\r\n        this._isBallMoveByHit = false;\r\n\r\n        if (!RoomMgr.inst.isOnline) {\r\n            this.onTurnPlayerChanged();\r\n        }\r\n    }\r\n    //#endregion\r\n\r\n    //#region 控制球杆击球力度\r\n    onPowerChanged(slider: Slider) {\r\n        this.hideIndicator();\r\n        let addPosX = this._cueOffset.x * slider.progress * 0.5;\r\n        let addPosY = this._cueOffset.y * slider.progress * 0.5;\r\n        let newCuePos = new Vec3(this._cueOffset.x + addPosX, this._cueOffset.y + addPosY,\r\n            this._cueOffset.z);\r\n        this.cue.setPosition(newCuePos);\r\n        if (RoomMgr.inst.isOnline) {\r\n            if (!this._cueSyncData) {\r\n                this._cueSyncData = {};\r\n            }\r\n            this._cueSyncData.power = { x: newCuePos.x, y: newCuePos.y, z: newCuePos.z };\r\n        }\r\n    }\r\n    //#endregion\r\n\r\n    //#region 控制球杆击球方向\r\n    onDirectionChanged(slider: Slider) {\r\n        if (!this._lastSlideTime || slider.progress == this._lastProgress) {\r\n            this._lastSlideTime = Date.now();\r\n            this._slideLen = 0;\r\n        }\r\n        let deltaProgress = slider.progress - this._lastProgress;\r\n        this._slideLen += Math.abs(deltaProgress);\r\n\r\n        let dt = Date.now() - this._lastSlideTime;\r\n        let factor = 1.0;\r\n        if (dt > 0) {\r\n            let slideSpeed = this._slideLen / dt;\r\n            //console.log(slideSpeed);\r\n            factor = Math.max(1.0, slideSpeed / 0.0005);\r\n        }\r\n\r\n        let addtionalY = deltaProgress * 45 * factor;\r\n        this._lastProgress = slider.progress;\r\n        //var addRotationY = 720 * (slider.progress - 0.5) * 0.6;\r\n        let curRot = this.cue.parent.eulerAngles;\r\n        var newHitBallRot = new Vec3(curRot.x, curRot.y + addtionalY, curRot.z);\r\n        this.cue.parent.eulerAngles = newHitBallRot;\r\n        this.adjustIndicator();\r\n\r\n        if (RoomMgr.inst.isOnline) {\r\n            if (!this._cueSyncData) {\r\n                this._cueSyncData = {};\r\n            }\r\n            this._cueSyncData.direction = { x: newHitBallRot.x, y: newHitBallRot.y, z: newHitBallRot.z };\r\n        }\r\n    }\r\n    //#endregion\r\n\r\n    //#region 击球\r\n    // *击球时要隐藏 UI 界面\r\n    // *击球时要把所有球的坐标和旋转向其它客户端同步，保证所有客户端的物理世界数据一致\r\n    // *击球之后要立即调用固定频率、固定时长的定时器对物理世界和节点树进行同步刷新\r\n    private _isBallMoveByHit = false;\r\n    onBtnHitBallClicked() {\r\n        if (this._isBallMoveByHit) {\r\n            return;\r\n        }\r\n        //TODO: 把对 active 的修改变为对 position 的修改性能会更好\r\n        //TODO: 击球后球杆消失动画需要补充\r\n        this._currentHitOrder++;\r\n        this.indicatorWhiteBall.active = false;\r\n\r\n        this._isBallMoveByHit = true;\r\n        this._impulse = new Vec3(MAX_HIT_STRENGTH * this.powerSlider.progress, 0, 0);\r\n\r\n        this._cueRot.set(this.cue.parent.eulerAngles);\r\n        var radian = misc.degreesToRadians(this._cueRot.y);\r\n        Vec3.rotateY(this._impulse, this._impulse, this.whiteBall.getComponent(SphereCollider).center, radian);\r\n\r\n        this.syncActionToServer(true);\r\n\r\n        this.clearPhysicsState();\r\n        let hit = tween(this.cue).call(() => {\r\n            this.doHitBall(this._impulse);\r\n        });\r\n\r\n        tween(this.cue).to(0.1, { position: this._hitOffset }, { easing: 'cubicIn' }).then(hit).start();\r\n    }\r\n    //#endregion\r\n\r\n\r\n\r\n    getSyncData(needImpulse: boolean) {\r\n        for (let i = 0; i < this._allBalls.length; i++) {\r\n            let cur = this._allBalls[i];\r\n            let wPos = cur.worldPosition;\r\n            let wRot = cur.worldRotation;\r\n            this._ballsPosData[i * 3 + 0] = wPos.x;\r\n            this._ballsPosData[i * 3 + 1] = wPos.y;\r\n            this._ballsPosData[i * 3 + 2] = wPos.z;\r\n\r\n            this._ballsQuatData[i * 4 + 0] = wRot.x;\r\n            this._ballsQuatData[i * 4 + 1] = wRot.y;\r\n            this._ballsQuatData[i * 4 + 2] = wRot.z;\r\n            this._ballsQuatData[i * 4 + 3] = wRot.w;\r\n        }\r\n\r\n        let ballsData = {\r\n            ballsPosData: this._ballsPosData,\r\n            ballsQuatData: this._ballsQuatData,\r\n        }\r\n        let syncBallData = {\r\n            ballsData: ballsData\r\n        };\r\n        if (needImpulse) {\r\n            syncBallData[\"hitImpulse\"] = { x: this._impulse.x, y: this._impulse.y, z: this._impulse.z };\r\n        }\r\n        return syncBallData;\r\n    }\r\n\r\n    //#region 向其它客户端同步小球的坐标和旋转角度\r\n    syncActionToServer(isHit: boolean) {\r\n        if (!RoomMgr.inst.isOnline) {\r\n            return;\r\n        }\r\n\r\n        let needImpulse = isHit;\r\n        let data = this.getSyncData(needImpulse);\r\n        data['order'] = this._currentHitOrder;\r\n        if (needImpulse) {\r\n            BilliardsGameMgr.inst.sendMsg_HitBall(data);\r\n        }\r\n        else {\r\n            let completeData = data as any as MsgHitBallComplete;\r\n            if (this._currentHitOrder <= BilliardsGameMgr.inst.order) {\r\n                return;\r\n            }\r\n\r\n            if (this._hasPocketed) {\r\n                completeData.nextPlayer = BilliardsGameMgr.inst.gameData.currentPlayer;\r\n            }\r\n            else {\r\n                completeData.nextPlayer = this.getNextTurnPlayer();\r\n            }\r\n\r\n            BilliardsGameMgr.inst.sendMsg_HitBallComplete(completeData);\r\n        }\r\n    }\r\n\r\n    onEvent_HitComplete() {\r\n        this.onTurnPlayerChanged();\r\n    }\r\n\r\n\r\n    onTurnPlayerChanged() {\r\n        let isSelfTurn = BilliardsGameMgr.inst.isMyTurn || (!RoomMgr.inst.isOnline);\r\n        if (isSelfTurn) {\r\n            this.adjustIndicator();\r\n        }\r\n        this.cue.active = true;\r\n        this.powerSlider.node.active = isSelfTurn;\r\n        this.powerSlider.progress = 0.0;\r\n        this.cue.parent.setPosition(this.whiteBall.position);\r\n        this.cue.setPosition(this._cueOffset.x, this._cueOffset.y, this._cueOffset.z);\r\n        if (BilliardsGameMgr.inst.gameData && BilliardsGameMgr.inst.cueDir) {\r\n            this._cueRot.set(BilliardsGameMgr.inst.cueDir);\r\n            this.cue.parent.eulerAngles = this._cueRot;\r\n        }\r\n        else {\r\n            this._cueRot.set(this.cue.parent.eulerAngles);\r\n        }\r\n        this.directionSlider.node.active = isSelfTurn;\r\n        this.directionSlider.progress = 0.5;\r\n        //this.hitButton.node.active = isSelfTurn;\r\n    }\r\n\r\n    _currentHitOrder = 0;\r\n\r\n    onEvent_HitBall(hitImpulse, order) {\r\n        if (BilliardsGameMgr.inst.isMyTurn) {\r\n            return;\r\n        }\r\n        this._currentHitOrder = order;\r\n\r\n        this.clearPhysicsState();\r\n        let hit = tween(this.cue).call(() => {\r\n            this.doHitBall(hitImpulse);\r\n        });\r\n        tween(this.cue).to(0.1, { position: this._hitOffset }, { easing: 'cubicIn' }).then(hit).start();\r\n    }\r\n\r\n\r\n    getNextTurnPlayer() {\r\n        let playerList = BilliardsGameMgr.inst.gameData.players;\r\n        for (let i = 0; i < playerList.length; ++i) {\r\n            let p = playerList[i];\r\n            if (p.uid == BilliardsGameMgr.inst.gameData.currentPlayer) {\r\n                let nextIdx = (i + 1) % playerList.length;\r\n                let p = playerList[nextIdx];\r\n                return p.uid;\r\n            }\r\n        }\r\n        return playerList[0].uid;\r\n    }\r\n\r\n    doHitBall(hitImpulse: Vec3) {\r\n\r\n        /*\r\n        //we should reset the physics engine and rebuild the physics objects in online mode.\r\n        if (BilliardsGameMgr.inst.gameData) {\r\n            let t = Date.now();\r\n            let cur = physics.selector.id;\r\n            physics.selector.switchTo('builtin');\r\n            physics.selector.switchTo(cur);\r\n            let cost = Date.now() - t;\r\n            console.log('restart physics engine:' + cost + 'ms');\r\n\r\n            t = Date.now();\r\n            this.resetBalls(BilliardsGameMgr.inst.gameData.ballsData);\r\n            this.table.destroy();\r\n            this.table = instantiate(this.tablePrefab);\r\n            director.getScene().addChild(this.table);\r\n            cost = Date.now() - t;\r\n            console.log('recreate physics objects:' + cost + 'ms');\r\n        }\r\n        */\r\n        if (RoomMgr.inst.isOnline) {\r\n            this.doBallsDataSync(BilliardsGameMgr.inst.gameData.ballsData);\r\n        }\r\n\r\n        this.cue.active = false;\r\n        this.powerSlider.node.active = false;\r\n        this.directionSlider.node.active = false;\r\n\r\n        let impulse = new Vec3(hitImpulse.x, 0, hitImpulse.z);\r\n        if ((!RoomMgr.inst.isOnline || BilliardsGameMgr.inst.isMyTurn)) {\r\n\r\n            this.whiteBall.getComponent(RigidBody).applyImpulse(impulse);\r\n\r\n            FixedPhysics.reset();\r\n            this._needUpdatePhysics = true;\r\n        }\r\n\r\n        let volume = impulse.length() / MAX_HIT_STRENGTH;\r\n        AudioPlayer.playOneShot('sounds/cue_hit', volume);\r\n    }\r\n\r\n    checkGameOver() {\r\n        let pocketedNum = 0;\r\n        for (let i = 1; i < this._allBalls.length; ++i) {\r\n            if (this._allBalls[i].active == false) {\r\n                pocketedNum++;\r\n            }\r\n        }\r\n        return pocketedNum >= MAX_BALL_NUM - 1;\r\n    }\r\n\r\n    clearPhysicsState() {\r\n        this.whiteBall.getComponent(RigidBody).clearState();\r\n        for (let i = 0; i < this.beHitBalls.children.length; ++i) {\r\n            let rg = this.beHitBalls.children[i].getComponent(RigidBody).clearState();\r\n        }\r\n        PhysicsSystem.instance.physicsWorld.syncSceneToPhysics();\r\n    }\r\n\r\n    setBallData(i: number, data: { ballsPosData: Array<number>, ballsQuatData: Array<number> }) {\r\n        let ball = this._allBalls[i];\r\n        let x = data.ballsPosData[i * 3];\r\n        let y = data.ballsPosData[i * 3 + 1];\r\n        let z = data.ballsPosData[i * 3 + 2];\r\n        ball.setWorldPosition(x, y, z);\r\n\r\n        let rx = data.ballsQuatData[i * 4];\r\n        let ry = data.ballsQuatData[i * 4 + 1];\r\n        let rz = data.ballsQuatData[i * 4 + 2];\r\n        let rw = data.ballsQuatData[i * 4 + 3];\r\n        ball.setWorldRotation(rx, ry, rz, rw);\r\n\r\n        if (BilliardsGameMgr.inst.isPocketed(i)) {\r\n            ball.active = false;\r\n        }\r\n    }\r\n\r\n    doBallsDataSync(data: { ballsPosData: Array<number>, ballsQuatData: Array<number> }) {\r\n        for (let i = 0; i < MAX_BALL_NUM; ++i) {\r\n            this.setBallData(i, data);\r\n        }\r\n    }\r\n\r\n    //#region 同步球杆的位置和方向\r\n    private onEvent_CueChanged(data) {\r\n        if (BilliardsGameMgr.inst.isMyTurn) {\r\n            return;\r\n        }\r\n        if (data.power) {\r\n            this.cue.setPosition(data.power);\r\n        }\r\n        if (data.direction) {\r\n            this.cue.parent.eulerAngles = data.direction;\r\n        }\r\n    }\r\n    //#endregion\r\n    private _lastSyncTime = 0;\r\n    update(dt: number) {\r\n        this._lastSyncTime += dt;\r\n        if (this._lastSyncTime > 0.1) {\r\n            if (this._cueSyncData) {\r\n                BilliardsGameMgr.inst.sendMsg_AdjustCue(this._cueSyncData);\r\n                this._cueSyncData = null;\r\n            }\r\n            this._lastSyncTime = 0;\r\n        }\r\n    }\r\n\r\n    private _isGameOver = false;\r\n    private _fixedDt = Math.floor(1.0 / GameConst.MAX_FPS * 10000) / 10000;\r\n    onEvent_PostUpdate() {\r\n        if (this._needUpdatePhysics) {\r\n            FixedPhysics.fixedUpdate(this._fixedDt);\r\n            if (!this._isGameOver) {\r\n                let isGameOver = this.checkGameOver();\r\n                if (RoomMgr.inst.isOnline) {\r\n                    let data = this.getSyncData(false) as any;\r\n                    data.newPocketedBalls = this._newPocketedBallIds;\r\n                    this._newPocketedBallIds = [];\r\n                    if (isGameOver) {\r\n                        data.gameOver = true;\r\n                    }\r\n                    BilliardsGameMgr.inst.sendMsg_BallsDataSync(data);\r\n                }\r\n                else if (isGameOver) {\r\n                    tgx.UIAlert.show('你赢了，再来一局？', true).onClick(b => {\r\n                        if (b) {\r\n                            tgx.SceneUtil.reloadScene();\r\n                        }\r\n                        else {\r\n                            RoomMgr.inst.exitRoom();\r\n                        }\r\n                    });\r\n                }\r\n                this._isGameOver = isGameOver;\r\n            }\r\n        }\r\n\r\n        if (BallCollision.collideWithBalls > 0) {\r\n            AudioPlayer.playOneShot('sounds/ball_hit_ball', BallCollision.collideWithBalls / 100.0);\r\n        }\r\n        BallCollision.collideWithBalls = 0.0;\r\n    }\r\n}","import { PhysicsSystem, director, Director } from \"cc\";\r\n\r\nlet subStepCount = 0;\r\nlet accumulator = 0;\r\nlet postUpdateStepCount = 0;\r\nconst maxSubSteps = 5;\r\nconst MAX_STEPS = 600;\r\n\r\nexport class FixedPhysics {\r\n    public static EVENT_UPDATE_FINISHED = 'FixedPhysics.EVENT_UPDATE_FINISHED';\r\n\r\n    public static reset(){\r\n        subStepCount = 0;\r\n        accumulator = 0;\r\n        postUpdateStepCount = 0;\r\n        PhysicsSystem.instance.autoSimulation = false;\r\n        PhysicsSystem.instance.fixedTimeStep = 0.01;\r\n        PhysicsSystem.instance.maxSubSteps = 5;\r\n    }\r\n    public static fixedUpdate(dt: number) {\r\n        if (!PhysicsSystem.instance.physicsWorld) return;\r\n        if (!PhysicsSystem.instance.enable) {\r\n            PhysicsSystem.instance.physicsWorld.syncSceneToPhysics();\r\n            return;\r\n        }\r\n        subStepCount = 0;\r\n        accumulator += dt;\r\n        director.emit(Director.EVENT_BEFORE_PHYSICS);\r\n        while ((subStepCount < maxSubSteps)) {\r\n            if (postUpdateStepCount < MAX_STEPS && accumulator >= PhysicsSystem.instance.fixedTimeStep) {\r\n                PhysicsSystem.instance.physicsWorld.syncSceneToPhysics();\r\n                PhysicsSystem.instance.physicsWorld.step(PhysicsSystem.instance.fixedTimeStep);\r\n                PhysicsSystem.instance.physicsWorld.emitEvents();\r\n                PhysicsSystem.instance.physicsWorld.syncAfterEvents();\r\n                accumulator -= PhysicsSystem.instance.fixedTimeStep;\r\n                subStepCount++;\r\n                postUpdateStepCount++;\r\n            }\r\n            else {\r\n                PhysicsSystem.instance.physicsWorld.syncSceneToPhysics();\r\n                break;\r\n            }\r\n        }\r\n        if (postUpdateStepCount === MAX_STEPS) {\r\n            director.emit(FixedPhysics.EVENT_UPDATE_FINISHED);\r\n        }\r\n        director.emit(Director.EVENT_AFTER_PHYSICS);\r\n    }\r\n}","import { Color } from \"cc\";\r\n\r\n//储存与 ui 布局相关的常量，比如资源路径、节点路径、颜色配置\r\nconst GameConst = {\r\n    MAX_FPS:45,\r\n    //预制体资源路径\r\n    resUrl: {\r\n        joinRoom: 'prefabs/joinRoom',\r\n        userCenter: \"prefabs/userCenter\",\r\n        gameRoom: \"prefabs/gameRoom\"\r\n    },\r\n    loginMgrChildUrl: {\r\n        title: 'Label Title',\r\n        tips: 'Label Tips',\r\n        inputUserName: 'Input UserName',\r\n        inputPassWord: 'Input PassWord',\r\n        switchTypeBtnLabel: 'Btn SwitchType/Background/Label'\r\n    },\r\n    hallMgrChildUrl: {\r\n        hallMgr: 'HallMgr',\r\n        title: 'Label Title',\r\n        roomBtns: 'RoomBtns'\r\n    },\r\n    joinRoomMgrChildUrl: {\r\n        joinMgr: 'JoinMgr',\r\n        inputRoom: 'Input RoomNumber',\r\n    },\r\n    //颜色配置数组\r\n    colorList: [ Color.CYAN, Color.GREEN, Color.MAGENTA,\r\n    Color.GRAY, Color.RED, Color.YELLOW],\r\n    hitBallNodeName: \"whiteball\",\r\n}\r\nexport default GameConst;","import { Enum } from \"cc\";\r\n\r\nconst GameEnum = {\r\n        pageFlag: Enum({\r\n            common_Problem: 0,\r\n            tchnical_Proposal: 1,\r\n            tools_Techniques: 2\r\n        }),\r\n        level: Enum({\r\n            normal: 0,\r\n            hight: 1\r\n        }),\r\n        viewType: Enum({\r\n            icon: 0,\r\n            table: 1\r\n        }),\r\n        userActionType: Enum({\r\n            register: 0,\r\n            login: 1\r\n        }),\r\n        ColliderGroup: Enum({\r\n            DEFAULT: 0,\r\n            HOLE: 2,\r\n            BALL: 4\r\n        })\r\n}\r\nexport default GameEnum;","import { _decorator, Component, Node, Vec3 } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('HitIndicator')\r\nexport class HitIndicator extends Component {\r\n    @property(Node)\r\n    hitLine: Node;\r\n\r\n    @property(Node)\r\n    ballLine: Node;\r\n\r\n    @property(Node)\r\n    whiteLine: Node;\r\n\r\n    onLoad() {\r\n        this.hideAll();\r\n    }\r\n\r\n    hideAll(){\r\n        this.hitLine.active = false;\r\n        this.ballLine.active = false;\r\n        this.whiteLine.active = false;\r\n    }\r\n\r\n    setHitLine(rotY: number, start: Vec3, len: number) {\r\n        this.setLine(this.hitLine,rotY,start,len);\r\n    }\r\n\r\n    setBallLine(rotY: number, start: Vec3, len: number) {\r\n        this.setLine(this.ballLine,rotY,start,len);\r\n    }\r\n\r\n    setWhiteLine(rotY: number, start: Vec3, len: number) {\r\n        this.setLine(this.whiteLine,rotY,start,len);\r\n    }\r\n\r\n    private setLine(node:Node, rotY: number, start: Vec3, len: number){\r\n        node.active = true;\r\n        node.setRotationFromEuler(0, rotY, 0);\r\n        node.setPosition(start);\r\n        let c = node.children[0];\r\n        c.setScale(len, 1, 1);\r\n        c.setPosition(len / 2 - 0.5, 0, 0);\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n}\r\n\r\n\r\n","\r\nimport { _decorator, Component, Node, PhysicsSystem, Collider, ITriggerEvent, tween, MeshRenderer, Vec3, Vec4, RigidBody, game, director, isValid, Enum } from 'cc';\r\nimport GEnum from '../scripts/config/GEnum';\r\nconst { ccclass, property } = _decorator;\r\n@ccclass('PocketTrigger')\r\nexport class PocketTrigger extends Component {\r\n    public static EVENT_HIT_POCKET = 'PocketTrigger.hit_pocket';\r\n    //#region 组件第一次激活前执行，也就是第一次执行 update 之前触发\r\n    start () {\r\n        this.initListener();\r\n    }\r\n    //#endregion\r\n\r\n    //#region 初始化碰撞发生的监听\r\n    initListener () {\r\n        this.getComponent(Collider).on(\"onTriggerEnter\", this.onTriggerEnter);\r\n    }\r\n    //#endregion\r\n\r\n    //#region 碰撞发生时执行的回调\r\n    onTriggerEnter (triggerEvent: ITriggerEvent) {\r\n        console.log(\"adfsadf\");\r\n        if (triggerEvent.otherCollider.getGroup() === GEnum.ColliderGroup.BALL) {\r\n            var ballCollider = triggerEvent.otherCollider;\r\n            director.emit(PocketTrigger.EVENT_HIT_POCKET,ballCollider.node);\r\n        }\r\n    }\r\n}","import { _decorator, Component, director, instantiate, Node } from 'cc';\r\nimport { BilliardsGameEvent, BilliardsGameMgr } from '../scripts/BilliardsGameMgr';\r\nimport { BallUVSetter } from '../scripts/BallUVSetter';\r\nimport { UserMgr } from '../../module_basic/scripts/UserMgr';\r\nimport { RoomMgr } from '../../module_basic/scripts/RoomMgr';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('PocktedBalls')\r\nexport class PocktedBalls extends Component {\r\n    @property(Node)\r\n    leftPlayer: Node;\r\n\r\n    @property(Node)\r\n    rightPlayer: Node;\r\n\r\n    private _prefab: Node;\r\n\r\n    start() {\r\n        this._prefab = this.leftPlayer.children[0];\r\n        this.leftPlayer.active = false;\r\n        this.rightPlayer.active = false;\r\n        if (RoomMgr.inst.isOnline && BilliardsGameMgr.inst.gameData) {\r\n            if (BilliardsGameMgr.inst.leftUserId) {\r\n                this.initPocketedBalls(BilliardsGameMgr.inst.leftUserId, this.leftPlayer, false);\r\n            }\r\n            if (BilliardsGameMgr.inst.rightUserId) {\r\n                this.initPocketedBalls(BilliardsGameMgr.inst.rightUserId, this.rightPlayer, true);\r\n            }\r\n        }\r\n        else {\r\n            this.initPocketedBalls(UserMgr.inst.uid, this.leftPlayer, false);\r\n        }\r\n\r\n        director.on(BilliardsGameEvent.PLAYER_DATA_CHANGED, this.onEvent_PlayerDataChanged,this);\r\n    }\r\n\r\n    protected onDestroy(): void {\r\n        director.off(BilliardsGameEvent.PLAYER_DATA_CHANGED, this.onEvent_PlayerDataChanged,this);\r\n    }\r\n\r\n    onEvent_PlayerDataChanged(msg){\r\n        let player = BilliardsGameMgr.inst.getPlayer(msg.uid);\r\n        if (player && player.pocketedBalls) {\r\n            let root = this.leftPlayer;\r\n            let isRight = msg.uid == BilliardsGameMgr.inst.rightUserId;\r\n            if (isRight) {\r\n                root = this.rightPlayer;\r\n            }\r\n            for (let i = root.children.length; i < player.pocketedBalls.length; ++i) {\r\n                this.addPocketedBall(player.pocketedBalls[i], root, isRight);\r\n            }\r\n        }\r\n    }\r\n\r\n    onPocket(uid: string, ballId: number) {\r\n        if (uid == BilliardsGameMgr.inst.leftUserId || uid == UserMgr.inst.uid) {\r\n            this.addPocketedBall(ballId, this.leftPlayer, false);\r\n        }\r\n        else {\r\n            this.addPocketedBall(ballId, this.rightPlayer, true);\r\n        }\r\n    }\r\n\r\n    private initPocketedBalls(uid: string, root: Node, isRight: boolean) {\r\n        root.active = true;\r\n        root.removeAllChildren();\r\n        let player = BilliardsGameMgr.inst.getPlayer(uid);\r\n        if (player && player.pocketedBalls) {\r\n            for (let i = 0; i < player.pocketedBalls.length; ++i) {\r\n                this.addPocketedBall(player.pocketedBalls[i], root, isRight);\r\n            }\r\n        }\r\n    }\r\n\r\n    private addPocketedBall(ballId: number, root: Node, isRight: boolean) {\r\n        let size = this._prefab.worldScale.x;\r\n        let gap = size / 10;\r\n        let signX = isRight ? -1 : 1;\r\n        let pocketedBall = instantiate(this._prefab);\r\n        let index = root.children.length;\r\n        root.addChild(pocketedBall);\r\n        pocketedBall.getComponent(BallUVSetter).ballId = ballId;\r\n        pocketedBall.setPosition(signX * (size * index + gap * index), 0, 0);\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n\r\n    }\r\n}\r\n\r\n\r\n"]}